Description: Fix for CVE-2016-5034 (OOB write from relocation records)
Origin: https://sourceforge.net/p/libdwarf/code/ci/10ca310f64368dc083efacac87732c02ef560a92

--- a/libdwarf/dwarf_elf_access.c
+++ b/libdwarf/dwarf_elf_access.c
@@ -617,7 +617,8 @@
 update_entry(Dwarf_Debug dbg,
     Dwarf_Bool is_64bit, Dwarf_Endianness endianess,
     Dwarf_Half machine, struct Dwarf_Elf_Rela *rela,
-    Dwarf_Small *target_section, 
+    Dwarf_Small *target_section,
+    Dwarf_Unsigned target_section_size,
     Dwarf_Small *symtab_section_data,
     Dwarf_Unsigned symtab_section_size, 
     Dwarf_Unsigned symtab_section_entrysize,
@@ -654,7 +655,10 @@
         return DW_DLV_ERROR;
     }
     
-    
+    if (offset >= target_section_size) {
+        *error = DW_DLE_RELOC_INVALID;
+        return DW_DLV_ERROR;
+    }
 
     if (is_64bit) {
 #ifdef HAVE_ELF64_SYM
@@ -685,6 +689,14 @@
         return DW_DLV_ERROR;
     }
 
+    if ( (offset + reloc_size) < offset) {
+        *error = DW_DLE_RELOC_INVALID;
+        return DW_DLV_ERROR;
+    }
+    if ( (offset + reloc_size) > target_section_size) {
+        *error = DW_DLE_RELOC_INVALID;
+        return DW_DLV_ERROR;
+    }
 
     {
         /*  Assuming we do not need to do a READ_UNALIGNED here
@@ -709,6 +721,7 @@
     Dwarf_Endianness endianess,
     Dwarf_Half machine,
     Dwarf_Small *target_section,
+    Dwarf_Unsigned target_section_size,
     Dwarf_Small *symtab_section,
     Dwarf_Unsigned symtab_section_size,
     Dwarf_Unsigned symtab_section_entrysize,
@@ -732,6 +745,7 @@
                 machine,
                 &(relas)[i],
                 target_section,
+                target_section_size,
                 symtab_section,
                 symtab_section_size,
                 symtab_section_entrysize,
@@ -796,7 +810,8 @@
         dbg,
         obj->is_64bit,
         obj->endianness, obj->machine, 
-        target_section, 
+        target_section,
+        relocatablesec->dss_size,
         symtab_section,
         symtab_section_size,
         symtab_section_entrysize,
--- a/libdwarf/libdwarf.h
+++ b/libdwarf/libdwarf.h
@@ -1061,10 +1061,11 @@
 #define DW_DLE_DEBUG_TYPES_ONLY_DWARF4         238
 #define DW_DLE_DEBUG_TYPEOFFSET_BAD            239
 #define DW_DLE_GNU_OPCODE_ERROR                240
+#define DW_DLE_RELOC_INVALID                   241
 
 
     /* DW_DLE_LAST MUST EQUAL LAST ERROR NUMBER */
-#define DW_DLE_LAST        239
+#define DW_DLE_LAST        241
 #define DW_DLE_LO_USER     0x10000
 
     /*  Taken as meaning 'undefined value', this is not
--- a/libdwarf/dwarf_error.c
+++ b/libdwarf/dwarf_error.c
@@ -327,6 +327,7 @@
     "DW_DLE_DEBUG_TYPES_ONLY_DWARF4 (238)",
     "DW_DLE_DEBUG_TYPEOFFSET_BAD (239)",
     "DW_DLE_GNU_OPCODE_ERROR (240)",
+    "DW_DLE_RELOC_INVALID (241)",
 };
 
 
