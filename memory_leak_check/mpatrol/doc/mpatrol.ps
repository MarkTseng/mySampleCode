%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: mpatrol.dvi
%%Pages: 264
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR10 CMSY10 CMTT10 CMBXTI10 CMTI10 CMR7 CMR9
%%+ CMTT9 CMSL10 CMTI9 CMSY9 CMTT12 Times-Roman CMSL9
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -ta4 -Pcmz -q -o mpatrol.ps mpatrol.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.01.08:2339
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin 0 1 255{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}for Metrics/Metrics currentdict end def[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSL9
%!PS-AdobeFont-1.1: CMSL9 1.0
%%CreationDate: 1991 Aug 20 16:41:23

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSL9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -9.46 def
/isFixedPitch false def
end readonly def
/FontName /CMSL9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 68 /D put
dup 77 /M put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{-61 -250 1150 750}readonly def
/UniqueXX 5000797 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
c6f12e33dd6d45b61272314f98990d08c0f8274e999f4b46af4b5c5da923683c
960face50087915d2044d7211a18e0c22967ef89552662ba990e2dfb9267e09e
354f41e871e612a4d94de3c1b4c6c54c7a054fd7cc0696a89c7a397b1d624505
2e0c0ad0c5ce92a01bd0890730e2863ea92bbc1e036dbbd96c7f4f618a83417b
9d46dcc4c226c30353b46dcd3d7f12dcadcd658fb2fa858840c4a0b11ed519ee
b77ad0fbfd18b449569ef3b18afcbd697d436ea1bc3234bd0aeec1aac6eaa487
043657562d0042f41fd9c42dd2b59f4aaef65a9ff83abcefd8f6df3748cf9dbb
bda9e56e15ae7a6081894bb385baeeada06923f9c1948ca5076b83ca75d17844
83cf2522178ec7a96a495a21f9188c0c190651ae49eadfcb5a1574032e34137d
29bd1dfac2cc8b2f3e0b31491cb4faa1d861839f6ab105692e579a236a85a4a2
dec3274ee7e793af7946191bcb7cd853fd38dcc02266138af3ba0de0741ac0e7
4d83d57e5a522a7ed1ef9774b6b913e10081436d2f3beea6722d2e285ce94d15
8511306020455c85e6698dd9ce31711423e1f09e7178ea99f7b0aa452e1abaa2
263a474a7804c21b5687d42443e071736a6bb3ea787a0e632785b252d4f83484
1f630abb6a705ca58310a344acd2e9996f2c374c618758d9ebd68703cd1eced0
9b6d2c7de8158dc15d8330e5efd3bec45d193baf0c36c98e0d23ce267a2c99af
6b003f14b42e6ce4c82ee16010685c7eeca24d7c5794bf91fe7034b551077511
45c7cf84e39cc38f909251caf99c29dc463c1510c782fd92902761f7557fde57
7e5ba583cadc053198a401763b8d02c261407bda072acb6ae6c78a050419d8bd
255426f39a4fb6182863598c96a7a91ba70e1b1ea46ed1fbd63df606e447f6f4
5445bbb4bb550bd6fe1e2f1d7c35275e1caa0536dd6651b757e425e95caea9ba
3d93b15aaa3537904a0e2d1d78536aad48314f8a3025d19f6c3c65ec0be340d0
034f0c76d3d8054f19621f366e4ba2ed22953776431d589dccbdb6505eaec71b
7c49b36e6c80600ac5db22e00bde47f2a8865f6a34670c4910a96be76416fcbb
ffd081d4eac19d9721bb4cf01271038bdfa56e15a13a7839d442546ef2626b10
cf6607f6d5770167db480579bfda836f610ed95be9851ef637cb88db7432d406
895578c8a2e710681e5fe57bbba93f59b717931321cceb8251751c41e651486d
dbfd8b13a12c8957fce6fb460f0d39a0052de66f5dcfa04941c1417c3db1ae23
670e6295cb528b95d14cd7ef7b8246d409fd1f825542739f0f3cb259b8042a49
c00ee1ccc031aebd32e3164af2c7677390fb47b61be1f3f8703a4585540a11c0
35039aeec1646f8f58e06461971805a38fc3b1811536ef3a7ce659775457cd6a
4bb9a9a53ab4fcc760093231260623254428b23e7e1b2127e78796af9b82bf63
ce840c30660820f7e587e8cf379cd2b4966a8cac190fbc30c1bd2324ac7eaa4a
b6fe6e121900fb198e715a61e5e6929440e09b43b4721a0643bc4887296cf3ef
4dcf672a760f151b42d1828a5dd4e58b1518956bb5d5b3c1bf675a3b491892ce
f532aef13bb2a278a5cde6d8f0481d235a182ec77e2862bb33460c91444e756e
f45806b8ebb608b9bc5230d8e827b71dccf2a1a90e3032ea08dda86e35153f40
bda3d62bc7bfe47c86f32340929a69d2285f309716b154a6425264874e2b5d74
20937e0e97aafd296cd58d95602b21e94d7389987f6eae30440490462bb08084
c231600a8aad2acf3de84601e27c53f0b33b7195f0ec4d3b2c55cd51e8e881dc
466da656ec2d2b4d57b6a6a6adbcaf9d5a391ed1d09f40a3c5ee73265a6538dc
1110c5404071a3c87e555fc80eba4bb19ae28a1357b26f892c29210565bd4ac4
525cca5f6cc2307afb6f9cc04986ff0c5f8514d0a367b29281ed6ea4f34eec65
8cdc208430115681d9074d02b642a0315f99a138ccaf43490ff1856bc0f77af2
4ca9ee41e51f5ffa69b862361333fef25e8544bfc34ed8f899006d7ef16f56e8
1ebe0192a21ca8a673fa9b0b364ebec0894ba2632843260a7743468e5d113664
02cfb2065dd337511e57fc7f303eacf672c8a012fd15459f17d1e393c0406c7b
ddbc3a697c027c9a0363b006d572a16dd48594a6d17adb9d5969f8e32fda914f
5cebd6289867e032527be2e4237ef4bc75e13d427ebfa650788cfff9cc38cdef
ae419e955109b56092c4a634b5e7a2a1c7132d53cb5b6645cac149376a0151fb
71fc5995b91621231c6eea0c542719a25ffb936815c31357896087d55b79dff8
645919432cbb3db4523016f0625b7404583a953787a566327e5d55e75ff68a45
afca8ab22cb0c0d18c7c27a5a77aff463efd1e273d6d99712399ac633bd3e624
a2846ded2ebae3e1ec7d8f51d786e4245ce76168de1b29d1beb548fef3ae5597
8630f191ed9b361870c30e9eba8233f780d982d648ebc1c8e2ae03ec28b8fac3
6c5a0a46edf086c2e11a098aace51a90b0bb19dfd9e2b92bc355bfc408b8b287
3ddadbee5034c9d39fb725f5782ba725ef1027d1412323ec65363871e557cd28
ef11319b1f7d79ae5d6fea8c4bde5eef77fcdd5167957f8b7e0a5cfb0d891127
7ac5a3d9227e8bc4be99fa2fa30baa49c95ea90e5687c71028e2883cdcb97e9d
89d23344562fdfe89e3414e005028336431a4090412ae208cb9d251dc37ba7bb
0eb2b49e8fbd6f2073aa173e59a9c6388cbf25512634f25700556361998aa585
425c69fa0857f95091092c9d280afa602368503347ca34fe73a29c9810cb9c2e
096405ae170b641c21fcbdfe91fbdd582db0acf8096e3792f57e6893812e2a59
baf678fa5561e16e07a9da4719387d3e8fcb7cb715f1e5e20168700acd7dacbc
dc66180f3ebe36aab212c647c28e2d91f287417a8cfb39beedbcb58405e87131
bb7bf4dfb780af5db122e95648d699ce72932e156474eabce9fdb9a55fb16206
c5b740afb2c74a5008c1c716881fb9dd4ea3d71b337e4064aae0038993ef4594
37c0fb4877519f83725cab3a7b77e0ae480383842a6d3f0fcfc05a19c25883e0
721fe13539c6af7531bfcdce1722b944b0033dca04cb6850e426a160a57a8e6f
af50fe7178dae79554c0c37c306200fef87f93ea7a7685c4c27b96c15182a0c2
b3467f8d45e34bf17bb4c5f164ab33dc734081a7ab5393dc335a8372b24f31e9
ed78f7f227b94c2cbf701235667030acefba325756ac33df6608aee753cab30e
c27b4ae739de630321557dbd76227aeb32eecd84b6067ddd04bb500308f1e78c
c04d5d51e66f92c03eeb1846691d50139b8bcc379b6abf1c3bdaa5b97e6005fa
5e8e2e29999d85fb27adc1f629d80d439a0805ce661af681e194f764df0ef91a
2c0f26eea852b7c3f147a9d36432e4943c0b74c20f8fee5ddc29bd0f78c07066
46bcb4028dabf43b8db15b82117df0a572b33e4e8901dc61e527db060795444b
bee1328b130752169680361c7d138360ade58b00a74bfc74746e65d8842f6a48
4054d7b886c94b412c6694170290060b8c2cd9da9ed5ef0252f1c9e60e0b095a
bca062a9c3c32f48e38a14df245f3915012a473f60232b53b05eb6a625abf623
8c85938a3977fa530b2b8e7f0f389b00d5b92885eefde1f158240a287b8b818e
f027a399fff59f14d3b97661ec983796e08698cc49e3f81d7ab7b4fa0ad895ed
b8b8bbc1fa1f06c24f2f24c4e0f81ae6d5725bed50a95ae365be781f3bfc2b16
9c118e95ca59c6960e8b9f3991cfab5a925a1d17485a17bc0b3533d726595b62
acb20c32b9a348f70b218c2ae8bff2b6807490cd12eac3f871d5f2887c46f39b
805bfb312d6e9549f9269178a2aa65a24df874c87f3c489125b83f4e01a6def8
f56ff664c262c1639b20e370a924e8d7e95c1efc555473e57d07a65fe33cbf07
3f141d03a4a8ba75652e1846c81b549865f2271242955eb4193b2028bffd49d1
6a6c70a4c28a365323af66cd864bb7ce4d68322cecda59c3de73df1081e35dd9
6ca280463bcc6f1688f6bdc4d14fc7e111461cba0a7728e20f4a9bf5b19dbe78
8a5e884fc0ea774ea7d0d8ba46eb4ab88ae73423d29cabd3f1049dc4b3100ee5
6a75f154575a36b6d769f8dbbd85b4148b4ad79010240560a5a4b1e8241cad4b
8b69cecd5d46162424d23b5f13de39eee366aa53ab7ce8c5f09fa4e893295220
6a68e0c482cde889a74c06c52e9902725a2159ab188e5b40c4cc4a22a190bab9
57b65b69538ce628816078d2637f94cdccef10ea1bdf9cd831a7addb538dde9e
a5655cad595150695709f6a2de889bea25de4212b840833ff80fdcbaae389586
f936eb7b867c7f7ef4041c3be5b0cb2209eb91ebabba9eacf0e8d12412acd25b
d712985f8d745340bb8aa886ae6da5d73fa9f13fc037803fc76ff463aa693930
9541b50aae2be0d1f4a77ea21b9301332ce824b74cdaf0746e0702de2555932d
0e15cee41b9ec3010fbbad07139ed2da7f438a2bad15f776b231ac606f4c4b3b
ae8181816e1fd6540938bd4e2a3136bb032be345198bbb3e164641e47e6e3764
1c9dac021675d4e183b90e8c452b18781048d20ef0746d198bacd4109158fee9
25147dfb09fbb30ac9190ffeed3a1df92a6e870834d3c861f917cb63de846b31
72db6a5cc124e4acc137361a3989fb076519ac0aa166012e3a4fdddd0a92e058
4980dc08b6a6e3d8a333a09dff7bb2b9d26897319de41d50f30f5797364d97f9
022244cfd7e2bd859f77441b999e20e5bc65e1bf6b32bc8830732dd108bd50a6
b63f93f45ea9d739a089b1dba14f5e6f00ff8026cefd639201d8bb591caef9b5
08a957177502e6564885159bbe96c2999a1bd7cd27b063bb6dabf1684556689e
319f9fe7f8349dd89fc9a5e2e267deac606364607401c77d34af85d33ade8e76
3e775f9e25650e0c6ae06869f8acb053530aad353cd2cdefb47174b020716b36
e15104ec62f156948203bcb7c6e19704dc99c46576a29af465a5e8a2862067db
9c34cd76a450ddaf0ca7d891c8056afc238cd92617db56d138631e2b73a90bf0
20b5ace97bef2b5b3656097919dd700d2375d8bb8e0a6f7f833ff37a7eb721cf
d7910987ba4db96918287cab2a1f02b77b34b93fe00c9975d798e2ee1ea28430
27e984d8144f1f5686d9acaa8814e6dd81b5bbc74f8df1557724e397029a1afb
9daf615f6a6ae96b678d6a33f94483d73865d3c7d48c5302c91097fe6d50e2d3
fdfdf09f1d2ecd2a11090cc9f8a9aba606a8c7da2f3b90e172cf7ea814c2964c
2501085f034e66b02cb7c507f79eee03c5b754d4ec9cd017a1ed9145cc1b24cc
5e8f6eb48f00c9c5898740b3f81ba5262cc3a8159e24401f72191c35d530da9e
7ce1eb10fa0684d4c9c570b7d963f95fbf5da72b7134b10b7dc9697f45301e4d
6a50de4ed7a5566fcafde985ea1295ad12ef1834400ba0056789d375e1382162
a8412d2359de5d8bec8b6d2270e96071c9645d3d60ebac829d8ec1afea5afa8e
7ff98a6535eeee26049e8626068d0801d0674b260b0476e9cfde71dcf0cc5944
a459aae8121f1f57268524767ea74edb64b37cf06315be41d0b7278907b5925e
16fc8ed7b4ef489f1dec27199f3b7504ae9b5e64c0f855bdebe9c86229907e43
c60bdb55cd8194ceb4b7d1e073e3727596d57cebb47c7669a125c74618ea49b9
b80484790389a0d238f679b250bec5280e7dce5caad12973aada34734d9ae546
fad8798f3c71219da3580c7f8eea61f5a8ce176f3c2bb5b0bb80affbc0f01bfe
2cba0b068540bfa4003df2ae289814e34207f4ab74738e2bb5496e8ce5ad87c0
3a597aab13c24d541e5c97d94d4b23ef561e7f9eb819ea7439f50e597792d536
ec92e6dfc33a91c64f5de555f5d5e4f0f9a2cd41b3aa6f82c79e742d32ee8484
7ca2adc6f53c81c79da8e15c4ca6e21f1a927359faa9e54e13fe271e1c4e68bf
896b355d59e9f9d99928385eedf82e70a58a8c1d0ad5bef8e2f28ee01f9d3f05
ed412c3a100b3b42547f2e6b1346e161ddb927cf592b58efba22d29f66a788a7
dd86f2938d394331b4d7f555daa74ba367e9f6d189a2bb915f7eea42bed4a064
16a2727065981882e2370633d0ac224fb8df17424b874590fd1c3832d42ebfdb
20702890a08be90459188bb2f528fe96372e5ad56c8cabdf6eeeecf615ffeeb0
bbd85ca2661cf1b7535e49449bc576930c597878b577360907e2881a8f52c815
f2afda0ca78ff41c2363888e577dd8645aaacbd42c8b3c45e6a6ae76bfb3d08e
e8ca7c0616e44c073be57512ab9d50597a76d00bc22da63298efa45dcea4643f
bad863894560750cc29d8c0aaacd98dcba844af088face1e3fa3f57892283666
02b7a047f573f7994388e53db329ffe0625fed6b66f6358bf2696e79bb4289c9
bd5fa8872be34a985d0746e49bee0fce1839f3cb7417e7eacd45be1fba10619f
17f7d04ff93fdb1fdb00666ca86b39c58b7a9e8ec254f521bb5e995ded25820d
1a0e925fff2372ac30c3cc71be998ca568f1d0857d6b49eba8c2056cacd0d2be
0e9bb74b1f87ec9e601bb325b8c4c819ad609d5c24e1b995532deabd5af71e02
c73745c5851e98575a94076669aa80e45dec45494294df60721431ef5c38bd82
4aacb135e9725a7ef3f579dc520fd58d861d57ba37f93b9400cb8923651cadf6
84c4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 65 /A put
dup 67 /C put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueXX 5000833 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5b667eed85fade30ab2ec4e1c2f
4fe750cf9a69506458071de8896261c001b1c290937fa42a1fa87de406e9f86a
4c9c0f03f69fba719114f8ae51040a4c03a58b6f3de027f6726f32743dce7395
14c2c6f3c2de1aeddcfa8eed7da56dd68dbcde33c29ff7a694769049e4325ec9
61b2df16add2ad46f18781fbd63eec62c26f1db41e6a666a09886382dceba91d
8ff7cedd64ddc8a2f15fe34076a064c46febd1f4dc3707aede0ce8af161bcb8e
4ada202d0954baca5be71c28ab8bf32fd72029aa07f27d658a68f454a4bf386f
6314224d16c7f0a8624f6b86319a4e2fd178f596f3b20db032ea28c157a68a69
fad2bc88881658d2286c0d4ef061bc070c3145f2a37ebec03f51de7cda34cd97
7eeebd86b00f9758b3a496f41d9a74279ef3c6322dc54945f95062c5f37a1e51
cf7eaf45f2b3634b2d7d01ec3b298ff35b6616cd3020e096f6c6aa2bf04c4a93
61c19f3c67a28d936ffc8120f1e46980b29bf54047c5f1fa48e67611a74fa434
3384f802a4079b28b94681e119ab0c1692de5bbf426440ad1023506cb80732de
c64d9061869cb34de924d2c26e404b7dbd9be55b9c0c5ae3095c15d278adbb49
12df1484ed2d73128e5d9c1f1a3b9ac19e2ce5366c96644f5b3d3eea589caedb
586fd9b8f4df32ec910e9b7434d5bbe57e03892eb03890567df5b811afa0da5e
929d456af362fda0789aa0cff464e238029294fde86cfc8d7d33d5c98b18c76c
319811e4d3d49560f2ac39103594ec513e0b1377c2c3e22979866c19b61448d5
a7201ca4b7538aa370f6347253b0853d4c5d575a7572f93cb73a598e2e26b11a
d46a1126e44e7e1795dff01562316b6ccc6678663e66a73db285746df3f4405d
d51714679581946ef7223adb9ae51af5bd7552cb34eb23ee4f2954d93a0cb179
c9cc92c462234f5ea01455ccf8e3843ed813d6c301d5e9323da8947ea5d822ca
d79131d07be0eb031ad4d7762bc903a69f4dd7cc4395ef559a480dcadfcb7ad2
9a8c00072899b69fa0bd29d51eb793786cfa04d03c98dfb645788e768db6a910
89e88e54af7d200f9cde7dd201308643131b7b389eb3b3f09f9c0aba8bc9bc0d
10394b9b39b4dcfa02fda162a6709628d0022601bae245bbb849b7b9ba6461a0
6709c0cc87a36a1440b6139b480f8c3704e119c12746fca6b800995f86f4c7a1
5eb7dbd6a0cadb496a790637d75bd9b56a73ea86a39c63917077436058a91c3b
f17163efa502d4622c53917ab2988e9a90840dc93cc6e8589df6f0ff60e48b18
0cb1f3033188dc54571e15d91da71019ac5e8d7fca59ef18ad46d9b9e6845d71
e56abd5beb572d8590dfde7ddc240de5ddedee562f047738dd88f796d52079db
f5fce68256d4d39ea3a98e8b67207f8facb5b28b34410b0d293c5c7755757e66
c7e37cc21f20ab811e8722155ffbc576dd709d88ac502c75a8f9b382b4083c90
b9671385c52d6e35f90b93477867a90f3ef86876c9a633c594f58a7c622552d4
33590852df590ffe1fa652a6194634691b463357ba08f8fc23e6c4172d48692f
3db611ca416c426108c71efa9f40e7583dd8aa5319546c6c6feb81b65cddb2e7
9363a2b7940b353b743a6df2fada190e4a1bc50c6d7dcaa487cb92396d6c42f7
c0db83870c7014773f9edc032b9e06487010992c70dbb7066efdd05b4fccdcf6
5375cab8c884b2d10c59be87421a43e3df9c7c7e9b3fdd05f690afcd35aff17e
47f9fc85d3a752e79e0188112f8654fe14833ad74c6f623e61a35abb165dce3e
6146093cf248118b8be8ec1c61c7782551ebed3ca1018cc8062fb2a07b024be7
614cbc1b915497ec0f6610c635ddd008cacd07f55008190c9ea47c36e865793a
5cb8efeadee91d3751fef736825f90973a74c08d4aeb854974a1458a776cfd55
c62de38d900b94735989b6bad75f2274e9f7c1f50ae6cffb5fad542c0c3106ac
f221cab0eef3d210bb7331906a84fcd898b8cf1e2a45ae4a2b0ddd100889a67e
69ce35861967d0d2f8d2fa9415654b3d785a31a5dc5d67ff675416807c9f30b5
2817b0b7103df38f5a11535245bf2dd57ec65c48e50deadfff7caa92d7a17436
ba61496ef37868e043a31762f30b7b3730f22bf7c8cf88508b466f8e9c1e4a07
2f8d98f714e771fd20327338af88ed5a53447f5be6b64298b0c57d4085f176bd
8f0c1a8005018e4c067b96def1fbf16042dd4130e1110656217dcd3eca0ab4f1
e5936beca1c9bee4a8e35e9685def85d238d43197d39c68d20737003f273b193
424a96fa6ef43030c8493a791c4bdf4404e83c7c63811ec2a2d762c76002a5ed
9b063fea53acf4766eaf3ff9228d7cc1df035e3f954190b64cf40a77096c36f5
0f2e7a99ee05beef801f3e8b1f457fe3b819cdd40f14bfeb63f38b2ebb02cc0f
9679904ab3b939117c6b1e8f14c38a79d63d5743efd71dfbde2c6f59c34b02e0
190580d99b4c8865be038ae342547e5a858236fd767097d6a8987dcf3afa558b
bed1c5887476df9b5a46f7917fc333511b909fc59830d5eb525903b2b6a326c3
71e46252ba2d7764f192a7be936faeda79f5fcd895edb6dc3c4123d74f434988
a764631e6aaac384a323b292d33711f48603d5364cb92ef44f3e0a027969fa52
0f531bb56f09606ae76ffdc5c3c21c4ad8fc0a322827622bfa364b3746810d22
795a21fd45fcad42b3f831007b1fa37333f4453990ba52b4a54b96abdae7af3c
08139364126b20d35518deaf31c6058ca878b4b1c761b4b3d49cf58f2c2546ac
dfad5ce0230b0c2f9c92f9b4f250c88bc1a52f0b70bb196824c33d5352304d4e
9bc7aa03d9155a9c6c0748edd9b56138bc09a943a47fdd8dc3148df7c46d8dc8
3f13924f6895a659151315eda07dd416200486bf9f5aa18eefc5d66088559c47
42e16c5da6c47a73071b228b8911f56f241ad2f4aa7a088f89b951a2c0a669d8
90ff82d0ff7c7b0c002025aeb8129a7f4c65d2fbcdba91115ff1b22f23433931
61a7b65f2c1cf1bcad2fa73edcf096303d8129e5264fb5a0b0c6a272d9c43d43
205f6c5a3182c8eafc4d89d58f062dde7c12871c9fec4485ee0a3265ddcf951e
237aa000cb96e4e529a22a87db7387abc47b2b3af883b0e2bfd786cad8342302
e4a67da6a803ad49986e5c9dca58016846a029e698cf7a8ce08b09782afa86a6
05776bb568fa3611bbfd4de36c682793ce53e18398587d425abbb87b7268e8d3
1c7f4221c1a63548b19c0486d097bbc799454bb33c5993590c89c8ef1613e0e0
7308e5767c780c68df437efd9aaf152c52ef244e62d95abf38cc0fd2bc080236
efb9106f3d674703115419be9f7b20d054a99573ad88da9d9e6b3d02387d7d9c
e4951631a02768f9eff123206599b85b2dfcf49701915af791d1f8a8ed53a334
57322bf9e30ba4b110a0f0766b00f1ac87d3e3b80761ef7627ecc286259455fe
f6fe34feb193689c13863193bd0e7d03e886dc4253ae828590b5fa874ce9e51a
2e484fc85a309ce8ae9f714c04fca3441cac1a1400e95fe8cade5eb9d2196f6c
023833b5156328c6b58307de97c8ae84699e67155d91476a7bdaa25aa6f74ff5
764f18df83049217fbd361be9ed98a08aa41fb883f9934526f0a1d9ac16641da
c695fbb25eb4a2dabc1222773bcfc48caf159af0bfe793129d9aca11e7797113
f7165ed420a79d1da96b77919b8d35d14085fc9ee587dda3aec6da56c255a25f
2b1ad4efda6c9baf57eb5c336c33e6cf18f742eb8e45a1d8f05bc6b92226e3e8
453781a355787d5a01c5753e424eaba117e4771b9c93c8ecb0967336e61d3945
eb0c9fadcbdec05ce068cefa6724cf44d6c6dab6f25bd659a57e2347ce13ceb9
4b46e5652358a3d0eece6ecbc8903a878cc070d6b7c335ae347e93d4c77042e6
9aea7888f4acfbc5c7c2344845a76c76f4b2831a319f2ea2cf093d6fce3fc953
0948a21c2265a7966ee8764869e38ea795da48decd6c8519e2cd9064565922ef
281c353cda033c0c77b6c633e5ef1696aff360eb1e2b29542c138eab3afdabe2
2404255531d76f78ffcc2a3ccab03e9305107b93ab02113d95025692d06a59e4
5bf987eb92d99ec41f475e19114f5ab7ee7d00fd6461b9f5e0b6a911511da7f7
d5a0570affbe68fcda8c72bf2c1f6627f3ae44c0bb4541f62b4da83cf7dcd1d7
04ba7c32a26302c0a2ffb3c86c1b49cae6e816ceb1138b7500f86e95bad495bf
2a5773ed6cfffeb9331fc548cd68ea0f520809f153ffc3b318bbc0cb4a672fd1
46d760177a9dfae677b8897db5183b89a5941240b539a0d699a4968c0d9609ca
e983cff6a1931ea4456fb6f3ab466bcfb81b5e2ec2f380b052c4092e50ac9835
6d38ca863b90cb58a598e612031b90ae6c0693ad92a0b4d8ad40c4080732d2ab
414efba262eb4abeb14ac6fc68f2faa78f01fdd2403c6efc9c8ce6d8aecfc912
d2d19aeeb62272732e5b8f93dbd62b6ae3757f63b3d61f4774f725aadbd2d911
750fb048805d589872a65126414d25db19b021ba8e42865c06a1ac6a7151868f
d6b9e8e0e88cfa360d68b90f4595aa359c223a9fa54954812ea1b35ed206a76b
485c490a72dea27b5acaf74bc632f5e64026d95c6f5362c5f18a6be382e1b161
6a3f9c52d50929b5768e7c08f9f13514de6786beca5c7bb2f67619bd6d10ce2f
0520f8c2797011e53b35400ff93e947fd0da6b49aa60b4a75491d872bbed789a
8e0431a789241e7aedaa4b4286a7c23b64ebc08303794fd1fbfe89248c704a7e
552af260dcc9f6491488cad987e7168b2f4bdd31609c528d66b0496b7afc2d26
a229d5f2dccb32b9db3136a3f94a3589ab206cb56f031b02a29ef8f4b4924dc1
96e9152656ae78b68dae57a7ef44cd271d25fca29614bab96f769364621f1c43
f3b5b9ba0d9e8d8bc7bb30ba49448a9d41a7d9d32c31d1ee659c7200bc32caeb
c9501f3fc93c89e41c12f98394c315e8a26351bec5b593cb43fe7dbea6d97f71
0587f041d4915e564e9ffdcd2ca9ea57bdf82b26e30bb223b8b2d1d3bed01d6a
ea7d9c20cba1688bed459c647088e03e4e45a92058aad04763533b48604800aa
e3d91f32c8e07f5e1a0c6e39ea4a1b39222aebe92562d6126f5661a798adaee2
c5d346d208bbd22fb5d5a2e9d9cedc8c1cda17c29d7d0e2f4babd520a5565df8
c3de450c8009787f8284c83e9d041f1c50b2a16f62bf68a2e6424748700de915
3dd09993b310f1a6eb87aeca512467d80820efeb52cf24dedd9abe8ce08e291b
837de22a32d583278be12f49084c2aba547bba1535616f4f5ffe4b6951ae4a0b
ded0fd7c7bfffd4a996bfdb6862a9a9ab614c1a946f324f409f574ba491a733c
6504d36f19aa5980c40c783f025f1a86d70d13e4aba7cbe6f13262cdaee1cb70
9f350683f03f4f59304db2431bf9ad663c6799a8133be4c16df85f0ea5c19bfa
cb782e1d80921ba85e8fa72772d0891b05fd0fa346eb13977381545b5a7d76b0
4c4b1377fa6aff998c053897ce3bfbb7468bb9dfd8a137ffed1615c65ed9738b
5886436fdd7cdeb937dc4cdca5545e646b881dbc699f71a08d2338cd89d8215e
ad68228b6d3e7699f4adaf90895d90846195379e39564b268da1df86e0a03def
c351c9b50867df982569ec490cc6755f4b8e0b671a503c29f6117f1b73b33e93
7b81cc1eb044c3d3a2c82679b2f374d259bd9094d5bc1a6d75427addeba12deb
7975b3c7114b644a194d3d5fa8642a32b7b3ad665e71961a5a0ebe5bee9caf0f
47a8239e5ce26eaac51c3dd298575c63d6302f6e473943f75557cf591f4eb3cd
fddfe7d68cb0cb47fd22ae164831f901dd918c12d396a5557340f91ef039acf7
4a8159652ca02fbb70b732ba81c3e858663be5e128feae6e87268c8c594d8bb2
4fdb683312b109289901fb3cd7082eb05e93adbf64d8d8bf4c1b8c1ad2ab6ad9
0afdf902644679e4b8b4ad72b4457f4e5a9e0454a55bdbc4a46b86f98f172401
c3d24f6c32a8ccc84d34868e5ee9d945b354bb71014002aba2556815d667a4f8
862b62cdb496e7adfb2e059b9ac099baffb34924bf59d60d4a8a65fe6399eb25
25ffb83544d41a9e661ce2ca0b95b42da41ee9416926845bda9c11301da12b05
8ab8f276144b9b2fcdbaff09eb0d1f4a7161b8546ee192db2f0191a1823daf55
4abcf7db0d3d78b0fedf82d87e2902d3ed0186fb2197bcb1b82ce134d5a5c1b2
93339b421a2f55916bd39162c8d771f7cd98b966e861047f78156019692cd778
7ceb481a917308f0235f3c02a67d0526279610d50405f85db465cc616ee6e9d3
79d529a4839919d424fe918ac64b91e3a4b7b89e748a649cd013f026ad17c9fb
7b8b930bc89ff6fbe43ce22548827de02f714072d3b1b527ec539bcff3b3c768
605761ccec663baf782b79d39cfc5b87541f8139e472f4d20afdbb52dde4551b
e3f6acc57f0281dc5ed1763cfae17d8c991467c2189e1655f7a9e715afa6b964
7725f85c8cde44d2ac9e2aa9f70df8242507e272dd9584a2360be81e9b6a8209
f0e2362cc2a09817b6bb77c377e4b27585003e081ace2ed3f86ee0568ac29cab
015264f2d4ba8013009cca670cfc6b72c9455c82c1a313ebb3afa783bccdab22
d6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueXX 5000819 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddc63eb43f34fa90ea73a234af35fd9b24eb7
4f19626e9124df7acb92629cc87b2cf81c4a89b27447806db34393ddf0402958
e2daee0b4bf315f9aa0a2650d2e11ee289ffaec940d0af160fe7f29411c1c458
69d1ac3bcfe2ae4da72422549095f1fc9fec606289316f106e719a4ae2fd45ee
868fddf07a80e9a626bb43cdfdaa9dcd208b88fd99af20b27f9d6b5cda6a3fa8
8d5acfce8b5eebb38854378cecc3bfdac526514f1be9fb28ae628918ba942a3e
05b78c3aff808cf416a5ed01be280231b75a7aee0c66b0549713bef6b3cbc188
e625ba81a0a7f34771e69cf51959595a11c3e703d4cc8f8d893dcd8d0cb2742e
77083af7e5df3a5e7b1a6a60bbead25cdad047073cc276380e73c6ccfdbd253c
e84b509d6cf008525200a7fe41d42e5779bfec02d4a32ef28d7679722700a1b5
9147ba8f597a33ae03106410bfb80708aeb56d138ed0fd7728258286d10e0078
262b03ea887ac61469ebe9163e07950f8b0ad37362e2e7b7f450cdb99c94b6a3
5677153278e89cfc1f31cfc7e3f153bef9a3e035c56bcda3b4977abbb01a48fd
a855d2e1f13f8a661972fbbebfc99a1e3b521795962ac754310e22bf2ab7d175
dac6f8b10b389fd1117f46825778986a3d112a8ca08c2aec8961e67e6f31a263
9d42c44393d765fe17ae6caec237f674e1f18ffa19d731acbaf56fece3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 13 /fl put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 73 /I put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueXX 5000827 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
cc883aff8d6350d6e8af1a9c1d2d7fcddc4c554c7e350f2420586f43e2124611
487cdb176d453854b51cb8f9100bf241899bbef87d57f1135e589813995c4d86
ce91db2b3757948f365186c2a4f32d845f659a8e95028f9c0168851997135c67
ce7654f2de4f22f51311aa78f440e5fc2c58f6df901fd071b2d53b2697bfcebc
43fe4508828b4756ebbe1f3e8512514162b3bb44493a65f11ab56deaf152fd01
bc8b642e6021af01998edc76b6a1929fbb9fa4fd1a430bfd4464b53f75075f66
c726fc037fc23cf09a178ffc60908f77d8ea9dea79c1e21fcb5a6a994e5a8e5c
c6d6291891df7695db58a2dfcf3bc9a17888c29559ce8f37dd35c0ae35def3e8
daa6d8d574f457b0385efd1611c048b9ce76393fbfa006fd23d742cfe7016035
5fe95302b129a824c7794a9de47e463a7fdc42fd72b9da3fabc3e65d90258ac9
c1ecbd3654b103a488715f9e0e649b57146b786aa399c6ff39f362816306a1e0
ac83a4c83410030d740e15165683e843f69579ec1824c36935ed4705962f494c
401400303b590614e5daa8dc53fdda083fc854e535fcd575b38aa43d3d5c4a38
d56bafa926fb9e7fd69be1af2b502849500693dadd5f00b3185a8b18a0b64f28
9f33f5f1eceb14d6945a22d0def259076cb9b11d899318852053d98c379de350
8a8a7a3ae6c9a73e878f7cfaa856e64b993b13baa4ea8ad693b380171f4f04be
5464e1fde8190f963ad3dac489ca9154a9d35f479635781233c57eba78a4b34c
5b3f74db0cde46a05e26de79e8b958f6a99a3bbad79d0b461621fb80d7f5992b
3a4a42a45d55ac22fff1ca04d5e0b14713cddc23f7d69c6c672092d9c73ad09d
6d8e53bbb01c82b86eef2102afc0298c71a8000e21a9a913ef2cb66bccfc1cbf
b8bcf51ab5bd29e7d9a0ad0cfb29b92c3deb7c4ed47762fe1c33cc5788fb41b7
fa36991996ed609e9d5e994c12c4426a67e32b50263706deae9a9271d4ca7521
d273729b249a33909faec5d71541a0ba0f78a9214b841dcd134ef751ace5ac5c
bc7fd877b0a46562d33e97515a25161d55efb667769b540cb6398b50fa5697eb
aca1feb3c67647192df72bbad5b2008324cb4ad7bb54d2cab57800d523f6626e
be6cb742dc3c218c068f8419c9959f3c6d083bce188387bf5aa5553b5fc9e751
7e3d771c9bb02b91aa2f5929aab532210bb7433da35e0ad75012838d099f5a90
4c45c2f631ca1f084bcea107d33e7d9dc8acee23b01499d2b9217b70258b4ed1
c5f62688611131188b45899758347cbf103d38683df0cfb0a8b8713b3bf2e72f
ad3ef70105047118176efa96f3dc749a9d41bc0fc536e60c57d9e4fe7a8f67e3
2421d53b8d1d5a4e3dad9986bb218125c63dee14636472f5a45cb26d40811605
717d472046e19b544b7ee0d9c2cf12c1dbd733a1cfafc5d32e4013269edd6a2d
ace2e37e9c2544526b3ce7d5a96c5d1c2f90984268a08bac3ddc10e6ec58c044
738702381ebb5d8da0c4543c31844ca67f8b52e71c95773532bd12274ac88740
3f2a4f629f6dd6d535721b1bb34d764a814b0426f00e028d5d50ad1d9fd5be65
53c582030d7b330eca3f5c782c677d3ff4559b33244b49db3954c3d94a037c87
48ca7ebdf159ad689f86b9b78d20ec6a658c39ec51f6325d6bba3d39609fd66a
1d649cec25b17a6b4667dd5f7823b29163f0eb89cb809d32dc83409d587af7d7
566addf2b1714a8bb8b848d79a71f2e85f9331c206f03f2ddbba6f3b82c9a828
b300844d5359faa5ca7cfcf4d628d8f803bb3a413ad8f372232cc95d93cb280e
ceff2e76ea53de77f2aee866220706637faebdf2e55471c5fa0dc9c9430c26b9
ca14b3ab5b02902becff2730a91fe94d974f103bcf6751341ee30823c1464b18
5515fc0a763fa6e661295c7758b53c667faa41ccb6965018f96ea88d2bba322e
e2045b17ca938beaaccab08880d493b4f424e434eb9d13fa4df325cefab1698d
935a1b723c6ef22b5421bf17260a740754e7714d949278e5d4c3ba44b66e6c4c
4ef5539add5c289c762e29e010ff85e038a39a77f2baaf9ec3bdf2e8871bf8c3
76de88ee9a1a74635825b54f1b8476b68dc4c91f1f2f3a972b307ca4a4163027
1be7b2cc0facccec9abc2332f15cbcbae01f2ca4f2b807400b52db15318b3c57
02d2be23191bcc03750f780c88cdb45c071be25d29e9b41b860152d78033c65e
69163741d5decde034cfcdba6b776a2a79a41a169ef9db547d5e2309a686ab26
a98547fe4d948916c492c8b020fc18b209e1e614a2918d28e210a35a0ab6cea6
43e1ef79927942c98467c28899db255ce7b2a87526ffdeae5df082e9155c6d11
5ef9882d2b9e21905c6e888ed3826e874fb93674e21cb6ee3b07e36e959ca861
60e10c61db08f87db3342eada6b4e04be3f3eb9cb722133cd41fee878e157d35
11306d6f2f34c165ea1e6ce8ae443852a454aadaed1bce9aa6353dfe4dac1449
5faeeca77ff088fe5e29604179be500be2bc84b1fe650fd03f508b22af9f8960
bb686e4c2450a8f45f528ae8e89cf88a0796580b96811fbcfc5a0046144ad46d
09fd1a04515a3eec06d8a250a216133d678fdc1f5ecfd0ecd70a7e0a3cf9478c
b1b304eac572ba5693ac9c0ebb0a3ce610643aae533f445503735d8818fb7253
26f51a255f102b7df60bb5e03c94774aafc14269a5c87c27257c75fb3af779ce
1e7ea1b571043636dc25ef65f0f6ce1010297fcabd80497873f13fa2c4cbfa27
ccd28c323aaaa7376f4d5ffeee3a409dccb1ec3eb313e766f15cf153656506a2
3fcd5198021225a579cee936fab002f055bd3a11c594b8f251ed7a61a63b6e79
eeaf8db20bcc4fe990e6c1d8e2b0bd06e2ff269600b1d201b6c44dacec096079
ac19501f01b56611898d4b98ac794d535fa06dfaa8f6b39b62ce5e8c2056acfa
3af0978dad32095412a6eb020f0f45aedba4fbf4e732e5c159dc63317db9e8d0
9dd74354b114e55599f952263004f9860358df5378c87082f2c8b71ccd00700b
8712b8a6daf19b843f30b03a814bcdee6def98e3720bf9b6ffcdb49543f81015
b1f1062382ed5e0898097c876cdc473c290fbf86c61368810468a3728ebdfb5e
21e731f52c0537245343aa78ebed7f9d773c294cdc34f245da247b1dd23b3482
b79d955250d0263c48944e4b3e52f8bcb69d4c8453dee264d77519eab0f0eaf2
7af9006c3d9c2340f903aa75cd4318aee32a3a8546658bcaa2311f7e184412a3
454462c9572a5c2c92e20c58dce9b871ad9115f30e38c22b930cebc4335c4430
5dc4bce278720581865546dcfe4368d8e6dd05dbb6493bccc5327d896869715c
c4c1bc44658cb18bb7a86269f5ccaeec36e69c182cb9dffe7b3d32c772676d97
619a70127f94ea195fba7374e0398edcb2fac8296e5c71631ca2996042e2e243
fd32592821adf8d6481ee1514dac77201caf9559083e5c44ec80ebad5f6ac954
0232ba7914df3793098a5e9810dbab023b490fff18d172e0c94e7b97f9f7fcc5
81fe9e6ee48d28e3276564d49707540e63c420cdf8df951f99d06b159554511a
98eff66803a486837ca789b9c6768ccd41c4bf1169646d333ee133b5e5ea5542
b459adfb544b4296e083dd91dcfc5db6c1f2a3b71b0a5f4932be765c348db6ac
948e63dceef1e0404e873a07ab4f2b48f8a02b7af8fb3acafc7911752fde79a9
1ad38d695109f14903ceba404e7f1102a1e6f6d4436ac5d4b850a6c10175113b
152610e80c033d8f6051aa732cd115d9ef5a01fa2caafe844be075e6a403f604
d21e43e675a0c7359ef99f0bf1cc18fe952225581825cd7394ac953bc604c29c
93705fd72da0c2c74fa9a84b7d0f04bfedc6c91f70b4919f0e19a80e7f4e7216
c27d6c3fb01486dbb51e51a9ccc31277b68c84e6726aca103a147168ad0bed8f
7e6575f02b0de8d2501ad889470ba3c856617c957adceba3ea67d185ff2dff82
063b4e334f149968408f95f79851017cfe4d7f9f1de1dd5c03e2795a6ab0de76
2474911200434615485e19c8b112db1605353c88f977664f01034db97a8f33bb
53ded4ac41da0e30b3868b956e10dd89d13f55d6fd22c5d02b91b71db0e2fa10
bca093da67d52bc51fa023499cd77fe7d2e7ad942c4b100e5431ef0391a95e8d
dc08a857d5b1ff3138f0da6362b5bbb64b5e193bdfcb1bd5526013323d3667f2
8f7a73e3a06f7e93a3eec1499e0c8470668b099694914a273838569173b96d21
d23aa49cc008d4644a56e5cc40ad386b3175325bea75e594711a76690bc0294e
6bc7feb64dc246ccdf909aad0f74fb19d79b0afddc7d31e3b4867c9b80cb311a
0c00ed39590ffbb1cc450c67de17ec2753d470a49e76d66d8e9a6fcb8d460033
16609516aa136a6cb26bcf2ca1943d2cb2053cdb1927d4efb37f4a0f8ba3ba6c
4f53f0591266f633901e0b100dec230d087c7e368dbd66da5b02491a760daada
cb381d38115a4c7aad4677cef71de5622bc0a1ca300a095cdd3f1807f6d8cc82
88f146fdc81e46a4cefd772cc0996fd5e31024fd04c2365b001420acfd16724a
9a90ff2a53abf029c784fdcf9ec3a548f7a4dc88be6897b159734a1f5ebec335
6a2d5d8bb7094b70bbeac2040f25da9f2f784d96899b4bd7a007e01858a93721
681cb14c13f87535e24ce7e07f2bb13b5057f08ab509406e0989a4fc09c89cbe
af6cb7e8879fb89317b4dc44bd002c60e4c406cc63766bd1b9dc4d648d7a6a5c
27603cb4ad176a997359abd20816a8c3a269896e706df3650ea85fe9d49f5291
58eab594878a70bf2ea1bbd12f8703f49aaf2fba9cf4640f3f91b26fea007b57
a029b6c9eb5b85bf0a91fd43d4ff729e12d2b002fe57da5e60c5c664db0f636c
05958a2fa371950364a204752877537d95e5f6f7ceb0ea47c8cd9a1b767fd211
c4864e0f3172874dba75ee3034570afe7e65e26f52ef0d663e1bf6348fd9b9e1
26af5696265683a85267b69feaf234a81742b9c4a0b3c92abb447d046be7cedd
4e66ae4c7e94567f54849df787f93496e3b16872ea9de34d1c795b8c5779fc92
b181fa78e4c483ef115fe9dcdf99512b6d8bf92ba4cc34d0a1c015155af1f352
d66cd3426e1b2ef243ae2eb621e3738f3a9f4f2098392c9baa9bc06776dcc38b
a611b73411f870c0c03c67b9f049469bedb5ec083c13376c0712f36af30d439d
830861e4e7622099e67902a398d061b92df583a3b526c7f34844d33462d9a77a
f2ba19e70424aa50d538ed27990f22280f72492a4e61c9dd2ef66f11c70a4273
6daf8c8348b088f350d27a40f71cd26352f728cf3a33c7f5ca0e7974efe6aa5c
a9a58bf8255489895fc2801decfdc926e183408d716d60c5f23dd069c17916c1
f238f2c194bd2a30cf35d99e5cfd42ac6a8b75ffd16a8cf9226c4b0c3b465bfe
4ac59f83ecf5be54339107fc0ecce69a0610ec3a9caaf10609cc5274a3fde871
625ad3d3cee97462331b875e72f66b080164ccde929589f2e30099e218fabce2
da71dc1e8ec24d33114bfed13462e9ccd54db1ed155720d30f849209d85776e9
3373cba2483becb0302110a4d969e648bbca477189406f8f3609da4017923efa
1b00d23b766e9a8f54c17cededad4689a88bf0b72be4a233a8a5e1063c1fc190
f2c2323d127045dee23188aeb824cefd826272b3e7a28e583146cca4d88cf40f
f128bb990e360113b1a21cdc072e7f13caff5c8cc594af880174f0034c047a89
cd4d6c380e2f80cbcb866a68c74b35eab990564a3d1ba514104269b25d4f8227
93c1d5ef16a8e07da3f746f85177f38f924600237638fa35b05ce575a838c38e
f5e965c6e577f6049c884f2eafc65f6a17c10d5c16deff8b7f144b4955e84913
101009c8629254f3a71fa642413166e0e23d540a22a0170c13878870a0b504ab
87f415d55e14ae29f0be9321b8b5a8f6b1f17798311275e6ea99160e2a725d80
7b64edd66125a2fe6d1bfa02c9e67b6b53e61571534c968d627f8d58f7457d23
a459f1132f6ac6ae1aaacf75446ab7ae955ea32b539c5675fd940810102cc984
f18ac41be7c78b2dc9fb8b4fc1dd2c64ca8a5b832447b0ae015ae7b2b4701432
208aed2ecb7570b761b210e53ddc430b14225adc742d469b1be0c53cea7a3b53
f57d54bbb2488f9cb58565a8e4dcc8570075702f3856a1f87ccba549559b4f5c
61eb03e0ba9ea81b081d2a982de84f050e3ab1c587238f1ce12ca11b4bd552ec
39f2506c6064eafc3456a1f4d5335106cac80e94ef7b88b3cfd73ecc4849203d
e83381600e1a0314c4fe8e12c07bbedc3d58f88c07267935e2d3bd7b587bc3dd
a1d7f324d9e5bf67f348d8e48f983963c9be605ad060ef945134c2853368fd70
783a0c7a74a39f6d832c3b07c387429db69372c85765a36bc47515eb679f6696
ab500ca74de635d9f0b6b3ed55707723e9ce573a52b5da84fbdd77611abc6557
19bf4bc129b5497ab6c3d0db838f4c632bc6e905cc610359dd13385d61a5ff57
2ea417a1077550d73a8bd88333b26bf83eb945192b9026c306c5cad72dd897c5
d81db8b75a26bef8b48367f87f664d25f9f8f8b1f353ca11642d58c0fcda7d22
bf7a8e2d04800225339a3b6857eea0989bd2c556151e59b92031433355b8ec83
fa621ff3ccad13fe033a5491286fc1e60384f2610a27af631849edddce5ec0c9
05e3ec39949f3fe4dec6c5c669235e543df2f8867706999b6248b02b9180ef8f
6a385cecd604a52f49ca96c62a67ec9bd1cad65a960ce11ed0a34621f636528c
490d2e8557cb8215025e063da5f73d9271a9456bdfb54b0010cde8698603a831
a3d4dd3d341f9d4bcd21c1035267134fc4dc6151e23ee413e747af6895fa92ac
0ac5b8623c52355d1338a72a9bc114422fc3e348592ada4e4cc8f3a22a1e0bac
d6787e25bdbc229bd926755f9490032a6c9d5b5ff70a52aa1febb03e9138dd14
423452d5af34d92cf32cbfe85398a00dadc77880922866818878e7502b3c9e8c
be5c141433190dcd8a69d910a5a47cb7e2e4a5d87106485699bae3d3f69aa500
5f061894d5c1451632f9141359b8abada797fe2d29931a3bebe2a3d9221508f2
a845cdd319c528dc56ad52d741f076f11979972ce800f632fbd813aab64b147f
2b73ad9b39ca2a7ae6b0e1bc444f480e54731a962e157c037eb01a64133f29c3
1efb89b59f958da882f5a3b836b5a0c278cb1ffb7d0c8da4cba2aee4ca232953
ff76a55bf6f4d9153582c6cd6a2614534c871829c5239c8d796e68f7159ee4a0
7446ae04abbb074beb7bcad2920695914eef31f2e1070ffe64d5156cf5b2411c
c87c7fa2469802ec5d7282cf3f8b9ea9e1730e676acf8377a713fac514bc5d92
087f7f6194db2ca3cdda8192e3b941be54de868783255b3f713c00a34fdc48a8
7bf0744a6364d706cc2722528a8f826c78647560b90e2ae171f0c6f6ee950f85
98523dd0453cd1f1d59f14a6b026cc73a0ac8690c442f098daa36754a652e868
073b1576ae7db16a625295a4fdfeca5fa979bb354b272108c86c23ca88d1aa5e
395bd7034acc406b8d6fc211096fd672e898505d52c86c31d7b4aa0e874a6b0d
f2f86881dbfe46c61a9d419a85143c6673f09e19eae4c5b4e8ad8afd7cd4e4ec
c3593479fc925ffc0cf8454d36689adc6640944bda56f17fe65e2708f2fe1912
fc852cc8271f07de16e72d1a07db986a4f1dc130a97d9eea246e7ae6ba3d49cb
33fe9366a503200ea0fb1418c52962c59670b7046201af976720fa97497f59f2
2a26ec03fde9b8eef31d4cb46f3047b498a95fd3fb1aba387bc934e528e49ddf
2d79bfbf572ca36a5873ceab5a3edec19524bc84bf8c1dbc75c6c612aa5d0b52
e709d9eec03f11e905e3187482fac18078f014327692b8f02d8ef5d0f76ca611
58917cd9b4affe8334d02e5f0c2632250cb473dc8aee3d5d4b369554ffb39eef
c93d6be2edf4800e311e6f5fd431150701570a3ae32e3348daec7efeac425c14
f2f6f1989b57cccd472dfa50ed424548906a4ffff08d76d8d497fb248943031e
887a81849018c83f8ef29838779d45a36883638e9afec1627ed824f57d4492c7
e84e60660569b5c4c60e4dcc53ab06c8c5c025b056bffce6b49d154945765798
602de993d5620c046569e4cd35491a73a35c45bf8b829340b811fe21bd9e8f57
95c1b87a2e0b818c2d9938b80512ff9a7a5a075094ec6fc883aa55dab1a8e605
92c3e3ad6d3e8d7f735f32c8dd13f1d59873f4e117d86df6c11e513f43dadefa
add2e82af12235e024b3b8828fddbf33d0d39aab818c9ca98c062a252365b177
a39196be5397af650c51329226ebf16cddfaf2e6c2a4d04ac3a9a0830e2c67eb
823d8978bb6349e80a4609b395221721b6aa99fb72ebb2364854d651257696d5
61926943c8b3b9dc68ea43905cd89df78929fc15267e3c47d2ed624f37b45577
e39b2668f9f320afdbef3c410ab3a0a6bf60288cc002e93278b09b7e03620105
70424a90d06b5370ed6f26e016fd4cbd45cf7eb7cde282927a00f512bd6597f3
99760982dab24457663c80d7997dd50ec655af9b7c01feaa5510d195c49d5498
afbd79d45335aa074c695bdcfc23dc817b11a1785d8155d7cf12ef6e71c74683
fd21a587e94ed6c6410a0140344833517f25567a9272d4ed1aa88f0129114448
fb9702a04cd166641d9e9c7597d3ef478659de7b43ee903e67ab860b75
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSL10
%!PS-AdobeFont-1.1: CMSL10 1.0
%%CreationDate: 1991 Aug 20 16:40:20

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSL10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -9.46 def
/isFixedPitch false def
end readonly def
/FontName /CMSL10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-62 -250 1123 750}readonly def
/UniqueXX 5000798 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
c6f12e33dd6d45b61272314f98990d08c0f8274e999f4b46af4b5c5da923683c
960face50087915d2044d7211a18e0c22967ef89552662ba990e2dfb9267e09e
354f41e74d44bd80a2d905d2edd60d8829e820c6ab0fdf322964c1ecb6569818
a465d5266d3366d748b412446e602f0cc52f3cad2213ff6ad92c04f6ce8bba94
890fb44eadc41a0c42eda4fe9722e6d4b17a3f6d35cf755d0a1c90d0c2033b16
ba76c456137acee0112e35edfb7206a9cb18dd9274401c70c3039059a583940f
44cc19ffed32940fe8203292e103d2abcda173df85995aee98bf4a1f65ead55f
b80bc0c737589fa10cf51999c634e05d80a7dffb61433bbdba17ea9a7b92f763
586105c8277d6a961d092617c64745450b7df4efa70884f6017d9b0331814cf7
02f1140425eb8bf4c269ec042fde895a7f625c4832c1a143a14abeb798e23b59
f88ebd1414a66520435a4c8f5dd7a548a7d6a2fa96f0995bc0fbcf91b1a1eb71
1026a99d2404b2103bb3626978385830a00a02b6aa820cf33785f7aa45e267e6
ebe7d737ded351c1d4e944733feb30a3e6f81c1a7b74ddc9148b46b02a525539
c54a7eb25dec18807557b6ea94c36db0c91121160f61bd37cff40bb2b11aceb7
5f146be38109daeb77803d8f580f9086bc460e5c96f764c1254e36feb77c48a4
419b9a9cb5ec916b73efcc4c5a698909d5c98ca014b7c8e2ebcde195f5ad44f5
75bd2dcebce29979618bee325c726f5d4967cf0e3f7d35058e04dbb7fbcf60f1
436fade30418ba3c7dde0b6aab803140e6aa7c9808ab4d3d31432f5d4cbc007d
32d7541ccb867f6ccba8bd18c3d18524a692ed2ad29db54d7ca84a618052d3af
32260158250a587a5e4c5e50bb6c32541aee0a05cc42431ae05065257facbf61
dd20c8bbf0cbeb334ab5a7ee20e1a7f5a950300c761a0f77ea4c5edde37e10da
f47de060cb955ad8a0b61ab6a923f6f4dd6f955d3c60e2788c7d41664f1f2622
4683b7b4a86908ee5b8b0567170087425ce8201030b67f1649d402fb5a9316ca
33ff6f129065cef360bc19ecd652b636aacd5c085acf2c323d39036184b13282
bec65a26621f6fe55368f36e39feed69032afd38aaf5ae7a24702af1fe104a40
548b5fc4c8dbb247729d99ee241416a1893c60b3c26207675209fe02a8688acd
d0897b83a21a80c882bc0b5b5b5709c5c62d06f91832852fba1d64a695adda70
44511156e9921eaeef811d0b69d0ac13ef1af57b74fba574c46967bee3665e63
2d3fd09a4dcec35a08af7ab36654929f1543d0e8066dad338381393bd2f63d27
2367cb2a75b7361c68a82c9ddaa81b5a375fa1c62b467ca32b35fc3b6461fbf7
6c26953ae9794b8cf2647e4965c0dad4d147440d71b15df1a2c20b5943c7cccf
8543c592dcd472b425585b37b50886fcdde6574ebf72081d1229dfab5d20b179
014b96019a294835073962371b193b532ca314c0bc30903d7b8cd4b327ae1eea
6deccafeb73544e5c6cf99722063962b42ef1cc96ebb5290d8eaf8328a366415
572d59c43a4f78f1ce129c2f7a5e80124d10d634f9dc6b35c6e607c1ee3c6938
9bb3edd157c9f65bc3ae4ea0dc2b72a69e7de56d31cf960651e0091eeffba72a
d68a5864e0da4e8a3da30c090f60b4eb6f0ec39960a029a12fb680a42c5e46f2
6f014c35a63abe927dbf096cc87727c0afe35a723505aba22f434450e41cfafe
6470c80cd4ebfcdf480374819f413bfc90727bdfd295d7a2ef5d527f40d27f4e
8138b78f99a3949a1a467087f52fec094ec5a445536ff12ca87323e4a759cda4
38fa861768839b11d64f60e8104f162a247209079c5bae470c551457e79a4e15
868a52c272d51dec98cb064b4ad15d72e68c3fe22394ffa7d9f1b830ff86b6b0
d39d9ac4d228c6d2783e2425d2e905cda4b6ff88fe39f716cccf43af5ffd0cf6
ed9644d5a3941bbd22f6f86d72c4d3b49b2b9d3ed41330a5de5e811e4cf84029
12c292c6632ab79d406c02caeda78267c3a1876180721d632db20e53c1d912d9
8c006d2fb72f3a843b54f88bd2fc5b57292a1c785870e895a203317092d42f48
dd3317751574ebd91416d6bfb19a8d9211ac2c0d783c818e38fe6fe3aefc91ae
02c7221348096de3b894029adf68f006827e6a3161872db6ba38003520bc74f5
c2703ee16f9bc2aec018678dd678c1e449f7d025cff22fae20296db94bcf4bfb
272844bc777ee85d22ecbbce3377a87c090b378450a7f7b081684a5f22bed960
d754f827ff4ac7eca4d98706a1a1c5814d90de3c489cd41b91b58f932b57b9d7
899a3e2f7021e7315ba079a9c79a18ccc7de743fb50179850952f50c26abf114
95bd19e3db788893764103fd07261870aff0d81a9e716bcdb3081869535c7e65
e102f1d5cf62f5b54062d5517902702161fe8c339471730af234b20e0a9740d0
53d747d645753e7086364594fac081b86a74f45380ec3c331bfa1a55d7b138dc
493b71854f92450b2935234f0cbaf45a1a1c53cb5964169c83ecacee273c11be
1ce58f1382579edc4e91bb24229157260fb14440a60a22a0b77bb6726163003a
1b806551297813c079f27bbb085e51c10434b3efe03ba4d0c81544f4f95e269a
d2716e7c03a001d92746b5566c635de21eb2e7a13138d675380982b0b659a11a
7451a80521b9184beced5d9dc5ca3019acb2e8fdb29b2b1af8447158c0bd34fc
ee29ddd8416d724eb683f7076b559bfcbee01b660c8e03a40ca9f91e3315e63a
affb8d14269dfd9014e5ab39733f7eb164c10a47405565272ab71bf8bda9b9ed
25b8fc582c626cecc379e3c878d058b185f8b28ab8f127438b7e7c1169b984ab
2648bfea5199e08ce44a76359dceef9ce01a8cee8b978ff26e05277ac73e849b
516b2f292945e8fb03633da1dfad50a2453f94de15aa41e3c0429f35434665aa
bb1789e056b62b67beddb4a7e29b8d0ddcc4c50eb48eeafc0180857f83ebc19f
52d79b051b6c4685b48dfaeb18fb3704afb606531d9e1a679635b2fa361118af
d5365f7ab40a428251e4ee17d350ddee713fc544e8e79c3fb8cb6d4e3a5b633d
adba8329fe7d499e9c310332810dc2d139335f3dda63c0e495aebce7ff5353cc
d6e460a73d614be5ad0d4d6315ff5bb3fc29c293b1c7769c0199c201906870f2
3b2020ca29f6d75c2320531b69172a85b4e6acd52c6dd80952ddff3e0bae55bf
9a9a9466b250bd60e145fd1d51ef691a7c3fba9e52d332625a2d251d27b1076a
7ee2e6e9002a17bc3c8335bd8bb830569347ac0c2e5bb4fea0906d2c4e2ac41f
407b4e12b845003ed28ca8ddd710d96aa5b9aec9b89d1f4de4db87320201d049
dd9adae0e6bdb328f9b03ddeb3ba2d76abacab483970f0d9188145a95c694611
4b861d90af76aadacd6e4a7ea57f187c20601edcba42d67d68e27b8f709deb42
61469943a83e96c1cebbe2067924aaa0d30e9bfe579860f12243d831aee6b842
ea02a52dff83f17fc4a835bdc3099cbb2c4fe025cfbb0909524bf5cf94e14ec8
a14be7c2bb13a6ecc2238d91f0f7881bf8f9365d493091c10316b0d95cbe44a5
a0fd2782bdaec6a67c85fcb3b84f2928c85ed0fd353e659ea86d4f1ec1bd297b
c87ff9f0ae6dffc576ddd1378fff2cfc4c385e39ce17cd3940b18b23804aca77
8b923537a94754876e4932ccf1ad0c6a7cceaa90981f47b11e49b2810348da30
750ce0986bd84b95923220066d2e6b41b3aaaf7a502038701d9e4a6368a4f9a6
3274dbb7a3f5467cb3c17b1b44707f68cbb13cf0110aeebb0cc932bacab4093c
b243162a8575962f79ae9c9c506bb579449b7e4984bbb52dac1d19bef083bddf
6de5546b5ce97c765507e8174404c770f70317813ec86598a1a932ed380d4513
98d158ae9e1c775b8a402062829224b74c429e15adb7bc006a57c6bd02bcb002
38bbf17c47032eed1dc107b4ff5ad98519451731676a21e3c0a01a2e4a690131
415862db3d6fdeff5058b28b347528eec7108ff4d213e3bb39a12a5b343ace37
6f846d3ea36e1e34672daf9c1e858254616a4a9fd672948cfbbadc11e769b008
b808c100b9fc3853cb5d125877434f1840a44339c87adbd06e8057ae651c0658
675e592fd4401bf8b0d588c8678d11bbf6d937dca6e17e10485b00e5eb53da4e
6ec216cf39411649b16dbc35589bacbb8d48ab4ba0322539a0ff3e640f901e97
81469506aa2e0f3fde4bb295b31ad813e395fd22b7d821fa249929705db8cd78
62416e4428e618c2d5a04526e5cb6eba827a4a906ac35b0288efea07feb310cf
5bbdfccd96a54b50ca156f5c2db6b4fcec7c52794107b1ff2f28e55548aafe0b
7a5e15effea3bd869f1e27d4cf4458ca6ba11e3f890e1afe69038561210d9c78
6f5f3aedc088ce2f823e6172c124b126485c449a48206bfbbcb1142a2cf324ed
12c07ddec87346bcbde57c999fa26bca81a73689b8eab8d500d0ed7a6fa63b61
e44d1a43b168f2939d7a4384f781c7744d8b8552f33ffcd9049743b8bb151e3d
7e982f6101f7ba7e62d90c058fb94c99b8f5c7dd26c9ae0b7073f8e16517ab2e
e9a87288f209eb801582a360032277885cc82cc78eb8be815fccb314448d2ea1
c473d4b6d1d17bca375777613e29d344714a0a4e4777625fa367080de926cace
e2c8c46bd91b5dec35de565a839cd853eadd168b476b4432b285b14df3d2e5f3
bf5447fe280eeecc8915be86878ffd3d6ce49ed1bcf95ee696650a79b79c6edc
6aaede203dba996b536854696834c69432bd7420f596a9e99397ce357ed6cf39
d515da4a5607b883d3522cf583880989327710cdae1efddbe01ca0977eb745e4
91b748efa6e8344f53deefc628413cce7fc4938ff908eac3480aafa1bb60b814
2097bf85e6376e86e155a18410cd791d6875dc30d2e532983113ed377817cd6a
e32cf1b805c8ebfe566c95cd6436d0f240652b3c64b64f533804b8802d6dfd44
003d1e50cb42885b614fa5058a7d231831e24d0ec752c55f73fab53f1abb19e3
2558d02ad63691df50f7edbdad5b7d2360ecbb2850e549c5e90cca073545f39d
c22df34542186c1dbae32d5453461e425d12f723f127719f5e5bb4394348dfe9
58f2d0a7e30e6fa8966fde8aee7c896a4100573b2a243c2acc8f0e9132025a55
bf4f373fa7cdaa67ec9099154a2c3e781dae7e630399b27bdcc73525c898902e
e6fc1a203da749d8bc832e38ec612597e413081fca5029f6f1f1808838394bd7
3a7376eb5f5e1d5224071623474d93a67df1f5324af1084f883bb3aacb91796f
d5a4d3c343a7990b02fbbaeaf585e8ead1f0b7f694bbf1f2215569af5093b700
0414703b52b93484cb4eadbe4515d24458ec0d9b003bbd172a187b70ded2d5b5
61e281ac9cd0542d0f097ef2915d330b0f17ab50a6168933e11640806289dd9e
87cec5b8c0fbaf2b01a1a0ed5d8a3531c04d44ec169924ee950bc79df568637b
b6ffdeb15aaf090a834b83f25cd857ceb51ab59648f5391a2afbf54277b48d1a
14d3b74920da47ae00cf0255314b717775a6de083760b5b0354db091f2749a97
923609e566a29d5b08b0be0647796bacdd4bcdc8663897fbc0df7579af0f956d
4bb61c58ca0f2f879996974e681baa9aec1b004c1ae62acb5f0181ab4f227834
00f11d3b217033afa50ed7bc56539e543591dec30a9bfd993c608847063c4d01
6898a05849e49ea32a0f643a78bfd11ddcefebdf33dfab7b859cd6c356c41dfb
6315dc9fc8fe576d5545f82a6fd292f00297f015f0d4c4ab99bb3e8b390ccec0
d8d68d88dfa3e148ab37be67b80d8600a3c07f8fc20f86a4bf3a65b9d0d22da6
17e3aea7c074bcab113a4b96b42c441d7b80e2d8400645fa89bff878cefda84a
79868e7a0f34e33178d1208aff32de1da4a88cd4e135a740a0b4dea4723c8594
ca5eda221aa1f620f0006bfad6d24200ad1780bbb2184a2bb7fee5f56ecf00a0
18b0ceb73ef7f058711796c7f7628a1a460079d7a17770ce398828ac22b87908
6c27a87c87cd9d30d4b8419af538804cbd315dd2adf4fdb2703f78b0c244c114
b46267f273e6f85b0f7c494c475e63b6ffe09677788943f267f15dbee736c140
a2f57259a352006c1670cc66d9e9c622070c5a299551186f83cd1afa837fd33c
069156f4b272d88ac7a76cc4564cfb851d3df7fe5bb947f027a2a94367743ba5
9b1dfda30f23eea0802a1d23b138e32520ce8779fc85ba35030873800b865213
d6e4b1f1fe3548c84e8b585aead43fdbc0e350898eab21e902d7ace82e0182f8
9736f83b87ea8f9af63f7ecb4dca960004bf5747ce4c6dcb92f47c6351ba8f48
92e68015c58374d46d143174164b63ed3cfe307ae758001059e6ec868530d504
a4cffb4d2b40198b066d19108cd3b77fa488f723fc25f88b96d0669198d066db
01f771c206a182f40362cec83e4275ab5415d11c9574a26838672a7551915829
868a8c7073c5c922c4b8c03b2664870301b76dfc2360066ee60e0071a1cbb201
e96ef10a6df571e65c45a0560eeab8514ea02816801e3e5d404a24b62a859c60
a5116e501c7c361617d3bae626b732e47b457e5c6c1b74b89204cb93f928b50c
50e64545a61d4f17ef0d23303909ac0141544edff4102db45d994d5298a01a27
dd697fd038a06239ef70266067a5b1b5bb7d598531d54832e3443afa53a3517e
59b6ee149729105f3022813910597c4ab3cf6509e76c932773bb4558025582be
95dc833ec198bcd3eb2f49b9392b6b9ea8c6e77d358a31a66b1499436534d04e
e609b92591807d8b8d71749cd1ed026592da592eadeb22ddfa5f72f69ee11523
cd11b1dc1f4612d6e6fd64197748ff49d99b92097fc7c7af37a14cae2c0195f8
6a01d1c903c964f21e6103b92fbe2ba109df9e3cc1212e7e707ac1a66061018a
c936c4e909baeb873d3f9dbbd0b83794a9487a0efa6415c6bb0bed4242bc990d
d579243d7dba5d12b88ca25d147b8fbc77da29bc81e1bc436b340b821c2397c7
cb7e82aa30b30759c0dedad0756cdb4a7d9a1b7798ba94faa13165334964b0f8
f1abc4c0263d03826f1129285ef34025722165b2d403528100803b72b29f6b90
fb8de1318ea811193bd2bc3558ea4b17563fdbc98974adca8432fe8f88eb7d7a
5dfdd204c4688297103d8971a8d1619a48d8d65b78d8fcc6d6aa8ba4adea7f02
8be9fe97285700ba024ed9e0eed9906051ee5f97b12f62824427c42f8e8e2c8b
c40f5495ab28c7d25b7c6d5a484d9ca34088136bb1719a079522e506ec48d6d6
0322a723bc9c86d039ede5b40acca2b892faf5c4915290a007c5399aebc6d1f5
f3cd77d24f81ebc90bbd2aca79fefa0430b405c7272d53c647468a17691b98ba
7b5a67d4cda03a5cce1d490cd177fd90599c327161daa28712c6dc2d35487453
6084c306b4239655d2c1677f52fc8f88c51f1bbc0b777d8ea692f75de8c9df58
f95237a9b31ec7fbba09b167f9eb523e84631614aff85cd50895ebc8e333f923
3fb6b5c8fe15c03fd2f0b6f4d3f28d1d62a0c7855de3d5ee1d265cc4ecf6095e
4ad911e49ffe2b5c27222b577ce2ff2df953f8043cdc3e2351cb00e51cad562e
529d64f33e6f5a0f4142921f96e555a04cf83444cb3fba34a67fd2a30a51baed
19bbd60df312c924245d386438453c776fe14e4f0d73eae3ea95a0ab83db2426
2d80d4af905dad28103db9cef234dd5dafa80361736e9bb958deec4051222ff0
ab21ccc75698dfe503b4c62b244f1f0133cfa27173cd50ed69589c6d32a6434d
0c331888a65ac50b973e1c22264ab7204857a4559b981703905a4fd78110f6d0
7179faa2bea17ea691c8c0da46aafbf0aab8b8050e4d1e2ea17a15f75c5cb1cf
1179f577239170f1461247fde1e694771daf4253b66160bd954ef094f8a3e4a9
c30d7c62a841b569f6c57487ebe4273156337010ea818aad03232b0f52273fcc
91a12126f232e8c5d19bc151465f5448c69745f5be51ad44edc4a0860907be09
a00d60fba2322844b3bf50ba91ebea37da364c67ad76bd8cdac0d513c8088403
c80115b8099c71aaf05f4289b3e7576ed568d88d72da1a5bfa6e774cc147cd00
926d9b2a4824a900ea9fceaafa2cebf5fa7c206657367b767d24a3155e23402c
76cc7b7586c551792758e60a2a3fb8bdfcfd90e4de0fbf2c1d2dc47f576de45d
e1df73f11947c3d6b4ddd4a4012514ff1f69800972c69b3fb5b1f81f7943e118
62327abc68a99947678bcea9ac3f8d21165ce85ac0a653d7923046989bdf05db
00efd58ad14f1ed2ace1668e2a3f307d41fc7e9c3aa2ea3d74a972dd1527b92d
7c7822b85aa5458038fcd171bcc6dd0183af4128f69f1c3c4b73cb4097ac1f27
a3b22181a7f8ed8a0d47c5b5ac82a67615d7d64dc3903e8cd9b7acf8f5f4c3f0
50ba73ea14a5a99a98f4c50ce3e054f1e66b45e60b0e191b12f53425f1c83fc4
171354c3499a3336b68487fde6e0c116d0096cf88bdeeb5adc78e89e1d77cac2
182138941d10a5fac478e4e370ff649969817ef7db87c2ea4225d9f46d6a05ed
f507e55a62bd4c90e039593ebf7b84bb09b5cbe1b7fac31460859f29b61a8c1c
8967e64f03dd6f5dcf01953f4157cc1884b86d909d51145cf516510788a5afd9
1ed01a1050935fb889b0415e28e6d65196b4ca9abab840c80508b2c93cc061fe
6e3e42871563674352651ea00985297770e9f8e58f135f299e81e4643687ca2d
d09dc1e83ed862e5cc14d769bb7c19197bc50c0518e7c33976abe7f91f8a7654
e74caf88b61c1fed2beb7f4d4fb0474bc9b40fb3362f807fd596be9dd8de4d2e
e35b0a6c603a77d9b14993626c02fc148f5ccb5b94b9ccdab0aae89d36f9ef80
aca6f7b11d502f71c87e8085d23ae89a5de39f35d340bca8f131bb330e1868a0
5303665580e8946c3d6a2e2adc36a69530d971697da8ed155818ac16e3dee696
8891225d5e0dd0363a941d20b76cfc6a4531d02110290578d4d1183475ac1644
257bfa84af546324f3aea5043d7171d4c251cc8cff
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 58 /colon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 126 /asciitilde put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueXX 5000831 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be465959b1188f76df7824c135a7fb382c4e1
1b0ddfe856b6f34552ca48c24b57dd8448fac257c4d93fb122e1218fd36b99b2
d79dadb8a66613ef11039be77816a7a2d6781fe0d69cecc36232ae87a172afe0
95532a8c7ff40bdd4a5fcfb6ccfd8f73c572231734e0609c6743ee11010f6579
820b367c49069ac1d45760c0ce8dc1e67e2beb72be6d287910547e1b4bb52465
b75947d224998223275a2c340a1c14c04328cc2935c53ee2723f1de6357a291e
14863f6c1411477b3ea074052b30a4c1ef03ab324d678307e1cb02c7aaffa90b
73975378b9debcd3f6aab626a361be8068c60edd0b2be4a7bbf4efa21cc23607
bf7e2556c17b5923d7b0fc036d5fea743c55f2bbf72e8a61995bd63d7104a085
b8dd5a83d9077376a4ae8f0c048606bb9e84c640c52d0a95b35d48cfafd6ebe3
d6eb0ed88c1212818ca93e40614740a77c446b792d02945642014a5d55ba970e
f97dcdd5b839f621a052d1085a1e668161d3ac0227c7867324ede883589b39e5
d152793009cb5a08eb6719a44dd01b6147e3436bdbb28215ce3d29a3b1dfc72b
d942f8cb3376b4e12cff53a793d935346ceb2afc3428cd9313c671ec1911252c
19de341556999aaf7417aa5085daa35ee71353fdc2c7d83ec2dedaabb1b89b99
e4cb5282159cbfb45a286f8d6bf3abdedccbdcebaf6994b17f1be07d10f00cba
47f2fbf66c0cf524494c53786b0f88f5d96a18a086fbfd22b6cd3108ee918369
8b342fe978502afdebf98632d63bc149de9eab94230a55327fb96b72a85ef6b7
acde791164e8f856e95058b875b02a2262b85a2ff02fddaaffc3a476f7abdb58
f5b1df019a4ca14695cf1f238756b3ce61ffa44d543341b9c1a3b422ad6ad0be
db2f2ef0ad1d60a8589decb250451260a0dfafca04c4435a350b80b75f198c1e
ccddca12489fe22c127dbb5c933103e2f46a0b6273e27a4525cd8cda364e1cbf
c1f3ae234fb96166afe4d88dc514a81d2bd5d0cbb0b3629d9d1200a81e9256d2
2a7a729b7fecc0a1a40f3afdebd036a762118213d622fcbb01ee6edbf376149b
e06906b514735ddbbf8fce53b4ac674f1a2643a0eed2caeeaa7326040c768fd4
5fe9f0b365c9373b66bef8a087206c6594b49775d3a65ec816fb5987308c44c2
62ea7d43054e61ab53cf8f41afa24a92261dc6438522105eece8d4c647366e9d
8531f57ce0e6166439649b35c76798fb050067e5d63bd40c54cabc9e1dd8b65b
1fddb3543f42f1d2c9c538cf028911219d42dd04acc0ad9b3887346fa45b4294
c2237e05356df461ae86c97b332d00d475b8c6a8a2192f8d99062e07f9c48ba8
9321ea5c3444860804958c690153404456905bbbb460294e3be81caa66c1d2cd
9846d4ee0a33150b9b2ce5c82c8934ea3d15af106d2d6e99622925fa6065fe38
13bf065f1d61e7901ef5bf96889968043c6ccf9e11792a258b3c49ad24253f3b
862040d41670772f179819531aa11f09f3a1df2953936a13ef0359852133dab1
c3d22d895633aadc95081248b0f9821789f9649939c99ed864e8023a048b7180
06698f06a0c7adf81a2c976d1564b14d45c81d66d4fdf2f2d572b94b14461f15
112b69031f689df9a50db10f09342871b100e432501f87a5fa476930583fcd97
fc5a34f6d8b04d0ee27e9590483a6f3723905461eebb7e0bed54c5d5bc2e6eef
299ccab5b4e56ded050b8fbf1193f3159611c277fbfa170d0683e0e5fbd618a3
78bfab2c973e42418fe282c7690a05373be17c3849d44922f3193417f03d13a7
856d6441da0fbee2d3b2f877705147e0f35ca7bda01045d58127afc27d7e6df2
048defd1b4afe51f0b6911b63c9f18db046d1f2dadbf72e132e90f4aed935e18
ead669ca1856d92f0e4e7e80175fba9403130a4e7d922deab49d3bdf2995b6bf
760c079f1a3bf7f93135a23d17f9c839d612dad977ac3064bf88d358e532e68f
fe75e104b46dac3d2640f697b8f431958b295ab7011e6c3e960d6050e5318155
519e8aee33dfdf7f4c154e764da3cf9c58b66d18acf888c1409ac67bb73169b7
2d921ae06f7ad901d9fbd639c86775e00ef64934bfcaca56065b9061c11ad9b7
1aa4f464630d7e9782c361d6491c2a4d2b8edfe693f84696926b14ec233fde91
167a899c0a94b02522537a7e7f84f6266621757551ce699397a5520eaf906987
28a93739f86c1795101b0b38dfd311fcb06cf6840e2e849f4a2d3cb2fd77e040
6d2bdf54c772eb98d3021f82adece444438ea9b06e3f16ef9343d162d39a5b1c
e2a858f46301e815db47eaf35f0836505db228dd42c360c9e8bb553d774e8989
74151a7258f6987554b956c398567c4b0f8aa691c3d68d9eed54a062278ef247
8e89c78da3e0fba1cff6e6b684168006f607229ff39270f271f17d0e28fb54ce
9ac0c242ecfdae849276d3f806354316458377742e26a9983ddda6215c8e4830
f5665a9ec789f048c207194fec5245ed44c5b8e374ae56f5db669d0d4904e6ef
23d1c03cdd4ead94be91cedd9d189f15fccc6dfbe88d4c135f8b7ae58851a13b
8ef711df25bd9b80d92edc2d716a4c0d36bc27e89823d77cde2a476b071a6eb4
b281a2db390e4098dd849d5c9ce36e863deade4043007a4a26d94ce26dff85d3
7275385ff0e57700fbbcbd50007cf64de2729d2f30ac9ef8d680d171e20d4f21
35539bb9219fe85a9b656bd723f94b444e7f3d904ba80ace7989a61919ee1ee6
b1d3c2b1fe81cd8567b844f9dae47fc1d56acd437fef2c6acab3a5050b9ad157
d5721bdc1629163ec856d46da063a13415a658702037b640c1a2ac4b9d0feb37
d47319e8b2890ea47bedc6e5481125c316c64e565a2ceda246dce7be8d8f055a
0822e64f74f13d945ac4ee18810ec7ddfe248516579f9b94950ed0ca71300ab3
ca0a401956c911e78210394ba2c5d66dd469bbb0c40c569ceb8d0bc440285f6a
08804bfc3a68a16b45e5b58b3435222f196191aabde6fe409ef2326ff1792eb5
8c3710f5ffc33356f09e62a052b59cb845c412478edec259ab8d681f6ac893f3
f4cac1a9fdae637a7c9985c559f577679191cd6047e204bebee8eaf3632f7c6e
e5a8791c93c0253221f791fb9588e395889979fa1db6a728fcdb1802922e0c03
0346509385c80a07a9295932dd9c458a7e51b43907d4b3cd26918cdc15563272
a59812e54d63eab836fc0b8f791691bd75895e9be81b163acea678e10c343ba0
24b92650885a7d27821cbbaa3f9478f783e79db34eda274865b4099607f2c852
df041fb17ef2173864973fda7520f0217345d6223c7273e72755a1249bad11f2
d67b1677afc905b618594f76157a50923fb439c661f9e77e916eea42f2a5df54
e5249a323598ea899ba82316bd7dc7ce5db6d306d5976c554e5c796f71cbaabb
2714426a924333e38d0820bf438162e1339957e06ed4ac424e65563f0c6b0265
bb1924181f1b5fedc316e937e7d7df06520983cc6d5868028c9e6930e6daed31
6f45fe93566686a3156775fc988eb89af222af561749bd023d5fa738eb16ddae
79dcef78216d462c687ee921348d70ea798e0a746aa8080b0ca76e0cfc4b57ec
16d2322c9aaf1df82889693eb6aeba67855eac7645fafe482fbe3a8ed662a475
2e3a5f029de368ab6390fd92f8a8c3f85a2b16e9cec3593eed202e1586ce1afe
f54f9522b66692c0301ad6d29ba874eb11e606e7ac7c6cbd5dd30f66190b79d7
e070f90d57a1d3b2b4f8bac1e64cbaa7097994eb37200b07e3cab61fdd028673
891354d7eb2ebe78b6e5769076ab099726db53f36d47f6bfc60e68914f2d322d
7bd8fe0e8c3f8a2578632bbd3424c6ea6c1b91b63822fb0b0efac1f94ea20cb8
014d5e07c09f33f8d69dca9db85913461ba3b344bed9c6f5202bbdd9a108681e
4cfc77a2b6e1af4fd5a85136a74f85fb81c51780ad0c82b46cf672a3f62dd05c
5ceef75035b1cf7c669b8f36aadaa7e77b95a888bc8f8a3451ce8ae44de4b835
ba0f1f1a7f0c955abece317d310ed187f8b57206726238566f201635fde6e4f4
b2e6a5ddd2bae672c2bcb63ddcfd676110d01b2fc84a7688c627e5ddb1f02923
e6631db5d5e0aafb2845c90c1488d87ee5bf4d64fd62e330f10e909bc990be2b
c6e1640966363bf27e996e67911bc6a587769ce88e8abdd674b08ca2f6718e03
915c97faf1d16078f3c82de3e60ca0d766652975db382fb5ccc4f9707a0a6853
e12fc038ebca2b1e48f65e4296edb5b9952f139bcfd6501912b0d1accda4ccf0
791375aa5ad22aeaefac6636cf841e1c1fcdcc0dedda571628c2ef28140bf0e8
32ac0606f7f595f5eacc9433b1db53b804f3216b961d647564134e7f15177f8a
d48643e5d962c9f2969b2a759ebea1f59be714cd7ca311561e3e8aea34b596fa
56628ab7348785ec04ea8acec2e2cf57348b1904efcf92a3ae739226e53b225d
48a48afd4d2f350797da0646889d29ccaa313495cc5c575b136c595c7a6b3787
4eff9c83b9e3f7a886c44fe078e397f7300af45d70b7ccb5d731b7e40259521d
003186b872251c587ae010b194f409cb2b98c5479574267671c5ba56bc61d85f
e02f61d6d2cb049826c218406ef3dcc05fb18ee49c84c6a1cbba06c01e87611c
ea7a6dd00a3a3787859c8b67ef25d2214ed98d5fb0c9071e31a99233ac58554f
0d1a10c99749139edfc3309af2fc0e0dc58f68fd51620854d99c4a2a5fc46f34
8fe702b6da23b9135888ae6fc2a7853dc012de02b073a0b564257e8afc4593fd
f92afe1619bf75db0735291756abcc0d191dd326f0639d520a195b8a94b2a281
f64de5a4202a3ba72d3ca75fcf31740bf67194fb4a1137872e0f1272dc108c26
8374c897cde8907536671ecea9dd5424a5cb3bc0e252c79e413aa9fa1142ba5f
8be4c212118782adb23c2a1ca76a985c45fe9830ebf07aa2996f0de1de2507f0
2b2e1c1be51e85e471e5bf5c7cacc4153d7aadf729038a9745306c4dd102fc10
c38249dca691eae0cfa5479adffdb41fd8eca119c6a7af36b66db7b1961a583b
14f60a3435c71795ddb752f360e5d5f61f487e97084f029853627c22b7ca4da6
7bdf4250ad06ad6ff2a1d20d40e2d4338e65fe4c19d56f46124326640dcf3ad5
598fbb948fe9ac2b14db3d3c57aa5305d4cecd8e8ae5f9517c704329cd92c519
c69c09bdf2ec8f167f25841895ee1b632f456db1fd86f6d9b6c822c0a5caad7a
60f2d73840dda751bbe62924c7b2eee1310828c83cc1446438091c5fabcc5527
c90dd74b9ace26a57acdb0157831efaf515816a579731007140097fa18db8c33
5e383ba6d41fe637067793881cf956049cfecd7f966fb14b269c1a453e105611
b7514faaff7d040c419ebba73a6fcdf5b7c75cd11382e39c5976c46792ffe18b
54ee80ca1c55685776426d880a0aebbe4b0a6d766fe77a78f8aa1a22eee76e9f
ea9ca7bb0fa28c43b334d8ab5e97895d2f1378fbeb3b12fd13d7a79b152c7d9b
323a3ddf9afcf2a7520e99035676bb1d93cf72e5c57ab72198a11dc958609628
33618409db1433d7a81cf21cc98a84fa68d6472e08b8c291f6123851b6729226
2af643822bef5567b69f95f09cc42418ddcc0efc0058b8d464af67d5ddd4ea90
6cd07983e2e8d9478e97cd465abf937e24872fdf62da910840fc4c2f9d2b5b2b
03789d869a3b384c7191b110a56d866367cbb0f674371c387c9c64626058c678
f63ff569067c3d9f26c0a0b6b123a773cf207a3f91f14617801ee63b1467f813
2024fbd348d6a85db8c77cf33618142723dcdf9b89cc02468d41a05c49f1f010
ac2f48c51b413eb0fca736cf77fbc50629ee069586560dd58857c54d544d5dbb
bd25855dbd4f803482a771d7ae7fece824ecd6405b785922594275b85558687d
dd15419db6d4f80dbc29d913dd08d5d1b03595d52a199aee29b5949aaaa4ac62
1b516fb722fb92ab8eedf1aa660d075f955b42f7a5f234643ba4bb10216df5d4
8c25d14be7329a9cfd00aa7b97cd9c48172d7cffe9272d6696b9ca2caff66a68
0c6d83e174baf79cea58b26f93fad608f560e5ca77d3324bf66704bf0ccf77ca
704aa679031887035623c47ff9c1f6ed62258720757e9113f4a4ebb9cd8c56c9
a25a568d8c36a5d3521afdd4102c4a54fe1a7e714a118b370ae01e6cb1e84ab1
f81d7169a65700555a878774c4a19bd3be1e91b970729c78680dfcfd07e89efa
547bc3069f3a9290cdf58e1ca21ffee0ac522d1781ee15bcb198edd3e256d926
ef6df5750832bef65ed32f4db2834fe023bc0d9e0eac2b26a9480f22ed20dca0
a9acb525af4dbb579ad77c742ed8c3ad9f3eedd37ba852a44af539b480120a75
e061ffd061463701a9632d281a761dcb47ac4ae99dbb5fc6103d50c1baee580c
3511a7641955c26140a378568eaba0b1b06bfbd3721832918ae634d8a092f522
7429df3cbdbbb604e2ca62c2d0cf11dda920282efb6d4c1fd54aa8d1ad3b9b26
0836cda0e6dc6a072f353911278b1f05f4c3797d490a84455b627310936caed8
cb092ab409f2c9882334e33f23fbc162087e8d1f5fa40ec1d09d1d59217ae8e5
c94fd3130583d50a6038ad26cdfe50ac9766aae9d2d93a20f04bcb5771b85442
6272c1975de69da5323bed18409a366d306c6b2edc19db857eadf80ba78757aa
e339d113f63156670ad9935c065a224be04f528c2892e914ffe9de54aa9c5392
a37ac2a7052d13b3cde5b46a2feb107c91b197b71df9c45137f1f68b481f9a94
425729bbf0162119c38971a8674630f1cbf0cc6a5bef38c9c47921c7227ae869
fdd5fa326e7ee93ccd0523a121d430ed59f890b574f256d1f728df1d74b0b366
8509ecffe4d4b137c4e7246bb31cb6a25e0548d7556f14e2869d1a9775315ecb
6038dbbd5640d1595eb69b1be347f7de0c04f048a3cb33d3d316b282866aaca6
c0b1f55f53e498d8c73127b6a4d00e254bf01de816ecf01cf9409b1d9167ae46
3f8d628b0f6eaccdc39e555dcbf37b8a3e525477050cc1d40127ffab7e01b7ed
6d8a10686fcba79dc237ecb518af8cddab8f5098fdb27d80226287afed732a7c
9d4580913391a4f7e8c5970ee56e7e6bee0285c7eefd497e20e5b0739c02fe35
a999e458820760be3f1939a43308645d1bf2e0d30fdca8e1471e55d77971fa13
ef4fc98d6083d3f0c2bbc38a02a77c3d22655af79f30b9b61c3502f409995b4f
e407437fd9299701a9f81977de69a9090637b6e90ca50537af54671f1f76ed8c
255f76a56b738cf5d96ed27b2ec076e4b4f1a2df456ebd681c29aca0acc813cb
0e7a9613e99da33adc86566af2301fa16243a2b0fded1bfbdaa183631c4285f7
97a720ca139f7b3d77d1c611187e5f1152b2844ae7459162ddde407134379b1b
a1ee00c2c5622b4f017aa74a4f587d3295a2d5154fc020863dbb96df2601cc6c
7c256e8ecc93de353c6130ca8adbfa7c5bf21336abad1247139382957dfba3d0
d32f8e0e48f9a7a30511ffe612c8f2ca54ac18a92bbbcdfbddd88c2fb728235a
fd9058018ec444280c689726a2a49bf1723d0133d6703f63145eab79b2d535ba
64a34c9f957b98493a5e845250c4b04abc17101680e606698407554b8a04d0d6
a9ec16bbdbc72c898977a512a5d9de98a68b9bc3410ec1439a265f4ada350b12
5c6a1bdea07a8382493b18d1468704f4a9f54a9a693b3433c04b9925c831cb62
a01a3ca03e0989e1176b1845ef4d9796b55c664a9e459fde55cc83412551542a
3ff22f4e66d4d0086b14b0563fa1d010d29344fed90ae72f97456ffeac7006bf
c73f2feaaf16b6291d891dd9617496c9d713b046233365aa910e88e1977f439c
6720a431ebb999500ccbfd1fa0ee23937257c690bf9c454750e9a7919f278563
665257192a4ac6a0622ac88b8bc18c158651d4194d278abd517e4ca3bcef0778
8b65df1fe3c181ea2782a2cc3a2d0a9b7d85f4b76ca7ec4ba8a36f7e2d928097
ac44f2925e0ef064424c6a4b33687b13ba1912f3ce7436a76553d53aee0d2854
dc66a9bc0e6aa08b6dfee1d08fb2b90bb9a027764c42b42f4a439ad05f59a7e1
de23a490277bb6fa67f0d0b6254a9d026b8173f50023b4a1a10c8aef824a2797
9770d64fa27b628f500a18d4eefc525fbc22c64c9e5401eb8124d102fea5b1f2
de53d1c4fad1a973917be263594df128d9a35689fdb0446c79e13cee4c18dac8
2ca4b7c8d98f431dcd37a73076621dc02141752639f703251117ca8339586e75
b3eb8473d041dde713b71ecd604551f8bda02f3ca38e85d073ddef2fda4b5801
9da71a239ecd54a93bfe4c0c490181015cbdf39f0cb0c451010c9f5b0d09aa6c
1101f3f1d59af04189662195b2680aafdb3109befcde52632f275139157d11e9
a2453bf92a118fdac4818faaa6882d9a51da494662c5e457e0c83a0d92a63efa
af0b7ccaa15471b32c6ac90640f044ba03d66e64735e0359257b46f695dad4f5
18847662f8f7581b00c36e07c715b66dcdee358d6a6ec5d71696d6bd24442fb9
c37660f62fb58c35cd631f66153972cfb9f7088a244f8b7eb811908c990de466
dd7410676534be031ad256234935a5f5e2c2684b6be6a651bc4e2c913a0ac2da
65eeacf98f068a448eb4fcea4f7aa2b79e57ee6521804ca3ff6e396bcc1047a3
4ce51961b64989acf87be5f249de68fd62477f398617250d7d71332bd0fd50a8
6e058ef7347b2d9fbd25fe288b22bc76c1f7a04225e00892bee25756723137c7
79cef194bbfe2226f2319de314636472f5ec7a9da3e6534f64ccdff344bc74ff
2de82918f4eae05235ebff73da695bc8fe2a1c01a20ef527260447ad933c1b99
aba1cc2299f46d8b7c89f16ca91887363b18a96d0fadff62a323623f7fb4c064
e174f9d659478ae11688beb954803aadf91dba2a65a6aed76b6e19803fbe8e66
73235d672c02a2c36ab0eba45faa1fb4ce493f6892e7a400bbf247c0b066405c
81ce777ab4323abea435cf2c16abe38577527db4245b5ffa2ef79e43bcf75a65
a0bb1c09c697cf0af7ef8b37346fb9a180c29dd982dc7f363cbbee095b67d548
3bcf17cbf3f4e1f9b8f32d28c6df32bc5943b6d2bdf12196a9e4da4d935b5f53
54558ade43cfd6c4660b2c924f8842b38727fc685c6489643c02f77c696c255e
d48850acb7e7bf12d840ecdab8c219ceb417e93d8d560629f88f264210502df3
4723a0a8b39db2f385aabaa7d6424b757d723da7c5769cbed76d64e49e56e837
e1b58130b900b7ca943b5b65ea70185ca275bbb7328327aec75f097555501b90
bfeda6cfaf3bf062dea027d8b68376a3b405e3e64e10ff384d94bcf3f63c284b
a7cfc537166ae1679fa85314ca2854c2fa665c24e42dd2e8607e28ba3c52f28c
cf08fce3dee9129e1d3dfc7833d003c94c4f6f6f29131656cda97baee516c8e2
5f8b1f06b10331c606c3771859468e528ce3f22aedbcde146dff96eef8a7e461
55f1c7e9ce075e5c129d7c9db1da534760d602d902212e72c5bd7f426682095b
ce4baa8d5826a01349f6d9380f4711827be2537c7c21ff5ba5f973dc7c0f24a5
e9c0d14d951683ab353dcc087ab01b57e932d4d35007a3a3b1b5629f00d9cd82
2e182b66410c99f75b4d91a4aebc74722e60e6fd45f89310ddf6db8d8ddbd772
2bb22b3ff4e68cfae330b3cd167c639997768079db2debc5197651b4ad3d4c44
621c22eb7afea8c0d8703fdfca5fa0dce44cbf0408dc217eb793d312d05ce95b
2d6bcf6dc1d5c0b90c1da050c54bc6c9e5e88392500922c3ea91223dea037c3b
509adc3334b8e1ae2694935981145d83f8929f44942f5fca37ffde3ee4ca1c14
2028ebc57fd1ad25d50a377fbf3d6faeb25cd80122b64d582ad19eb4045257f5
c9cdc4c04ad0975887343bd59458c02e08856c5335c90ad7c071a2285f18bc6e
8d47269827f775c833478550a2d51334c007dae83317982e0bbc6f64c4af3a9a
dd913eaa17fa40ddce6c7bd3a97034a18d1cc391cc0f0652081a7b2511c96ab1
1a91217289f3125c91ff7e5f30eb9dbeadb9a120dbf9ad65fd765a65aa875d63
ba28de0acbf21a2ae17c568534efb14970cd7824fd14b39e6dcdffc98f75a301
693804ffa826d96f6dc19f1c2cab6b93d8aa7e3547dbb6e5fb3708c063a72a01
10b135f777d0f778ec1c293a9285417780a478508bcb8ba07cea847a59fceae0
afcd6eeba9bc2191416d50591997c98efbdcfb22af9a78d11da6d7503a42c4ff
e13694c503ff4ff4e0c607eff87eb889e2aa5140ff13083bcd8e952e03532349
a91dbf82825d795a9c38f0e19b7b90e6abc35d895f3b811e52292a567362bd80
9e591ab83bf9da2e531e4ade8da9107560733fa39bcfc8a2db7902f5dd043997
e055bfc62351605a9b7d612b4bf32795c99a82fc9abeabfe64e3cc8382b1d673
cff0490159a62d5ae0c7c977fde2fd314629ee7c6f12f68255aa6297ed8309aa
d26d2b5b59cb0ca09cbbeb42acdfc214d4f549dd556da3d9243d16ade18f5d5c
f27c5fd7610020fa032168c2c36a5883aab885f5da1f29fd6f9dd72ededa7ede
6b1ab54c3e1ae4a4eed6bcaa88f833101378ff98cd21800305d2b9d38c5f5b46
3acb7dfb4866c35934db370701e24a85db55d01d6de4aa7a7db8665dd2a7f8d6
23b23f07b8e1c46b08c768bfc0165a086ea3b0f43f63156daae4a34085d418c5
5d2fce65c5e83ff5058495860504261c12aaf04cddeed5f48bd8d5dcd53dcd1f
f4940edb8e161b66b1c9b8a0be2e601c7e9e18a8db2552562ed5ef2448166e8d
561aa75e5e31a6fb5856cc9b4bba557ef7ca3478906d4c04ab989061abb552ef
a5d05ae18568dd59fa2e7b1932c132e2a70f5ba05b95dac885cff8b2f4167bf7
14f99ae65dedc0c3b1db41847b102ce3fea4d5ffde1b90c3d74f67d6ad95e2d9
0cdb44c6689c37fe18409d31e5fbfd668dfda412c1633605091fb82a23229717
78d971c04ef40b5b0cf94adaadcbf14de6a1ee63dcd4d17edf20f4bc666ddc45
bfba1f5326c4c052cf05f8b348669d19d9e91ad7dbff5b27860fc05fc436503b
7e6ec739180fb1d6c9ccbc9de8da3d9fa55601abe552f1387269fef2efd9ca07
de7359b77ffeff6f6ea2322bd8573ba31aa435084548f7b724a0db4a9fc96b34
735137bad70f7ab6e24f835ff27a7e64ed0963695415d47d32a3e7e816398bb0
59f6bae2bb1499843166ff477dad100d1e594886a7fd97a1f77b1d77e0ee7987
a034776c0d4ebd03cb3ecc5761de1dced454c28792823f332b964485a8b84212
7b9225d384fa23c309c762f8e362dc69adcc6f5274a513df23a7d617ecba2d9a
fe37ac50215073b53254dee5690654d696f58f95e313845d03cb67d3e1e19ba9
a2c70063c2a10fdfa71fe333f54a8b92f1b692aa0a3b7618260bad4114302643
6fa552d1ac24a4ba934ff31afa3a945802e99dea2ccf2a56c9816a23c5fd6fa0
d4afd0219e78fe2f4280774f19cdb7f71e6663c16a8cf652af3f28d32f4fc4a1
90706e4134117820156f3f15ec58ff9a4f2fda3bfd2b689cfdffe8619d9e4500
541cc33bfa6c59c81d0b5158241d63397ba90b492497bafb212e2f2ff3be491d
9ce1177a5c38c8750dd7d8af3c7f47fa629d71c3c067d098857461afe3e05eab
8253f1a41fde9ca3bfae7884d9011f89eee4ccd28b6bece14684504eeae8c8c3
d1dd5b8c27ab71d43d0c51be67a85e9cddfb7582e0705fea872f8673454c9085
634174ec1dd43e704a356d0b84cd0a3d2322e08a575b9224eb3dccd03d4434be
0f0a78678ea4627c29381ea9f9f85a5f1f1e0d0b2debd6f9b1b825837c410463
29e27aaf7eeed5112e639a572703c313ef934de29cac7a5aa69af33377eb75c7
33022d40fe3adf1de4890ec66b2795e2d40b2777e6223ff3efe821f3e4010f04
b2c9ee7dd9937a606677d29cfe23374b5ff42553ef83292666d26495b9e56135
06ca1e071ed22a1f7de21311f4dd2f83014c2c7a6db1aca7d8bea1af36a17c83
5ea7b82d84589d4f5a59cb13e678166207a5fff646cbee38c70763651e03f47f
0b3f26305fd82772b7a7c2a266bd8e04b3ff3b8f81fc840c92314088edaef227
c6611fbf5312aa256ca75c9dc1b902f0e531bc1767dc3c782be46f8767f65383
1fa3df61c7172c18b5b14f87810e0750efb41c66fe359d65a4024b9e82afdc43
b798bbaee8468e5146f1675d779b1ad60769f2d74fe1730d84c61fc461b81bbd
0677e610bce344533972e262e97017fb61f85bc1502c269973c5b5e0764a8614
3985ec84e1403d407a1b16614fb950e42ff10e1271554a226284d3f550b59161
784974147badb07ba75026e29d8a556a309c0ae6f658ba92dc57aae889f5c66a
0270b0076c18d8e596364729236c8499fd8b02b6cd7c4fe085e83f39d26d87f7
b9f66a12999452a381b611289313e86a137b311261cd3ca269c5af34832c54c6
86e3fe12d805106b731a395401bff987fb22f748c4cc7186883337d2356df7e8
2d3cc12e08faec035c84329ea9516e8e850ce2f37ea07a5cd46176630fa5283d
7dadc4a0b21719ead114326cecc7a0a4d6b78b41c31b9df65fb4b18d574539e6
09ba049fa913f3252a9681c2f42f75a828bebdc10aaf9219417a60be3788ab60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 33 /exclam put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueXX 5000792 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685bdd20eb05d5e7c2126132e33a59a7170609
dcf4871a5d023c9ef57d3362d9f2d7a440bb69bf653364105f16f4d0f03582f9
aced3d05cc76489b16e3fa8a446094d30038b06ecceda269f2eab9d19a99c7f9
39f9548f206c5a457a19270b2b82c43b091dfc5573468eaa3e7a4a32f8042891
d85e4b180fcbcb3091d2800e54c87d84ce9cad6869b5aabbbe47f40c68799893
d22b765295e1e69e33aa048b7ed98ba480ceca91f3ebf8ef85fe9a3976909626
b95ac5940d53f9b02215d84a44837ba25ed15cce0d504f1d335065594f3bc824
5405407591cccb11cfd4645da60d960c0b93f187b0cf7b105543c0b70f89af5d
264b6c026e3ae646acf145950202ec73282111e3e601cf2bcde22ce3edf6db23
516481420f26552ff4472d749811f27768150450d0d0ebe3c79f999e99b5c0f2
2eaebb12d97782b1bd91b2a1f62a76412548ad53c0dd411d4a08c0f071c2c218
63d9adb75a4621803ecb84c2bb235b620b658984b2d8e0c4637e2811bc8f0d04
6c8935afc70141e1b2d9c23bdb251d304b3378faf8928bd09686aa0340fb0cb1
dc48c996ef91530ff078666fad227a3589f50b605267212d3a65ebc1019a8eec
9a0739a00279471a01e1505c17658c10030fae32f274fdc8c8774b0d5406c384
a1d17068dcb0c2575c562fdc5a2176609bad9a2c255e426a4325a4fc3053c7b3
2f35f7bbc9aa50135f30223360fa2fbf019294b2e1d1405e078341097090ddba
1561f22f8738fe105c0e3b84532bed145d51428c9cb1807e655408807dc69161
1109a98af82680d6dccc987cb312835dec4ea0645f47a15b6707d654ae54846b
3d3301d61150fdea8ae2da33e79976812c7764050a3e86a2a819ffd3c64c38ec
16b2d0bec3922847fde375ffdd82f8f8bcdfa39c53068da393b35277ba7af682
9e48b1607f22eeefd7d0eea93ba1e2fb9b5ecc6c6fe1075db980999f0be7add5
d201a7dd03a992365ef29a6b14caf9ca486524e459fedcc628882f63e9ac2b2b
e077f8a0587d384049538e7914112b3f2d5935877f9c25b806ca3f30d641dafc
f05400145fc3e864708391553bae817d4fcb9455db7a7f48696872149f4e184a
5650566593ce7ef6ccab0ddd71143bc12cf3de3c50dbae103695d53f05279561
dad5d6429fdf6594e6011e0cfbbdc43fa654b216f5f7813e1ce69d48e85bad6e
723d1953951d6ae70d6abc32edb0f6a7fa18c27852f286b6d01d58ec29e132f7
6a0e184ac559cfbb2f58d32feea102afe57081e9a7740045ad8014a02ebfce34
2319068143e4d938989c68f3c1c46aef83dc6c311ce45220fcdb2bb84ebd4456
017315f93ebc3429e94603b8b6cde5d7cbedd8954a0b4fd12bcd3cbd30e5fcdf
2a0d6a2ed61ade3778eb20e65d0284d3c291942ec40ced88c54da7ed1b97e1e0
77427530e068c70e66eeff626102bd5683346dbccfddd51b5f75e4864fa79880
ab3b29352d96f5e6f97daac012b5fcb46d39f55c933bf7ec1bc0f77140db6754
2c5389556a1cf3961aae56e21e2f3b7144ffff50892d613b9ac9446764eab6da
6139d452548547250d4273832fc94fc15a895afa432c7ddda9d0d69e2f03f7eb
c1944845b137ac6c2db26532db9ce899a98133909a5fb15ae1f6a8eae43c2708
e9e7d06802e57d562d88d1805b193ae1515c6506261341a4462182a3b5fef503
7194a0c91a9748e670d4634d50db007b8ac29587548e81f121db3dfd7afe9121
3e5e9d0250cce77c7bf0cf910ed8f7e0a26e8e0746e0652a7406ba3a3f9f7daa
236b942959328dc581c5525c4d96b6eae6594511cf8dee76e7c131b036e37269
4f2e5e6c89f50ff5c602994dfdede1698e311f8e54e246b136f07439f0e4ca01
4933d0a3736dca6635542b871d5df666ef0801c499b78a82c4549e0ce5f7a3c3
31a93cb1ea6b2dc4292412444b8f94b31fe46b5ab6524313662ab62e81bad027
72009954d880fea50a8291d360d5158afd087e80e9d741a2f9541fb70e13d606
e1eb9e2480698ad52e8810946ffd5a172776f085f47c9f4b1117feec71db65e6
8047636048b2488eaa252a5d9f92e40a865e90da63e4227429519e06bfa1c7ce
670198436795b7c776f966bfc03985d2de56cb20b4b22223e6535a681f1e58eb
857716cfaf7dccf2df73fc5fbf2a65ad75f51d5be0e8eb5286faaead25461c49
33d3d3aeb7ff24117e18884cb5d089e2347867b6272fa8c8589073d98266db60
901f0652f9fb0669f1abe76db160026ec83ba71fcb1abac2ecca07db74c2b205
619467a8276cfef6180144e49e33eef5848dbde1fb0bd6483749179781e574a1
7cd10b5d5c40a127f4ff146a989bd21afe9c3ad8dd8679f7e96720b9961ed4f5
a3a3508c97fc3c42673abe58694729753b849533c7322bdfe28a6075288f359d
7448cc4a864b5c7d53e6b165547f4fce206998ef3ccbf53012abe0e422a32e6d
6213696526df7715042c791811eaecffa63e81f167cd9a02e13100da29fb0039
370a846889f9e52897ae4c04afa0fbd17a99ef7373efc7576e708b2e21cab508
06844e9a4cba01dcf5a7bb657f71f148eafa16f18e7726ee86f8219e5a9eecaa
035f2ac291e8618777353fc0ff1e8ee40afaca96f5a4c5729031bd3e5940ed3c
6dc288886a8f79d1752df6ce0e57a319daac015c72588b42492918a205f0aaa2
80911d1d34288adc00af081087d02fdf74052252c928f16a2b6347ecf014a1d9
3a3675d39a8b95318d24086f2dbd9a06ec0138aa82b3926945eaea3ce8ec4cb9
1b197b4eb46b72a9cf21bfdc089603c408ca547b4765bcf3f8935e293c1c0a9d
318a2e07941d085c4842570deea92924289955799f76f6d19303c57823e15889
e2f26eafc2fe33a2053da1137c82f37d29d66c8ecb0fc4fe519076738e4f5cd6
7b469602684136d51ec89f8ea4ef610dec443c79fddbccc174bf2b1c9a0b13ee
fb402ae859b98505b3665736b3e64701893afbb82fc9fa51d5349bcc072c5921
ceb9313d0e38f61a4c72f36d0b5f072e7251eea046af27fe2b4962408e6e4a16
a843a008b3d32cf6f0cdfd9cc0bf03f181b24af49f75b2cc78c3db1bf7e97abb
6d31b3e73b67c5fc9bd16ba48898ff9b00d727267bb1ba3a3bb2a89acf0cf73b
faf7a02b6aadcc246bfdf0bfb1488ef95229763deab942eabb023f73db67e047
0031060a96cfc48f67f49d51659f81622931a55ed9c1f739cf3fca516f3c76b6
c8fd552b579c4df540eb3ceb92bbce16e662387f11c7e85f4bda1880be55583c
a775d83cc3b884e4be396fa7dc3699e4954b641ef16df9bfe264299d07d31ec4
d1e421e2a0b92ef1549b22afab2dd29037c264137d82dd47f7605ada001d1c54
30513a407f69eabe6ad0f4edafeb9feb0ca6b00c7ca14327dfc205c6fd5018bd
e293f6d3176fda924b8bfa0a9a6c96edb5283488c2fefcb24ea9ac222a95a7db
137e84f7ca94bb13d05edc73f426a4ce87169c331d898da205ce857d357003d2
841a9da511faf3386f39560678f4dd607191e61751e101de60ae1c66eb2ca07c
d9d5a7d561cd59cd0d9857a0f351cca6566e3399563436f76138f65f16dac1b0
7ae4e34d46e753c5131a34a0e9650c4810bbc38d10e4e34074f3a559697daead
561e2a800e6e43d8642ad1e59dac0d966074ffbb7a1d408a867d3468383f369c
7aa1643c1334df44e99f2d420f286a626da8bc22f56de94dad51930aad7e11dc
dd6993237f646713bbff5dbc2fbf079b23d0dfdfac5f681c1cc6a27746a1cc47
cacdb96747a49746306699fb6d2cd5049af85faebb8a90e8fe2f43d8f41fecb0
75864c6e5351f5b0356c4837b9d31f77e5dc98291144ba7fc44b39191eb67b68
8efcd79565651a8b0f1c88855e182a82af570b4444d3942485236c702ba50f9e
23be5d431de22a30e58f68d4848d21e165519fb2a53aa339b689c03f17b87a78
62511e3f80ea16e99d2ebbb27170f6f30dcd16385a9f04e2a48f314f171b171b
ec8d35b0e13eb2391ae7cf287a79663006aebd332726321556cba300c25e12dd
186a7df38d018fc8a12ca4f5fa842e716a1393a7e3735e4fab0ef64064349200
81e244c2743fa4daabcc170b138aea623be8cd325d2b3e55ca113b7aa9b96a51
b84d19e23883c016b31522c3be62601b26d0c92850acfd1ad5db31261551f316
7a5f9bb23505e815bda1c36a13fd1953e2abbdec666748f68b5b7e38bf9424da
929dc5345c74ed018962fd7970bc7821c767048a2ed994b79b4f0e1f3cd2e52a
918d669e6c55808105e06444f995c2c1cd525433cb79084fa6aba6f0ce9c3114
d7849a5499113254d44a58fba5039fa47a51e598683d36dfe1a94d17664847e1
f6a144f6601801abdfe1c8139ec5c8881cf2ab8bc35e59c35b13f15a4aafc0e9
638994b15907ecaa30d2ca88eca07ce82e3cfa6b21379224a8e9aaef48d58d4a
12d9adb6dce817d208220213da524b009e110f5d0d6ad99140e3dd9664f45fa7
f0a1928997dfc95df3d517f028eb1cf9843d1a4773c4f90a7157df2f0c7ef5f3
603214783cb8b00b09ee5589c67e18a5c17537d76f30adef01ae5080dd1f25c6
f24e43ae9ba58ef224ae22f8ff85d10054a9775db51412678141731c7cd8b594
c2deefeb195f27f509f9d4c63ff438a0e5989a1692d2134021ced7dcb1ccafb5
7acae0702022ef9b32804ab89bc5cd302fcaa55189d9f60280d334ed316359fe
87f3ff8e58b39613df5a8b0d47cddb76022193e2f7ad5c4843437f86040370ef
23bbc918069dda0287658e97ab05e7ead84e2a54eb8b8f3424140717003c6de0
b49e85e299ab9f5f7baa21a013256a376da52fe4b706c9564edb33eb9c1874b5
2651b3f00a63d60c6e776933dd8ab690a7886ca908160038f6a68e386121a2b9
c29a768fe4c082f1d64b4acb61904b9fa9dc90d4c6f2bf2176dc845a25a11eb5
e11bee7a8668a8c4ebadda08adb388236dacf702d0f53f8d0994b2c5c0c6f973
80119342958b89c1f452cdba29caa96678d44c1113d2589c2e9834c4f94d5e77
8201379319a50ea119fa7a7f83ee311a58c7434045fcf8aafa3ef227db1fb589
c4edf46a77961bafdf388bf1561b1ca15ef76eee3ea052b84558f0211037ba12
af4bb15c4734606fbb9828579475d64c94728194557c636c052605846aa325d1
c311922a44e7acadf8e0c64b5e4f24bb51c08e586d8ae8d9e8f5d72ba37eda6c
9ca6696c7cdd79d362b992f0b32e56901c2fdf2844802e6971afc8336241bc3b
3512193966871a97ef7890f5d908e6f613bbd8465e2180cb087291b818e1e209
0c0ade48370df092a0cf6fdbc4af91f090fca1f05bad94da3b524fe1494808ff
cee94d9bd42fe630012e18509493ff06d873507cf09134f4b2df68e6f1a2103e
fb81c9764f478c440957f22d52015005f0503a78282e495d0a1efae9e634c4f7
c45470c33746eb74705732b25de9d1424bcddf79a365c71296810e8e360a7b27
aff83f427fa6477928a0d005836217c0da7488b89a22f29c2099715885877a19
a1d5202ec10720ca7a713a0c61ced195c8666412ccb20211260da29b1f2b2b9e
620d2d91addae94920ae79172fb73f95915117af5ea9c955833de878c932788a
947574483b6fd08652fc813df14ddb136b1c54c4c963e59657ba2138de9ad31f
3cf103bd88046d14a8fd72c0e15787c24709acb70e24fca987797ca15197fef4
aa614d5db13708ec75193cc4c71666f4fbfbda65b67c45448e8bc8a694c41292
8b84a094d067d49a15f56186143abc7dfa0f902b1f4bba73d9383842e4c65295
2b33b4050f8890efcf90b0a89018e2c0299322b22980de2df60aca624514e6d3
07cf692f5f4f063ec311e634f778f2ed56fdbf0eb4394937698c9ad15868516a
aae4e6cff14da707df80823c549d8b2dc53e6120efaf768e6254c475f3d4522d
1ebac30d6f5ec9a6872cb1fb876921e10bc5415e1040c6ac129ffb489e47d940
71bc390de103c8367207d2a64cc40c30f3b7e82df881987c602ffbb85b65064f
f02678ed2b02fef15566ac4c3a76736f9a56b714ab4e3553e293983256254f99
df9468e97ce51fd6c7cf3e6816f18c5ea7acc802b83bc403a7c64db24e39437b
50c6fee8e44aa19d40cf00d7c5d361027d6b63890b0a9df36c5864ac8d5fa0e7
71698b01e2b7616cae8977b9b84389d66de40608ac7a0fd2ec5e1d7d3e2a783b
7446e62a4f54a86bcff14fc6e1b007798d2cdc45c0ba4c240778f4e5987035c2
7e53b0e47fa35dcfec3465aa1af682a58a07d97210c34c810eb56151edc53749
18701f1360cc126405ba97fc44481a00d62ad1bf7a7822053585402ca891d0e8
1ab1eda561818384bd58881a0c6ee5ea8e5cf30f3f327c129f12dbcd7095bb15
ebb5229bc90cc0f86e1fa4d9025fd8cc20836fed4bd64869b513ccbf879b267c
ea92a5c1f5499befddf0d497960ca96aa16f313f4325d92649167abb19e9b52f
46f3b3732d91728a8e69a93021983c31907e33610364437aa79e6b0f6e9e4dc8
8b125dc01f38d689011fbf6f6749a1d2f7a1892cadbdd89dfa3ad8c67b212362
b67920bdd4544eba300b5a7668b62669c181e157b99c9b2c25fc7c6d0752deb8
344946a9572c8a02f2ed9ef6d0fb5beceddf3076a39f0867863a6e739c4f936d
edb1995adee0ab54da1a65f00ad87376b5d68f519d7b7c5f9602a50b1e660ff7
9a6f64261c6e73c92b0686380c43bd005e724ef87ddac812cd360f0d6fb9aa17
04579ee9b3b09de1a49de2e7be0643aefb715ac0ba68e02f4d679bc96c3b6b9e
8abb7cb7bcfc92cde0b5210e523291025e4523fb4f7bff89cbd95c0bddaa2377
2abe028d883c845771e7b90a852ae41acbee769dd8a574955b8d35dcd75308e7
ad281ae2feb0077816f94756d3fa13a77ca7fdaabbd3c2e50b284c5b2d7581a9
9ddf74ba4b3a5b26d8e97dad9a15f6293fe98ed4ca071bbaef70eacbaabb45dc
2011f3dd6378b2b2e833b650046d9ac59f93806a66bee0d7411be175b479a1eb
bc32dad17fdbb02951ada24c30891a8b435171cb6c59b8406a86dce99c01a525
7d7d6babec521868f3d348a38b3aa1be8f1fecebafd976d20dc9d9b3064ac985
4134e42e20157f33df146f23446501893c38eea08cb270f6f04228dec8b0f065
fb922d7beae21746d7075ae3b9da4b097e2780d365039e24556c5e745c4d6a32
af97b25a0bec76966da71c28f4fcfffa15245bb6a9de2bc02d0451e60cff9700
652ced9260bcd5954f6a65fe5bd9d0abf5bb24e65634ac34afac2278d8b11bc8
7866632a16514954458474dc3adc825874255ee84d1a202baba3d242e73dcbf3
aa2252ebabab81d70cb3bdc0b3c3783885954f04d893a249d9ba9985d9013052
6afc36cc64a43097ab9a2d867fccea0a3fdb06f861bbdc59b0258fc7dec00330
f001231bbeb22feb744eb58df4d0707ee655dd15753da2c339783e339872e34a
66ed7ae683caafc5567a33391ede54810d975185414a81fd51f19d0e0a96736f
a5deeab1bdc82ba34969092011ab57d4d4885c913db690969723e58d46c5ef45
ac1930853200cd43d4c722b9218f2b08019bbc85196132105f7773c67aeaedca
9d35deaae10b4e3f72ad34e6efbc53271daee159c784176253d13458272607bd
ad80b5649f63c033d522412eaca9e98f1642dd9e4b671adc3a3bd2baec53d77c
8c15193b9dea093077bbc1218f86b9dbed65f8b4aeefc2c3034c689b8cbf2b98
9cc59d81b3d7fd2a8ada155b2a35621cada95f4940c8c027354833129fee2158
2c56710b82f21110cffbe40bad7d5ecb5d1edc6ac684fab37848ded73e8ae1f0
844a900635f5a33fbd472b0d5587c7ed2642ad6948ca07bd0be4b0ba8d6372ff
ac3408da5ca154f9367e3a2190abd43ec6800ba2d1f72e96434381cdc9abdbfe
623faf9c200db664b37990b700ae7fce4cd6561e2939f55f0e9ac6d841a2845a
9e4395cbb8e667de28c619649f8f5817ce36020b0d115636249f6b3b3788196b
e67e28c1c6c923a851e09cd21ee380e61d25e67dd1773f9d7b22177f9f1accfc
492cd1a1e921be65e455965a039df6a161147fd067ff6f3130cf1f08e5274575
59c61bb23152c913d367532da357e59802c22ac7cc8e0ee66526a6973d933051
4b4e2cf1bcf83e18bdacf89fbd39b8053290c8d5e609a8f702909634d9a033d1
70335ac778d0afd1efa0ca728e3fd7b9a0dbf149a1d2756618035b1b1f22e1f8
10720d9d7eea5760cb7e1a8f3a757115cae8b7c089f8ce160ae47f6db758bcb0
a6cdcbd187122447192aeb7b7492463aa820d9434055583c6c79bfc4bcfa1b0e
3c2ac462ef8d80660347df658c8c871c67ece2962b7c92ad41a97139065f54e3
1f4bfc66b343cc720ad055edf1c06accee3626e3919818a708ca58943fabf135
2ce0ff89caea006236ad3c39f071f8a4c818b0c74530204c1a60660cb816300a
e8f9863877271fcffd15765fc3928c9ffabc390a1634c3bd764a60128d85eb6c
2bc1f097fa61c96e84b15921bfbd6d97f8d8a5aa59b5581b41bab603657a67de
345e052e92915289973abef5f336470bc531a9f232aea2128231636e361d00ea
99e17f0e8b2afce2ca62772e112e2a1cdd6aeeeb1f8bbf2315d4c1654fffa212
d940209c8c7d5f24a9218093d732bc508f48e58b8c64214c120c159dad0fe81d
c25904c66294518e2f00614a9d36bea06cca71bb04bfe5076d01cade044da004
35dc4a1236fa10e4038b77f413e81887abcb494f31bc33aba301e0534f265683
53f5dbd5d40d0eb5e05d43e1a65bf59944b2706aee581f135c747848e137db50
0cafaadaf9599e2d8c8707c96819fe22e90a2682cf009708ff6a25dbc6500e43
83b33d75800e9004db7f1906e96eaa39b734979353087ca6217714f8fba761f0
4315f2adc10eb9d310b490646efda7dae51fdbdc4030895b60b2ad17c216c09a
ed1a8a37f24641b393d716f6d7398a4cbb0a7850b20ab39f6abc425e432ef3fe
d346a2940fafa88aaa7aad0df72ffc8be24f91c92d35a9a94b3f411f3d08c8fe
2d9a6d5c202742cdfc635ae5225923caf53ceaaae424171c1b5a22b668defa16
1075c16259182ea989535c333865f39bb5346a77b39a72f22581f420cce7f84e
dc0f83e1f6d5b685c087ac9b07e7d245d38b6fe66dbf8f9584d7946b5833f3f7
29555fc8313d588f4223956b21d805e3a49779e4782bc93c66dfce9fdf17b1b3
69f00dd51fe44c8941fc40c77de795d7b8f1685d1e3bda4769f78b66506a48ad
085092263b51e5b5c13bfc7e27281d7db75a1a95eef85af4281d9a151824857d
61dfaf4fdbd9cc8848c81d784b294b14c622c38cd166c0e16f08bf9efd7bff7a
4483da88c549a43adc2b6c6726bee40d8fedf2e3c811f314c6c4e2d52d59f726
ce98579d01ee63b6a49026ad788b5eae26bc469ec050c20a19a3ac59e70fa198
501f0ddf0f08b551f7a01c3972511ea7c7bf21d64a9b7483aa6364a1bb5da45f
cc2981ebe7ac1241f06127f657b68e09be463d3bf3dfbddbcdb65f66077fb91a
0124ab96ff0e2dee64bd44465ae02a305e69cd4e0743e19ca317efe27f8b9e84
0a8e4465a03d94fd8baed174cf249e7f0af49eea904ffef950e06a8a24d46e2a
27434db4cca9c1071a18e488692af94466fbcf9b34a7d7fa501d1c01345b1eb6
80f1a9c88f700f2aad63e0f2a6c4512d2c0218a9c2fd037c1219ab4931d2079a
7cbdc71514f3ed7df0c29a0b1bfaf49add41edda540a6349b7cf14c91c71f82d
0c08cc99f361201c9310b24f8cc0337bdf71cb7db1b051bb4c596097938b38ce
f41447c40a0a9c2a443715364232259f275d0f3811c6c8776e1dc4640dd1abbe
9b0b28030423e8d02fa48a10a54eac1db18846af56057b63b03393befa23e463
084db5818ed14c7fc711150d729c6c21ec7ebfffb964428719f7afae43e99431
fc7d83acb2f7ab8599acabef588323d5a58ed7d2e6d48940c7d2b3adb9b257eb
cafa1ec6f4146b422c4dc055ffbbabfdd09e29045dcb8eba9419d024601e8d8a
4bf6ee86f60916a4b69c01e42308095c9660dde8a4bb496787d988596aede095
70ab138d6ce0aa24bde23788cda1b54f3cbcdce13b501131da34f1b586518ca6
5825f2b8ec6b64ad2ffdde611e86eb388e3c150c27acdfe8e842ddbfd22b8e47
80281506c3ccb5ccd4b79567ba9d0df818f3d347ea47d263349503b1ad358a41
86754c9f34c2c6d82302052037aff3986b7309b434cdac08435fbcdbac1d919d
be09d0a9c3855ceccbfaf8583cff842d4d4a3b44cfbc1005588d9c27e55bd561
e8c0d982e7d1f40741e6db72fdacbd27df5f3903eec35d56b2180fff7ae7c02d
2426cd292fb7be7f9acf309c8618b8426cd1fe2d832b7b4a4abf03eace18c9cb
490461d06d2d2580768efba8c3aecfde72455fde0eeceb2b46ff7b1721b927aa
e4aa8dbe8d5cbd016b73ef6ca712c8094761292bc0fe740ecabe077307949b75
d1d5ce016389199c6b3647da6f807d74a1bd45f8080986997c6bbf646fa7f057
05eefe55ca2a681c45e7a4ee3eee10d0732e109511562b8e1aa7e17e7e0ddc77
4862bf1dbedc96bd5e2ccc46fde9e0faba7da0f008eb121c78ce75318ef5585c
9d039504b7ac69c710509ef9e35ba59a9bc927ab49cf3f68943b34d74240b672
7393b800493e17638b67a86416a3ef93c356d7c6f573ff66a3ff30fd667abcd4
f4a0290ae8e1b9dcfd808437d6a6f94f414d233973016212ba664f8b95fad26e
2c1e12474003e6cbcbfc31f95b92ff64c178bb4956549793ab76f1b09509c997
caba0843dc61a6abd1e9324587e4e2fa4720dbd238f838e9924448c77978fdfe
29c8075f648855edfd360a859c4c874279c50b51426a5f3f64c8e7970fcb9f0e
c96b5e2a73b03fc7898cdd8fe59ccd01811ce905e7c8aa5c8887ba01989dd2ab
ac58cdf19820e678e0a7d8be73e81b53e77749f3fb0f3e97b3bfc72c25cfda16
14e46f6b583e28131df66b6ca2e7c101c26c1cf87462cd50f46883849a3278f8
7b719d29654480834256adce9910828153a302cbebfb7eff088b8f2f293f4a7d
b8bb6ee0778b913dee5f92aed947642bfa5e7dcafe9f39436673e18f59de4016
30f584e724fa32c25c0c2b493776afd7061d031cd4309cd92e5adfd72dc5beb0
caae137bcf9492e56e8d48341f309f510209392e5199e95d640a957206689d16
e9544817d8483f5817922b4cb32b4ce02a6abe933891d6b949e0f91c467f6518
fab02012b5faba566fb8484e5c766212a140568ffe64795ca6379001b453eac3
819ac304af80f969a10cbd5f920d259b1c6b739dc0573be419cc35b5f0d03a05
52b5c45d83214d35356dc71d1de857399db01cd02f0320dfdd1f82ef750b14f1
f8c4ef3ad12df6c88dd21ef9c101cca336a60f529ec49af598c65c05344a70fd
90fa256fd5b2badb24f4c49ba887495694e7c01f1b7fc6d45e284bd3b4bbeb00
9a5d0df53c324b781517d75f64383d71baf380b3f95ebbf7508d0471c3576885
b052204d7e623d77dee9165d14e2a504734505ed0710833c0fa605f56d52f785
85a2977b97cb71fb9a4b12599f96b612b049a4e8dba446ce629802a5fa9d53ec
e7670a3aec5c93c477a5269100ccd4de02e36a607b642ece1cb243a72e32e213
0257dc2f81e2ec45a575d7092c0ab1c68f46ea165c7abb809ef925ae533975d7
68e4209dbc63d44813818e84849b0f3cb742a5716b735c379556617d3caf2c0d
94df8d823f5f742fce6a7859b6c585bf0ffc3a109ae29344a78bd0517463d473
0c51c66a12638512105c16db02c23d12fadc9c289f812fee6fa9d7f648feebb8
54162056104ed22545d1fb8b812931e937e5d6fa191ba0fca6ad7a7fa53f57c7
ae52c86d7c655c4230ce80e578942dc6d42adbca24db127104fa000d33fae335
c705eaeac544cd4cc7df5dd564b1c4d5058bfdcb6530276b14bd52e6a5716587
d8bee212f7caeea9874c536335672edadb7fe56a1b1b55f715b2452d83a6da01
fced413f635128c09502c4c29a644f2f21ea1586e244d8b76ec7eab5a53c16fd
423b1bbcaa4a3177295b9538327b54b5f4b3e834199bdbbcc17864a582e5d0d4
5dc6b5586c634a59615ecc27a79d685427f36a4d9af3858492079d274026c317
58ebdc8c29ff6e06d403808fe7eb5b815e79bf001529492f9453aab074cbd800
d81ff00c49d68522defb609456a156d88515bb21f2f5481eb33783369e1b9eaa
7400c7ea87e26cc2377a8e8a0b2c76ecd70380033617ac8fa6e484a6aadbf348
aac69ba301a2c9769b944b0515af964d2b50f8b750ac83078d3407d6768f19d0
fb31dd45abd57cceb0861b7d562ee2f07b330759f0182643fdb8d669070dc9c3
2c8a756883a65e6d2984bf96cae578b4ac5dc25c0e0693897fee94035be7ca6b
b995ffcf4544ce6a242a2e1f50e51766063de74012394e7596167f49b74f2f48
7ff9265b4b40b1c6f3064c2c8d85e716cb634e481944a87685017e3a74479acb
f9ae7670dc34955bab13d15d172568cce3f0bbe950b5f1c49c5178d820ff7ca6
1183e09f21f0284818d5896aca6c9ea87af1b209be11c25e34db3a5eb01a5a71
d1c926fc3202ee13d240f36a5f314d795d60dc04bb64a36c67fdb0fdedee818d
edf25a4c6f2d838aac74e3162a4ee8ec66250355b0c43369d278f1774b384962
c6baea16fac68fded9ec2b670b7c91e5ac4f7e3d0b92708d0dfba472c63bcca3
60dc5a47be9df1e266167f9be6d0b63833cc1b84cc83391d290222b2e192e5de
4809d4baba3b6a901c77a6fecd530ad4c6726fc97950f6750751ccd632b254d6
d7ef1e73a56c90f340c9d300ebfc1783aab6062ef2eda3d3b7f8ccb7c2750f0f
983f621fcdf514d67a79c4da45739f9c0cbfab4441c98dc2bd5a9248401db89a
41bb48e186c07f315dfd4f91fdc007bcc30888d7b34f309d00b5a238c395dfcd
90044314636ffae42b27e62ca69aacd424949a25625ad27c1db21cda9f0f8f66
15d002639fadcd67e7a3cf44b4f42349b1e56dbed8a34aadc64dd4afb9aec37a
144bc41bad40f83dae2dcfe09b025d56209a9f41007c887e3646575ef83446c3
3e2ea7614f29dd0f7cf6209a35561fa9148d5fb6ae421012b55d8b0c55fcd2e3
b9fd7636ebccba5c979b23d827cceb0e506e61ea324a7965f65b752d0c0a239e
5df1be731b704931580867eeff7b5d12f0ebcb3adb1c5c08cbd81e03282ac93c
14304dce18af04a1baae2bcb5b7b34eb62e42c913d88577e5926f1fabd568218
2416fcdc94972db6aa3d6a3e9685cdf9d339a4f817c8995a32ff514f99a849ab
278ac3c2f1998de21a8285e119b92a1a018fa961329bd332ec49153ab1e5783a
b004a7bfb2410bfdfcd06c49c15824b48ff24a08952fe1be5d48eb88df33d908
533c57b42d850f6d0ee86932c4d08b6d7d33c9bdb35e85482a0618cc4f7cd4c0
4f6d965dbfa89e3cd80f341d26a954e333d1141347e8589006291d1adc76b136
829c6bef9713ef6b90518fe9f28804a729175bf47031d53be1b2706f9fb35830
408bcf898086d2375025fb8c9c1db4063d422e7d54e08ff0ac763a64e0b5f203
53f9cde4777955bdd970c5254292623b77a90687c2e340eb8862a88278e186d1
33e2f06459b29420a313bff5b652867f357d3fdbb66e9f2ab36767d85c445a0f
daeca3f6c6750343f6a45f39563ab81b55c81caf077b367fdbee0351b263f159
172f56e0d29b62044b8c08f9247b10247a2e0a56ffa38c32a26dc739907f6a44
16921b3bc48ce4ed0b82185bc35a5b93c7d02f82034f84e15539df750040b110
84f196ed12fbd658956e9bc1fd71d73b1805eb189e0540c87d0ae863bd06ce84
3d1e118670295a2536c8e9a2a347ec5627fe5326bb44acbf105e5f7cbf8e6d84
253f66b28a2f6fba4601a9f6f4efc31d1a11aee169ac2b9745da3b2eeb3b250d
693a8d9e78b866d6d8231eb33629d29a5c49204b66a15e7be5ae232fa6f1ca27
aab8e2904199998fe81e20fc269785eed0e04708284b111aa57612b812d84a31
81d89f05ca2facaff50d98948196afdb09b77d53f713ca0a5a76b93ad6e2485e
d7f7a1736078c48a2c4967bdaae888b1c8283529a89a8d63b9b300d48f86e8dc
858dc967801c0b6b7f80ee0a70bd3629de96644e1e9147ecaa5ee2a7427f08b7
227f80054c147f00a5aa89b87e14e8685b8af0f3b6f27b3789c7a0e9d7a758ec
bac9e9a43aa9247816950119c4e9677353a3366cbc08ccc511e6d65639a0d592
a79121e300b257910f6015151de16c3bff4d03a0c8e159470a2e95f26d86fd39
107e2b7c97eb4c9e23137dd4e1769f145aa60337be7a5057bf5537de6312a558
71a6c690fa5c1a016a96ccde11e5d0dbae9fa9023d6e01fc0ddddf3bd8c67b09
e261eecf8c9c67f71a30cd43072bc3f8171d85691a427b965aa8e8f3026fb4b8
28aa0d5cebfde06a4ffb1156e3b8e1d4d7753529ac03ef604e1fb0148b1a1470
e58f27306c38e7fcf9d72df6e53ed2abaea3f9b5d7faa6452bc989460e69df96
8bdebd9b8d8804dd31b5b00327e3db3fb891538d08452c1870d397d87c071e4e
4b63de1a457b21bef0006ddb341ad9798a11149c3796f20834812359d3544520
4f82309e2d98738c957f5788a1df2e033233535146eb66377f18d32d3aa2b9ab
cf6212d226e1c41a36e5c66e801bbeee876bb26fdcdd38af6df3c770e6f61079
01fe938b6f4e283c3bf17e9354f0455353228c286788c5f12b8136a00b0ecc0c
b071304cdde928cef57f416a6b3c2cc1406b661b9bd4ae2be250213a42f07234
b5dc47c4b8b5e82fb297e8369a62b80095124329b8dad63578e70c8ae3f8ffa0
b8868b8acafe42eed925da36c4f5489919e8930bc0157607827eb08034f20412
f37eda0e26d5a8b6dbdc397390496b391df00e54720878a1f4c21c25e528be38
d31138bc5f53f6f94d4f739c8c1579355b01f3a9af28f64b768cbce6e148f4e7
d4d48aa21193a1da83281cc6720725d180d27dc7c9eb9c569c95f1c28d46d695
80f376aa3411dd901b3fb65764d44d397fe6ee13c39911913c4e1333ad290928
24e558efb902ccd111f0f2635735106f3900dd033fd0ccc7c3e5327d98cccedd
aadd48d646ffca03ca522e4b8640636ac98b2c711459623d50faa8565daebd45
227a4465a61b04532c1b0b00755e4eedab00ec29a7ae4fb241c4604d1aac17d6
160c53b1ff0eb316c5dc06ac72422c6df62a80a167719794b1b181f7c28765a9
b8f113142fb0a1356ca11ce8907f7a110cf27a7d801136b5bd8e84b41bed21df
d3a45415173f09f77890a86864d6ec7c5d521e6fe0b56e93532fb85a87153096
ec6f6c0348ce5a238284cb15b9595f5ea40f74472268281af89e06d4bcb3c077
62bb87e0d5aaee222285502d0aaaee030d0d4533b8148a37352983dac9d2acce
ee394e5f16f8a8fbbb06b0e64731c2a0aff294e48bde75abe5b00b062673d93c
2c1b72d9899690726f8a9f7f27643d013442df3ec4532eb1cb27f91ed07bfe36
c92759ab7b5a015a181837d90975e8e9627ad95045520e28fa26ff21ec4a589f
ad9b99a114400f11059ca863a9fb7554f6ea5d21ca3de604330f502c7edca838
01dd6660ee4c9458ef33a4413cee04de11fa2ef9c13980361680070986db1b7e
de7b6581b39b70aa03cade52892e90540885495622fdb167375f82ab9edb02b0
13c4a8320b6981b30d13e7989083d04da43e181fb995295cca92ce5324ded1b2
315dd35609e52309f6cdd7c1a93ac268414119c8ee66d8b5688d698b043be27c
ed22a5d7323ba0efeb0190517c6245ab6ec77490e8a04b09c8b486ad1d5ff1cd
d0bd2c01f5dfcefbd7d11acd7e662b85d839460f59b021a90c7b85ac7669675a
894261807e15bea671798894ff29e58f6fd53ed10bfb9b4b2dffbe6d2c351ff9
f1ec3017ca39461bff3e117c3d5f839e8ad4192fd3b2139cb7452ed327f3f417
ebde3d65a49369d8e4a37eb7413e57fb0264f68301556aec9b1e096388c87bcb
3f95ccdf396309372c0e5b8e27bcc40c1e5026a319492a0b1e09d0941142f756
30cfbc0fa1d5a584017ea881c9fb6379e4cc24e58ddf6bde57049d0646b232e8
58c9abc64adb5984e991ed403f4a9cffda576e7c9c27625cbff1004d3d0b4fb9
152ebdba8f85197f4611ef53f818a4e08a6f87dc49a26e5203e75ceebbb3fa22
464c42ff95f5487a0241bf973417518129fa022335d7d7866af6d04e351ea5b9
312a7da277c0b7565e615e61b53ebac80cffd1a9400ad175eb29a237ca95277f
09023e90e97b28e33269caec3a3daa3bd088785bb8f1a5e3c33421e848f516e5
b416479e6fa35b0bc7a1650766b7047b08ba2708443d7d3c3e71fd59b428d024
8eeed44874d60f008b309068695046bb500841d7c8793f715e46884d5dd52b06
cb9fbee498cae5a26f572bc4b9d1ad484e60f1d46dd71c96a9dd6d01dd31fd1e
49dd76be9a920c07e40ef5452b5f9bdef2df5220f9bd83e1d5064743e68cd746
9386335cf8ec8e46d15c29cfc203e9a15cc6108f6057febf9bf20bb9c6cf2851
e7e3884db1761414e54c169b18e15226590c180cfd17cd9abc354902ad2741b0
8fdd2faca5bebe0f71b7a0e9f70a777eec0c313e7e047e4012beff69db59e781
dce78886933e1611da9eb9e7a463ac9f81743f1d6312eb56fa294793aeecca92
a25ff9d079534977ad2f7d900ed925a4fea58b5a4facec9790b34cbde58e3eec
f5fe688c79ad82e0edf4e106253a39031f1ce7b1edcce67798576a6592542258
6a46d01f66b12114628bf55d269d32d32651a89934465af7a44c077d1cc435ee
ccf1d4fac428d08bc3253d911105d3838ba32e2cd6e7b4d42190334e45ba2892
bd78c8ed0dd19759616cfa276282b1a84994b3559614273d1097f50d618b9cd8
bc0a7aa89ea00590c8837df472a651fd8fdde5d31f2637bcc6a589c416045ee3
8175b844baa662fad60871adc7a6afc58e03ff3e2f2aa91b1aca2bd4e9b810a1
0e55d3c59756f94e8865fa40ee576ec64d212596ababb7bcc6fc066971bdfacf
e5ba6a1f394befcef999ae73ec846a24fb8db2be70579fa600b23b2fe2a3e86c
c4d2b100506d2f1a1a51d7cb134f769c7299eded1da0e6bd9a51f843951d45a0
62ac0acd664a2543083bf7414a45991e863357c25fad2a9637ab5a1d1306405a
de603291e770657b58112eb9bd8bd8d00321f606f5eed8bd76fa4a7a276c92cb
8f4a4799c9603b23633f3e41614bf1c0a74243ae85d77596378514bca1d99d68
3e1dbf9402210b8bdfb07aa49be6d858cd8f489501293714b0aea90b232c70a5
0e6588700b599fe2e604b1a0454dcc8a820013c3088462652a2c5b6f07473220
5d8f466d2051cad1c12d762573de75379cc95eaa42f1df111c7ef455a02fba1b
6ea2a61c089bb581facc1a5aadc8c59486de5167970516b2080a0f272cfb9d51
d801f5794d41cc61a9a57011f046535622610521c9d584df33e5b7fa4def8eeb
d4eb41b59105ce95b8719a1a050e3871e9c8beda033bfe81a7d2498f3de90f80
dd88c068693f7b02dd4a9c9050fe180dcabb3d4e5890c53985be30d3865d3487
639773da782249aa8e3d63ee18ddc6c9bdff59f1393b92f65040352b4c02f066
225cee095a1d140d36daaa278ec174d9b728467cf0cd069c1b5d28cb23233b74
f97ad029eb0e8668cf1c17e1dec7c56edab614fed8dfa06c8b4173ac0191b9cb
9431cba9781b01d69d2be8833b9d231baaa2812f0c31a75a7e6ed7eafdd50596
f1d10638af0963e5269c9165b4591dd57c035b41c7d82c1c8cad6c737699ef98
6a171dcac306cdbeb24b6c104be772c8a04227f8683c5fcee8383ea53e139582
fd0ba1c2d721770f42b5fb201b29f2886d599770a9cd922dcc41987b41a5512f
69f3f8b205496d9c73bc7aaf8b08fc9b6eb09dc706b85ac49b60634c27b07be9
963c4f3efdf4329ffbbd704bfa8215da12cc788788357cdb0a9abf94d957e3c6
706d65aa5a6c35d8b03e1822b1ac536f6f97ba658c3f7abfb2293fdfa59f703a
200c90413d89c1032509a11cb9b231c32fcad37ff1e7e51434d82d9ae359a8e6
02331d6788b285748d22807c7a337196d938abf4edc678d7ba31eb27d4071717
c41f95f6da2d27c85d49f8a0f12c2a70099c9a48c4a3cf3c3f8b0dbbcf809b32
3632ce807db8660456b5a1bda4f37148aa617b4174ac08c2b73ecd42808866e2
b2ef1ec0a71f2abfd06a6af9e9f84417383b5edc4ccebc5af8e2dd6e070b0c16
cbafb42a8c9f24cdf5ab4f5b14b8878ece15a7573b632c3f93dc3193daf1d781
69df0cdc76203dd12adb6f9432d6a2ecf925cfe24441a985d3c5b4b51a61d750
51e8db109d8e170b1ffdc800c4426c26145bb0a44930282a5cf28d6ce0e35041
164f415f6ee6a9de59034b7b4145d1392621d15564ca603a233d0473e078001b
c7da68c590613591b45c76c663b791f51f1469eaf552afb615fcd0595172ee6b
d326cd7c48095db9a047f026faa3ebf77a75ad056ac88189831df203f5fbb859
87cf34944d23b1686ab0d4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueXX 5000790 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685940729e6e22f4be0e08c6505cba868f7950
93f556b64b808dd710eb936d3ac83e5783b5f7e56d363a59a026a5619a357d21
c4e77bea121eb24b09027d1aad93158edf912940e91cd2f17922b35885894644
7773730bb19af9e70453e1b78d5edc123b273a979891d6d5e624f4a388f3897e
13b045e34b4ee2f5e4fc5e996d3549640010c671de14d18b0b3cd300e57dac03
22e59bfbf7b29422230870f5897fcfaad4b50c7c1c58edcd119218163d6f6e56
25ccb882db7b6d09a1586508e8cb642a11c29a46915e4a96e282079cb21922c1
c2e360b487a45302fd22ec8c5fab63e54b5e844d4b17ca2fff37c69c366dd72a
d02922c14c0932f65ed03e4219c117962edbad2dcdeaa9c10ce8af38a4ae52e2
b377245b0be19a77d6c936e7530cc4d0b78d0cc4a92698fa2870fa54f2d8503e
2d17b3d52fb2febb09f2b2af0c2a1892039ebe19a690098799a858e3d39631bd
6925a154d161df3918074ada6bd52baddd0adc3f07e2d9f15e27cbf7fe8b98c4
07205c811121fa91e059f2f99322fed63f359ac9da97aec383f067f23e5de331
51e80f0a88ab50fe8fdae4a5de93c1ae2fdca06150b37246140c0e87cb2325a6
0d2349162ae3ac93144eee1e665a1289105318fdfe86b6e76251cb25adc967d3
d0b97fe5e279e1161736ab22b4ca510b964342383a840defd38f96a7280e6ac1
34e48d740607ff2e7804164a16d47735864db847c97335e6d4215cb99911a1ec
015a3edaac1f28fedd56d2467130d07bae9416c15f0827d27c6c79f59054282a
418c12c157c91223a829947f47592f7cafd93ca182b25a73a9419127e3b12a9e
5167ac3963f2b019b338ac46d63880f94dda4b538835884d2a5538c85528d6bd
977f844d32b43b0e48caed5a4bdabcefe71695d69ca784df9e0534b6b46e66a0
cf2fff3b9f9ebc955ffcb67277f7810ca1ba5be246c53a4cb97684ead524ba2e
3f16e73e8bfae82c35c6cf8675e01b9f4001e0919583538809b4f08f241c0f8b
8cd97518b733bf907e314b14b8bf192b462d5767efa68460b3b18692bae2b231
e53b068d269d4bc957754daa09e8b5a6f619e69dd73c989bfebb39ecc762e2d2
c29652b88b8ee44d20a31a6d4e276ec08e67101c94c804ccfee7661ded6912d9
332fdd5e8cbd8899f9b2380e5d0117bf8a4d0e6b69b5e55f891c4051e1505ca0
94b760d9a600697143d23fae65c6631792d7d329027dc9669757a259baeb5541
ffa46c74928f95333a82e0d65138743698b755fb579e01d7d148666460f0b19c
e62f85bcd780acdc50c6ddea9a099a14a81192d316ec0cd76de2ca35fad8c81e
fe546dd00cd7fd3c55be2786264778464b3071cc3e6b9581e630aaf3ec5cb4fe
c4b810cf98aa42eee5aff85a313520b001344a29e75671d8a2f17cdbe45733ef
c961a73f6aae95f1d7817aee87131653664808067b1f521d7bf3ae05d4b4b6f8
42a69ace3667d322a1784cc0c71a692a5248db47c61d90a0d634233053f6e10b
1159c39d5618fd3023b06bd432187c3a820eab125e31f825f143044f83d5a534
95146a4551dcbfc89ac4274aefbb7de9c826447005f41c0da5d1e9ed3bead775
ee7fbc0c84c250783e716f9321cafe63e83367734aa648d589528e2eb472af83
5aa9997bae6c4df5305f33b88077e20636271b5fdd5175588256a871702b23e1
831bd2f24eb25590d17f225d78e2da86197700185a135f79f1b876ec436015e5
6d00e53170629481addc9532cecc40eb964c0f3994e7b771933449233845d6b4
f2230c4eb1ca7ba46222b5ca13968c005e7832a0ac561604f871a9ab00ed74e6
9f3f0628037b533b1620101716cf7fada166362f873bab8734e70bd0dfcb5323
bd33ecf2d6ad5fdd9f00dc8609c79115ee7dba32dc6f0221c9131d66d542cc60
53ae6c74328c1dadf35d44f13a86c7520b34455458f5dc2a614a14553e9da539
81c47b22acac7cb00d66b01b5b8fa79a96a2e15b225b7f23cd96317cd288aa19
c4b4f35072a627f57a4289cffc003a56030e207baa63e51ecb4fc5ff676680ab
7bd2a749c5718b42fe7c5a34ad99679e76bddbf301b19c43ff08eaebd0c5a015
82a8748a4d798a0bbacbe3e4b0995dc9a6a9f6dca958a37b77cb9f57c3e4fc65
c1e24f38c4f52d7dba1e1ee23f081c3f5b4e6f06bd899b511b31cda3ca8f8ac5
dbec40456ecf25e9742312c48833ebe7fc29e998c61266527680d25ff1c1f09b
726635b9f12c00f240b693a1e07346d333de37c660bd36fe00913c4a7e876494
e8e38aa8fcb42e3732e74b4c6826af5038daf986ec68823acb95f727beb80f5b
148b56e37844d1b560a7c4357c2cf495653be25fbb3a236f15df847586bb2c05
794ea5a975aebf7c208fb1decdfb7f930adccbab537248856e5ee7658f00b30e
50ee48ec8b587a2ffbfecfc6cba48a9af33a362e9b4fb9730a3e587216c08ac8
e5c90ea88e917a6d29a361dd7ba94313041cb1eced69a2351278ea4c71d4da5f
ca65590376e7fff4d621d39c06c541c94144e3b6fee2aeca7cfcc3aad469428f
5996038704cb97185ee203450958cba23290c0b3d1b556d40d790cf2ee57e4dc
7928011af03dfa442d5df5e57e0c77c08c3d56980bbb4f418be451f244e29a23
930759743c9998c94ef8797f6197cd0bbac6f19135ed7c976c9914d441ef65cf
e03eac53b7e0272fe54a8fbc5699b45998c86717dbf121dd62cb7a8a05885802
c045ef8e809f0804f50d8f2fe4d6da846f772d00489f2283dd53f4bea2c5205e
2cafbea1338c30d46755f541c92483b8f8e92317ff63baea7432111633525a23
d42d1255bc02697ba7a87a1eb9abfdb366e25ebe1a6eb021d281d83b69e8390b
44cfba7075e77e45ba9dbdce24db97c6646952ed496a651756b5e180f5029477
1b0bde1432bff9534387b05f5e551bfd8a262d04f6d785b82ae8cd0bff01586c
d1c6901c8af6275f89f4316d11a35709a2ae79d870a38f62053ef7a8a08d5672
ad198a8ede6316aa7240c747d035c85481f166d94099981128ecb1720aed0b61
130163364384558456ec23dbe3a158d10a19a7fd8fe2da2ef13eb724d5b50a7f
4e4ae0c681f23103e6e8d738e83276e15e7422f0f844833745340c2a040bd6eb
952c987a50dfa7db0d1cc9bfa2385f2b30d09c026c0775ac005159b9d82a2ab6
e2e4f2917e69ad8ba5ba4d45af5d1c2f98b59778f9af9214cf956c324225194b
d46e04144e971d67b1b8d8f7f7e3ca9e7f1fe493d3fb8a167ebc9f439e45337a
2228a68fdf3961f2bb9523cc078fc5908bd87d0696d7a406785cb1ce61eed61b
4070500e53143b6e0d18dfe693f863378e13ee700f23d37451ecad1b74f37052
881167554e62e20aa19d69e4cd44c97a5ca01fc851aec425659c545aac108101
a7079a41190d6ce7bb8c97aa60da0beed09e0aba1b2c07e1aa717481e07e361a
0f63cf8659924bf379b129ad7eb31f76d9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueXX 5000828 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3ffd20326947b1065649b533eb5e9e3
a88a87fe987918a687950b26f647d6e08bf14d983ed1d4a8ca1e2da8d985f944
2eb916f5b6ed0697ac7c33e1e36a3bf460d34ce45f1631871097cb04f18e3889
4cf4ac1538eb19481311d24fe3be7beaa4a3730e8b4831fe59d6d9ce2e46116b
629c7ba2f9ce3ecba2f43bc162a5a077ca1b2882a42afdcec3f4b75b5d63e0bc
8e5dc95257766d8ea467ad9cbaf47be60f797580cced6884b3a68f70c91f4fdf
80fd00ed9139e7f480dc3a76af72ad9b434187730bdfaefe4cbfe5c7edcaaf24
9204fd703011932e5a3c27be468b7dab69daa18dbbb6335ab8ddfdc607961c7c
02582763fa069d43563ba17704029945cf42fcb19cf78c51df0ec4d851086d43
c1ab38e865ef36865fff3a08b01cbcb070ba4893f7482dc7819ad03d337e520e
7d8cd83bb8ac7aff4df36751f4f12aaaea2b6d7260c09a26e987c904003e0723
7dbcc4a8e4e85cd3259f40d3caf55c742cbb40ad0db1044c20a4f122a63f7b81
1d945bfa69662189ce4d089464d2ead9f6ed60b581b04114d5d45e97be27a576
35154e9b8464f2a0df18da855eb51b8f64d3054b0b2e84621f025a0776d16fed
b988a43d2d64c32768dd106b9f541ae8e68ac0bb7399e16f4d4ba074b2152d0a
4e9b5bfc21bfa0d531e28165e518ffc054dd4ed0d74eca079d20e79670419f92
e03bcbfeecf3554d661596f6f29e12170804d15a250d917ffe7a8b6e8fa53047
1ed97ba56481589a65ca13619129f1e26affe6c22f0c38540f8ce37efb6e9e9b
60b51a5a9cb4454fd7c7f92f2f9437159687ab590f35b946a54491a7739c9269
e0f1fb48b129811c82edb3171cbd5105fe65906974db8a7da92f4f43dc7f6b36
6981146d86d23613a0b38d9d6191db9fea0172e982cb1cc50e382f69da1b377c
1be9407f88a2a761b56f398467a057f35d18c01cc377e006182c891ec80272e2
2e3a5c7123cd27eccdc87392a9fdf63bb40f02b7649cfc53ef933c6518744cb8
9cbbd437830ef5b1d58b00b67bbcf4426dc1e6ef583b0b4ad3aebd741e3ff0f7
29ae271f032019b1e7268043fd215be590f9cf24da14a90f1683afcba8006cef
5d5632c2481fbc1bd8224e8952debb7c4596a237e5505ac143180956ca1f603e
ec70cdb4a33e1c4ca1744adb40f9743167002abeff7b379d91065e5fbe232b2b
9b67fc2ba118438a603a1610d891e6d1911c604853d1e26de7640cb94b16482b
2fd8e1a0375f6cb08e9a695d433472363f5d7fbad693ad55f1d27fc4d52c0b86
c1f2f7856526af7cc8f32cc1ec116bef862215d4d5bae2dc2b015d4111288b07
48b26c9618bc18ebafef36b9ad3884e5daded46cfd1d7f6c7d08d810e4f829a1
bc025167407f5261a860602f77fc56f2e13df7c88ebe4727a431ea008e318314
0ec441b5c2fd8b864ac97aa9df798984edc75f4139f3384c2a61b30d528b7e7f
c7255291d59c92bab3c311181ba3d86a4a2f2f27d41ee511f51c8531e332f091
4797574174b51b73d97e0dc3a5bae1f6fb1d17011223305640ad673fb7af1912
bc5ed2eafe3000e1415184f76716a39896edde3a82366645e0857318989f5cad
89c3c99606ee7500d596f4e22fd06e7635fe5d9515db820d0e2ef465a5af3a64
6932e9d7135ce8a9170f84fc81e3b5a10d27ac54a355fb07cbb7daf78d774e47
e81d3d42409fb72b9891c24f3fc7ef30e8d79b5d2d0697e3d89b7e51c025e506
9c67910b1c6eab5016a966e59d0577ed233aa4fde5169e342c3a150a349dd66f
aa1ec433d50d03e7585ebcae761d9db10e19e50772e58bdf2d4ba82050ef7b30
cd7fafc72414090dea5e2f4a8f52f1e123e3c273ef0d7966ac9714c2d6d521e9
a481b2b5082482fa7720bfeeb9dba383806a3e01561c353916741cf92ccfa78f
77b330edb678bfa4179e865f887b5b94c09de65457c7625f737946cec3feee19
ce4bfe4d4f961c073e4412b27607b7868198886ff3cf980657ae9469e3d51979
0e072b89e38e8b93cc277815b9ff1c37818157d0a27478fb7d65b9192da34b8c
c2db05b0c6ea29fea7f44eafbc726889e0abaa5c28dfaa4e81d24cc38d771a57
b71a987479100ae7027030793f4b2534b0eb93b1a59c8a6627c1826f3d5df97a
e9db0ffe4fb79e2176e88412f1a633a438b60495c71b1165665a562b0ae0369e
64ef825a2487f09acc5c2dcf78d9e5a388e2982c90e1c260ad37ff230ff40898
d3158a8b984f898e0a19a3fff89d0ad22e48fa916faca2e9f0cdf72733952e76
fb8a6b6bd98a17bc9af57aedf9f739fe136d3a6f25b1f0f193e521e144122728
f37ff35f47a6be327fbbad46b6eb8c9dfec6b0bd10e269eb7aa0d549a408301a
4ddd7a18057aa80a176cee06d8607fbdcb89a82c171fc531e6909e4cb8efb5de
2e1965a84ce35165cc2487dadb1fe2c775462d64f4bd0cad4c1c85d7bc89eb37
67d53f023febf3344209f12abda2e986b4542d6d026bd70e2b593dd08f78cd73
38012d0993d2f6339c213c7623985ea98536bc4ca52023370857f9b5b4765198
5b8017b94e8f56f383476ddfd7073d463016967e7ece6c013b403b671624ccf0
1b92f1614652b87e909e5af144cd0391d9e64aeced306a09e22d471e23080399
10d10632c67501838216eda80308a5c132f33615551ebd9bfd19506fdd23de2c
2d34c9f62ce8f7e45f6087ae42ea7809d505dc569b963726a011db5010a88c0a
dca1757f63841db9e33df4073e7f31c472820df4fa10efa5ee77d18d6c3ecd09
e2233977a9e4d3a536bb600d65303ac5455214164d10dd13f83f2538b21426b7
9668ff60868dc9d7164c083d3e628ebeca4d218d2bb32c29cc186a9ba62b59cd
a8b16f2e34b342ed22552074a07e69cd487b1d7c8bdd1284d5a1fb4eb897b635
7e1d82bd928d5a868996870f51b0f3b51678832db8763c93d804287b5383404a
c6704f1456369e29ce18a8a89394964993a525908c205213edd040dae7817e00
4f09bc4ad1f9cb8e6629ebe677700df728284aac2afe9a7bdde272a51a2f51d3
c28e517527887e83c5e8581f5a009b749a7e461abc46f9a2cf20f4c2c5a40482
23dc2bd97e9632f7590a90efb00856f89e18f540c3e558c152a911ced11fd482
c021b0b0cc1df42e37602665a8e2b8d9ef20a6671cd12aa728674d502f53331a
278aa747c6bbfc020c086195cb330d1a6947fc79394022643f04baaf37d2944a
b0b907f07ef1242bdc8248b684054d239ee4f22081c4b98bcd725e64ebdb1f3f
f73ccc42b7321ba3a78d3f5e1c1ce9114c9bc59afd587456b2934c8896c2cb94
d687cc70ecfb217afda20ecc9703860415fdd818b1c9f05182efb2d82797b0fc
c55aa34de3712eb1fbdaa9d2fe73f752bda578872bcf6c1f6e4c733943bb0526
2d5ac95bd2cb709b6ff688728a6017c782d90473461084ec8b08e11a3732ed81
06ad70acf758ad8f44cee357e878458131dba5814d31cd0fa02ca2808786bf94
5362659c86245e679d7c359c75b02ff6c7f4a6859629ce6a60d87c9e41dbf28d
3e9532192801574e9aab22b1ab23604887462b8bd165325b1b20f519317e7ea8
1a1ecc2d82b865e990f8310fad7ce0a845576e1acc6f2dfa3caf0e8b84a186e8
d472425aaaf1a1f73264c5e1b1c213b98ba4d4181ccc18fb9d159a5769e52f64
31af411e37f7ab6047d4157bc246dcd04276922bd19059607e74f83c1504b535
111293bd99defbeff22ebaf036b02803fab64707e21ce0d9d566d4ea56988abd
ab72a9d764152900d7c6acb39a44eb53a501b8ffe6b4e0043a1563a22cabbe7e
32ab3786ecadd24749b036375e1416ba73e59b4237eca95ccded4b56f159c2d4
ff7042c9dd81436a73ac4eedbcaac978a7f969e01baa1ea6e1a0a2b0b5debfb8
af8519882354b38579a88fc63d518ed326aca8ab2f2b18a0593c2d9bb0d426a0
934ebc48ecee45b0dbd4fd259ab757624a00f0af09a4e0df627d1ca3a445f6cb
f6cdeab44a00eb3763c8942315fd1ec825a675de15c93e29010b5adcffd22543
91002c1940811e4cb19e54abbd20583d38f56bb58ae03b6589c2bbc83bdcf330
f03309f5378b263a76fa46a9d460699d1829379f4efef1a8d2bdcd6108cd8876
74c90166ccb8a4502cf9d5fd46e53e3440ef8eb77ae0927e7a691997bbd064b0
99f9380c7380f1214dfa88a1328107838e1c1d13d9e569564a759654a4229898
82eb35e4396b4e360f87b54677e987cfa6f9067ad7a2751714df2a45068d1386
3ed6ecab59fa4f07696e43b56a56e4e880e1f194df8e942ad06ae2da4d989c70
f24d5e55fbd318fe9948a5c4f3ffa127bae85a55b42f86867cf6ef0c22da2238
767361124f38cb5f7c64df32723c9f00a98b30a750881c28c0d88ef4a9f856e5
499936de6bcf139c74b71a69bb295df65b7ec59560beb3290f9b8c6a0fad7dfc
dcedd3e44012b24956cf5228e07d1e11cfab3bed47090276a34bf2d0288e7fe3
75f978a90991a8d585a0361d1be7a6c3663acae131e6a4ea38e7603f6738910d
5c9bb122cc0fc80f2f26126ef6c87722977c7f12c46bc2bfc1d1afede8fb49c4
bf24b55058208c2a09768fc0fb7810354fed9274dec3bdd0b6eb8814750b8635
5805329dc03cabde46c973f276a74d890c8a56936f909819e0385f93bf8c047d
28f45a322576463ba66b550b15e5955d33525dc3eed1c229efd1e6b6589eeeec
0dff0412f9d0144273bf9c06b5d55bcb6170d712d6017a139773e37b54010bf9
e4ea1867b61179537122a05055e8e30d5a1b88dcf541032112ce0a20df0d8ecd
1b3b16a488f54ee13f00b09449f6fcbe392b61b8097b1b8cfab3251cef2dbe55
20e6a5899f788821a00e27f53fda5978bb846fd7746b7c2e4e1abf2d5e26c2d8
aca0e56c2985031cb6d2e6274463f98b69e9261806dbaf1a26a14d83b702e421
adec74ac53a920052a0739cf93b4723a51ad6cd017c9e1426e8badea69ec512b
4389f804395d79cacb15ab1680b9f6bcfb40338d88cf59c28e219014c716b540
f713eb2fd6963690a3ff67b16390c602b9c378d643c94b0e489ff797b68d1000
b81ea08b19122aa21ee70e11c30199c14065c665e56eeeee9e802d4eefc84a94
46ea28ff387c7c524a397d10d67cb7fa5433fb87e1dde477dbf58b941eb3f917
b72cf02aa75f3dce10fc0a00f38f713c762cae1f4abd61f101bd75d0c26f9101
56edc63db49bc0c06829d0afbaa7cec4d2dadaac75fbad81286f7b29f545fc70
e3c901de23243037ea883c6e98f84f7e4c4553243bcdbdd9d21dcf9f4b842a0d
bbc62850c3b0202e3fb61a12bd1e93fc055c2b554a2d70a65c5a4b1f891204a1
5339fb1f8258b408d0a46c88cedc3e6befd367025e1311264668386347aa9c87
b1d783b2d6af8d25e0a17c7c7f4efb424db3ef03cb859139b0ec0a84f0e52f4a
12da887d051a27f1781ccdf279ad5aac7303224719c95d58ffecca261d05e2a7
a401402ab9b2a5f9be2af5f5d77348fce6cee9caf0f5e8a6a861a3d0a550e290
70945f85e741800c0fe1fa8bc3bf5b01c74e879ed81172e38daae1a4e939f60b
48a942a3bec084b109cc2d477a8e2e5484baaedcba27940c7571b0714e9fecb0
105a6103dfc872facf2cceabc6098670c31ee38faeddd6aae50dae3c14cda663
9b05a271d2080bb1045802ecd2d326cef36cfcb14f197fcaabccfffeabb15fc1
cd3a586174cb40732b47bd92bcdbac1a59fe38c8deaf2fdda814612d3a7479df
fc522c1b5cdd6d3dbf36685d8c6406bec74384012652b9ada057a22fadb37c02
2b1811d6ea194231cf53fd9eba9556b858e34d91f66b2b6adb67a20e06c14a2e
46fedb128581f3f44e7607b657af7ea1ffadb8a2159e6b3a5633c6e17a50603d
d2beae5089f1d75ea921d0746bc2affd07084add1c68349afa0afb37c6f6a474
2ace0fa14a490736acd18c4375bdab4d82a5d465f56f78bd01d386c45a9762c1
57702e05c58d9f0fb4bda9488da009896702cf0fb2803d204788886f0a5944c8
e017f513c8962a70aa6c5d6308f0cd7ec84430afbe95252af8b96b72ad136919
2a37c2750f72ac486744bf82003639826c688aed83a3d4816c4735e9314698fd
03ad55e838bc595b75c503f25f1daf4a962ece9c8f8fc07f58e231ebe95eee24
a91a15b033afb4530c5edfc97e62a950e1bf076ab09dcc1e9f2cd9dc1e3c8c64
93ed69729b118df905d1afca92e2c0a528da6f21a70546301d89a95f819c77c2
63e715afa1a18cd2b65b35075c5af753e4612e07373b33cbf7acdcbbab553793
05720164f25ba948bfd348dd4fc395d0a1dadbfb0a28a2b1a62d590deb697236
e56dfb5ff326410d100b2f30a5313bf6125339b01e739b77998d72802497ddcf
ae15be0173390e864bc8db96761abcf90f4a4d70e0930ba56f0e3ba7b911f981
04a6352d8fea0db8b3cde28295cb62563681984d222126b2a2a643d67885b410
79566ca417aafde4111c27c5194a35c845085cdda881120644db2321068706f6
f57049662c5c2aa6727385a97f3285215ca75f5427720ec2d16c15ce35aa59b1
d30aed4eb4d6f02a9602e5cd7cb9cc2f2c0d09ce3b828566bc3bac23277e2e17
f022ba5744a982660d04d0c3138316bdcf82f35f7e0a2a72a1b06fc9d116eee1
fab9803582d7375bc3824dd7f94c14b1ec2ee7a2c199cc684edf4382c8c81893
0bd3ce8e39597ef44ab95c931568976413ba0e3a2d0805ea394303692799999d
5306be5f725bff0b22b69b411b66c2b6794bc8560b649929fa75e26c911dd383
be23aae2768eac1bde142bb132d0df1aa7d6d68235d3a780f162c3d5a88e3448
30a3111ccc3859f8d7f556d3d2de9120b01f01df879cb9141ecfbfbb4a762044
332feca24bfa319c100c435f6401d2813b0a4da0e00c68cab522f4fb65bf8b49
12f2cac185bc7fc7ba4b1f4dc9b319473c9263ecb02ba3ecb2bb63bdcb26fd69
27ee7ac3146127cefb0985c57e3ab67dae9ea22dd28e2c98a64367b2c278fef3
1d3a482c28136a1d828b8451b58f7f0b75f8296707df854d2a66b20c2d0bfd48
34fc41f7d902c09b7b5d551fb7f42e89ee8d6459e2ce84e54aacc575d7110931
f68c42e5697b8b1ea9d29aa02b834222a34a7906deafc77ceee6afd9dbd0d9a3
2825328a0fa698fb107b120c04cb4bc1e0785f48812f1f019b22530659090df8
54a4a6c5afd37548a4746d94d772ddb3a197adfca02d56b7e6fcfa28a3deb432
f24e802fa8cf1c4d591a2c1cc02cad9350025f4b0d172c0df9d8676b3c30cc40
206385434bcf5ae7610738e1fef2b7f844d82a84bf4bd809e4d1b292acca6f8e
2d9c15b7362e73849ef7002283b177f080bf33f4291625fb9d7422145356f9d3
b20014fa079eae46ac385dbc9da5225b2f66b201811d1103904d7041a6598c2d
525f04354344cb362d60555891e5becd16d75cb93ef1795b1224aa30b61b40d9
0188fa71ac42c3422e4cdbeaa1fb9cba4844c86032ad1feee2257c3088d6de93
b1f4a8bbf9bc1def54c83333721165d3dc6b3cca09b628c6fa9a77a66c8c29e7
4df282db870c5db907d14ac583600e93603830e8b25d37736c32ea5196364b1d
b88fc3c426cde180cd9dab0311144c63c6c06c38fbf80affe453276a2c12c1e6
7d78f1799470378081cba074c713bcd91b93aa88172d5d1e9a39cd7e771841c4
ec243935a5e29c435a9c1762014b28d886f2595e43b7a53848680515fcb1d093
1e0d99e14b416dc859c91d4e96428865f1d51cde28738ecefe4ec472814722e0
704e8093bda774ab5a1aaee9109830f3e7c9c6e334cf6276894022bcd91c1a18
4326ab0e6d024d63846ff2a46b3764213c7c2480fb9e6d25f9b5e04cef24e023
5255f38bd2b2aade65efbd1977ef67fe6087fb98bbdc5c51e95b8451111e78db
5a212df53266913be0fc11e03c7005c4b70246c8fff0941e7c58e3bea88c3518
d71de4fb314d31ffc63efcabff4f307d87d438a6a1df0630a4a3071016223172
73cd43030f067bf9fc6eabdb6f3c02d1aa8e599cd96fe62b464a8f9aebf37086
47137ce02538674a257b5e4e3636d3e92a1b4824ffd8bbeb840e8a575f8e95f7
1336c8b7ca2062c846c2ce2395d605ac7115dabc3398e69019ec91ddb1fe980d
f16a3ea4bf2a10b0315e6c8d08f2afedc242d713a7d67d0b93c4ce24d1f101e0
ffd83bdacb0dafd1f0be7c67a22696f223f12f059a5e1407cff6f4f2bfe9d307
26ba5f21f0854ed5f09b5f8625499eb62f028bed1d151bb1e64c95b5486fbabf
4aa37c1a316d53b1c0e31deaf2e569d24dae3904eae021e5e3678159fb0daa1d
c1d1baa8be19f2c9db4e3b997a6c4e802bdcc55e1c76bae20657991bedbb8e7e
d82f35ea60146de4101da1e18f667251fa5d32e3c921f869ab9662069b8dc86a
1942523e62b923f69a75ee5f148aa1b6950fc6f369ee6b128ab4da5f3fd00639
7e381044620a86a262ad0f0242e809fe0e40b24d21736005399600dca2053c5f
2c2c5d7ca9ed14c5458dc28071ffba5f47b553dbbbd6c41f053c1d5511d6c767
8c551efbfb0347aead7f28c812a42701820230e13a9552a18402e7ccc8871dd0
5f5b7f66e3407948fe5c8d8b5920dcabb63ddadf5bac1eeb13b5deb6ade99058
5a010ee7b3aac8fea0edbb8fd140956c9fda5264aa0c004c237308ceaedbe0a0
9d4f694f4f79f923d6cf92671b0ae87414bea500b32eb0ff44ceede82fad2f9e
aec32b755df317da6419700cdd0cab5c28dfaa0b4dd6f848aa3556d506018d0b
aa5ca817728ae9c066fe6229d5b3deccbd102536855303ba8f88664246a05b72
f04fe881f737d38e4b22de52934273214e2afe912a6ea3114aeb4f2dfddd60a8
6f43e05ea8068644b69504000f06c807da137a44afa9280230c7d82039845618
0a62ec5deeed51a9d652418a542afa3c78c48d00f2b01f577a91ad3b816d97eb
1ad6ed74e2e1924057814c43637462022b60ec6a55f09d9b77d5fac24a880770
7182fdc978ca331bf9ddad3441e74999ed6698154029a5a1f58fa5b473a1377a
e22b1a7a3dc556565d491843e8f01249d9e436d3a860b299f04ba10c2380cfab
970b647099b7014d0c85cc5d0188b244095b92691a40441741a59d12a5085d4b
f94bf83d7a1e46c5d288571828bc7c17f892b0542bc5ecfae53670a6f651186f
97aec5e222b0f98a340aa76f986c5954145af4de5779fba34bf447694c8837e5
9360d733ced5ac5d66a1bfd18d26547a21f558e10b2e6e45193b81a801b51975
a698f533a9b206a7333ad2e5a172a752ea11984583bc0eee5ee60d637e49650e
81b756f124063987c24ddf38c5b9ea0afb7378fcb71ccd52b425f5c76a00be5e
b6587e9e650adc88de2b248d4a294891079b59c0d1564feb9d78fdab66b9602d
909ba3e9afa4a3b12f996bc2a4fa49616a9b33362fab960505bdde110b588ec9
f05f649d12e8ebab9a229ca829da349e83c313fe72f67a951d19595b5b6ee1b5
ab65c9e47270673064ecdce2b1cff8d5d37de2be7fd047a16ef123aacd628648
889be6f10e8643ebba51dcdb25a9fa18660ee8139b6a1a3106460bce7277f75e
647143d39eb6863bb13878c0afdcf61a28546daefee505bab15e75dba431cbc3
ac988a590f19c0a23cf786ce599ca1315754b984ce167287284aca26aa5b8dcb
e0d0e644328663e98267f07815d616f9a0e1788f808ddc5930e3fd25ef830077
5a53a9685d1df0f48378667fba3f79dbb40dd460c6ef2fd6cd8d534878257f35
64ba547e16bc02290516a6130f7c7dd25aadcb5973f526700c7780a94a43e020
fbbb16d3936105299635a6239473e120e003f3fd8f2dfde3899de06555bb6986
fa70d8e8cbe954fc05078f246389a1fceb411ce952affe184bf4fa6033dfad53
f64289f8d1683f077b09d9af41dfd04fa74b32d1bd0d26d16b15f65e963972fc
7a04a6c4af91c0025ef999abe6310f1163834cbba7f6cb98cc929e440c29bae8
53edf28f244ce3cf870b5a8d303457182b1210ec14ece67980d373f691e26953
391a02e1761e28a7335c7977b8f105b4110b03882798d0e3f5f46224af07f61a
b409f31456902eb5884e1f9d342d4d8e0901ca5a46328a9621823edf21a16f73
777f50e048a71cd072a5066dca87d2110588bf4122b9cfe9bdf9b82b7a12c476
ad8578dd75843439408581a77f2a85bc3180cc6b664e1e42f8feb30dd264dd7d
56130cd5dd2d634ced915e6aee9fd090772b7f2e696af7203cdfc48b2f09bf89
378bb810dd501503465a5157137b1063a853e08d9fc1c65f87cf3fc26a469dea
e92428da79de3b008d0d4157b6fbc9bb8cfa421548b07d629f629b3329674091
1ccc94c65f0f4af7c828b473880c5974ec062165e46c36470e843242c7852a64
9c0a388f3d4f38bb1c857f929370bde20e423ab0ea4fd2a3136ab10e54cbca27
00c8c0c96c62a6905d9301b3e3c1050c3d2fe939593ab1329e5bc34681349e32
ea9dfd9bbf4ceb6a1833ecea64c872adf999c9b8a97f798be994f1b2ba413f84
04f142595b6e13ff325a75933b28fa7d272e618a37514e2c7373d7515a78d1e5
e5b4c1f5ba68f2b5fbed2950e2f358a8d7ebef4366dda541cf6523d78fef341b
8ddb92d8ce83c917ebf057d6bac5ec76976062d51e699b97cadff9a15966554c
79609c69f3b97d4633b06de40eaaa99ad820b0c48cf27872c0d29c39ce1d9b8a
a08b4909953fdbf498566b3851d9bc85bb216799ba106f65032bb6d51597c510
04cf4d9627e2020b68d049e75cc8c0184d9c4e895deb54e68b940be8a652d8c7
b6055018b16328eeec2c6f4f0082d851cdc10f9d279979d1624040998f309490
995c5db807ddc97cef9aeeb01b0e44582bc0d8023e8ae28d0d7faa5afa78ba93
4f8d5a2f557b37d8e3d7f02eec393c4f3b0fc5710fc63dd7a184260299fdeb21
e89e0687ed7fd2f04db56b98d10abbfb70a2e9fc85f071c29f42191e21cbdc5a
11dc762266c26346c368cdce518a91afecc9660be11493013d4773f571deccc3
246de80480e5b07fd46ba1f3db586533b86fb18359dc5690ee15ddc836e0f40c
a2938b9bc0e74cd033b4c4ccecbde8174d92c9fce7f2a4f939d247e09cba4312
9993b3f8c3b07419b8a787aaf41b506414f17f362259783e4dad8c13b0991936
7b7dd2401222675127af357bf2b3ca949ed4db3fff945a28de8aa8aec7200d08
0ec6be385258a38e50350af0173a2b5bdb19dee75c4ff5765ac1e250a3c4c349
f3790e8a727736147f5054c7ddf7b43063b65f2cd8ddd1d1a977e6d1fe1332d2
f67695ba51aafba1706a1051ede10cdcebf3de378d066b069c519e8dd1624183
58a7b8c1dc05631b4ab7e111c184fa2932847cc42be1a5fe0323f12551fb9b02
47d3ccfb7804377cc1965438870fe026a4f5e0b20f1e66fc9b74602139832e70
d473cafc05bcc48079239274c277c8e58b42174a7b4e70000d43c51dc5039e15
c125a13823331e57bce32a6041f116565a7971f8da03f3f9f42fc26c79ff84b2
c658c704a3b0bbf2b29ae1949925cc09fc14ff324678983194579493e84b1d63
d690812516992100b5c8af6e23a9ecbc6b0f6a3c424e7692bb54ba794bf1e3d0
2c9b527ea1c506f0af4abc9e1819464da6a7cc188ad2f6945a935bfcaa157307
ab06f429429aa5ffc5730b21a6ef02ab2cfa011a2006bef78faa3813155f3e77
ef1d76394208222ecf5a168bd2769cd750bcea30c4f6bffaee757cbcd9c93994
32f93fc17a111835564d0667327697d4be6bb621af53fdca76701cad7262758d
5eeb8712cd2fbb05f0c63926aefe6ffe8fd20b45ab0c502d540fe47182781f95
538c7527028753a2b46ceef21a85116d6a5f1cef570b1f0b32ccb5c6f4bf3e7a
98bb309495f751da8d87c3080413760a1548f9193ef21e68c29f8d82d48693ef
e8cd20575ad15c0466f718c0eca407cfe08754b2d7434728cadbb3e1c207dc36
4d31008b15dc21629a69835a39e699777c14debb28223dfa28d95630a90ddf57
b9ce62ee07d5f02cce88641071d73b678781cd1069b78bac10e94eb070337787
284a247a7b8d69b885b4243dd446c63e02b4d3267f5f422bf392f7d360ce7f10
5411c0d1155866db732b3310d7f60589865247b82f1527e6768378809d49c6fa
1c2e0377fe08048dc466a360226de10c70dc8eac830438d759d25a29774afe6d
1d4a4123cd899d2122eac4c29103d2b4513406b19a92d93c53ec28512eed8218
6f6e933a334707ed29c93a087496850456e0001682766b32689a11681abb1737
54fe5157c11df89b649e9d7f2033191ac3ddede64ac96204ea719564de061613
ce311480db96fb1db1de15f5da9d70c5f4c9cb4076925733828492d348d52aa6
ff2e8a81848e2b3ffdbfbb341910930c46dda160fbd42291ce23529c54058e55
2ee3c48450b685fb1b5889eb7a51e852e86702ee802bef19057de1a54ac35b61
348bd301323e5641d37660b0779b45ae6c6ce72ec4361cdad71374462674a80c
33a6f2cce527aebf1de44d4e21951da5912a0425c1a4813dd3c94c4198242f06
237b847b01f2218a5ecac59b49f406250a0d6437b161e205759d418ea81a66e1
0cb00b753a9f862f487346246e2ea5d3d4fd5b584a461ebb84aa1dd05c17360a
a0b5d1371f64761e70ec25311ae45a925b4ab9fed6b86af011b0f84b237baa73
34b46d8e3366092125602d3411ff67156a651e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBXTI10
%!PS-AdobeFont-1.1: CMBXTI10 1.0
%%CreationDate: 1991 Aug 18 17:46:30

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBXTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMBXTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
readonly def
/FontBBox{-29 -250 1274 754}readonly def
/UniqueXX 5000771 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cdba9914cb8d6d773d679fcc3463e9bf514c07b
8a59bb54802bf5b9f4228c8b8b6a93f5cb6e4cecedf3ed4c1b45d436a79d0605
ab5ba5671bf4a19250d6097b2db5ed045a5181a2cd083529d1e0348cb7a4c964
d4a46a9860423c2128e8fea6c2fed3172ec3248fc938bfca9c203e46943b34ef
f353a65048a47a67163137679b203f5581d54158719e31d0d4d3fbec5baf44be
b9f177de2d803c9effa7bf891abd703e805ba31b109a3faa3fadb7d2b0b6715e
442535273facdac07195806f92e7899d681d2f9f66de160ac9ccca7351ed6971
90766a61f8d2a1bb13afe3d5e900f651607676a6e6367d816f1d6538500c770b
b745c4760aa539bfb55f5f6806589e21ff19c65a21565f38129f6f0b9de7f897
8760d49dc02564371632dd9b729080a0e673fac60ead57447c081dea03f3b073
d01b34013646e9de40b69f47559159070a4886f198b579a51a67eaebf428671c
e29a61a391b5dc2d72704c13052e66a665b556035dd0b369918bda248d700ade
79df005abadb022bb0ba2541ed90ce7f821362fd6070be5cd0da4ebcdb7454ba
b34a378a154dc0555993f32c0d0928dcfec6fd9cbeff662e5af2042a27af70f6
dcdcbf1dce427022f31e403c920fef3dbe1aa859e6de55842e1dd2c9a71b7ec6
d89b9ad85ec0cbefba3d3d06c065ba92cb4e1547d613b0b5393634f63d7f3033
3a9ac0d2025950bac24faa5b18b8a9d24f6410acc06dd15cd3158b74549477b7
b8b305d5ba7ebc2c09762cef0b881148a5dfe8252d600720db5930db5cbba6e2
1a7bbb9165268768a128bdd348260c43b36660fb31d933be8fabb1d5011983e8
a4b625abdd138a46d644f22023d2cac13c76dcae7ba20db90793477a3f2538b3
ca71acb933eed32a987b0b383b806d4353903ea26d523f4e0586d5f71b87f7a7
6db9e39426613c77e27f08b1b3950ff32b192d94803bb7e3336ecc18f740aeb9
244d2cab8fc5734ccd7706c0ebd145dd2cd767de8418ab22d5d250f9c13884f0
fb185f653f5bc5565432c0499a7303b1d5d9d35dfdffd834f0ae96466866e74a
5c5caedbbe8fa3c1b87374b0ac2a103f16adebdb829e2f4bb8288c69325cfb37
b8d2e45f04803e40fe82e8c6b0a30c570015b77b83189bb684151679a432e2e1
67f4e27b7e878a46c19969230b9604ade2e6487203d0df06df8f5e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueXX 5000769 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d555242a8ca08c49aef300945d
99b999a79ce74804ae6bfde623f4463371442f6523a5f6ce19c839a708c02513
2e22c696c8ccade45680e5197189d0f98e7f0d5f955e353970b392cf530a68cc
56b0035ddfbf206c3074beeb0739dcbca272a6e629fb7aea2c5ba7bae50c7b4c
a595df78200c352997ec3ee564df229fbb5473f5e8ccb1cc0153e9a7e299a8ea
a29b69d1b622b1f0cffc58291248759607d91150cb0651120970dc9f743bebef
44f6ae92facec57658999c8bf01f60611560043962c0695e1bb87d090e0fdaab
659d6557208a660be9aeef8ae55f71b8bc76394d792967e41bd8023b6e7f8c3d
9987d5e54c53bf2bbb32855b946473b44833bd78873df8e4c7e668ffff25aabb
8da4148f744b9d0524d6cb8281247b3052cc5d66f3f1bcf8a56a3fb446ea587b
d8be30257652cee035628aeddfd8283b5ad21b8b1480ad24d898970ac8a1e33e
543ce4e3c48f9ee621c5ce3e8ae930f890011b630866c988606068d9e92396eb
f51bb3db204505fc3d09d4701ac703a14d92bbfe27bd7411b363a88e33a8e9a8
025ac31f21e73dc52b333b918d0b1270c54873a490222d041a66e0192612be6d
2c88958a8f70c10390146ee5091df020ab97675e8e6acf98b28b539cd0a20d24
a42f535ae44b8f5e9290b38fc6b02e1bbbdf1aca96558c2dd5afbec53f03ab51
fbce958ed4a65b17fbc03f9defd4aea4a15229f3c320876235f2d8b69bda5f48
03a2798790d35b394c63295997dd487bc603cdd10d18f3e3fcc7f17d2a6afc77
f1d7f6cf69d2a86b104b9d3b260e4a78716927a485ad8a650d610e68378f4514
3610b087981f0a0655090163dd2dd4d0030faf6a953896a9cb2cd033ec9b2b95
4068af32db573f74fbca54e826555534f7a32e05c4f6baaec2033d108ef2e627
35622cacd4e7cf72d80dddfccd3dc4653e5e742e9a67e30eb36c5bdefe0a08b8
fca2fc83b99c4da9836b165a8cbfdf1dcd74867916463327785b7e4f45e8662b
00e958992802f648ebb967be27f19647da9bf7fcc5bf0e8360bb30510af155d5
ce98e0eac8d55ef286ec545e834649ddcf391b6e0dedb0957fdf7a8f1b628cc6
db2c242ecfed8182e6d7fb0b77e5c82b97902ba6711289ec2407f5a0dd063b66
1ae1266557fa9f628e5b97941285f803e14002ed78e3165f9d240cf9e620bdd2
dd67e1faa495cd6cf808ca4fa5595ae677028666baaa2394b4d7a249ad281ff0
1e92f73ce9796968bfc8d167b5886d9f09af133bc97493d29dc08f75f188773c
b9117ea9ff14766591737263e7c62d1f36536342c099fc12a2d0108af786e579
0af4c02d8faa4d77a1cea60c49aae632673fb82fdae1a0d99bc66f78de3d146d
3b0a7b841dc3b643af0280393ed482b22d2d4eefa02b9572a3e03cd893eb9e49
b52841b5b2df9a23bcf8d022281cc8aac5f1352460e7be08ce6f90376d976a71
e7fe546dd1633b15180bc5b8623c1c9ed106b89ce453710342ce33e1c5fa2c0c
8097d847b4850bfb59461fa488c01240b00e905526d9f97a02e6d88266aa6b18
f523ca5dbe7a08a7c603e0022b097020c1d14d7a2b9ea3d264856ad511195f88
ee7fd046a006fcccafaa64716708a9be004f3b9e1c4c68caed46ab5ab1a5f782
7a7177ce6302faf596fb3974273bdd0401940cf0d5393afaf6c966ac8ff5788f
0a8fdf8d2335b7a4ae7842248559199a70d836998c212398906fe9e3ab08c1ad
433e48a1cc3b272134c340f06338a70c6d0468bf01350e9af356e8913e6019c7
693bf69465c7fd3bc9a5740d318fba3572e63ee7219bfe346629fc377ffbb370
d87fb6566de04124ccd654033def84da5c42544e09f04f60c8cb9877358ccb0d
add1bae6dfef9c38ea25cb754f8132bc521a84e30ec75194d6297f0d5d0e6d0d
11cbd76a886e10abe93e2f0e1a21999163bd79a9909db019d774ab8ec64b072c
f92ee8fef18189a9a6daab3af7c45c971dd4c95182ffb4fd836f1980516c384a
ec138b416ad2b1ea5e171974334ac7732e395ba2e28135bb604105adab5a50db
d0fd171cd23acf8bab111b2e11cf6fe3bb30c516beb49e75dd415f63625bbc1f
ac3cd9c5d26ab43f7fe804bfe2b42dd2e47e04962c6d6fd6676c4c449c8f7ca7
957144b92188487b0a64f0e3323b32db5a68abda8095ef74b66fecf0b79018ad
4c0d220b6d125b0f52e9f7444b003a2fd0597d6c0277be880ce32ec0ad8ebc8c
247f0a3f70c56ce5caa316142950d411f1fd4cd420c7194d83b1c6049fc2dd8a
ecd09758e0778e459a598432cc477ccdd828994b7817b7138775849c38edc03a
3b84c6a485bb5f4757545b7a34a7c810eab683759d675561e84e799ccb711e17
415917a77a74298b80fecd5b9f61fdc5077c55796c2840ccbc0f457858aff682
6b0816e92f796a2c254ce8116eeb1d1733413ec4e3b6914812142e29d96de0a5
22e8b343f4b65616e84eb426e58a63e0b6fec7d45a8b233baa297fa51dec3d07
d6b747f3cbffb40d35b8900bdd991c5fd7e37c6f483614d08e1e86874b6a6fa8
ab8076b88f344513204828aa95e0c3760659518753ac41e685a3d4fc274298e3
6d6d0d2b117b83670d8e4f986030ab4adf38a481f6ba029b8a1d19e6ddb2ea78
087f0acb948faad77ebe01b2af07e5d8595276f281be6b77905253e064e1fe60
7b713b3d1c56cd918ab1e153b823dece9c30fdf252838c6ee0d476cb86d45e57
ab0900bbc9fe4e10317194a86e17263c5482d4e687a5a8ec82fb01ae3238ebb2
a8715ba9d9c26f0e5bd3a2441ea2601e7feb47ef08f0597c9fc71341b79ae9bb
d20a14d35576e85cb1ab9183d85b028f807126366a7b21b44fbbc3d24c1de35f
f7b4910bc4d7ec65fe92b964879711e590bdf612bc88fc5b9c73a7778db4aa20
2f2f9f37779274d7ba1668824977dc3e5e2705a851d139d4b4642daf6ba83414
7ef412bf0d7b712e6e978fe88eb375d8ee2956db4175d3462235b0dca435f953
606c7edcf1d2c70eb99cdb76d52ceab5d29fac13d56f3c540d545d3f44724e1c
b4fff11c839c45f326831d27cb2cd77d185feb3782c89127d059f143328736da
7ae2aa3d57c1ed89267403f69e931402fbca14829b5641f4ec3d3a099c4a991f
96012c043c6ceacff18532bcd5b3005fea72a11bd8226ce216ae979c0125cceb
11c1726f015d194de7e28b278e7a1097110e3ab6f71b0225a5965b9ab75bce58
c556560b737e0474d5776a6636447ad6d217f8ede09da132adb90fbee54bc491
0a780b299d6c488b81760d4aeb439819dadf23ef9313a9c8d2648bcfb1f281ae
032342d8d419cb8ff49e7e983dde518c4fcdfa26bef91ee1d6a24c52772a0aa4
7fb3084519ffa4112123dcf547ce6b5be832b25fe1dde247cc1ae204b37bc1fe
f7a1a3b4b38f6a3247cab62ebd9a2bda61547a588c8ff282e54cbee1fb8530af
77b9bf64dffca8abf5af2b3c22f45ec98956cfc3162324246dccb91800348461
9ac1b6f3dcf48481663dca370e664f8d513ac5e9f786752ec9a180b924765393
2865e2862e8bb123d2b06b4be2bf8f27b64cfbc07ae2b1536b8d67ad18e9eb70
d80264dbc6a628810603734c0798afb0c869ad6c341aa4b87d1e98b54bdb3069
74db79500677bb0cc6997ad97085383c9f8fbf9b83bf35a7cfd31b80f0e695e5
b20006313f22a6a7584534055d6549aa5c1869708c01c3ee54b2db6587276411
947ee6f137918b6a8dc0164afbf8236cffe5b493622a52f9b4fe69e91f51efde
b462914887414a8beaba6d4af65198a75adbcd01189bdb5413e19b8f41d030c8
7bc598dcefbba8e7d746da1699cb299649e9237666f0082a2427b71ddee3fbc6
1290fce847626df187a6cb0aeb41d6e53fd9f93b1b793abfe981b055be88b2b1
2b5ee3cf6679e275b226317917e62eeea8c8b39c63ab4f8e12e29fd25e028bca
ebdbf51675792229a183603ed2cea91ff2da6fdffc0a5550fee4604987721ec6
95ffb841ff9b269304f903490700596c0ea6e03881ac0a5a632eddcab8b62c80
51cfe339aeb67dba027e22534b25afe94c75e8922172e5b77a38a725330486f9
c579134c66730a08b16f328bba6c17b0a7a80adce2d9192cef7a02b3aac16a3b
ebd09abccd54ddc67a521926923247171595c412bf220c793ff0f2e7583a4820
3e7b8b44fd8580965266717b8db33b55451b94beafa24a80be1d54383a55e121
4ed57d3e712facf5b284dcc6a12d6d885bf113649615c1652a7022779518681c
bbae08ed0062fdc8b9a0119f68a3dc03d51d8b645c6832ee8dcbee45bc16e318
0e522d234e937031835d6456adafdf688523a5b08dad1e11e9891b9c03930736
db4aeaa433ca41b591e4572815c1645c04adbcc252a4108b2c24d11ec06d7fba
2fa1778f9f001539f573827a12c7094bca21bd423eb8ddfa8198da2a080058e9
011d368b520291ba2022e9b786b66086df1cf3b41c5fc93f1caa40d94b694c0b
269617a4f5b52c391c1eebfdeef215f759078e00c6539a7434812fcb2d655ee9
a777f5ccc129cb834536adf9d9485c3b1ba1cc53a66975270cddad19fcb2dc16
b321dd0ff3262de337eca549cc9dede42c6733439595f6bd434dff7fa36fd10d
54c418d708a94789903cba54ac3350db6fb4598a8a347bfc565621ef699ed906
65f1378f221966c3b641f1d02b5807ea330fd46dce8a507afb17c326429bc411
23ee7e010f18961ab92018c21ac54ed2a20b27743192c046889a03a5ab222b35
c7a4368a62d2b439c83d3a760657ce62d1511a9411846c9867e9edaeb91bc04c
041b5809b452b0fb16f1fe77364e9af8b037a733c86bf7d81665d950f2e9c3ac
a4c495358193173d638e5eb047d5e495dfa812c1acbb584fde218f0fe73cd303
3abab2d849e02b49a6dc869df63705071f46e6af8d54333d560efbe65ee86d31
5624a7ce2b969d0436008f0ecfa1a14d86f16a109dc5474049ac8f2c7f9487d3
d07ae43065cc9593ef9197a65b86d61efdfdbf297505bb58396c68c3284f82c9
f5c3a817e6b72c0777f2ac056b45bdb96a0ec4b311eaca9cd3efd2c517f9bf91
015aeb4d24b567d54edf9ffccff4ddbd9fd687a3470a34e940ff38617b653188
058050c7f9955dac05478f904d111f68246f1df74f331687f6832694e4f14ba6
1fd5ac1c19fff534d8846d68605020d8e4662ff7fa190fd701f85bae1be03125
2542e56f68efdfeb414e351ab4e409d359a11f6c9ae45d17c727f513d524bfff
b881988decf3da8925c0413920d9faa5036878d567e2c31260331936c24203f8
a879e0d7851340bc412d7592c9848c02600da37962136455a74f13b0769292dd
b0ce30494c0bc85da9fd546cf9f465f5b23f7570bedbf5f44f4ba72cb46323e4
60a628a7923a53ec6df982b90665c9e8be5b77d79a71b250ac8834d71b017ea1
7b4a09041d4c355fba856541f6170dcf2f50364b50fac2162573178f3de73699
556869ec3013f7f0700eea467415124304b1577918bd5e81a2939973a2b1265e
2523837d252385d83482069b873489a01a14ad02a5a2b956891e2e87f691b1b1
d8baa53183a3b464bcc87baea25273ca38592adebc6f1413f5d7d2c86b998637
f7ebf5ca15d723dc0cbe6fed1eb4d5ff6a30ad72075e22e0071c053141a6c401
cd0bbc740944f6d9f8c80672375894db72d4b493f31e0738b0bd1efb1db73b12
241a9dc51aed4f480bd859826f97b88fbc7f44ebb1896d6d9c6744a53e3a49f2
893cc8184cea664a1d8cd6ac215293337407582a7e6b0c5d5a504a70a2ee5d71
a46b700d2f9604557853e3fc308b49bd272811f2e0958b2bd542a90b5295a57a
4dd87e62720634f205495f4c15ec578097e96e40933521199fe090369edab596
ea6344dec13a5f612eb5197180754e7b73f987b1e51399fabaa836aa6d719540
9becfecdbd2166659fe6bfaa987de8bed0566ef85dff9970b7740ca66093cc8c
48eead07ddff5ac855c97df22479f714fe1683cf11a8b46c356b7c428b2a393a
dc8a6dd9eda92eb383f139db06ba79ad9c73f0e3443435121bac3d0a175b164d
d6d7e33e14570a953dc4a51ce7bfd6fcfa58abcffcbcdf08c784b63740a89dd0
8364330c655b6008dfc978ee06fb4623a9c1ecb1709aa9e2389ada710155771c
7b51da8c567d8f1f850a8e33948a9307eb66cf3e1620e9ce27222430ab18370f
80a720166465676d42777c497ad56cbe3679e69e1357698678b629e2b17478c6
8dd1856e3ca50b37717394d5b8c9fcd1d167f20d0ace5d089f3acd7d7d6a6c95
a2111e07cf3ec39693673dd4a513d915a2f35603c6a6a8f077708296129dddbb
89e2b39f56a5182d9326e916782bfe7126c20ad8ac47fef1e0d4e092f0ea2f1f
d63ec5999b93219f7a881f914162212a6d94f6cadf3fa744816590f417492de8
5a78724d5b91667f2bb4badf38216986c8d272a864724d7ca56f6700489abb51
046fbc6c71a9938d335aae3dbc4ebd41d345381dde82f981c41fca44f65f2778
011020402b2dfe110c2190c07ac02043110397b5cde664cb01babe34bc052f74
269b13f7db59c42c01207377e95f5469d8b2ee617cf0c1d971c39ec6d521536b
167d8299d664a389f3afedf9bc5b908671089e02e4127366349cbfcf08397375
ced6e21617cbcb5f31a95b12125c64434e45bcc7eb05bad6514d215e13ac8aef
4e94abe1c162a96ee003b191cb5b6641a3d98497c8bf27c9a4b26022502c7770
eddc42211474c2d53fdc9d907765b497ec7ce914cadfc54447aaa55f415fa5e4
4f244d3312774d4425fcc309c463baf6772336ebea22fea87cc14e23ab208db9
9454c190b41931e9516e06eafd6c1b98521f74302ed697bc487a4a53c025bee3
946c6d84c059e8b63a5584c54c6582479031f48fdfa28e313b857d3c6073be82
45adae13c5676342d734ed9a743107df9a8473cca6331658153faad0c7a7f5fe
d9b88b8fd1949d6d8ee5821b8a98e35cacb08f9e2081deecbfb44a902de9d941
11f97f2cc7eb9fafb5da43f38822043836252e0172cc31d0c1803fe3f4fb5533
7279e3ed83f28577cbe5b5a7583edde01a8cb93a9e0910596f411848cc656141
42ce1618b199179350c6350d6120b4833ad88322b320a3ec18c91305e516b4d7
e40977b624e3f1f0127a714a5ba0716f15612063d067e0c50f7cf1002247aa00
0ff638e695d230b118cc94ce13e0ef188287995c18a78579af6231428c0fda1a
39d35f341592ab351739929069c4563c19a6f2338bb113ca4aea436470116693
92c6e22dd438531b18ce123b0ccac1a954d97c08162ed8dd9969186cffa22d80
f2a1edeebf939f48e803e60b862ecb8aae27b224c9b44813cf20dbb494088c41
20236623cafa97a321d8b0c5ca7e814418a87390994a4042d44052b5ba5775cc
441a830377c77aec36ee4f2baedd234b735fb25971890811390288c084dbc119
4cc0081c335790a6848e3fd7fec042ef102cdf628173509ab5daee6c0c59c7b5
032101bfc589481f9af4d5675468cd08ff7c5cd630750c91db558027b26bdf10
a091d67d62ca209d53f134bf7546632e1f34394c891a711b1cb118f04e89f57e
420cf735b867cf003cac233144e2fcf012c4b981d64e10fe51eaacfe8ba27282
118da27aedeb38a283f631d8e9f703251e8216965ba0103478e89baa036edb5f
257f4f6b96ba21ed06c3336b79cb767029d5ffda4657cad57427547bc98ec4fd
7a368afcb8a9f2fe135e2de6e14a572dd34f8b15e6d4333935162ec5509d4e3c
da2124bf4ea5b630c9ecbbd26ba593f0755516e3586a63d5de32ef29e107b970
ee715586b32f17ee7e818303e589bf2621ca42c3f62629b4316d9f3b7da9cf78
b316fa5862caf284102fe0ef1d0279dc5a2920faa860ef8f8270b07c059025f6
f92b11b5f0f83fff630d23561d5d496c2df0566ee49cca9a8ccb8d64c50ad2c8
9541ca7eeed6940b90c47215e4482acea133d79f4cce4a94a1910d5848d07496
a1f70ca4822a9da650ee465d5ceca1cdc3f82de6598d6d5c50c4a454785b4a8a
351c51b5922a6ee8f4ee7fdb731f5b1fdf6fdf391687eab84066eb17efc3ee01
e6cabf6a48c586e025d14fe2af027f32576cd7b742dbeee8d308b98b4402e1db
15b6bd4a88b1aa5f6d6d2ba4f409357d234732789da0e81e9ff3be3c13cbdc9b
b7d649ef69474f6103a248e87ec8046c76ebd8404ad0a1e48a67c2d8e3c76b9e
dc3f031e9d838dbab5a485efbce0690e0dc7da4eb8b7e9cc63912785bd737c17
fda69662f31401587768391436b2d05eafcee71279b7e54f7691141facb26454
5d6fcba8426aff856b7890909258a80710f7c4b7ab40e6197ad6d0e8c6b7995e
1eb50ad4f8cf91e1cae20e0c448ae2b3c03b603fe3265281d603aa4b546dae53
51e76ef0234233cf03085d7f89019ba05184ba4cf79b9049f42f99dc47dbbe2d
280ad53be50a465a190108e6be15102389285cd3773b2f0e046da40376769c3b
a22df8b8c4db16d9c28204e6b2f4c5c04a2ace1815c93aea3129ed3750ea1bc8
518814352d9fb50fcd6b9acdcf06e9479445857afc2f256c6196f59c031469ba
b0154ce6ab50e4247dc72793789e2f65da5663cbfae54e2ab5708f68346a7c1f
65273bb7abb160559ee073477d353c65c81ee608da21ecac96cbe25cfed183c7
e07c1dff433223b2ac86898c4f1e00cad0b1e8cd1cdd8e2701c193c55068c76c
32eeb1ddabb8797c5d5863990c4ed80b9fe3f81831376eca2c706ec7eb4e2c1f
763c82c7e19a41e4d61946c948b630c81b8f48d36d323c83bf3efa8764754add
7dba13a9dfefea0931137b040da4a962df87a77f7ea3e1c74ede87c765e4090c
7f4ca2c95b5a1916cf6363313deb3238c53ee3524b2b7aad1b560e232c3f2d24
0c8a7a371da0220a313b46ee51e9ccebbdde440810a32adcd4274996034ec9d2
4ff39e864e4613d8462135966f07e10e7a73e9a30c49620ddbd195801482771f
007ee3b867e8e291c07aa4f43d9294b1870332874341bd5e64e21b5793fd36ad
576abaecbc61e578d67ce593123cb6d5b370470a8cb0cd83c0afed8ec726d9ac
e44975828fdb367a1bf59b6778d41be1f078c39ded12f97793345f45a506a063
6e5d3dcfcff77a131657a7a4d6436f0c090bf2ddb345479ecbd36e3a6e863829
1ebed5439bd90629da6e4fa45fb2e94036427128577aae819191ad2ccb022a6c
f56efbb38b76de404ebf1219ff78952147d034303ac668f0eba0a5931935839f
c3168aace56fd56218092758ebd978fadf1a2f1199f7f75e0735e4499bad04ff
b7f7bca808e5f742f76632589fe5babe6320a37e13ab9d0a9b4fc72aab9d9f32
dae8b0daf7496d09ca0c2a3f08d14f2f96fad1279bd9326699338e7ed3296100
e1859d3ac65f3b69f6ccec1f3b0f0715c04a6801ea183c827f16e67f53911b1f
6fecf148cce31bc99f49761b4ae7b282c7ada23fdb6bcb291847fa4b7feec74d
8284a1f828d83069b7c8b20251f96cefa5c238d32f1b784f514bda875e576dce
2f731230c0939e46c2c49f5f26ec3f0461b731b65d5814d2009b561a63cbdd9c
04364705b8c48d46524a57c62ba5d00751b6ae871b32243728154a5201726774
9cf5ab7cbffc6cf6bdb132ba179f365b5ddcb403a20d788fd864db6afe67f4b0
001c3e6fb974b552735ca0b75c0989a10382de81dabdbb282515199ea5661d79
c045f1363879f1e48192b3980f150719a5d6abe3064f060524acc496a53603f0
0179b2a6f518a27e349b173225fbc542f8d8af35747ad033ca2618c3cf289bac
b9f3f3333a53caeef82e14c196e38a987d563319f0c98147650821b9f45ff4f5
8913a260c1326eaba6aa4d9dc2c7a30b9e8714d422621103342123e12a8a46d9
6130eb4db6d32abd53bb8cdefe5e584cd6c3a7467b7b59390396da2a0c35a9b1
dd5cb6b44f53e5d559affd9b717b890b90e9674c8d37eb71adfa62e4f2e4a538
11f3818660932d6580c7514981b07b1cc221d068fcbb026d16561dc59f75e678
5232eb03f5902440cfc56145c86e695c897452b71142e6d7a9e085f548777594
ac3518e70193495659ef6da707f66fe973746915c33382e1968a5961f7a645e8
85536c6566ece9aa8377dac966a12af30d02df010ee4c0b6c05cd06c59e0faf7
ba63518f9eeffa32b4da2bd4dd182f4a209c8e36632fa69dc3d985194b29e0f0
2976746cfac4f67fac3490d2ba622670a1dfb0c37a444f03ab46407ff29850e2
ad08d39e2dd932c97a41afd3800f21fab8345935c814a95c915159a07ccfa22e
d52ebfeb1e89646e2d1842e1a10a7b28ecc7db21bf4ef084169f7301efb20e98
2ab59e75d7009f10901f1158fd9be946cf3865ce8b6c47f872c7524d957215dd
ec33d3a0caac411706c49da7dd621633a0d0d69a0b75a28dfbf7f418ea929e00
a26bf7ba83164b73e33c4a91936b984fb30f6082fab20303433eb84e60260250
6b2cc2d5de6049718e6ac5a4ed5f92e789ba167f09e4691f66ec14d6818ec19b
a3c89c68879714730e73b7d4c7fa81c2bf40542361448b63b4ec4034617860af
d88563f275dbd94094d71489ddf5c19ff3ba48bbb578c57514329e12c93b5075
1d02e94192fefdc953b1c0f9ac2119c3d4477a78fe729be0dd352c962610cac3
8ff420b6941d43b2d9e8fea8c4c2a0417112b69615889749d02dd9ccf651d11e
d8fcc0600ddadd4b5148a66e1ace0c615ab2ab8c8bdbf42252a59e70c32139c5
782e0bba43b9c3c81be4f8ecd9687f87b48dd9a078e7cb727854c071e18f5f42
d4dc3478aaf1afec893fe11ebaa6957db3c1083f1d6b0a939baf8f8ef4a3ba7e
0facc467e3f0bc485a7bf9dd69af71099f764d6e1ae439e85dc2df0c2e0caa43
bb29e08110b9baab305cda5bd7fea3a1c731cbc5582cbc8dcd4a20f1024c3ff4
449c6e0616eb2598750e73e57ecf10272ceff4656a58237dba381c8a56e6a8a7
42c06e0a9dbdc9125dde3d7591a0c7b43a9b1f570052336d5eaf8fca983e66da
813d8a05c290580483df2bb3d98b69adcdfc794758e1ce619f09314aeae40838
837485258d3802579b96ed4783ddea9b586b65bfe7b1c6ef3c17fca8547ccc22
76acaf6fb39a2f7f57c93058b9ac0837c14c0a1180d0684b2ad1ee837f4df392
64e4f12ccca5679b8ff504a2df427d9a4c352a00eeb1be4d5018a805d95f58d0
99da541b22a8c8b73a2cefcf815736d2cae5010cc6228f31686a08d510c4b5f4
3a2395480b3245330e6e693e6e565db7328ff8bafe92ce77d45b731f23515054
4304c26e60b62ba266fb8f15bd11c94822e434da21e2e2f352959b000ae9a043
2f19a7ad1736a30cb7d678613fbd9a620e33116865d0991860546a7875e6f364
a46bbf916a4bc3e036017152b4bb41a296aeadf9c0fbd0c347a1cafe4dc7932a
180ea624df10197860514cb971962d34fa3d774ed0d2f9721974ed0bcb1eec7c
19165e96d1124ea0e002b07e1bcf7597edc4633b32f801902be00ba03184c770
5d9f12b482af4d99c56cd1dcd142755fcee53f1b4057ac2dc1986bb1eb5426ff
9fa60658476a310ae1b1956d14252f904d3379d4e24f532e8f953d9c943a14df
de9164a0fba011c854997858dd94198599c36e8a03f8cf9a3007d6102bc81c80
7f012e2f9bc422bfbf47a7cfe2d15ba88ea916b0a4833adf04e6dc000f625adf
36b714a70c4916bcc43718e9a12871eb0e08479d40f467d2af1801c39fb7bcc8
6186ea0e9177d44b3e7e3fdc097cf79a872c9349573d44ceefbe68c4f5f401b8
34f67c93ad629632070f04a0b63038f1cc26be57b838562509a2aba7718d1b68
0efd0bc7678a0aeb22733c398af2d70589671951825988ddc4ef1c55265e58b6
a77ccc582ddb2ce4565f569c5a54dada3a19f49fdbec40b49aff43fca36069d1
67019f704b2af59645358c4dd7cff9d490e46218d003aaa65162983c0fed4a77
e629501bab18d3acfb0bb84d3db33148b12787d45a063bb28cc700c366f9df2d
93b09b6240b6adfe5fdd7d66fb11ac05d38400f4bdf8adc0f5b7e20d852be283
ef15c7afdb68e1ea8c79ce84b76cb0234853722bd358c91089d7b8d97fba0bfc
ced4060ce69212c8c42d1fbf83bc7b366d77973d028731027c604896616bf99e
66a60036c9cce3a28ab5682cbb3a6aec4f75437cfc9a9b95152c15f2212bba15
d07b8b7ccd054bd569511cd12b05c6773a18c8e07a889e8a3f2cac92545ff897
57cb73abdbe3a06fa9ddbedb697a0b764f1ba7987449dfa592ea768e6ccff871
dd7ce76b52427f2626bb074596ae5aeeaa22b67f2800360c50bddf5c3c28b1bf
c6a5b87d0e9df0f433a5666669b1d93b51e33f647beb6cad4701aa4d5b6cdfdc
f36e0087a3bda87317f732d3365ba485a58d8e13e2404f49305ca6de29b9657a
610024b27ca3e4542713ffe6673b56d3d5b79dbf6175af9aa50341e38a9f54cc
e9bf9fc2751b93f86f73a7385d8584c567a9a4aa4b096c4ddc5608ca17b1beed
3c0a747cd7846f43bce04b00a39e66606c5d4ed6cb0523820dc541597c11fd6a
74ed58946a4fa67442c3363022bebced3c8bdb4967c772e37aad16112d68c2ae
ed5d2d07daf61dc967e579b25308a89e66050906b4242b7cd9bfb762b78e4305
26e36015715d0764a7d15d77a0a313df8ff867d53ccbdd7ce1a0f630acc4a9c3
ad105d96008ca9a52c532f1ab789aa9129d4efc5c7f79d7358a1697205ab4f3c
d7aa97f72cf067fd6fe5bdb65f00cc5c5d732afb984967b362211d867f869ffa
6d3342a84448194ad0dbfc46dad9937ed30589ca3c79e619265d470a56a69d5f
2220abcbed225dd8ae2fd816c14eb6504836213665e4cfb0826fcca46a5ced53
89322a84f1e554f92c7b28675bcdb82e10094cf6a7c174ea9473bd2329a917de
d97df22756b01cd3b50502ccc46e795b288db9a6fccdb0972bab6b6c813844c7
af3db03def0b71c64a7738df7e0ffbe80138b537d56978867ff74a5b16d67b1c
62392a75b393d0be80fa7e54ed293537020f2fd273d1e6bc3560e171a83e9e3b
f75cc74a95941ca2bf1f82250d42bff384e51cf0e24fa9be0f03bc23b72e109f
d97f0a7edf4062b8acbee630ce3c46c9a45a0907970fe4d73204e89307f41a0a
34394829e47c38d5fe707ddd6dce0539bd09b875102e68bc28829fe24b947081
0a6f2d3dd88e5a6259ac108f1b12d62d475a6da10eb0ae55381c89acd9c62269
602827e69391f3a5becad530a5193c5e327b1b89a5f65867d2edda13d664b69a
9d0628198d2dd8e8e4cba17fa660cd3219ecf2433fc5aadac8fc8e0923198a05
40499f968058fa76fb2f40dcd7429efe5a0730b373ac7b65b35350f2a4793c51
07280bf210dcefb137e897485e7e7b235e8eeffe07c40b269fb40e4301ae1b81
d7dc45ba5d9f9bc6cb0d19cf380a5aeef562bb920dead592a91cc81e317fde76
0006b6ebf1acfde2a961a34e7a2c5459c815426cc46d14584a6047c197bf77a3
1af658aaf59ebb480419ab3bd397c0804ad6136619c194f525527b46facff82d
28016b98571f63cadacf2535b55d98d97825e92bd87e40f7d9559ab6fb1c5cb7
1c4f61044a215469df669af5906b8bee4f42c36ea501fcc269dfc06ad26837b8
2e6ff0217562e93e15d88b0e205382207326656a261889b149962a75ce3972c1
c9e7feed9e6bed49f53dd57d7b031a8c0b744305d5f955cfd43c44feb77f1fc1
1321b5f298c6ae06e3f520a16f89976ea9914b80b91938be08a4fdc79fe6cbc0
8b10afc5c739ffb80a33513869aead2f46aa32e838947a02a8bf641374d2b588
ed1c41f195cad1c3f3e5d6920dd77d596e3cbc5afa87711477fb96027978a794
eb6e2bd8c8b42fdae9bd245291e72cbf7f2b446116f68a9464da3be92b1ce725
61c1c458deefe44731390a4ff40c116079fdc096e1ee70141a9a8b8f4d548b5c
06eb2ba27c619c6e1bb96bd7f882b5b669698bf9a9f6115b5970fdfb12f52c73
b715abfbd30c2c85b7102c6e411d671e4afc984ffcfc3e0a5534076d5d5b8347
768eb7dc53bb6f5f56ce09941f1fa5253e5687e3ac77fa1ac2623cf50d3109f8
db775b04675fff1dc2c66e00c53e09e445bbd1b2fcbe01404c5cb4254a7e0236
1e10c2ffd501d18df9abf886efe12434df3ae4357d76d81a549aace9b0433406
44ad26c949561ba4fda1e8c0891b6c076e5e343f1a3ec2f7c751bb2d9865cd9a
52e9f9621b41d7ae79cb4b0ac0ee1ea9ed4f0acb0d972a023e0b5399effc6691
d4cff67080952633368cdb13bf9901cc4c022cccac3336f9f6c17fdd2d6429e8
0da5f182f15603df82e63fa0b2c6d3716479daabcecb2094cfb28545e8ebb49a
5a06bc31c279fb6c1229b3ee47f9b84c352e7a30679b624f12853e7e4c2a2a16
1086b06eaf5c8995705acab7d285983e235dcfedfa47542a33119b493f850fc7
6991613088dd4e78fcc0ceb7dfcbf6b9696f8e8d15a201c90cc601bbafb39b20
9a2039f51df38db37ef6acf34540bd31a98def1e0cbf285f4cc2586e29d63a2c
6038dedac6a38ed1a76879cced5a5e79ffa5f0ee262b1fafd705060244469cdf
2a0e553c599db2a0ccb33f06d37c67195421f43ce8be1e2583bf7e93e2bd3962
91522509d807af542fc14a05f13421457cd4def31b56a41d91a8ed476d5dd456
294949d6e0960601ed025375cf25363dc5973e6776294f75a6115a47fa572aad
49908c5fdb8bd5a69ed38b7a3e15e2fe1b3694686ec0f5c70d162ecb8db3bd7f
ec36f9a0b4092054cfd866db3441e22f0af5f86f4b9b70465a181d5e6e8207fd
ef4e1139437bbdb45d53e5c101b665de33183581a3c74dbcacb988c7ddbdadc1
a5a00047678d0a8febab0a0ff8868fd454d34085958efaf2f68fe10ef83c84b1
5011ddbe5a49ab13f8d65161c174eec259a05f214a225ecd4aff8b9d30968aca
9a16e0699b8c97c9d055cdfb75e6e7cb253cf84ffd296f5ecd70840f9ca47379
bd8e652f016443253064cf765add81a69f8d060342e4eb625430f9b1bc2e136a
7af12aa077ee6fcc6b81bd9815bca7d21d99b45f27cbade9a45d843ca0b30ba9
6a2591ca6e8d3c21255889f9858923f40de322f754f350a819da749832ed45a3
2a4f91170fd5b66efee73ab2ccc1324dad2678df1b3ec7777e211adadbb5cbbf
8fab8da461bd771b93503f956080eb
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueXX 5000832 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306462c563d51ecefaacd079732f12c29
315e4b9623a5752c6f1d8145869e120d910b2644887cea7e30b15676a92537c2
9d3aa80dc30082aba94b40990b82fb1a877e805e0c8c48f61e9f2edac05b944e
e4d8084ec1d5cc517aaeec5b3ea379dd011eeb454cecab3ad2443c887c582789
72355673e503affe0394fc7db31de364e4f56c24033c7df2265c56445ec63a1d
5695a6041ea1b94407e1cdb7c5635603a4fd047e6edcaeb2d0da6c9e0e9396d5
1a4a58e8fdc1578730f992435560a6e2d3e3687703ee2f78f5896389ac8470bc
806169eb01762e89b6dc9adf857ead656620e2589aae722c37a2ed7a2941c360
b067ee34d8d5ca3bf68db725614d936bcb207781f4d4ec2ac67b13a5ad161f3f
059add7b5e3d904831e31c20c04546fae83ca93a35989e65c201756888f727b9
7e5313c9870ec96e4cec3901ea03a5c744754485e7d169bbc98bf872d0796e18
9d43b712950c3786257d8be06ab6080b9d9392313298327549a8a41c00a2cea3
690b4a333e45aa815a64facae1c2b44640860b8b8687afbefdbd5b4a541a7251
4ee7d3e0752af3e96a88c95d31fa16d34ba2f02fdb0088b165844f02611c734a
dbcc2037bf741fdea7e8bcdc130c70c33772f777d8bcddf4611db99001ccff14
d7af2bb05defc3480bdab312a0eff2f375afb4e0df2f803c594b7c93f71ca4af
861ae1711932fef19bfe2f9b7adb69d68e5a70ea4d1a3d5bd85231b16993f65e
fb37a0a823f0542f8c2340a073dc1be4a8347f9d3068a6435cd8278b0db1809e
8af9664c2c989b9f16873c009449b6284b85da4dee11c96a05ba83292f0edbd9
2cf674aad6ac1a5ff966ffc37e88a66048deed053565b55ef6bdb8c2f2f67832
f8939a32442ea54f13d003494d6350a2864b427a9126a9c26a031909fe53fa84
63b80c3ffd536c9a5dd29ceb03148dbc24c0033aec95c7fb4031f65dbd67a2d7
0e6b0a1bd772f5450fa1ddf2a6424fa2a5efcf7fcf2260372574d7050bbf7d9a
c6340019109b8f57540141b0b96f948d83e0f470248390518a6e881ff4511933
1c274c98a1f8af8eaed5a700c5aa8785011be8b2a6cfdd0e35ddfa96332ccf95
f9ff25733ebed67bbfd4ab734fd429f2e389124ab79d94802f2ccd41741ef75f
566ad0184b43477ab5a074aaa7d5032d9e54a27050363bd1cc0fa3d7dd0c1330
618008fab04093d1b242b34a624b4fb22b90e1bf1f3e030052312cbd45e7437e
b00f079e154138a510686c845e231d38f64b591b0a6871dbfd0a5f6eec3326a5
b6e559e4955e6ec14bd4c08907d10bd3337e77f3e95ab24c7ede5326b7470523
1664c3fb73ca3b1cd256101b8f0e3082bb42cbc707bccb31c18ffe2ba5248204
baaeaa4827364a0ac244a673cefe846f1eb7efbaf56df912429af20762a52538
567a6f6616a63610ebc1e5fb3edb58febc36f5a600f9929bdc94a9c86182b26a
1ad60da643e184d010e46412f6b79ac874437090ac9b9d5e9fd561a02434eaf3
86c73be33289afd12e360ce919a278321e3e9946abe3c4d85d59f4ae94766844
31798e97254186f3ef0012168483a500bf05e5a057a7a1d29ddc982648d248de
07c687e6ab29e6fe8f053df7056e12ef3208e8d962fee97bc5071cf2e8233eda
b368271482d9da24ac4352ebbd41a4b481fac65eb8eb7ba55dd0d26911c7c8cc
71b478fb79d91cc76d15ccd1a72d8dc29ff2662369bbff20820a7807fc423d02
8f1d3c334cb38591059256cc1fbeef36cfd5b5a17392b7536ab2a6bd6cf81e38
ee1730897477ba75cef601ce69cb1bc8b773a8e0b7ad51e5d35233c37d6572fd
2db7afb1365ce6b1f140ceb1349d281e5aa1ea84d32b76d849510964b39c5ab6
394d06618352e8f259f2530db7d44591155cdc51fefd1b4f6f968b6ba40d3e16
097c3e76e17347fd9e18349a304f8f77f2c6b918b42d1a6b8884fd13987e816b
c3741fa914dc6b1c8f33204f0f13a82c890dce71b9a2986ffaa2fb28c59d5a8d
62fd41a4b19e695ab289caa9cb1c34b7650956b99502c3e284c373b60dac7b84
9c618c42880609768ba86963ea71ca2bdc2cc8a0b7f9bd8b7852b76a59861038
39e2b19796aa6f6fd3e4a2af29e5cdf323eb9cbe993736e96348a8a338c492cf
853d6b6f881a37587fb147deffacb4cf54073f63f8659f53607f2b8109626c10
77cbd5aa31bf434388cd54cdd3f94d8309824e0870b0db78bddf177526df567d
ab1766c9b0a10333d854977c21cc89d7215123a83ab5f2c7a30a61a3f41d5e20
551a03d2353f9e87f21c3715b178c2c9f23b4dae07d9390f304d787ba9d82101
52dde9b800937f4c33bea4c904ef6d977bc75979fe2e3efc4ba640079831e430
4889c70bb27e3c84e05a7408b3d2f2432c8a44fbf1496c38e8bd259e444adb19
0b28689af90c3f98a357ba136863e58da8b28c7435a0a65a0ae549f30ec4b93e
3e54830be0c8702ee68725af884bf4befbf71841fe446528ce9e160a13851bf4
c5cdc937ee14720806afbccdf1295675a13dde9650b75e31affbe82e68f7b2c7
3aff987aaa558dbf5dd24bfae12d2edc34b7c72445a08e1a52126a2a3a26374e
4617460688417e8b63d4153df630d135123d447b7f979f556facf23819336bc0
6a1281cddd3314726ccaa1e9d39c4d57e81b4eb362329281c72489e8df50f926
f1e25c835701f66769e28c03d35dcaca3f6ad83add695c2511d6492750e631cd
a65f2cf2a338e992df4c2b8a3c4f6da0405323f74f961e53430125bd193b6c54
1bbd45d446da0e722513ef026aae808299d9fe847fc1923b0ea2fff14e734199
fa226b6e173d42b801d7cdd356e5edb63c8b7a6763de0872cbcdf0b4e43f256e
c1413cb82ece13911f41d24664672eba573e42b178b9dc385527f8ead965e96d
97ee12776018c74a92477de0318e9f8a0c309cc22e430bd854fcea85d65a6c46
cc14d9e5de1a555c04afe7cf3c5bc8dce8522c538b34cc365deba0d52c8edb79
15cf8ed777af5ce72da3da5bd7680600599001f9e7c1df58bf7bdf766fa95022
809947a5e2beac6ed351f25284a9a5c349fbc87c1dadae829190aa160810e6ea
3ccae4b16493c083001dcae845eda90bc31e08e90f520612769bbd3d35d49e2e
a642e356eb50d00b2cccdd7061b34f9a896d2c4f850e1f5cead60135e8dbd8a2
d47b0192bb61346521fa0469223cb5752a4d5e461092780a9750a140c01f6e97
0d316b3cd0442e51cc2e8a9b0f4822a441f93b5a0745965c787283c94639305c
5ed06e4da88041122294e9cf9a9042988059c9f65777d367481fa407a90cf117
b523c3fc4c77745ec97b7028276f83d7b36f2109500c338cc1e6e2cb27dc2d12
f90c9e71b4c626c59dcd58da30201a777ce88940f099243fa8f00827f6ee089b
99e2a440a2ea8e1a23e4d72a6b94223db851f853b6d8ccc40be90d8432df5abe
81abbeecf1f7f95b99d71e9d09d5c78c7862b8fe3ad2b83701bc513d39350a8c
1e018113c68ce057e558e5dcfaa598a3df6baafeff85e5410653c0a7b129b948
7dba28fab339fc75048a378abe2d50bc72e26bc38957f6868da0d9e028ff36dc
b7217fb57ae50f6e62a3213e01a6a7a8c34804048db275cd7e08dfa671292173
9efbd335f3bbacfc75137d822a57932d2a2ad45bcab8cc922018e7ea94425449
1a18ace84992fb750ef06687091f443eba3251a6403488258c85f2aa6f77d336
6c3a4118de71e963f8c113705beab402788dbca741de738e57f6477f3c4db3d2
a78b62d5997292206530ea223ea5acfd1c3d67092f556138f6bb3cb215a3352b
ff402606236fdf7156751ef799df83ea1f4ca256bcafa834b5e43900c5f36e4c
e1fb01943afc9f8b33c4ee3782a91c225da463d04021f428cd125e2b48b8f5b9
8acfe97e085c5de33f1d87cb8918319342edfdd2c33610322c4299d43ecea592
b43a777a605daf3323339bd2cd26af2e9778b17fb7bf085ee1bab3691fa638ef
c58cf4d8010383775964acdd2e4ddfea244e5cc8fc8ae730428a9eeb7f50c50a
545a308d19780319ce2e2ec83c86b7ccef1a79837943ad320beb0e9fbd8fbf3a
6cb0e6934053a64fc6dc53905239b14a4d107e606a093b993fe5fbe0303b4dbc
5f59e3af3e57db3f6a6d7cf65485d57ac8b3469e7c02005bb102199acb967d4a
2018dd0a607f98bcf57c2409703572a3a5b654a971147f89fef49df996749f2e
6606600f2b2736c36f86fd39b782088fc46d79e06299770263eb8c410e02bda6
abb91265c16e0304240985c7381d30a4495ad96f48519ca383e800b2c3eb1e37
d277ef632ebb9a46a2efd30cb779e2f39dac97469d4dfb48903c3abb23be1b00
8f28f7679d3a97b2d829a6f977d9e116ba1f159cc31a92922925bf6e36546ff8
1d330304d389dabbfbfccada6ac83a2ef020713b77073a3d753bc9a2bb23aac7
9a098bbd6a89b3117abb73b11dfe829ddae0199e5c6b367917304723a532b5db
5b2b1b2a5763350e316051fa463670132f186b0f58ce0fdfb01783f3fcdc8ee9
8166d3ad4127bbf0d8d2377787ab60afadab84e842729d37c08e652e0ef18865
d763e6085b3afe00ea653a7157a0f8447532fb01e6add9e011f0febee94fd6c1
c966ed8a827259554502927fbd6b262ce9523d6e55b37d7dd6588bd7182051ac
714f74acbe3424322e833cc5075dceefa25efa9bffc3da6dffa9448277af553d
fb5de6e5ac131ceb7ed34c86b649779df49b1bcb1d179ac031c690f0efc41c5f
4a1894055917a344d91488cb6764ee7da553ce0470422861dbf8044afca1444c
eefa01947a5c50cfd19e6ef26c03d0d61783637c2a24dae66713cf57701f779a
f5c6cf30dcba7a9a397e99a5c4f6dbda85888e4f5cd507b27f7e5f32f2c5b63a
8ee964fafded8d3d5fe4eefce59919bf22b9ac10a599e7ab9cab0d8e478b4880
09e19c545ecf75688445a258d9e4cf2ce61779b80ecb041465b7dab6e3235f38
989870a822f854bd9f1be28d0ae4eb7fe19e1cd1341dbef1782c785898281323
cda74727c1600ac9f367314942f8c617fdd3caecd695341e702d47c620ff8b57
61ecae5ef3ffc0367309d99548d7e6d5d4792d1d1d782de25cc341ff5bc081e8
b5fdfc7b72564408fba69fbe71fc1281fb39c11caf97e31442d336cab7f17596
d6f1b06476fceb7c5394b23ccaa244b029f2a0c111f2bebf866944a4f739594b
52d49a3a1fdb77a6a23103710cb55b829e2ef346ba318b7b94c63f2fbd6a4ba3
46e3a0a719f0f8c239fe98c09d6a065a3a523f006d480a06467e036fbb568776
c836482945390ae9dab102bd0e30ea5bfbc576dd76166452d3e8e1888b0fbd49
4b65c2c3edd90255ab294adcc2206b26dc9ec8e8a61c4dca563f711ab453b9b4
01407bdce443cc8481c856eb53809a09f3079a1cd02ba67b3188621b4112de2f
d77c3d1ff880203bbaa32d7265df178329e159ff4b4af4e11bcf41f3187087ac
a434df441e314e160ea391fbe380f8d8c4a95aafeb0eaa8213c8bdc4a6fb596d
e8f8d62e0fe71979f76b15e98f5b685afc2ccf5911e89482911bcf64c812d3f7
ee6d55633dfd64eb7cd35e5d3feee2d492f1139b3c969b670840baa08b1f788c
85a42faa6c7ea17ec75325cb778bee496127045cd0da2ab847fd6789922eb4c2
527b365f3f068fa87f85c4eb9ef0eec7480adcb3a21f58b9e0fcdb74a3c3aba0
e97b241ea8c1fc30759b56509e9e18bc9f585e362e006843e24b61d9e60b943a
e9ae43fe6a74c4a431413a701ff5b39c61a7a6e74e40b948cfd5cfdda70a10b9
a9d0aa7c75967fcbacb5466f80c4dd58f7c5e45f06b676a8f3bedef7debe08e0
735d3640df31175393f2efcebf8b1a461124d1d6e00b4a7110fd450d32370b66
a2f686c2fc7bafaf3970f946520c8bd17d3ca2bc77c6c87a74460fde7cb22e96
3389980369984ed2e48f81705139e8b8dc919d26d1f316634f133204c03499cf
d28ec27472d3a566607786648a0635d0d12fcc2631a935b1b7d0741ebabe3c25
faa413f145c67b9947467c28e5745ce252d11d1c336612d7f897e696ef4b8e53
70a726402386e9121ed694faba54bda145f2fb05503f84bd24d1067a5661fa08
f16d6debb546990bcd71ae3a344327b303ef75c7bf817e3b0f5ddb82cda1a997
238425e3e79fd90dcc0ac879ca092b2307f9ba5d2b0b3072bee661abba43a1f6
5766ce932e1830f1b4174c54d04d21d3e42dca0e52cedb299bcb2e9e862710bc
f97b17a14690994be340ea83585bdc12596a630b35b195fe636835a3dad3e36d
65b8c52162801814b7909d5006bf7d8e9213bf49b7e776733f3274ebc1b1467a
be52610bf237082f33bf0d8aae06cbaa1154f063057b421ce31095e3c421b24a
234686d30f61af0f2763690a7e6dd62686f58f403b1a03ff3b240e44d031c1f6
4748e5bc36d524ccc408922589c5de81e65f2dc6298d8b2f0e417685b583332b
7f4dab8f871ea781e7de7e2b323da1cccf5ef0089444861665ccf5e4e9264dd7
4d9240e36aa772baeb11214ec6d908de63bfae057db2706a34b8582898731825
801ce90d8b1441fec5259c1752cb9322a0146a49c53049745aebe1167d4efcba
f899f1e3ac9c7dd6531dc336467668f94ec0f9fd4a399b8f9b5d9e7503a22ee0
9994a4babdc8e0cd01184c39d845f847adc958c28a25dee99cae7ef7f54dd753
f049b63bc1f505ef01adfecced1e4479376dd537d11ca4267de7956ef5d6207a
8917d551b875084d6b8a8876a514c4d00d93b73d2c12aa539253ac02e8a8cb7e
3f037fe11a0f26e2b9b81e90131685d755c9de6c35510210b09f0992a8abb9e4
4754e1c42efeb51f55e873033a91b087d6a6608290d6978f8416540961b2a768
f2952805159408f2ed4e6dedfc87366bf5f9dbf0dc653e118f5f58df90d1a493
c284c798d26050a951bb4eeb7c889c0b3b00e0733d05e52c49815bacb7abe704
4e8af9b61e00a5151440afbee05673d75385a955c00970c380a76e87de28eb86
d249f4e20e938dc0bc94664276d7354269caaf58a89a98a99195d425ba7cdc09
0bb8159aaa465e61bb5075ed23e93ae0e3e19ee126e07a92992d8939f30fea50
78b6d0644f90c7e73327a26c955e9127a659973e11346b3cc6829a4bd4ce69cf
68b9cc5d17cbb1dda943958434787166880f5e2fcb761c37de0cc7b64da094e6
a16c3f5e86863019d6c14380333e30ada1f0dd5e02f9adfc8127bf5aaae5fee5
0b0439dc6979f97eb58467c0ab0f15557ada821d2633e3a3a9ecf042b65ea7ed
fb785624acc8063398d2dcd47e8a37a447e82fe4d82cf39dfdeaa2343ebc0b74
8e2f63c8872d6c52552ae92eb9b58d383746103150ad268465e9ef6650d73990
e434403444ad398683e482c9262ab4cc316d9e2c7c889006c5cf618e0c0c9c40
1120380aaf210c87974a4882635f5c708240ca34693059a08e0be889cb57ef0c
94289d098993ea8b56f1f50352a9c0e8eeff4f0109fa8a897e807eac15f8d5e6
7366844fa241edce2fb9a292608b1d03eafa1dd421eabc1ca62286b0cc9ae736
d30636617c904ef37949054b69d7b5e731e9ce800138054da8d97f8cc35faf17
d7a597dc508e89a5f952f64603fb4d3a5220ed16d314e31140090e29834ae712
addbbb133ae3086e2aec04061dd381b3cf6ef5511a18c18cbf43efa6a6d63818
f69c1e3a68b58ae03b37e225aff1fa24f14d5b56a7c2bfa19488db7ef5d7df15
17096619827e346ba64c2abee98bca0280551b831b2ceba2ed229d45027ac932
824f1f63ef268fc38a31110652f7f303d8d5f57b9008f50df6f30d6df35495d5
13b9f72f4538dc26c5d21b7747d06d123f6d73229c22d6b895006eb8d0e2cc73
92ca506040b08c07ee21a4caecbffeab95f9d5a8b85c2df66be4a187369a87dd
570f2c78b0c4292a97baed912233e1078fa19833a40901b539ac58a892c51dae
f6d992c43e7d0db0eda56874738c015830f88400558f788a082e218ee725ccff
d432c8e939f900c69e1e66230b9e9e31443de28b78efe284a341faac6817ddab
596e45d35c3bf9b1a45af8a88271afb44ab562d477c87ff90ee2cc1341ced0ea
10ccf04ca3d52ea64cf71b6c420fe69d9b92b315ecb9f7cc0d0120fd04ddc052
a692bd483ca078b7882b7edcd5131a2f51d1b3af4876189980488da2ea4f5406
b7a1dec588bb2c1b020db73e88fd83d8add08563ee418d696a21462f26b437ad
21abdd5b47d50324aea0a5866fbeb826ddd5a06b0255ab680f0bacff5a1512b6
4acd50259d38dd920f88ef1656bc7b2cf13a2b21bbfa1c951e91313011d4ab19
966990d777bafdf87c20805c436208fe55b0ddc0dea4689fc5e3d9abc8dc145f
ae1cbcca15bea25d31a96628aefe034f46e6345aa05a006a99562813557546e9
56423290aae88ecedfebb6ba5cb41fcbd316d32f13e6772c6d06ab0ff8c874bb
58b1a34e8552a27363d39f8a902ab8ce8321301ddd665d01eee50efc682494ff
f473f0ab558ce66df33027b2a01cfd186fd19c34c7043f9280d95ccbc5b9d970
59cd2ca1c0c20bb1e08a10127e1e274802188ce78a7a77d4bce3b3eda6b8d61f
dcc89fbda86265cf121d6c9c6312d2e24dc092ab44665c9d969bc972ddfe2e43
5ce988c651c1702543f2e8e2109c5fb43b5ba01912d3fc7c62a8457f0e46574c
063925e0565119ac24da5b2f63086707f809bb760170db09435846b3dcf63137
dd7b690c849c01145a51274a4ac4e2978a03f9898fd96a96c5967abdc874104d
abb619415f1426e7ff74cb3e1059c94c0eca91b6c9aaa44ea5c22b38c783befb
d6a8de8d8a6787c24986efe7f60fa3adb919e51dd684ab7948f1a3e1b45fe964
1cba4f50941f70455740d448ed0a28468c77e11ed56350bd28579f9bc95697d0
2fffedc07512e525c2ae1c7928d3ba19e6a97a1d402e266f85b0054829ba1429
14592c6bbd3b78155e20181473a4bb894b346ee59e3c19b541763d99c579c2a6
b9e0c7289075547582d8cbc6ac8defc5061e3dbb37797bf0755574b32e7f155f
f8032b8c9c942bbfe24b1c4f124b3267c8e38d8a980f847bed3b4d5408399c79
1dd1aacb6f99c24722247483200db182ce8219f578d70beba3c2e612b6fb902d
932d576b319b7a89866eab24c19732545c246e7383769ca3ded6b1c57753c32c
66bda311734df686dde519c05e9ee4e3bd700c25adf1884b43c3c45e47056c70
635573632c051e13e4f7c25bb7de9194c4b3d000691cb541f2e3ee3c218aace3
9898f514283c1080232f5efd240d3a6a7b189c31b73d54c4ba26c3b072692cd8
d4b930638a84ac74f8eedf3f912cd31804f2ca0831129737c815b1a5a1a8a07a
1743a6410bb3f1d82cfeaaccc02e8d9fdc7ac0294d3c2ce0850fec8cb445fff9
050568279a5114c984e5eb36e8d6a897de3d5a63fe88d71d970b43b819e93448
64898f45acd75f117f7804606fd07645edb870213d6a5c7041650d8573d8e1b5
d57f2833ab3f44cac31cea67f9e4e72997ab4a55e18a3dfefbd807c4ec3c533c
7ab734d6cf616a91c77435d6b7b672138e0c8095067447ea0a71dd85f6a9e436
357cdddf31a80e6f8d339069295ed8e1cba2ba02d3d2f08eb16a9b824d07d411
6eff55df783635dc0660ad267b4ef44201fef7788e51f00b1de9e4eb3139dea6
19c7f89c43dd91dd3481401dc4156eb4ecf88a6c31db369c4ebd52eb4b6e05e0
0ce57795456bec24184a94c212ad9326e855abbef4c9e1bbdf17e4d1ed98801e
37ac6dfac72c729e319a726ad097ef725e086acf59eb9067ee823f3804f3e0d5
e5ce8dccde014ae52c18ef09701a49cceff12b4f6cc3a36207dd672187847bdc
a24f509849eecc38688a8f45455fd03b95b053d450fbf533e7e9123fa18b7ff7
18011b88c9dcafaf5c785ab04420a38846d2c36ffa7329c0d0af439ff5b45768
bc431bc9e1d538c48b090dbe0fc1e922740147a3ff9d0b4288d1e732d942a239
16805424ce26c6c91391947d4a490341a1bb4545a19875a1055452f79c013536
50af1bb0984c28f3894ba786f3cca844bcc0245fbe0f9d1926f3f8222855e752
0180221ce558790c4dee7b21b688e5cdfae377f4b27d4a3cb108ea1958751fca
f95695bd51ce4532ee1e5583a9d39beb1189602dba48d038ccaeb58f21e29944
2bd0c7202cee4f195d869bcf3b1841bc0dccc842f146373ad888eaf2b5ce562e
bf0c3ef88a9a81db204f4ab0a9e211675ece2179434d00979b1ae74dd8c3f3d9
fff2b078df5b86eac3514159843af5338ace185356aa72dbd8b4a364aee51ebb
3e62747e523ff213fa91ff937e3fb31744e6cdba180920413ee7ad05ffc01cba
d3a371c97323ead4428adbbd40fd19229ec5828f21a39c16b11e983ac7fb5bdf
45b871c12f2fdb4e135e2ac01b796dff3dec703e26edd0a9ef9b67cee43727a1
a0e7be520e91c717315c156a38afe3ee9f5a938174455aeb7aa43d325cff6fd3
3081f895041d6afc1adc6b8bdaf56fae2cdf12684bf45ff998c4ea8b9efd0803
d9e784b2e1dd8ca37b06c18ad80a3fc3b5debd19bec4e706d9da1c211400f162
e9d6131602c2551ca437847750901e29c0034b5713b37167e7ce4df9bf4be03a
9387d61c2edcb32d8df5dfc0e46fd9da028cd50d1ee2899029b0079b348369b7
89c447a7c63848108d228821c919ead8562a41c4e747b1957cde9bc8f0e9d405
e90f49f52f4b13a82177d4b02dbbc499df5ea720a9850f7aeabe06ef1905fce4
36e76566b1bec29295bf76963317d4369f377d89c86eac3e8661e666605fb8c5
b822a2bf2bbde755f310b75a79b689c7d41dab2652100c5723fb9a455cfb2d21
d14f13b6128939a4bc9ce5d0147ad7382f21b4e7614a8580c86d6cfd3f27cfcb
cd9e84b3e025ce37958667a368fe8730821e5d235905367ccdd9d7d2b7b1bcae
390702ffe1784446e9de34b496ed86a3f215abbbde901bf4807a5f4d125d2823
0e3f4ef36a5480ef3cb42ffe393ea23fe8493b4a8af3c1a8e84a87c077be1235
7e53a479e5ee04c4e93f26a318a0f0983faf8d11aed23f78cab3e4af98b4743c
33c97bd42c6283a8923047fadc401ab8c53bc465602c1879b1fde1c98cb6ddf3
fc18bf85260431e458e0a882a7878e13761b08c6dc4f70f7083ac0de51d13eaf
5a36b34d64ac122c45d8fcaee7370e54cdbd9c5a876d47d0b89bbb2a907e6e18
0fcda4c6dbaf6142c1d69c8ab060a81237d33e3f04ed611abff938a59571e4ea
345942bd30269c08d7fad922d09aa20c7dea64e9b0e37b491f4ce270a227c5d7
577489f52daf0b92c0007577895e9e2dce2c0722046046fc27f63d6d9410244b
2d047791568e4dd6c6c00b630bf0e45c6112f705d26f9ffacf0658469f389166
69ed508c90ae8795af473f0036827ae80b2c96712d5c66f61e1da5cd62037f71
e7986c3bca827461b05686bbcc06bc5cbc9966718baaf561b10f91546eb3f5ef
7a90e958871db3d4d8c7a3080cab9db1f05d625df8b6d51785018f208422e33f
79e31d95cf3b90fe0325046682f5e673e5de270f510d3febddd051274878424c
d3c27579f207ce8ce543aa8ea0d854036d271b4946db71a87d29b3bf68b561e0
8a658e847cedbf0abccdab5d0d0993771ba445e13f86e5a4a69371696145d77e
e01e070a5ca2a07eacf92aeacaf749a4f880dfa1d1872c5b5d4ca6d61ad6bb30
e658cb21c6e68b76993c954e1109380cc50c7a4ddd39918519891541d2421c97
5cecf073679de9d0e92de36ea9a42c6e75dc046c0652ad1a5ac57557e84263f6
fe21c6b612334c1c4629f159097653581c7a322bbdc814afe40cc51198895939
b0981b62e4521e4ef8b0634f48a665fb25f35f465fc9734c7306da9d294ad981
8373c7b8efacee04721a678e2370790dd6818020ac00b8d56f7a021c3a795929
b0afd98abf6dcbe120a79a4fbb50690473b9d7f9575bfa2619f0ad38b39f65b5
4a56000b89eecf8e241c2755c46121e883b784891192a716430688a2147bb015
84ec23d7c26cad127176465f358066de976c86a37cb71f071e5767dace4c6130
7a14727f293e3cbc648c613e2f9e4b52fda083b25943716b0859b0e2ff694f50
6670cd5f079e5d64a994a8f918822dbdbc44f38af7a368b5187aab9328bf89d5
70b1d4a29feee8243a6c307bf06e1604ff416e6494274aad4e3c8227eb317a23
58aee0173cd4a2214392cbf6918acd8f8281643500435bd49990d2b05e4d6834
61f83e8ca15ae24980f5abd83f4eecb68b8c167d1bbd4df1c56821080b0eb0cc
2296a932e05b03496f086134feb93836803b883637538d1d1353eb1dced8a891
1b88e5a3625a16dbb05322c971df7a6a8e1d0e692b6806288a42eb12c3046371
e72f41d8d845cf7f127b5f106f0afc018b7bbf618c3c51fe1d82c096c7d3c34b
fe9ba0e5655fd277676781364268974c7ceb92427e0892c333628a0f8c0ddb58
a579cdb26df67396f71109672230c57e5272036a01827eb82faf89c99236111c
d5a3abe5efe78ab1cb2f51dbb2e12ff9668fe69148564dbaf5cac632f1b32ba8
a69f8632d9e7e5de66588b1539ccffeeaa36e1afafe7cf8d3bf88b4974f1f21e
f07c5f1ccc5f80a09e0faec2418b5e75583956b71d6a135b28d7cd75fcb6a5fb
10072d2cb3f0e261a1e19135ef705dd5fc09c8685e889860aea64a99e021f1e9
016455b8b699655c049aad73bc0a931d569f9db8e9abc4558fbeb254e1a48c8d
ea200191edff2d8ac64eb0877277ae0af8a90b810c9d92ce7ffdd7a1d404751b
2f68da9e059d79af8c9a58d1fde0820586f1a60ce11f22794363ec5fdd839357
f18c277daa6179c7867f8c0c188c9fe569c8c5c07dc4f32e52c18f550a85b4be
f33fe4663b417a0ce10a32322d092b10404c1e8a9067c3f2281e3b354c0f8f92
8fa3f7704ac1d8a212ef9339c952e54785676cff902564cd3daf7f496ddc8c9e
6906d2bcdc870ed04834803f243b227e11e301b0b83632329150b68c37b25fb2
ef111ca70a8d8e3059ac0d76b2fce3f654fb0f59a59742c6ece83713bea792e1
91dd66fe8d84f6b796022f258901b9c71abf7825ae6889db6e69fecccbcdb036
5cff05fff8c4a4fb346a8ff966bb58cf20df835cf086c4bb8e4e78212f2fa18d
1d945fc19971941c5045926e1b02f8d6fc5874adcb1def03b06e0b827387409b
912266e18f2fd141a648ffe72844c9c2e3d94f7cc0eddcc642967d506658fbac
7b49c86f02a6b65d208797d435737942c64871f2d03c5982296bbcf1f38daf68
6990234f3bf744991b92e42747ca3da752280be9a799db4b86318c589b1a1f14
33fc72ecaf1c1c804677f275d40c09addb04c8ae816d67897bce036eb8c87a6e
f42b4979df86ed647fbcef0eabb4fdf14cd947edef6cebb1b055e6a08e1caf43
58f171aca194c968d43a51d7b3b5d6ae36444b8f165c350ce93f9b53ff66aa9a
808683a354fa51a1f11635259f42de30e8a62f3e0bfa0ecc35727f8dfa9f35b6
cec7d60d627a88f9793b3a7e8a5b43b0d70807af3d688fb9afbffd6c3567f3e7
b06fd42e146de3d31886ae66de71f880375dce73cdc9debebe0e41af0f3a0e85
1e2dd7edba68e1c4e84002341056007ddcf8820eb6a0526007b7b7423a438649
4289f2875bbb22358724724c063c64f81a05640ee42c16c2e659f11b87ef47de
f2e68751160988cbd1eacc698fb88b24043705f255447f2000786a8debf380ed
54f67eb1b56e389b23f79d8c303c44efc0bb55dccadf9959cf264f4a3feb169c
c10f13798022672907bad67c5f810d97144e624ec1e5f586d39cdb720f11172d
b98dcd643589b619cb09d599f4ef94da7d76f6f1bf02c19ace8f5a7c55b3083b
ebcb9998a19e534fe13bb56792c328160a53c3ffaf6c43c2f85fe03cbd444f7e
3995c66cd56793acc0ec85822f324c219d8b673f621d9fba8e86047eeadc5242
21b6c9f2e61a629593d1cbf73c9fc5d272b0e156b47a44c892f5627ce61046bc
d03b7edc503fc6702769da7cc991103b6c27918910a26c796f76b8bd933e34d8
23df84ef04d7be7482e66393890d9efd2f6694f730355d576a2b64d94544ef4d
148274ef774f3b1df397e44e10982c9db99128d0ddce4a4b831cb06222520e61
592ec771b4022b0596fa14c216ccbd6028c8250629e3419dc2e6f613d84da9ea
2847a247e57823635c994e4f6d0737bf9a6a355276442363f2989ef797babee7
02a315c034307e4ad555e1c3d1241c545231c082023d53059cf8ad9b68b5aacc
2855c3c65dbf4a608e36d9411abcd1b625f28d0db8269bffc0034a6547e2b5b9
61cd5680a0c9ef021264b9d91263627ac2a94f23b58dfd90db4fef486d3a76d6
264a761912f7c772bc7e6a335b3ff7137388db49610effa36a8d6617685193af
b7dedb0aa0462a8c10ed9a908943b15f39b0749585a78701cabe0ed9623f064d
3166a856433b232ac6508a960ba243a41b65f8e74bfcdd8949811957f0204494
e85988b1e885d2d5acfd3d489dd1972688b05cf0e05eeb61ea1e281ad9eb5875
35c80952f5db3dbca04de43dfe6e17534bb0f986596ac4b55529a9109b66b9b3
4623a9754302cebf488b8604bffc5ee848607b0d5f267c51fcaa41a006bba8f6
09ea228129ad5156333cec8bd4c6b287f34d0f9b06c24dcc643e6c280b00a14b
2f7da225561559c8beba7e6db5e056d1c263b1d02a4a04d5180ac1831bb5e04c
8b79368a26f39cc3190a90dc171bf9dacf8bc644dde696c0eb83d6c0628959d9
51b04e7c0d5c7cc1c43cc2caceaf0274ec54707a8e7d00bc3079d01d8801ccf0
f75777e14538ea2c58020f34d2d591330c5b9b19b5228a117ac7e8df29a86389
886e615c584214c8320d6395674e1341e1f32077a7deff7e804969a317e5f92e
956de19f506a7d127580d938ef1288db1d1cabb7625b880af1e5230d92fd6459
9a30f72a29d8ec1b7286515053167c874f28a8b05ee69570cca0070d2331e304
328debcf50f0a079141df876155f3df9484b6a78fd768f153ba40dcebcc5142c
73d55cec23dfc2f77b9dbda5cf901cbc078cb1840d7f8bdf59b5f78ba948a273
2e6c8fd906bd55af464cb26af1279a2e3bcd6be7f90d1ec7ecf9ea9d090b8ac5
4b3141d1bb433b7366fc7afb7f67f9ca309093fa4f5c2529dbc6ff5c1e5585fd
ddb91742f88a3b602cbf47734e2bd86a12bb11683cb9a7ad1fcd3f959f75ecdb
84000f2325c0ecaa3c736bea81427cf9b603d57bd5ff576ab21b5cb65b692651
e77505a402010b0a251760c1a087366acb502a5fb6e90db48a75a541c4bb8707
61ed253a62adbf357045eb55668154b3b70d57baa6ae65cf35769d05baa6c09b
50fe61ad108c4040efe837f156e243c042f5140d78fa141b1e4888e56cdd7afc
40fb00cc440676dd44f73bebb00ac9e150cbb30f173f9e893027739d5ce4fb86
0c2ac7837ead42d99e6680f7de23efa8f9806671d1ae59c2104c63e9801add33
3446b01e1ac560fe8123cbdb851a6bb884821aaf857176b4cfa4f620fd1e1980
0dd0fd32b12faebbe9f2694e6da19a1ce278fc1e0f880818294264da2f4f2f49
41eec1b2cf789835ec6624e8de5ac2594383e10b31ba194f4fbee30d6229ad6e
e6a9d94127e685a184b5dc0908140ce2b779c1433d6caf3c0b845e81d2798991
8cc98a5aefc2787ade4bdb7b80e5f4dae42ae233bfbeb643d41007378c45f9b0
749cf9f8d677f1daab6ec00b2e090f56124b71bc758da45a47039aa2f05a111c
e6d9bff726ae3c927710a908d49295ec07ad6015fbf13ef19bdacf0b3f4a87b4
1f34976925cd90d6d2cb82a38e250f9cbf4d9552b4c4d4817dfc87c3f7259205
64d913ac209c11ff3c46567dd10bf99976c7f76f63ba38d440590bb6314f706e
3e1277023714e55f4051460ceef641c6e3ce455330018b658a3a9f607e672b20
6bb7e0081646f2c07117e1c388078058c82443bcbfe344914d488b4c501d3afd
951e8677c56a52fdb3cacbcfb27c5142f2e2057439bec7b144098a2e37145114
3a8cac97bb7cb88b9a19284e144f25be353bf725ff7ed107d5ebedc74220d9ea
749df7ac4c7cfee8a32a1389e51134a6f9e4f8d5190740e8bb78edaffd77ce4a
03e2dce341bc9bc3d81842d40b32e79e57a992a9b62b644fb9ab08dd66e32250
18970923ce378f005db3f7e0284dc19ea72bbac7d78fcbfc1a4acb61d7974bd3
5e6b5ec4fbb764c46f44c6dd6b7ea32ec2edecd5366088f48902e3baa0327402
a93036979d738c611ec6cc7a0d99178da39366c11c7ec9d842e0b97c1093f858
d85731a3db36a67168a9996cdebb5dfbef6cdb822c28bb8a76bcef82443eb192
7b9f64c1d29fd095120fba986ec435c144462e99fd2d703aa21a87d56e6568f6
ab7f63b2c3961637c61d0e346ae84a09132d2258d07c68eca4e8ef0df727e5c9
2e4d0b2d63c6f761186d9e9ca07950d9c93b34fe48ced700a1dc7cb079ba3aea
38c6df367a997d426e15c06b54d5c6bc3bbbdd06d94d239b89f89bc39944eb83
fd9943daa0a0fb1a73cddb9377e4c77d296aed8cce95f3c9f66f12e843c35b54
3c825e430759ffab06a14a03946cc42e1d6c1755df14405aa7c22e78ab0fc867
65005a083c253b66e8e01d269ad61c4bdae1b03ccdd43be6d8bda664316098a8
721201d8c9fa42c005b0348987b669e4061fe9c7df95d66cd5fecd46b8a7a757
765e75e320797d6253b99b8442068fc5bb94af94ce53d4270f61c0b93385906e
b2395759c39a3765e0539b322c86b43adb4aeaa47608e6485e4f85ffe7355361
0005404860084f6daefa1318d7c7dedfafc7994fbff457aaadc67bb552d47d1b
6e36c037c89261ff11add476c458e941127a3b5e7928340acc0451b941fccc43
77c68d0d7d12e29a3264b3a9c62a601a4f17681630e77f02ac509cc204e43049
e95ae3a4d8857dfc2b93c2f4b74ce247a18c5e12e7d8bec4213082287e42aadd
b173b83c62dae180c82513790952e51667ffef6a69625fbc6a54fd50acc8622d
1d3f1ed44f0c5d9ea5fdf80bcf1018b7868126c18b53c7b043dbb3e4ba3fc87e
97741dd0da499cf09ce54df54a7e4f43bdabd8f1599b97a8d094d0d5ae7a2217
d6f9388557dd0ec5322f54cf25875c06ceeea9879c3e893317465872c77ecbd4
8b762524e7c9a6268a262cd067e582abfe34c1b3ebf9096110a12b27c7d33885
4b253c57de95112f5db15f05ef2dff3e486192a911655a4f0750310ca1c66698
a1b193e02b6bc087c674cb3bfe2cba73e30184b91df7ef65398cb7015d7b7b59
8682e213d02fbd2497528b6cefc2bbbed2eea0c771a6ea9ec0bbcf8824b56ff0
993e31a23e5820c104287ed49717f2c9f5dd7c6ca36b58d6ea414c74e1cd7e91
8d7335e7670f22f9fc8445efea7719b5265148d3fb562f9e51063e63ea3ef04c
981d0949fa609e586c82b6ced4a6a998bc0ffff4d8c11e07ecaf1ebc9d651adc
8a8a1943e184089803833a20a75e8a19a076fbfecd037f8dc19297545129e9eb
048ddf38ee3666dfa529cf1b553e95a3b230a8fb1725c3564903c1fea71e83ab
19dc06f3a079fdb77a27caa809c1985ccef4b4bea9b85365b96f25f1b443b91a
a587c38d97f6918b75dbc4da8bb6e01b7191a462142b7ae8e0472afddbd7418f
0022474240e216f1c92d79339ca3c825efb8e769fddca14d6734ef7e19caa493
f630b27d169001ab198dd09dbea29c8505ee71b7ad0ed7c63edad50be874c561
6ef9dfe17bf1d75481b75e51b485a5f0710235ffd8305340fb6bf91e08d397be
3de3a9fb78b669c500c406005d5f6d27ae944200b4a4a4306f894d23dc22e5ad
a7c76c6769e8797e5d4b75f287d03cef59606543416819a2fd499e950173d8f9
31e6a244bca7732baf591ec618d86d24fff687eb152a8520ea15c24722d0f4e1
5cf4d7d10d1d2596085b1d948e1622c4ad1ad3e20e0c88915397497046c38b73
98b3a70ee717c107729cd309941ce1d956e14b9db095c2a9e79578116a0cb740
48fde8cb51f85c1dc7ed902c69e8ce712315bf5b90a0857347a578f7d2e5530a
0c6e3cbbb8b30c84a4fe9f696f4be730b4aa017749cb00278d02b3dbfa3aabf2
b72a61c3caa8f2c0e767459d1288374bf8c2bc5e553209904046a3bcfcfc4d7e
a0ffd6633d06645bee1524151b0029e8e12670cff7870da82590037c4ed8daa0
8b4fcdb9346ecb29bb154fbd6dd6572b9daf223fe4c800ca6fc1201df2dff4e1
e571777bbec39d583fe138e7563a54155e17061c0570da5c388aa981d9b895af
d9087a9771fd1f0fd03904a2e6520a0b9fad237afa4d7fcc725194d33828d9be
43a9527520826ba6b484165e0095a5d3e1a0e504248d489d17a77246eb4f4db3
dfd2b145f64f71e08ba11814ba563027056517954e98e42fbe8c08e8db290796
f7ccca6405d0c15f6668dda7498b44d4e915308a63a70f0b15bf11de2ed0d61b
3636387d1369c50c3be4b13ca212822567e5e7e725c98d20723935464428f2bc
dc72f75a04d0a9977c42d854e095a691cf5fbe09f9fe4b9b799dea47c8e384ad
9656c2336064e804288c45e079509974b785cd7ccf89750be5db9bc73eb90b7b
6725fbed01232167dbebc13f442d6080216dcd52a275615b777f13a1ca3f8a06
6c5a4287b66dc68d2369d4ae4d7c2ccd8c9e1ddefa9ddcf735d2ca10440a0d59
f337a0c60b9267bfa29d43f4e56be8eb24e8eb2318c943171f8b585f72d22c78
72698831ed241d8e39d14af0000b36a43c8346658b0dc85aedd1c578648ca1d4
e9d80e88d848d2a7d21632b7181da5b064b25fbd9c517462b4f58fb90e21b240
260d84ac275bea449bd933bb6a35adce3e7b5d7ba6f0e8745d1eb47ba735ba67
e504b22e421911c4d367899cd6a7145e9896a0f52204cf2fe71e8742d9eb2495
b5adc6c61203d113f044365b54f31b29adbdc89b5951d589982228f88fd87161
689c472c10a3386c560a5d1a4246ef335b9053414eb28bfc119022b932cc8713
4c86406baed37496684ce0fab06a60f312deb0800d83b9d197cc7154144e34bc
1aa8d680e0d187a30492a3adb6b8225188a2d763da53e16d9acef4cd982dede6
edb74ba8390030d871eee361c56cbf34fcd1b930a67c9fd6c953e783206ece75
b9d7682a1c64a28b7602cdd29d033020f61e3a9eae55be94315da3233e54ce0e
abef4aaa486522387999bb1341b9af95f83f03efa58f37df52a72ef3179e0993
48e2b4d86e3485368f66a8864abf9440548964948cb562770bf30b9d368547b5
b168ef822649b4360f0f00c42144cd31d571ee8393b8ef4fe90fd2a2e3a2a178
d9038a27c11135db11a6d87735effc35262daf6525661c4eed5303760b2dd2ac
c51bc184908766792ad5b907daab30c4928f51246b7c2aa3a3986e2c3459d517
3c3aba3fd2bfcdcf983657690a982f04e0eabce84006e0e08ff22586925446f5
7780afa3a6e509ca70eacd06a41bc2e54058e96509b67602a6e0c88591bbbd9c
c8adb6d74a50cd2650dc61c5b7acca984411ab3eab86a32a66ceb2dafe0b7f2c
c75a0af067c126cc28f4519429ea3a414c50082d21389917d414caa08b0fb7e3
760a332a9b2ff604e1d9fbbf62b26e47777e9a93a07a9962b972a1e4016e144c
86c1f2442f6f9e59d525e9f4dac2969b11677ca07635095dea673f64bd92748d
29ff4dc8d278899bffb7fca64b6daa7f032cab786e82df62dcd45bcd9b4951ac
0bd73ac4028937a502d873a171ac8ea5cc3dcd0267ecae266a364390ed4c135b
d3c9196a8c9ffb16571040801d9ad6b8df28a737e9a59ce4c4bfa4a3d2ff02d1
e9078cf4377b8581bb9e7cb2e53e33b863224e45adaca390d04e72f89df76e84
ddcd3efdba6daa9f4ab407bd33ca5d93794816411818586024c0fabd72f2c45f
4f05f197be40564901736d5e4f751a1300bb6777094417768ad0229cb6c71a86
4c24f9c7b8820b252019ea61f2a0ede194865f678defd3a99dc04b47a8870d23
7775ec978ee13ded512f30f8fbcff899d88c7330133cea0e96ca25d9a550b8c0
63c64ab6b4cc7b87c9bb7188a358129531ad9281a1f98392dd82e9fe574f8992
97d1cb068c1f69cc377617120105b2e6f0661e9ca6db4eef6e53f483f78fe245
f058f530d47f7885d710e0aabdd0997667122686a673ccc17ef690448b2978ca
31514be2efdb222c93b0c9e177f1ef0bf0f93c6988b2eb338b9306bc54f3cd0d
470072cfd630b5a26621e6272972273bcf2a824324930c6de0edefa29eace1e2
ab6fd60f98e60baf9005847df5591456ba97f6a116dc6712a9df4d7bab1d7c68
f3e478e525a2f44a2b7636fbd1ae27a1e298463c6a3a773e2e5621a3c90dd9c4
ea6f11502fb326bd51d9cb81754c8056b1baa5abe9528c8190dc6402196a1578
a12f4d6c78a56350100f126f4116654a8bb1a1d6de4a55d72452146396dbfff6
651777cc91b9f89c8ba97985f8e484b82d6e06d7418feda0b14776c17bd3a268
10e974cf4430886bea26c4ae434dcdc8f2404eb6610dfe506b65c421c08dbe85
36e5b6df41b3fd4f436748aa98ec46a5df970e91f0c28aba74ce27dc441d6bcc
2f21f2bc2d5b853abeba40bd69d29c9785cf378402ee3418316b3da995621524
5df1c2cf2063550e17a4b91302bd055b049227d4889f70470430dd78e23bd9f4
e1e2cc14f8723ce448c9b64c682ac8e0d538e5fa2deaa84a9a9e486016b5a46c
77b46915b7690f4075268a93b35faf589a9a35c9567d6e84bfb735fc50772581
ff8e18d11c332714a96c8dd2f0683738d073afb914a7bb0de924e41d66aaaef0
9244ec33d37113149b2fb7741285e4dde514b6c31e6dd0621ce3b25eb91ee79d
f8244b5a7f7a7e6c9ae850dc8767ccd749ef77fb5bae3f4dd35e48a60809f24b
3398ffa1a5daea6ca98633128481ffba06a491bfe0e32b7d6780de8aeb924a90
b255d44f4cfe830c7e6f39aeb3cbd891addae248b2db16cec618371da0ee8cc1
bf2609a8be49285ac52dd574d3b95bffd947fdb94519be3fa416fc76e37d6532
71cb069199dcb4beef148846ff77b4344173fe0e2b39ab24e61abf1cac6faa19
393084f5477a5453aa3823ed75bf46621655da89c1042a6c4fa491ae4e47e337
aef0a0074a4dbded88cbb5f8a8740e18982660040a92b1cd46dbd2c79c4603d7
d8960487cd77b7ff22b99f30fe50f6787ab398d6ff523d3d6fe7580417ade473
1bb88963a8ec4fe68f2a3d6e09f6902aece0c68954c2cd90f5b55693c9c837c7
e05636d6bda71b3ee7551c4a638f77
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c430035b7d4eb41c5714c319ae0c7f0df32ef5dcc37f8f9386d33dc238ac3
a9d62803f85da28f15e122e2145dbfed3981914510bcbb68f5ca23b701924cd6
0263c5280b87e5d954d9c550e57170ee784c6b3b811c451e956d0b8dfa95e451
7e2944c576385f77493f6f695487a520664a9458552c0256354bd9af37daf130
c54d486d7c20e844e0f2db704910cb2f6575ab39d590cc8757bb72accea35008
595d2fc3b0fc3aa8df6aa1d8e70eb18ddf4a6eae50e33f98944be4612c559f6c
301b9e99e7f867555a3250b4e6f0036515fc3e3209e9c91b44de85dd13e2ab52
55d032aff9388f54e49213c6497f9f5732819686a0a53aa925a2497e8220b467
0848802290e28157b27ca7b9083f0fbba0901a07a9dd4d67f4414b7c1d20bd26
28fec9c16bb6ba424a1cf190e7629c711a290218b284b8e812dfe73fbc0c9675
548c11dae412fc3b6b085d762188e5e8b7190292bc965937db
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 33 /exclam put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueXX 5000793 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4d81cf7fbc8de5
2d2e7bb57142033993f9c08c315abade8dbc4a732e84e142d3bee51557910e12
cd8aa37c459a5e6b7f5269f59078aba3be4641a11ac48d0b625c8325b38ec08e
4c9e5e7fed976a5650d99d82114f449b9ca14c4ec957702295a39a93ef93f618
99b8ea06b092c3c1e503e6e436e0a9fa22576c8930ab3dc8c20f5d82b69cddf8
ff4dacfa9c54bed5a3aa3ea5b129fe96be632843b9b6bc91b615581a985db56b
1e01ca60ee69ca92cf5c0882ece62edad3e106d835348822400f0b66af658f2a
e56ed08f8b0010571807009b73ab12a8cf14ca6c71f03c2a48c500f9d62266af
154a6375ff600d9bac3f05ce34142d6867a79581c533176bb2f3117336671e2e
44638a97167e2ea9644e31ea16c2ad2990ea33c54001e0c8156e6de8ab6a4d40
a7137ba275f39589fea2e2db8256adc103d6f9cc038037a47e8fd469c5f98a5e
3c15bd4ace40d340018b1cff7d1ed8abb0ac57b5b5a2c20a51957b96c453edb7
dae5affd91a46d938fe0a13363001d844ded4323f1ee6d30012aea19b024a552
315505535c85dc26bad31e09c50e6512802976d298c4e90d0044c362e6bf3ab3
62a454ee93de25ce54411090c29e9d75c80ce26a84404bd9de3aee0e3f921ac5
87f907572b8354a5c3165eea7e8b2ba4e333802132f760b41a900c698eb3d273
8bea0aaf7aae96a558f08b61aec7c7d65b2889bb7b99800cffee5ba19ac90fce
11437be1ddfcf0bca5670b543b9644a71c8726d0c1005abdb96f6e0cf7caaa31
95017ca81519151c2c0b04f81e717c0691b63a76e9b25329ce2625b711cb7bf9
9d23ec2bb5ec8aefb8c1a3b422ad617b3da4d49685fd44cc21a1fe5e1541163a
b3e1594601d63c7e98801d7746474377ce93f81404f3570afbd5dbfe77578605
917ab96963987e6efc2d3f99fa56ecae6422579852567f90cc90e4ef6d6f71d1
858270205477e221018a375ca83c572b3f972c5181d18643cecb04909d84cf76
7174b3c0c8ec69bf1e9fdfbc0fc7ed97ec67d878ea4ddac8caa522fdc6932df7
21b81af837a20746149853bc21c8aa153268bc9f571cc720ce3022c671ed4b4b
31098b69196bd97dc2fcf16183a08cef4906fab3a91557a70c45422bb24fcd3d
ad6839c1dcd08420e1ffdd3408e83a3d08ab8b427be7c6bcf9fcde93d88fce21
8c2b2ee017a2e4f46b82a1c856a5a0e19403b190e296dc141f4551af02bf658a
ae6bbac0c7bdd39b61ad2f1013d1c476aeb59e868ba40f2ce6ff05059f8b851d
a0636dd3562200ed900c7359edcba3d4279c0d1ede7866bed987edece0e8bd8f
84bfce5cd42ec03795e489962ecf5b1ce78c181e4d6c3087d5164caeca11175f
df4747dcd3cc34d701b543adccf9a58a579575e956be8407f88a1e0489f5a251
52fce947fcaf2e57cc60644efa8870776ea70890a6dc46095f63dd71d32ce604
53783f48c31ba61f9eadeb313a5bada892c4aea6846d0d888c14fd6e83d9c398
63b831cdfc0dd5c818ddb78930a6e6c8208684164edd2dabf2a6648eb0bc1ffc
fc28e90c5a5405d306d04f4bcb9d5a870e649209744976d961e98e5c7299bc60
efe8759c499d1d1ae489af5f958ef1fc715519aa89a92f0284beec408d0db626
265b3d80e8c508e3ab085db64e9dab78e9842cdb35bddc73b2efd63d96a15004
44037bc4ec6a98f1e95e722373af435cc10201b3d06f5022eaa37a8b0732ee13
93cdb99b2af1f3478aab06a2d217bd490aed15e5aad0c2141e2bc015087f2ff5
e1dfd48c7b70efb8aac673f285c1efcd800bdeb4ea149e9662a007d77199b8d8
0a5c71ba06f20812b1d0d0153cc16ce4d1b67de45cc5fc15fe435830c356e1de
30d15cd9abecaf8cd80a08009d49e363f5a889fd3e6b63702adbf7c4254e1763
e21dcf1e8e162d29b43a3d1c2b95a0c945d06a7486e7d3c7f43d1c6888e0ee00
a366fc2ad1e99c5d892dd8b857726bb1e75632c5c642a25c2aa2943efab95558
b1c6b585c33910cf57c0e48f435b3c2afa5f9e5e5c3d2d16b43b8a94f780e806
36d9349b86391b49f2e3ee3c61f5d78d0bf048f3d490b70905e9b56464136b31
5a3b6c03444dada776a030d6a55b58ba20725d00e2a8747d44327f2fb7f42bfb
ff86d8667050eadf135603530f1c6a3f75b003e56b90ba2c4aebf5214c20ff26
7f2b8a90bc2d1ff4c73c6b2b29a6d5be52e3002bd7d5f23379cdc4dfd91255bd
608362d721f201365f7837852bb0b80a4ca7c2904bce600d6353328b0f95fad5
6dbeecd1a4fbc9b60e1622e8290fbdad37a5041a768a3bd0d8de90568a04229e
a445944dced3c1144afdc37e413d852bb592dd37750605131a19791a45e6cb8d
2e92e3242e954b6d1b95b434aa9a0ed55506cc27b03068ead193eee1b30ea393
3064407c8fa8f112e209cdd91f49f4202b74dbd1adbf71a5fd3007766a7bc30d
04c2c91bb3958bd5f4a80b2bdfb4c7920d0267629e584d69b67e53eee2be859b
d1b3e730b67f34b3d2391f961d8588df9dad655d612b4f291ff292f38034e73e
7b8fbb8064348ad697ad3f1e573bca33168ee8f518602f7ee8d98d44e644733a
eb235bfe6125916c9a8f855e7266e5f6f6110d21260f2e92a33c0a70da1bed09
169b403a4d4b9e4f68f8227250cbe13c5a3a8b0f911e62a3a62ee78a2e91a444
794e9698f3a261676c89f1d504d526d250f81ce6bf59e1dd795faf490f0f2b9f
eaf6c6f73de122bd9bdd4b410bd918b775b4618914514e4eba9ede0d9e7fb09d
ed9dfc0576e70aba98b847ff6aae782adbf639a785b70d201f1cbfef5d64ef05
a29e2e994d6544d54d362ce7fc35763cdcdd35b52b4eabb74c19440e88c9e376
ac0b646a87aa95d5ea1a08e791ad593a77774f039f56c73d2c640cc9801f8bde
9b96aa9c404fd7b23a100b5889ea62f27e88db29345ed4118437ed4d31e43d26
99a9ebb59163105911ddae9de2733bf7adcc095243e7fa28b547b60882f1c805
9fec12a0245db2f6e7790fc776896096d6f974b50e697e10c5122547137a9286
b1a96e74b23645cf2b5e839c9259c0fef2c1aa4340e4ee30ca0e4b4f32370f0e
840637dd2b8539b7742af7bb707b8d64dc4a37a8171504cd130d86748fa745e0
b107fb9658f39fcd12587f2a6e2a4ac32cd1393a32d5d345ea20ccfcda3536f9
30abcd072847814531d0ac9e8ae626e1e00b82131034e6fa0f81dc17eb2de78a
76306786c13ffa0c6b52e7af75cc274541c62df591e3f760367f90c3bf3630c9
75cd9df394f5ee40892214da19cc98992c952349b90a267014a5c5e45a28856f
9f787f539d064f122a40ce62d285b54fb672bcceb10d23969210cf5055a93b91
2370f0c0b211f9fe2c6b3a8254a63328c8c4e6043a904abe0673a65e5b343c49
73c1d9e605707c76b8d1f865d047525ad060884134f521f6ff144d73f11b92bf
ac6a12efbbab82b3cc89030eb482c541bb5342d848a48abc70e3b0c4636427b1
6d0306a8fd727c2adc12db793e19ce190567b86e82d4889f1f89105332c0c697
cf308feac8990340593fabc0a8bfe7a64e9709add519edc1d6bb9d0dcbd66e0e
9f9976b705d2e5167215b06bd50e0b716c8f59a60e05baea6de0a739175c6487
eecfb887623ff722f5100d2525aa2364eae79c87e61203405efd382fa44d676d
a2a536885e49316a94abef5fd4b88f88c27bbff780f3ba6b3eb0b7cbcca1029d
a5e9ef0ce355dcf55154ca3af69468f32fed9228800c0031f7d1f9291043577c
eb172efe2d0d5a0ff33b140db74eff5c87a42fd1f3aefd934d595e641186fc69
0fd92bf9de28f6bd33b1c32357c1732de4702e012e6a30d8a4a4bc8b4ec69300
481c143b9e5bedd571d4219b1e792fba7bb12a0f93018af8786e407f39546dde
3d3530d54e7d63ebbce1fb6281d3509f05325eb76783b84888adce4896a4516d
defa6c738761ae269b812cd1511bddbe61e9669efa8063f35ecde4da2c2033d7
3126712311d6b9b780355d8ea7a1934d76dd08c0661e4f8aac4cc3db5c6b03c2
3d086cca502d8b1112d107a30ffdc4ae51d367a4b3cb0034b4615ad605b5ee97
0fa75667076b888cc4f831c67764bb5ec70ab681e4f3e264680ec06631e3f252
b9805a556a1ba9eb974c373375faf25a00446b100463907682ef3e60171ff0ad
a9b92a0bdf90bec5713427b71173c83ab6649165a4e5871bbc8ffbb0905fa06f
b962ead9d08e4b03a39496631804ff6329d03ec0412e8b6b28b085f188d86a1f
aa7fd96744ba9c19bc883b92e9f71cc296ff73b93263b47b9e238f6fae6c2555
f4becc3309cbe4f6084c536bcfa4f19b9438152438839c0a4354ed1a86c3853d
c701c1f76683db398d4e9da70714a5dfed402749e775457c8f75cf8cd5dc1e6d
3899e40e2902983ac830599f8204b5aeb86e21110a12e994485f064dcb6f065a
2e4997bb270be292d7fe4f965ae57418ea89bdf5775ecfc68cf6cd13fd2fbd28
8ab9d01dee61e7948f7714046a8db871f5805e00b6f4efeddcc558a1d040f475
db83c975f415ba37224e9070c355bef6591da43fd2cf2bc37e231b86e71c1a37
45fa2e893c2dbf9ed36c455d3ec7b39cb2b977bbe80d56a4ea15df0c84d8eab1
177591d579ab84c3641e0ee65b791fbe302221b3eba54726e93cc3bc6a79fd1f
4ed0429536badcb48be1b55bff9b96ce9ce094aaaa59a48c5531ea89a4c3cb10
454d746bc5f1db41fe12f9650be13e1bfed5078fac2feb156c9f28920a952221
1207d28f4121db9d0a6996fabd314411c3fac22e212160474980f0ce0613c40e
050371f754f7f08b27a129ce95d8832d6122cf86f82236e7d3fb04051b1d248e
788c8b2fcbd249be38573969d5ea98200dc6af6057caa5f3c597b7a0749412be
d912712c4cfa81565ee78ef6b00cd9ca585d93b758ebd5734a8d3369fed44300
eb6d903728030227c51818347d0ebdb565ec46ff8151eadc6591d40b244f3fd9
c0e7659d7a926a028387833a18fae1137c95d243ce9ec3c605d36355984bfcde
ab898bf36cb86d1ccbdb7e2f2ab53c79d14b0d1a30004f411813f86f19219b15
ff987e11f6a009bc43875d49e36e7493891ce1d8694401831d6dc402f0902cef
41eeefc0c56a58787e739237c3d793e86dea6faa59a399b7cbfb2678da3d9bdb
0c452a6f02055d0f5cb46e67bf85ac3a64e6a4fa9df2684e91a7b32ec6b16bc9
acdf3023af3957bdb2a7e8709d55134b9578a31315fde0ae74e7987eccf441c9
722f039a3d93a1e4d04ed8289c24b786e496c10407bce9613ec29fd8e62f26b9
2a65b4246b7dd41976600632ad80ba6dcaa65a2c1f30f4caa8b10ad927e2c309
c7fcacb84819bee2db54bdd8595a9f22aacb069ec19395be11b5b23730d20ea1
02fc4cc6d3270df17efd84cbc7d66a60a9fc07ec2a83dba063c54ad1e70c6a26
5b6f25c59cab006cf513061cc24f38a788642ddfa75fd093af40bab020d151fe
342367f4854e40739bd416f7fc27e8379e43d25fcca87e7583473e02648afcb1
a2857067ca30ad7b3f325f338ebe921155aa3eb1e7ba7d664fd4230bf4ba0be1
5a19375762ef9d59e3a710b5a00531fddc6ae3cbb9eeac7efb958c2954322db5
0d1f2882f8dd646f39129a8f5cc3434bacce1b515c9834559f64cd8a3e2374f5
07659267c5fc731ee8734df96569c919e46e1e5ff7e80a13c5f62a5b46c1ccf2
4d681ab49b0b3130301f93781e3d0dfa60f245c36c70a68c2eb9be528a67490a
e329aea3d76770f3c278552112897192f6c89ba355b0469eb82af22eaa783018
e2e0d72400fa73542bd26e76874eede3d7e3a747526bef10f9b2cece6054cd7d
d905f36b2e80b962ee8c830dbb52976dd0530b48ac8df1eb960087d8dad6faee
d9ce1424b3f4823bb13d8a663e5d8b3401707013bfc7fb392f61d8e62a87bea4
75141bf63300fa2611f114ebd664a76ae99b07fe623bea8b47882c7ee61e5c4f
679201c845af006292dd9600656396a0986a9f73f37f8f755de6ada44de2bfbd
070d06a385031ddd43e821a0ee50296f8e37dcc8fd7e3dcd44f6d7c36494e562
6caabb11f722e98305b2867c7e3d7c20d8727267c8d7d14e001f773876a696ca
680f835cc812b8ad487bbb8fd7ec0038eef1e0602a3da104dbaf9c7c2b9e1063
e222e27b4fcc85b425d591a8eaaf9bce9652899d010e2ca39b405dc2448408cd
df17e93295a5db78f6d49d2bcb06c7c1e8898926921815aa3eefd103300e0631
2f7ab6bc25371a1f70e6a1b36a541741f8f477a9ea672e0e90c430717f7f88cd
7c3abf29eace04cd9be7c590944110484cdd16c9b350d2a81e6a7b1b02664052
993a0c2c0be26ce173d7bcfaf1b01512ebeecc48bad67c114d0337fbfe9a7550
ad67bb727899bff4dd3c85f384b23154989ff8c0ee5625482cd846ffe7fc5122
1646be3d70a5cf6f861b2dabb614875b6b5076eb2364e0869179b0f5c1dabd91
50e62ffb7aa792a524476f40409cbe9af1896760e98e098b9d4777a53ffb1bde
1de916fe262c2190c71aae44fc925aaa71168c306734e6bae6c78c66744f7bfb
5dd08b5ed4e90b1fa510ebdce59695148863733a426b71ada004d605f5703af1
11ddf56058d040cd5eb252c3c160f882785d56a0c647436ec41efc330a4af1bc
171958ad280a11b790387ed4cab71092f6d093f7ee7616d08e0f92feccf819b9
a2b16cce8738cb5e5235d6af4aa457c6fc042d4d16e670ff0e170d20bfc709ee
38d56427870fb1368a387058ac0b5821c42f8ef4716d5861aa7f3268b61ef173
8726c400854855646ecbbe9cd94f1e7ec4ec310036de351bef7a5f46949b956d
62cfbd8f10d745174cd279e43296cc866362f6f47bba0bac6c335fa3b1733c70
f173b9dbd3ff5bb67844a9cfe0e5c741e883033033ca14cee93ecc77c96acff3
0e8985ad4d4580d2204bf3f87dca4911b7dd775c5188270a3d0f68c64ecb9336
0db0e918668f3f21521f5fda90410661a69b8910b991c9e3d76594bd1c2ff8f5
0e90e8e471ebfa68df23c5eec2356cabf94abe1bb4732c0283014357e171cc21
8b8b95c8b56a7531a4aa9dab608ba9eec5270564dc8933566f9deb56eadd2663
19e17fadcfcacd5081cf98c4f95b6e4832bed2f47f6d6680f5062e0d3e813cb2
76db0cea51f2ad6582098a11d2c17489682032647a942c910828a0b2ac4b90a3
d20e1b290e07487560c646a1e4ea0fd4d521657f88da0817ffc16214b1445d14
3ae8b91cd1f4943248402753a3ee7b95b9b3e44a4ddd50142ac96f4da2345d35
1296e094c3f72c218b58d2e51eff439d66a99af7d78d68237d717b04f7604be6
f17251a25faca9c1f5f6e1800e2b30bdfad31ad779e0c90e03b0d20798f39f71
5d13769c5fa16b54a1b425b5800a4f90be2f559ea8b5cf657b3ccf2be1496f7a
eb13a67a40c45a2cd4e4efb4e21548b35924dfee4338586103ec045f51e67fdd
3eac28c09bc3b7d67a7298b8c7d579ddf2dea31a7158321f298513402f001d79
5f0f2c8572fef100666abc98e603549182635a6013667001bbf626b809e9a8f5
73adc2a9dd7fa46b889b83949c8968dbc0dbb7136f13bdf3d2273e71e2b757f3
366ac03241fba2198574dda6d87a5a1899b360175dcd7c10ebce01689bc73244
8a3150fc6ee9e7baf414d3e3fe0c0fce2db05940fa7ec2230128c6a2a33b106f
1e1cdf4730a0bf3ec9adffecaeb462185838815a27e45bd05d0fd86e47d3ddde
4a35173955614a5ce9d47afca8ea8caad86edd291d3b8cb659041146e08a430c
b478ebad724e73f5d709eb63c1c3950d9099414d80922a89f968ff710ef639cd
b64211b469e560ad40b6ad051bc59217fc329290e8f3fb15e55439d047d06269
09952fd4eb0841c49e67e39e40338780dc235acceb3ce9d182753a7a165cf379
dd3272c1dd1b308d6ef77cbb9bbde490a78d2f8ba43db6dfda8d93b68b97608b
f7e691f00cb0e38c2d35ea704abd9032103db29b0b4008687b620a886893024e
201694b5c12310261bf77e6a7feef5453c2b1d1db15fbae41ee91ed71b227b3c
dee42abece6f29ceb1aa2de7186c78979b5c31d941bdab0b8052e91937d4f060
5ef43e4cabfa2eb1111daf6d8791afa91b9dd025e1f8c3a9f03982dea4cb253f
521c2dc930cc21d002b33ff8b800da594745638f5868314fb0c18714406d7be2
e6d0be0e93211dbab58f1dd3dacbd0efd4f424ce2e366608ecebe7b9498eddcc
99c4bc6178c3eaca46cd30320b597206d28bc5702abf8b00ce9b313672cda5fe
e77886bc3c8e260f9e611d61f273e63f283f3ab9823f234fa32e0f97b42bd3da
49d5d941c94dd7b8723a7b1bbd979b758b0dbc33dbe865494cc4d4f2934a9b71
299e3c158ac552283e992a0728526e4a767994c7dfaec53c4d037e04ced4c75c
0238817ea23ea5b4f8ba8f047e4d0e4e1e241ac56ea8851198d3dfed8649a10d
c20904ee55ea397a2e41d3a5a2899c97454e098dc4ce8d4b7519b5377b831340
8c86385f051c410c6b80d6550166de41ce475b8f9c8a76cedc8b0368f0e2c435
02b65556cfa088dcd14d81d1953ebcb3c034a73609e6808f789ec2ea38efe346
8cf0600576f2bcf9411bac73955ab3ac69f70d5c052e7c26e8af15b5592ce2fe
bff7bc738963ab623bedb947db351899203948105354c5c10c8c8a359e160406
bb0d73ed6f1c7ae626f5cd7b3f6e72070cdadbf49816f82c643bebdc03b6d961
39f941c4d0fd9afde4c8979569a1b1384a20b49653b80f0126d8607808d83024
01d652039d001257c24aa263b1483bc4ee5e229aa838364b93b20feaa6417c7e
160e319118295eb8b7b447cfb35d4edb285a58810c3c375b72477883e2e658b9
1099a941b4854a34c467093624ca32dee2c7b0421a1f392b1c16bfee0d30c28b
12d3ed494c73886897803a6340ada4b699f0096d7a2af6766bcac7c5611ab2cc
9a6954b955b02567580afd2fcb481851a0c83eb6f106f08455781302978283b9
aff4e259b7e8ff199dd99017487c76330e6758dbb709b0ead4a4ce5e1f17b4f4
9bd2589e91a08a88782c6d8020012135e09dc5ab1163a74590307213e30b2a19
71b5e52b21af855632710ac7a752a37715dbed1453079feff8370a3bb3f095a4
93517a040aa25c09c4591dacad13b99dd721652d2cb0246f100ec50cfefbe774
b65f059af4f949d08bfa3cec044e2b81c8f98d1fcc4cc305a04b3dda66458710
d7f4ada54c96226371346b75ee4d3b260e99642ec95aa2e53a8f7f45f7a57670
e0942e554ac5a088b2cd6ea6782af74afee9e7512b74ae1a379d3562c4481694
2ce130cb8fd07629cf3a9067b8740f7808bd6054c2f4127257db0fe404226347
3176bbda306d44e650dd5ebe70188d27cd329717ceeb11d9b026d1b690bedc3d
803e561ab809dfa54d4499f26ff7675972fa263d05edc0b5fcc2ca49fd8a5388
fe4a35d6b2c7ad07636367efb50a31fd2712dfa95a704b54028c2d55bf19ce81
eacac40d95c3f2a47ab0bc972b8d409418dee7ae2dbc5dc5dd78aa8ac3349edb
21b54c103b8b9288c5293af05120819f7b1da5e9602f9708650a1b2a8c8235bf
dac8d47d5667124c4def0bae78a672cfb90a6db8eaffcf78c489332c06541d1c
9589b3479979bd267d9a8399f30849175b50ffded414efd4c571ba0404ff6403
3acea25b1125fdba94a9c979003e1b2be1b9d41b71b6545b41a4b679a4a644d2
9c68f02fa2861b6b320f6e43272758f8e2b7423247cb95c5718d18d9c7b4f6bf
2de168f698c2d3967249931a24b06225bab15f39219f807c0d48a914b8e3ccf7
20d4d3b68187913dcfb7ce1453104ae04536d53f4278c32c90dcc3f369a2cde5
79018e858431431fd17846ffd4236f9455c1fa3c2dcbcdd357100a70c4d2d466
53182f199b1b45f935a5b2fe86151ff9061e38052c823d6d513c1173c13eda7d
14c7ffd0de0d18356ec48caeaaaef683f07c99d8a6b5fb1fd604f3c5f98db454
d7a84319644303929172eac84e1aaabbfbbe9e44903a99639329211f95a1b7b3
e9aa536ce32e7427b3228660a0c44948498bdd9a4d907a27b337d6250e2942b0
ed229d6fbc0abf6f4a972609941d1f7aa847cde61ae0ffbb1aa0d9a20353f4c6
273ba268d78568dec5c07dc0e09d930d254ebc85051ffff7a3943facc5b174fd
aa98909a036f934f536a6208538c831586b59f0e581c4961ecb1014b9a474417
f6556c0d24e55f5f43cd055be89ccfa3c91ca2a50ccb8935323201dccc05e772
0ab7227239137cff2e3300ebcd9a5999a992dfea5f5a6321a554ce335773de58
b3a4502b08831a0add0d854deb8c1fc31e8fa0e90403d25a763c7f3c3da5423d
cc6aaf229b65d841c31119aaf977f1528231721b8d021a4ad1a6f45a81239976
56f430ad508c973fa4b03735ebe8cee3d2e6b505a89a03711044b76aafc369b5
7af79e68740256032597b9c0e1483c22a631b5ca1c7101a00c3fa84954a5fc7c
b3452f983e41807aca1f1ff571efba15078b266129066126839915f84175192e
49d5a0db06d6d142490944901cd5835b635857b065890bef2aecc34a63756b4b
6c6e0faa28af90905fdbfe566b1527f919e8674dcb2294cc01f9a5e11971b8b3
433a471ad72d4f89723e9b18d41d5ccc0d935f8510a8b487a011ff9b6e4818a6
f97edbd3b6e34a74e81f38ca285c110bace1110e5b8200f6cb54bb25c74923b6
50623c0247049b09d143e2e8831c28d0225181bc4b48424ad657c0d01e187138
b2154c9d3c8fbdb47e58a49a76867c5fce73dc06165c60987f4711bedac74f8d
162d034514770316ba093f4a64fc80ea4c90a8ea4000e950192f415d87627646
e16c72194ea3d71466c2915a74132fc23388dea654a39fcf0137154f23db91d5
d495b9f8a73c24c51f6749ca70493e9b233723db3a7fd4abf06c02ac3460954e
9cff03fe8225539c65a4dbb5ee30f58cf71174030e909510843c33752a8b2f35
9aaa729a220586dcd4d011d1cd6d348ca868bb5d2993ccbc98e64e5539488cc7
e951311f4c67d96af6c14eb8b613b2bef2d28e5228c67b64b08e667c9b4685bd
4dc539fcddcc725f13b8fa5a349b84a9e68468a777ee6b5f6f905a71bfb1ee17
09872620b0772ce0492a36be1d967363150ae16e61488c793ad3aac80bee4388
6d16ee22c0ee29e25c181eab20f8b80d42463211cb2421e05d9b1f1890456207
35582268d4de82c2c0195957fc2cce9ab56c88011803b04833f184e9a54c4b2d
026159ced59925fb056a3beb2daf2ef588144fefc69ba5a1aae0ae95ced79699
1e13b3b5475bde7d122d297f5a9f12c8ce55157995b86faf3d21b730dbc3c645
3d172ef2175fc62f9754c7a2d7647b4945e4ef5520ec26a0937f0a9b94e0d8ac
aee2e6029feaf5a14962e0baa416852584bc350e97f207ebf58ae32241adc089
3a32ffb83a07cd081b7af384e1da02b271ff6379dde49cd78cde0c3c05552261
d02c06f5f0d1e75470f3db24330a41a78645659d1deca6f886c6ff1b1cb18c67
42eb590f2d5ed82106c37b5db64ff552f4052d03b70749f829b887d3f180814a
37341f3a2472d6297f656461ab75e3e9ddcedcb54517b02aae895284cfb617ab
9df7b590acaf41616112bb499518dad1e82f32e3c6e71ee1b0fdf36aaf468423
5ec651a44cb6e209cece5c5d7438f1bac5dfe9adfdc306110e200f4a5fb70d89
ff42f2a2709d4e5cd8a852bc18acf8d66c59917fcce696432dcde68a814e9663
26952cf377dcc3e85f08f5c76cc7d8c8116a1443980c203392d6a8a07b8a7533
317a69a25481185cb5a2ec35241e12f6562f86dc23b967f3f2cd521e12a8f0ea
a7050b92f5404334be3a3268c434deb74337779bdf472aee16987fb041fa48c2
aabe081421c99f272f25ed17afc1ede7e13789fe4a2081156579222fca52eed5
0fb4f45f6dfaa5f5cc3c7a5871e1f1fb0afbdf9a3da80a9a156d295d2aff069b
696f4da9303a45ab38aead11f9957c235e791d033798475bc277eaf9dcb21c4c
ebd8b5c5888fa7122ff1c038872576c27457e44d33556277defe19d36a97a5eb
70ef3224a81adfc5400119e165eb1559e881b76cf2addd51ddb633089f25147b
1561ba7b795a334b73ae1b198531e086642daa9087384e47e2119f84a2bc0b45
7cb6968432f6b5b817d33848d6d73e85ea42390e59056bc1798921fc95a06f09
6a4e7ba5d109ff3c2db755276f8595a8dd7adec0207544b444438f9456e73065
0d2f9c40af1d2c67b5043f50cad42fd41824cb4d946033c08e73f6f611461bea
4e731990791ba54983dc7504142d142c9f57ecd2bd46e601f3cdd91fcbb277a1
09a14604c51841c42d36dfc09b03b3aa325617af50c7722f7a8d0e6813e0b42e
41acb839742159206195bd9010b8fcd90ccee1685ca78e3404a0c475fc181ca0
0e2cdd0000d6d401b50f7995e171f7bd14cf5c63b21af9bd2cc51623d4d85f5e
3f73602dcec6169e467de3379d2c06996e6cdd4d4889ebd330a2f456c5b0ab17
f102698555e4bf6bffc213383166c75d8e5ba3865e3b56c521777820cff73793
8f3c8ddd70d7fba3e644e129977c748c5636a7a8453a119b0845e1f458560951
52b83eb35c6e42b3b2be36ceea77639078e9aa6f7b731c46bef5b07f78177c71
be6cb269e19ebcc5c7326deb1374d71569d4a55987daf545e58082d07249cf68
35632f75863f991d9557408a219ade21f126f598d65d24e1ba5c2e4e46599738
b3de11f797d7493b2311491ac8f462477f00d4ca1b17e31d158e1427dc904e5a
ddd0ba58e7c376705101e7c65b5bca1771a3b1be63a6b0f3e594d4349934d96c
14aa7b289fb0807f8cc72b3c7461808b11cd321a1f34362d0a2ef938021910b8
37714a9ea860887780476d9acaccd2ab613738dcec8187462411edc262a18f07
cf04947b12a9c16024cdf8f19a9f4f87d23a2fe11419f54c661efa10d16d2c5c
2029a7a183cf9ec4b1db166fdd033b349aa2a95ff322b16610178c889a86db4f
2e2bf62f5805e538f035f1fd111af049112c30b0fc1446d15a785248a56e536d
4d1e177ec957171239ec5325aa6c7a5624d7ef4c1835759fa8f427cc20092059
1188d8e66edaab5c0609e4905ae2b2d9251fb08ce6d122d6155b0e14822f22c6
36cebd3cc3551d8f98bf47a2b9f24100a6b91e8b99c786873f5ae438be5af16b
ed046eb07ec258975f25f0ae4f06b9db1a7bca5293123b7256f5ea59e64cfec2
f752a22f430fb902625bb4d420f21eb83f5e036473fa89fce14320be06d345b3
eebb5da7313add9056bef71c08b02059a7376bfbef53ef5b8282158f3eb4075a
02e13c53b7add14350661aa3d26c5a1d4d0ce4077633eedd9e9b8d9d51670997
df2ba434fdaa2893c9165f40548a71c20f26e9db8d78019184f110172d53550b
5f5e3b643b58d7321e59e8de7d64162648bb4e8c9e7aa236ca08baf10a365cc9
6b316c21d68fecf4d587adb4c7cfeed878fd45d2460752e52a0e930af9709a81
8a05bcc4c8eedfc09577772367868a592a98df68b101fb31f59859921b911ffe
9bcf9372e3b8e4424043724ee911e7f4aabf4b729c4c6de8721a5f07b02c7129
614ec7a44249d68a1d03e467694305c86ae401c17d38b848dfa4ee144577619f
c6f41f37782dee1ef992cd79d63f2da91e823bbca964e3afb27ec0b44500e97e
6dc2280ef4e8ff76b66dd5a6c6c47253ded49fe4a8426d0ffe185db264aedc25
5f56455715fec53a7eb70a08b94b1b21a9d41e7acbf744462d287056a2da2f29
c11bd2a604fa142b2ad114940daed3a73806d87afe179999bb28a007b4c19509
301c00fa08710dcba4941dd3e0b60ec8c48dd6c483502b020a0ae2c1e06d19d7
fb156f3bc4699930872a551c37cdc98207878110f14e04719501c4d357f971ba
dc88fc3543fc33fdd2a0cf533d75d6867e8ba9d105b2fafb3cf8c6f138826457
45e428215aec302eb76e792c227bd356f182c17bc97bec55a66d2d5be69d6306
2ab6bbe832d127294673a2f6e1c415419b817d23acf0e0edec9e1f2d027c8a8f
2d0e71aae8099782fbda70f99705c68cb6617fb53a80e8114c957c9b102d3252
e951c7301f3a010fb85d5efb30446ccd951c9fe50da92f3873a2fe518a1e58a5
ae7c6b84564ac41d0508342cd087533ad092cfa96bf0a8bb4768fd8d5952acbf
4015a11b1d3af1b3b634a1d3baf2c891c067c8dfe61db72698b77e9fbbce9246
341dbc2ec1aa4f4830d78dfcf03253c9be9ee84597f3d1488d912b3ec8eb8127
7ce24cb57497fbb8f40c651da48191001e6846813530f199cd26d801de1e12a4
ef4999429d1efb8a4960accce54ced0e5b3f60f05eb5fb37680bbe38dd9dfa56
4611c42134510987080e20236ff4246a12c6c50d1fe5399f3e98ced29691ee94
6f37fcdf6ba9a3fd0a57df9eb6dbd50cb17ffc2fbeb73d763b3ce50a2e1802af
d28c1bae91df1cc6f7d2e7f46aaa5372ff9a84ab19a821e363bb2387f0dc93ac
c72f9bef92fff8422e1cdc58a744f1f1206ea86e86d95f8f324931e48b0f080b
1d389b304b88c4c26e9d6ebf88b6c95e4f4b6d15daed0703448532ecab603b11
6b4ef1ec4e390bcfd1a6ed9c283e020e2451c237e0e9493ec7212bcec2bd5b37
fb3e7198babd415e5f4f36eb96aa39d787147bcd95585e68867f80f3698c4b3d
0be4d228a941b9af26a379de553aa07d722b3ed27db4bbba70f49ebcf33e173e
bcc7f956121e102fa48347ea60d5d694a0bf32b25623a1f89971ab4ac4a97249
70ed58790800d2117abdfb2e8b27830b91a31106da07ddeb177b815d814908e2
d3e7b1546be70e16abcacd076ed6430d03c5d72e79c599fbc2e336741b4144a1
349b5813a36fbd5a43d8efc1056eb2312c095046083f77d3a5cda5b30246e1d3
e0ec7bde131389b537ad71f0e5833c5694ffd2e9a697e8a3f6b0d2755f128b36
ad3ec0407812b7ae6966cbfb8e6faf32bd5ac493c1d6ee91e98bd47213ba1a25
bf6d60a37bb5b6067463c7de12eb82224341a6736385f10d73cad935321e7cb5
01667e93ca7d0eb83842ce2a097b936e3e9640041378dff9eda7e61b08da20e2
9f04d659c26d809a3d30b8cdcaf3d21382b21a9a58d3e4e62db2cb63144c894d
fd471f3a2d9dda96baaa40100dd9c2db0537cefb537a4cb06eb5c79f18154e25
b83199f8f96e095f81bf29fc68c8f975e4fcf6e71770d1decb8b326513e83a5e
1efac6d328be4ebf65bde21bf55b89d23c51901d6b1e72423f1de04d99482878
8c82f425147499a7635d2290fa0c7bdc020d2554bb16edc472a10282c9c14c81
4bde51db53f3a4941aba34727b4bb579d20bdf3cbc8ea81f348f26ffb0767dfa
c1cf76c058d6ddc4be6f40420924609af5f44342599f9d79c259fe267c4025e0
19978c225239640478f6ea760ff69cd1db89be84a8cf3d5a2230b4475353231d
975269b513d62e2ac45d98d3510c49500fea7b0e72e4ee9f0705de57b450ee25
5f7a62bad07e9021f66f13870079b2c92b53297c3a86a0593d3b5819bf2ea0cf
d1f4db715c6d7d350cbf8b9ce042f54d73fe913fa62e15cb43eac29d46330b58
9c96f0708d34f58f2b9e4f5197473c703af36daaa2ec56084e57d20763337299
224a50200a7f7f23735c12fdf44b8632a579c96404298f1edaac6bec95796c8c
9f777dfae7e53708e9987a6c6cdec97a20d4faa45c52353e6ebc9080e5da10ae
d98bbfb8ecbf23164ae0558ab6c20959f9f7ca243931c44c819e2f3e60a5654f
a27d9ce3398ad5fd067fda4ac26ba9b50129e7e8d726919b96ec7f86fb951c0d
ee605ebacd7ebcb741f78a480c4af36d509184f1fbdac9b1817ba09bb0eb2337
37461695ede282b822263846d2fe998060b7f4f78fb0bb89840714375d33da6a
b25ad098f8e0e1f2ceedc4f91f42e82cff3c93b22be9c3e2fa827dde5f3b9c4b
4b90a4e89d4d27c8ef7ce44dd1f610a4b941ae412f03e76e5c61f982d4fb1a12
2173657ea8b297d618e5ed72e811070b52e20d76655ded56a188ed0682cb2a79
88d607a7d51e8fb0bb4b6d15ee362d17ea9fee2dfdb1fc558e80b952a5e6055a
d759706c22e60fba0c95c59cb8743c4e09c41a99f5c42bffe5f79cbce8fe97b6
775f1e9e4979ec7ae0f47448d7253535620f198c3c7d4a8e88bd481b1740f352
45f3e92c1ffad45ffc28978a3cff6b584370a117c30ad65844c73eccdfaf6edf
7ec5ec6fed3dfefa61a7e3b4c0774e2543de06cad755626b540367573d9ac3fa
7e92edb400cf6ff0cf9bb4e4dcc6946c09de6d76fc034417952bea39de9983c0
79bf51aaf64cc8e1662bc79ac7ff7bbefc1cca7c7c092f5235fe6a7d6802ca41
48df27d97322351501b0db3073aa51211fc619c6410d6660dcc4927754eba5e4
a97fd5269557dfc1c1cd459e1ed51594301bddf795cb24e9ab520748679e96d6
965a16f402096115917ccf531054803c0c2e599282c23372bc9149e23b06d41b
4bf4069226cde3adab129cc6d4c74a738e19efff9e515b27e95d6aecb5f93a7c
706cac818824d96867aee3d7f831066cec2d67314eecb4e56f7bb1ec80f1745e
67f8f6fcf02c2bb3c481838f74cdc402a80f4d2cbfbc0aeb469f926c24f3e60f
e46d95b034f40c666a0e0b4deb6b43155ecfa9871e41e170b029803a26c8d4e3
196188d732f11b2defd4d0e4f19234fb13b7ee8b57301d3d2b939eee1900ea89
10b9e8fd406a302d4dd1de8e2690156e97d9fada9e1aba7b8afa934736ead236
4a3e6a3a57d56616e8fea2a9c1d7f5c0c3719e13743ad3c0c83725846b7c7d1b
0597d65e4a276b725f94ede3be7ca62c965672787a031fcb5523fb6a5aad4079
d4f724f9d231d579804d08bbaa59b7c72c914e37f524d414171f35f5f5d4f1db
5a54171dd70f165f8691cf396e716b7e14f2c74f8de0591ad0d07ec75af946b2
d669491e12446156b58e64120b3a12ced82f1fc14475c4bbcb835827738fd4cb
002984cc6e6fb4c88fbde5008319872eddd72edd2a17dcfbd97396322ea3b5cd
d032d4f4dcbe221fcc3092f91793e27f544d1a68529ab35ecce9c57f64523354
cff585856d4160280a6d611d0a57a4aed315e59916a05a7a1aa0aa33629c487a
7a57f1cac120d4ff3a0769a040219c39f56c131d03c042c25ae2ed8be6d580e9
e3ded4a5950bbf975debd97fbeaff0f677a176c150da8ed75314b93e4e5c62cb
8d11d19d6cf853e8e4517f97b06d9e7ba785acda03c83ca27f5dfd5ca208b960
e41f8140f61e00355428c83451f123655410c06b8c658c82279bbd860338c40e
2f581a5e8f963f46bd16ae03698b7a8b568cb1c88ad0d5f84643ee3f3e170bbd
9b90b7a2e0d8c1308fd582e1e465b8a6179e4758f0f59c1896adc0f4593e5f4f
70f9fdd55f9bcb8b43287f9088a0061aeafe20ea2648838f6d6beea9ff6b3313
efa28d91b2d2679d1ba0f42fedbfefeb2fec8aa1e6b7df38e60a6bd5314c87f7
b3f2164f15a024cdfac9e4a6ec9e8f96118937e27b1fc710ea72fbb720d122c3
3d798dd320b0629e13e98d03a71f0a2424ec91b3b332912f38875201eda2402c
7f9e8e68bc70c342bd43356267cca2e0d667d455881089989c63c185e1ff0bcb
13f1f5aaf43e1ba1b839f16e424bdad75abee95ed9140aea86919a70f8a6199e
d931f789deea9d1b74de94825c08100b19bd7a563fc8b8b2d521dd8cd3a5e38b
75c1305e239773361e2b560af2d92c62b0fe146a9b34b29cc6263b4ff14983c7
aeff292b1e13d414fc0e75f7013f482af1bf95207e8b567eb0a9196cf48f7240
0f1cafc0393d91dd0e33ef5d6e193ac79473a261d6e6be57e35e40a282323594
5cb8247eee2864e6b2ffe7af861d62b54bc3c98c37242effde749a71a27661fe
aa849fc5badec54d5c56d43d7ab6fd9dda67f4d7787fddf00cdf2a404412484d
8da393591c129b6920e50de43891f7a50e74b41183ae90c67d182fb4b3f2e472
b916cd44ae0c1890c245dea147670ca2db29463824165f45651509839464f048
1ec4a08cab2bffa7b85be930ce3217d9e707a664382f5777749bd2e42781400e
86a839f1bdf71171f641eb8d77a6c975b1873d15509b69687e28354ab71cfca5
a9412b17bf2750a9465ac0bd09f3de497f0251a1091d6ab422787eb2cdc8f7c5
94f1278cd6bf06ada7d4b852505f8a5b7d9104f0739c930ecc632ebca5e8f650
45e56a6e6117e18a7cb7a614d3df5fd9d089a9f71c12cde006c03d2b70352007
2b6b5a1cf45ce31765ce3626c339d5bdc0dd0922ce4c691b711b320172c532fb
ae9856aaca9ffa647de53a8d791f75a0af8b102c1ccd69b047c403d8d3b3a08c
12033b1245b8787bb4e5c07de6b88e192870b014a83e701b46123878117457d8
546294def34e8c587d1e72d220a25acf2b11754d425a0ba0a3ae154cecdf10c4
8439450cb9d683b44cb1d922219541a242a8e1c552121342af1e13929c12c54c
92ca4c312bb18726d731956f32a640d1febc251ef30b9c6889742049010c4de5
a842cd82d38e1ed1ece344330d70792c079b586d34c4c5a1a526af19147e5bcb
ca21e623f76d71d4d15a07a15e677baaead425036cdbb026496596d47ca54e98
c96cdb1533955aa019c428379276dd5347a4aaca8d0ace5d4c575e25cc2682d1
a73f64f7d0ae3e78aa42c4865a4b961d011f871f61641ba1b939dd45077cbd23
0b8f441c8826f8726f0b870586b1727d245fbd4c9280ea10e56428f714a299af
fc77015087f04a409e92a86daf3255400bd93370436a39fdda89726acfca87ff
bd643f1ae63a1f8d6a94d630c333284914de0648c9202839081e0274af1d04c7
12d3ba589c4f7150fb97db8eccc9ec6a8b177394e56d0af9cbaadefdc75fda24
1e9aa8bc00fadda99db878a2334194fffa9fa71b4247fb1e9e9a86ebc4c6a29b
f87d0fd6bc48401d4c295333ae5bffc02499eef3ca4f64830216769cc45c4c2b
9a59260cfa36f8dfbdc86ce4fac9aabe57c7c8c51f5a9ffab323bb86a6fa4df1
bd2139b95e8c82e73f4e3763ee223f47d1d7e673ed4789e0161e72ace7cadbaa
bf003e2881ff6dfdd3f802143bf58debf8f030ff703ff390be9f17014d0906c5
6b8626b1be52fa45afbc172a8710053683a706d5879d85bdf28859f4b6139613
24a51a5257b58c65a128c402be4935e2e80ed1427f54fa453e91d9502b352f8e
df69e6b91c28b6c9e6a973429b1eec7a2bfbc455862c3014d9b27e6d71d39f83
9f08f2c9b89db2f1d654975b89d2eda085bfc58675953eacdb36a62f19056dba
78ad1953e144ab54216f44baef26d78db02edcea5f6fceb6ad9393d86a0959e9
aa7c38f9bf09b166037d6214ae159e90f86fd1fdd6422d02ae0c868d3fe25fda
c44ee27ad8fa1e09a937570b1bd9de8896fcdcd8721f01b2311ee0cb4455b92b
e65ef2b9831bbd68f3b4d9ce0c59b2ead0e3847c448f54ad210187365c89de7a
72f68d553761994b813c66435db5d63d8a6986bb1fb746b3ee4a7782bda83cb3
d6cb2c995a918a522446b1ed454cbaba6a12bd13f7b1941b3fa77d8c52aca755
39a265373b9dd88eeea6f7fb4b6847c1d11b315d57f0c2b4ba6a34a800d904e8
a6cdaef1fdf99fcccedbeee86a40a7b211bee4e5629fa367e1d8cfe5be67084b
6fde2427c0bae45638d6bea317ae963c7b068fc4b3f5d27596c0de8f166d5a97
fcc1c027285df668640cd7b1557a37c8c93c6f599a91917090dfc5c4c0933f3a
3404d0ab4ab73c5626049df2c45d68288817255e3eb5ac7c789cef64afbebbe1
d3082c59e8964b6301ab0aced12f31b1ebc89796752f647240aaaca4fdeaa7ca
08f2fbaab5a2782290de8f9ae6683e39fceb19e881f6e981d944cf954198adaf
74f167ac4d0362629869428f5ecb1ebb965c587acb5c30d928c94c963b10f197
29268eda1ea7cf13116e26b62818602c75c0f8a6ac17affbea93fc3725f001a5
63e4e434022b75a49a84e0b5c4a58e45c7a1b04107c8177eebb46185f91176f8
0b88daa30d8e5e54ebeda377847760f1b89d36db9c7702d0b87452f8068bd58b
0a7343a5a38f6c2b2700c397a31fe13f797dfd3adc13f39cf66e0e6b8cb7bc2a
5055dc61a771710a81e035aa9cc6314f2a91a139969cd92302ab251bdd11f7ed
cdba01096ba7e7facd3f32e2fa57c933f0b01dc04ad2e5715e9ddba44232e27b
39e9ae9669d7233cfbb2970358da97553c5386ac4c85806ce1c4df282a39188c
010295384df1eff4816d3693e040cd67036be4b5a25085ccc6aefcd35ddc9ab3
0c3e0411f6b856dddb9d840a720621ea8dd9c52bfd18547b6cecc6cbda757a93
fed32fc39d039710e39280a050a42811eeca20db40042b02d82c161f06277b88
d67279c311b50ba476134de6aeb76dc399b3355a3d9bd882fed20603092107d0
54039a0e43cf44733e008715f318114b0df0df382e796ff2eaee917144b6db57
64f0149aa7a75cf5571a4c25aa000b8bd4ee2182a7a52748d72d9704bd83d8f6
958de9a005f660ecda6082e9ddd32e98eba233365d9326c1631e30dfac06cda3
7afac733db02cfdb0c5f7f35973a02e02f9bfcda480f2abb4d4f5cd6e33e8588
44c514c7ca6a36205dc38aba44db393dbc75973988cc9dacc72632a981ea55a3
42649a7e3241bf940121356afd64b3371ab4ac9c61913b222717b70298d0f0e1
b40e044a77d3fe779d853b2fdc661d9724ac28b446d145f1dd70f3846f620582
1127ade0801194f83220d274783c9794d30a447aa9ce8e4b0376f5740b9c338e
857f67c6586f696cea83ab22ad7df8abb5e3f655833d608df61b792b648d3c6c
72f28f54944c77d341e51504ebb96c7d8a14876833d81bc40c4742e00d98b650
c358b53d6b9ca7606f0456e9ffcb8c0b4d152ce50c1c3c5b68bc4d13cb865960
64d196065cb9b4d450c0ea46284a62dd0b8645e9b88b4101017751e5e7385a95
d3238a08873c2a32178d53d2489636e4b4654df53bad5def9693abb698f9b521
16fc690dcd83fe0c7fd0a25c50f8d8ac351ad31abc30737bc356cca86a803663
193fea4b854b4cb8878ccbbeb955aa9400e5cf751e80e395f48620f3cd5fe7be
a43693c513489733a46836721fbd69c203f092f6bbeec87696e84ae7664984f9
73e13f658e2d67ae86b56539968204028a21f6246d0531802a538e230d2397cc
1452d93d71f6daf85c93415cefe7135b0a4bbc9faba25033799af195dbfa2b37
decd7f674c821ed7dfbc78d85c9a05e8d52a700f3e8dbc7b1e36106b217944af
c06913963a45cf16339b3ce7445319fde36effd9d953a13a1e7c5f9b21a2d287
ce1f5ce800022a0f5ff3ca68a9d3e86ecc3061e4cad57aa171eee43dd36c0cf0
ff57457222f38fbbdecc97b36d3da25b0529773c2b5906f8083f9dc6245e4779
e1a319b1bcb6bedc89e915bdbc030eeac6b0a095aa3987aba139a4f8a9322e11
a63b50cbd01b99e3f7d941a5059709ae13fb34008088a6e3fa0f486afd46e91f
7b05688250c7ab8abb4948456eb8abdc700de046df6aae2f8add4a51bd51f8c3
9d4b77f26f31849aedcc0fb749008c7195bfd95a13bbd768075560a52ba85067
143f932695901419eb6bd2f2177636439f8ed9578fa907ca3f63267b46e1e55f
849919a23e2ddc3796ff8904ecd1fa6eb96cd9b468aeec1a6cdbfa420f370145
b7f21cfbd2b13810a72dfce2fbbfdf96c967a1127b29983189092fd3f9efebe8
c4ed1200a7f479ad44aa3d5da83ae95e35a58b320f956de47f34ae4a71bd59fe
9bbf17b6d5cc
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (mpatrol.dvi)
@start /Fa 134[ 41 3[ 43 30 30 30 2[ 38 43 64 21 2[ 21
1[ 38 23 34 43 34 43 38 12[ 55 43 5[ 70 8[ 59 2[ 58 65[{ } 22
74.7198 /CMSL9 rf /Fb 134[ 62 62 62 2[ 62 62 62 1[ 62
62 1[ 62 62 62 1[ 62 62 2[ 62 62 62 1[ 62 1[ 62 14[ 62
62 1[ 62 62 8[ 62 1[ 62 21[ 62 1[ 62 62 40[{ } 27 119.552
/CMTT12 rf /Fc 242[ 77 13[{ } 1 74.7198 /CMSY9 rf /Fd
134[ 37 1[ 51 35 41 25 31 32 1[ 39 39 43 63 20 35 1[ 24
1[ 35 24 35 39 35 35 39 23[ 30 6[ 54 57 18[ 24 32[ 45
1[ 47 11[{ } 27 74.7198 /CMTI9 rf /Fe 133[ 40 48 48 66
48 51 35 36 36 1[ 51 45 51 76 25 2[ 25 51 45 28 40 51
40 51 45 45[ 45 45 45 3[ 30 3[ 35 35 26[ 51 51 12[{ } 31
90.9091 /CMSL10 rf /Ff 129[ 39 3[ 39 39 39 39 39 39 39
39 39 1[ 39 39 39 39 39 39 1[ 39 39 39 39 39 39 39 39
39 1[ 39 1[ 39 1[ 39 39 39 1[ 39 1[ 39 39 39 39 1[ 39
39 39 39 39 2[ 39 1[ 39 39 39 39 39 39 39 39 5[ 39 5[ 39
1[ 39 39 1[ 39 39 39 1[ 39 1[ 39 39 40[{ } 59 74.7198
/CMTT9 rf /Fg 131[ 77 38 34 41 41 55 41 43 30 30 30 41
43 38 43 64 21 41 23 21 43 38 23 34 43 34 43 38 21 2[ 21
1[ 21 47 58 58 79 58 58 55 43 57 60 52 60 58 70 48 60
39 28 58 60 50 52 59 55 54 58 7[ 38 38 38 38 38 38 38
38 38 38 38 21 26 21 2[ 30 30 21 5[ 21 18[ 64 43 43 45
11[{ } 79 74.7198 /CMR9 rf /Fh 198[ 33 33 33 33 33 33
33 33 33 33 48[{ } 10 58.1154 /CMR7 rf /Fi 134[ 44 42
60 42 49 30 37 38 42 46 46 51 74 23 42 1[ 28 46 42 28
42 46 42 42 46 10[ 68 1[ 65 1[ 66 3[ 68 82 6[ 59 1[ 69
65 1[ 68 13[ 46 46 46 2[ 28 33 32[ 51 12[{ } 39 90.9091
/CMTI10 rf /Fj 209[ 43 46[{ } 1 119.552 /CMBXTI10 rf
/Fk 134[ 85 85 117 85 90 63 64 66 85 90 81 90 134 45
85 1[ 45 90 81 49 74 90 72 90 78 11[ 124 112 90 120 1[ 110
121 126 153 97 126 83 60 126 127 101 106 124 117 115
122 7[ 81 81 81 81 81 81 81 81 81 81 35[ 90 12[{ } 55
143.462 /CMBX12 rf /Fl 129[ 48 48 48 48 48 48 48 48 48
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48
48 48 48 48 48 1[ 48 48 48 48 48 48 48 48 48 48 48 48
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48
48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48
48 48 48 48 48 48 48 48 48 48 48 48 48 33[{ } 93 90.9091
/CMTT10 rf /Fm 240[ 45 1[ 91 13[{ } 2 90.9091 /CMSY10
rf /Fn 134[ 71 71 97 71 75 52 53 55 71 75 67 75 112 37
71 1[ 37 75 67 41 61 75 60 75 65 6[ 82 102 102 139 102
103 94 75 100 101 92 101 105 128 81 105 69 50 105 106
85 88 103 97 96 102 7[ 67 67 67 67 67 67 67 67 67 67
1[ 37 45 31[ 75 75 78 11[{ } 65 119.552 /CMBX12 rf /Fo
131[ 91 1[ 40 48 48 66 48 51 35 36 36 48 51 45 51 76
25 48 28 25 51 45 28 40 51 40 51 45 25 2[ 25 1[ 25 56
68 68 93 68 68 66 51 67 71 62 71 68 83 57 71 47 33 68
71 59 62 69 66 64 68 1[ 43 1[ 71 1[ 25 25 45 45 45 45
45 45 45 45 45 45 45 25 30 25 2[ 35 35 25 71 76 3[ 25
18[ 76 51 51 53 11[{ } 84 90.9091 /CMR10 rf /Fp 139[ 75
1[ 79 1[ 108 97 1[ 161 54 10[ 94 97[{ } 7 172.154 /CMBX12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop Fp 94 1385 a(mpatrol) p 94 1485 3780 34 v Fo
1263 1581 a(A) 31 b(library) f(for) g(con) m(trolling) i(and) e
(tracing) h(dynamic) g(memory) f(allo) s(cations) 2379
1689 y(Edition) h(2.13) g(for) g(mpatrol) f(v) m(ersion) h(1.4.8) 3163
1797 y(8th) g(Jan) m(uary) -8 b(,) 30 b(2002) 1455 3137
y @beginspecial 0 @llx 0 @lly 127 @urx 83 @ury 1270 @rwi
@setspecial
%%BeginDocument: images/mpatrol.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: mpatrol.eps
%%Creator:
%%BoundingBox: 0 0 127 83
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

/origstate save def
20 dict begin
/pix 127 string def
/grays 127 string def
/npixls 0 def
/rgbindx 0 def
0 0 translate
127.00800 83.01600 scale
127 83 8
[127 0 0 -83 0 83]
{currentfile pix readhexstring pop}
image

514a504b634e4f514b524958566d625d625e785b4f675b5e5d6e656d6e514f5d75596a66
5862606658465166676c75705b575f54594a565a73655758646a6052726665655a5b6b76
517085626467725c6556657171675f738676826f636f5f5d5b5d59646363706475646766
646c67605d5f6567625e626a6a517056685159
5951534d614e4e525755495857685e5d6b5d674e666a665b5f756a6866566273675e6f63
555e63745b4c52686e69696862595d545d4e53505c636c706d6459506e6a747762566271
556f7a71636867615b5868696b6e677079727a6f63696560625f5a6f6f5b636d73676865
5e6465625e585f655f60635d6550625c625c54
5751504d5e504f555b4f43565c6661655d62624c6d506260637368696c6672785e606455
545d5d6e60555469776658606b5b5a5160555952606a74766f676566615a6775695e6772
566a6c7860675c654d56696062706a6a696c696a5f5c675c5c6b636d70585c6e70696661
565863625a4b58645b636851605057635c654d
4b49484f5e5651595c49425762615d63556f59586d4559626a6b6275807471696063564b
5e66595c655b54677a644f5d6a58554d5d565d596665696d706f71745e494d646b6b6f71
5a686a6e5f645d604b52645e5f696468676c5f68605668574f786b5d635c616b6e685d5a
5050615d5242566354636d4e5c4f59655f664f
44474756615d535a5d49485966595356617a4867725d5d5f736c6a86856c69645f665656
6a6a5e5b665d5362746251615a5157515e5259555c5d636c6e69696c605054656a6a6b67
6a70746165626456564f616765605a6c7573626d675c6c5950766658605b64736c655355
4e4d62584d455c624d5c6a4c564a626468655b
494f4c606462515950414b596a5957575c7b4f74656164707c787b89745a686e54605c65
695d6264655d58626c625b645654635f6957595564666b6c635c6676545a6c7369656a68
7c787a606e67674f625162716c5a53727a71676b635d665d606556626855638266644e56
514c65574c4f625c4654624b564a65666c6a66
4f554e6362634f594a42525769585a575d79687658576d8082827d79605a70685859576c
64526363615b6067656567635f5a645f6a5d6463766f6d6d67626b7c4b5d726f5f636c69
80746c6b76716352655364736c58527173656b6557595c6567594e676955667e5e65505c
554c6a5c48545e5144535d4e6257606e667363
50554b615e624f5a58515f59654f514b797a716c5f627b7c85837365586877546d5a516f
6957675c5e59666b61666e616557574d5d5b6b71726766757e766a655661695c525f695c
7b6859777a7a5f596053646e6757516c6e5f726452595a7261564f61615b6d6e59665563
574b6e624253564745565d5470665b765d7a5a
524c4c7662476b59595a505a623d5c4c646d5e66696985858d7e7a6f52695862725a616a
596170665b646d6762717a6f4e5c605d5f5f677964727f7d6e615a5c4d61554c6261525c
8c4d5e646f7952605d59626d64535b7267665b6a5b47626453484c5d555e7763556d6860
525368504e504f4c425b704465716870715d5c
5c4d507462485c4e5e52596b5e4673566a7269767b757f747f817d654d756a6368636a81
63736c5d5d6a7b7b757a7561535b574f4c484c5958616a675c524f51485d564d5e605c6c
734b5f6f747357606663605d5b5a5c5d64645f5f56555f535554566154505e4e6a6b6552
574e6a4f494e525347576c4a59655e66685758
5c4756746a595d5a614d668060558966646965737b74705f7c7e7962517472686a716e81
58746b62646b7471686a614b43474036342e2c352a2e302e2a2626273448443c45474b61
715f697b7360585a626d69595662665e6562645250645a43515b59605b545f5a7361614e
6351684c4d4c4b4d3f4a675a55645f676a5b5d
5a4b65797268626a544e6982625b826c6e6f6f777e7c786f87766e695e666b6f61717777
5b6d706c625c53463c4244362c302b282b29252a3232313131302f2e26312f292b2a2e3d
3b3836504d3f5455546b7462555b66676c5e654f4e6854444e5a50565f5e6b6f67565c5e
6a5c5f4a4c4a48514748605d586b676e6f5f5f
5b5d767b6d615a6243526474615a696a6f727a7a7a7a777986756c6863616e6d5b6e8774
6b5f665a4a3f352a232c3128262c2c2e36332e302d2d2c2d30302d2b2a2c2a282925252a
2323182d2c243d374354636258545d657259615552615251515849505d5c62605b565a70
6064514c43474b5d5a4e5650546a686c6a5956
4e67757163575857485c67715f5f616f6b6f817b737169717a7a716063697e676e6f7d54
573741352d2b30302b2f2f262c3434353c3730323735343638393532342f2f3334312d2c
363225332d212c1e31313b4f5b5d60687156575a5758565b50524b5a625d5e4e5a5c5d71
4f614851474c465252464f5152696667635352
3e6c6c67605864535d606f7955656f7578798c8176766b77797a71636b6a846969594d2e
36242724292b35393435382e323a39373a35313638363535363534323931333a38363532
2d29262f2d2b31262925273647525b6166544a5a5b555d574f4d51656260695157586468
4c5d49514d5a525451455158546b65625f5459
3f786a65625c6d4e6c586f7d44637b7379738272696f667684746b6f7a637f703d302123
35342b2a3533383730323b3a353e3c383b3938413f3c3836373738383c30343b36333635
3e3334322c30322c2c2d2a26272f3f4a5c5442575c56634e544d5566585a6d554f4f6a61
545d4f4d45666f776f585555546a615d5b5560
4e636a5870665e57406b7e675b6a71656e74707a696d6975726d747c7974634b2a2e312b
3634293e4d4a4038363b403f3c3f3b363842433d423c35363b3e3c3935383c3b37333333
3635343332302e2b2f2a2a2d2d29282b2c43504f56625c4a4358535c5952655e58587154
645f4f504a515a67504d694f5a5c6550595365
4f5e6256746d635853707d6d66717164686b636b5c6566766d6879887454433b2b313831
3936314e948f7c5f473b3a3b3a4044413e3d3f3f4442404143433d373536383837363637
3838373637373735302b2a2d2d2a292d23292e3349605f504b5c575d5a54645d5c596659
66564e534a4f56614d4f6b5752555f4f575261
6168675b7a6f605359656c6d727a75686d706871626b6b7a656b7b7a58382f2f30373f38
3b383c62b1b4ad997c635043393a414b4c46403e414041434445423f413f3c3b3b3a3a38
3c3b3937343332313c363233312d2a2a2825222431424b4a4d5d5f645f5a645f5d5d595d
694e50534c4c51594b516a5e595b645a615f69
696d6a5e7a695b536360626e7b7d73697075727e6f726b746470715132343a2f363a403a
3d3a4470aaadb2b5b4a4846a58473e444b4b47464543424242444647403c373638393937
3a3b3d3c3c3e40433c39353535332f2c32323029242533414e637070655a5a595461535e
664f574f4e4b4f544d53635f5554565256585f
5d63655c74625c61756a69767f776a636b716e7b6d70676e6a665636283845383d3b3d3a
3f3d487ab7b2afb0b7bab0a495795f534c47474b4c4b49474643424344403b3b3f424241
3c3d3e3d3b3b3c3d3e3b363437393834333334312a252e3c495f777464584f524b66565c
605b5c48504b51525055585958534c4d4d5357
60666a60725d5e6d6d686b76776b62636e706a7669716c776b4c3b3735373e3d3f3b3d3b
413e4d83b4b5b2adaaadb5bbb1ac9f8b715749444443444648484240484542403f414141
4044494e5052565a665b4b3e393b3a363833303335333030334462615a5b555d4d695c5a
5a645846544c525052564d545f584a514d5858
6568695f715a5e735a606c736b5e5e676c6e6774697069725538313b3c393a3b3e3c4141
423f5292a6afb2b0adadb1b4b2b7bcb5a2896f5b4f4a4443474a494647494a4b4d4f5255
616b7a87929da8b19c8865483a3a39353d3a37353738322c292a3f3e465b59635c675f5a
56674c4b584c514c52564653554e3e4c475450
59595a556b5960775b687878665659665c615e6e6264575b3a333336363d41383b3b4546
433e569fb2b1aeaeb0b4b5b1b6b4aeabb6bba78e72635248474b4d4e5b616b747e89959d
abb1b8b9b6b1b1b4b0966a4536383b3a363f423a3536383834282e2734504c566b655f5c
526442515a4c50485156445559534456515f57
5162526c675f7e5356716c6e6a4f52645c5f81585264634532333537393c3e3f3843414c
443c689eacaeb1b3b2b1b2b2b1b0afb0b2b3b3b2b1a08877747c8c9aa6a9aeb3b7b9babb
b9bbb9b5b3b4b3b0a7956148423a3c373b3c3f3e3b39373834372b2c32222f6b87535754
6352525551594848514c514e574c4b4f4a4c60
555d576c665d6e4e5c756f6f6c575b665666765b516f593c333436393a3d3e3e3e443e48
413e6996abaeafaeadaeb1b4b0afb0b3b6b6b6b4b6b5b3b3b0afafafb1b3b5b7b7b8b7b7
b6b8b8b6b6b6b5b1a6946149453d413c3b3e403f3c3938383239302e33262a56784f5854
615857584a534b475348545260513f44515154
5a57616c645c594f697d736f69595a5a536c665c55744b343637383a3c3e404042433c43
424672998b99aab1b0acaeb2adaeaeb0b4b6b6b6b2b3b3b4b4b4b4b4b5b7b7b9babbbcbc
b9bab8b6b5b6b3aea28f5c47453e42413d3f41403e3b3a3a333d3633362a263b604c5b54
595a58544b53524a5a4655536266554a4f5a55
5b546c6a5f5b4f5f6c7a6e68615759505d6959596268403338393a3c3d3f41413e413d43
435287a8b49880839cb3b3a7b5b3b1b1b3b4b5b4b5b3b0adadb0b2b4b4b5b5b7b7b9babb
b7b8b7b6b6b6b3ad9c875644433c403e3e3f42423f3d3b3c36403c353730282c46475e53
4e56534d5659564e6349554e536e7d65435d5f
5a5771665b5b5274686d64645d565e526a6053546c4e3c383a3b3c3d3e4041413a3f4145
425a97b4aaafab9a878596a8b0b1b4b7b8b6b4b1b4b3b3b2b2b2b0b1b6b6b6b6b5b5b4b4
b4b6b6b6b7b8b3ae98815243433b3e3c3f414443403e3c3c39403e3638372f2830415c54
495a544d5c594e4f655053494a517e83465f60
595e6f5e585b587b756e64695b505a506f5c535363373b3b3d3c3d3e3f4040413a404445
3f5e9fb2b3ada9afb5ab917d9397a1acb5b8b6b5b2b2b1b0b1b2b2b2b6b5b7b9babbbbbd
bbbbb9b7b6b4aa9f937b4f44473d3e3c3e404343403e3d3d3c3e3d39383a352b29375054
4e6a5d50595640505f564f4851335e8e616d56
5b676655585c5b707e6e656f5c4a5852665f53594a303a353c3d3d3e3f3f40403e414445
4166a6afb4b0adaeafaeaaa58f8d8e939ea9b4b8bbb8b4b0b0b5babcb3b4b6b7b8b7b6b6
b1b1afacaeab9f928a734a43493f3d3b3d404243403e3c3c3d3b3c3d393a382f2b303e50
567b604957593a565558484a4b3649776c7b43
5d6c5e4f595d5a6175615d6f5e4d61625a64545e34313c303d3d3d3e3e3f3f3f42424346
466fafb0b0b0b0b0b3b5b7bab6a692868896a8b5b6b5b4b3b2b1b1b1b4b3b1aba59f9995
9496989ea7aca59b816a4440493d3c393d3f4142403e3c3c3d383c403a39382f312c314b
5a835e3e5a613b5e4e57424c374847545f7e32
725f504e4c4c5c726066596a4c586154735d51422e323d36403f3f3e3e3f40403f3f4b45
4578b1b1b5b4b2b2b2b4b5b5b4b7b9b4a7978c84a7aeb3b0a69b96958988898a8c919698
a6b0b6b6b6b7afa28b5649463f433f3e3a3c3d3d3c3b3b3c3b3d3d3a3a3d383433352f22
607f454e644b5855525a4c4f43444f53695242
6d6051494b5669795e565d6c585e57695c4e3f352e343d3d3e3e3e3f40414243483f4342
4d83b3afb2b2b3b4b5b6b5b4b3b5b9bab6aea6a28784807e7e8082839fa4adb4b9bcbcba
b1b7b8b5b7b7afa18c5549474246413f3b3d3e3e3d3c3c3c3b3d3d3a3a3d393433363627
506b4454644550585654454c3d404358625740
635e4e404864777a555768635966527058503b2f3235373f3c3d3e3e40424443443f4445
5282b0b1b5b2afafb1b3b7bab8b9b8babab9b7b4b4aca3a4adb6b9b8abb0b8bdbfbdb8b6
bcbdbab7b9b8ae9c895347474449433f3e3e3f3f3f3f3e3d3c3d3d3a3b3c393433323a28
344d435761414b5b594d414943464362605639
5958473a4c717b6c4d6e6c4f52665e5f5953392d373633403c3c3e3e3f4041413c444e49
46628994a8acb2b3b4b4b4b4b8b7b4b4b6b7b7b6b7b1adb0b8bbb9b5bbbbbbbab8b8b7b7
bebcb9b8bab8aa96824e44464449433f403f3f4041403f3e3c3d3d3b3b3d3934332c3628
233341575a4a525d5449444646454c61684f3a
5652433d587a775b527c5a4753566a51534b322b393834423c3d3d3f403f3f3e41474d45
3a41515977889fb4bab8b4afb4b2b2b3b5b8babab8b7b7b8b8b8b6b5b9b8b9b9babec1c3
bcbab9bcbdb8a894774741454247413f40403f404142403e3c3d3d3a3c3d3a34372b3129
1e2a41535c61645d4943483f3f3952526f4441
554d444a65796d5360744a505d436d555c4a33303939363d3d3e4040403f3e3d45454140
4242403e49566c8397aabac1b7b8bab9b9b9babbb9b9b8b7b5b5b6b8b1b3b6b9bcbcbcbc
bab9babdbeb8a7956c4140443f433f40413f3d3f4243403e3c3e3d3b3b3d3a343a302f2c
24293e5069766e5c423f4c3b423d5a44693943
514746576a6d61536b6b56585c446c596245333638393b393d3f41434443424141403e41
4e4c45443e414751617997acb0b7bebebab6b7babcbbbab8b7b7b8b8b6b8babcbcbbbab7
b8b8babcbcb4a397643e41463e3f3f43413e3d3f4243403d3c3e3d3b3b3e3a3439342e2f
2a263548777a675a453f52434b4c5f46624654
4b41465c696157566c6c715852506e5355312932323a433d3d3f4245464646453e444447
4a433f4949484845454d5a6499a6b5bab8b5b8bdbabab9b9b9b9b6b3b6b6b6b8b8b9b9b9
b8b7b9bbb9ad9f97603d41463d3e3f45413e3d3f4243403c3c3e3e3b3b3d3a3535372e2f
2b212c417d7459584b42584e48535c4d636272
4a353b5a62524e57764a6f5058685650463329313b3c3b3c3c4148474340404144424346
474342444a4a4b4c4b4b4a4a4e6487a9b7b8b7bbb8b8b7b6b6b5b4b4b4b3b3b4b4b1aca8
a19893948c7c75784c48434040424343393e4546434040403e3b3a3b3c3d3c393536322d
2c252a3f6d5b656140797b4b5a5650494b9664
3f48444b5f5952655f49505a5473565d42322c333a39383a3b3f43423e3c3e414544454a
494543444546464647464646544d4f617c99b0bcbcbab7b3b0adabaaa29a8d80766d6763
5e57565a564d4a4c48454240414242423a3c3f41403f3e3d413f3d3d3c3b39383637312d
2b24293d5e7c68416385544f5d4a46465d886f
3c615441585b5267535d57675f66556039312d33383435383c3e403d3b3a3d4141424448
48434243424242414142444444413f444e627d93a49f968d837b7673605b544f4c4b4a48
454141474642414544424040424141403d3c3d3f3f403f3d4343423f3c3938383838312d
2b24283c5078642e778f485546455052696c69
3f5e5b4a545e5c61476f77676e4b58552f2d2f34353334393b3d3f3e3c3c3d3f3a3b3d43
433e3d3e413f3f3e3e3f42433b40464844444e5b726b635a534d4a474948474645433f3c
4340404544414146404040414241403e42403d3e4042403e4042423f3a3737383939322d
2c252739574d5831667f524c435b625f594d5e
4a4a5a6158656e5b3d7376616c505a41292b30353432363a383b3e403e3c3b3a3736393f
3f3d3b3c403f3e3d3e404143463e393d444645444b494644444647484a4846464644413f
413f3e3f3f3d3e403f3f40414341403d433f3d3d4042413f3c3e403d393738393a39322f
2d252535653d4f3b57665248686a5561463c5c
5f4c616f5b646e4f537a61675d654f2b292c31343435373b35383a3d3d3b38363938393e
3f3d3d3f4040403f40404142403c3b3d3d3d3f424141414244474b4d423e3b3a3d42474a
42414142434444464140404142423f3d403e3c3c3d3e3d3c3a3b3c3b3939393a39393331
302623305a554f466768576272523d644f3d56
645d6565575f634b72756067535a40242c303334353738383738393b3b3a39373d3a3a3d
3f3d3e42404141414040403f363d47483d353941454443424141424248423b363537393a
3c3d3d3c3e4042434441404142413f3e3d3e3f3e3c3b3c3d3d3b3a3a3b3c3a3938393433
3327212b3f6753566b6d656a543c4c5d533d56
51615e4f54616159775e695a51393b2b30343635353737373c3b3a3a3b3c3b3b3d3a3a3d
3e3d40454041424242403f3e423c393e4241404146464645444343423c3b3a3b3c3c3c3b
3d3e3e3d3e414343464442424141403e3d4043423e3c3d3f403d3a3b3d3d3b3838393535
352720283162566454606a4c4143714a3e3764
4e6c615260536c706a4d7158613e352e32323334363738383f3c3a3a3c3c3a373d3c3c3c
3c3d3e3f3f3f4041413f3f3c3a3b3e3e3d3c3c3c3f404243444342413f4040403f3d3b3a
3a3d3f403f3f3f40434241403f3f3e3e3f40424442403d3b3a39393b3d3d383537343435
322a242435606b544d5e3f59404f5852583f50
56745d5a626667625d4969515c41392f31323436383a3b3c403e3c3c3e3f3d3b3d3d3c3c
3d3e3f3f3f40414241403f3d393a3d3e3e3d3d3e4544444444444242403f3e3c3b3b3c3c
3a3c3e3e3d3d3e40403f3e3d3c3c3c3c3f3f403f3e3e3d3d3a3a3b3c3d3c3a3738343335
312a252427535751494d425e565c6b6b685e52
59735457617462534f485f4755433b2e323233353738393937363537393a39383b3a3a3a
3a3b3c3d42434445444342403a3c40414242424446454341403f403f413f3d3a3a3b3d3e
3d3d3d3c3b3b3d3f3f3d3c3c3b3c3c3b3f3d3c3b3b3d3e3f3b3d3f403d3c3b3b39353334
2f2825253b605d604d4546686d587a84776845
5466534862715e474a4e58404f433b2c3132333434353536343434353637373739383838
38393a3b4041424342413f3f3a3d4144444546474746434140404241413f3d3c3c3c3d3e
3e3e3d3b3b3b3f4141403f3e3e3e3f3f3c3c3b3b3b3c3d3d3c3e41413e3c3c3e39353231
2e28262657696f6c524e4c7c6e428386764e34
4e5a66477064573c4b59533e4c4139292e30313335373839393b3c3d3c3e3f403b3b3a3a
3b3c3d3d3b3c3d3d3d3c3b3a3a3d40424243444549484644444546463f3f40403f3f3e3e
42413f3d3c3e41464242414040404040383a3b3d3e3d3a393b3d403f3c3a3c3f3a353231
2e28252650526a61495a5087593f926e61383a
4d577a517c594c374a5d493c4a3e33282d2f32353a3d41423e3f40414142434540403f3f
404142424040424242403f3f3a3d40414040414242414141404141413e3f414241403f3e
4141403f3e40444942413f3e3d3d3d3d37393c3d3e3c3a37393a3b3b3a3a3a3c39363434
2f2824253f475c54405a5574435395554a3a4f
5255734f6e4f3f3d44593c394839302a2f3133373a3e41423d3f41414040414341424242
414243444748494a4a48474540414545434141413f3f3f3e3e3c3b3b3e3e3e3e3f3f3f3f
3f3f403f3f41454942413f3d3c3b3a3a3a3b3c3c3c3b3a38383737383839393839353435
31292425375b535c485768573f5c704c3f424b
55515e435447384a3c53323546362d2c33343537383a3c3c3e4042424040414341403f3f
40414243474749484846454547484a494744444545454544423f3d3c3f3e3c3a3a3d3f40
3c3d3f3f404145494443413e3c3b3a3a3e3d3c3b3a3a3b3b383534343739383538353537
332925242d6c4b675759814a4555414f404036
524d424a553f34483c3d34323e283d2f3536383a3c3d3d3d41424341403f40413f3f3f40
40404040424345474645454648464344464745434344464948464342454543413f3e3d3d
37393a3d404243443f4040403f3d3b3a39393d403d38383c363535363939393733363734
2d2725243d656374376e563a5a4e4945375248
54524a4e5540313a3d433b3a3a28342c3234333537393a3b383a3c3c3b3b3d3f3c3c3d3d
3f3f3f404244454544424344434241424546454342444648484744434645434241414343
3a3b3b3b3b3a3939393b3b3c3d3c3b3b3d3c3d3e3a353539383837383a39373435373835
302b28273f61605f5266564e4f4c4841355349
50534f5053453533434d403e2c262b2d31302f2f303032343134363736393a3c3a393b3c
3f3f41414041434341404041434140414343434243454749494746454643434142434547
4241403f3e3b3a39393a3a3a3a3939393b393a3b3935363a3b3b3a3b3b39343236373836
322f2c2b42585f4e6e5e5b634b514b3b32554b
474c4b4c504c40374b54423a1c21232f2e2e2d2c2d2b2b2b2c2e31323233353735353738
3b3d3f403d404343414041424444434343424141434446474645434243423f3f3f404344
444544444342403f3f3e3d3c3b393837373534373836393e3c3c3c3c3c39343236353635
33312f2e3c506757725b61624f5a4e3a37635e
43434445494e4a3c4b534538181d1722222325272826252423242625242427282728292b
2d2e30313336393a39393b3d3d3e3f404040414243444444444341404242403e3e3f4041
3f3f3f40403f3f3f4342413f3e3d3c3b383432363736383c3a393a3b3c3a363333333232
3231302f2f436b6b615b604d555f4a363f726d
463d3f424248493a494c4c361f1f1215151517181818181717181818161516171818191a
1b1c1c1d1d1e2123232324252b2d313335373a3d434344454545454541403f403f404040
3f3f3f3f3f3e3d3d42414141414243443d39373939363637393837383939373533312f30
3131302e273764735858573d5e604231416f5d
4a3a3b433f4243344d4851322b2d22201c19161311101010121213121110111213121212
121212121112141513121314191c1f212123272a31323436393c3d3e3a3c3d3e3f3f3f3e
3f3f404040403f3f40403f3f41434446423d3c3f3e3b38383a3836353636353534312f2f
3131302e2733556a68564b425e5c3d38537654
49353946403f3f315647512c353d3a3b352f251c17141414131516151413151516151413
121111101516181714121213111315151312141716191b1f2327292c3234383b3c3c3b3b
3a3b3c3d3e3f3f404241403f40414143423e3d4244413d3d3c3835333334343334312f2f
3132302e2c354b5c7f55445155543c47719269
4d323f3c38354732543f3d38393c3745464e4a3625201b13111a0e150f1a0e160f0f1617
0f101611141312131719150f0f1610140f0e1b0c14101115161414191c1f242a31363a3c
3d3d3c3c3c3d3e3e423e3b3d41423f3b3f3f40403f3f3f3f413f3c3b3935312e312e2c2f
3636302a2331574f764a4c4b544d51585b646d
4e333d38373649354e404035333a3b4c4b4d493c2f28231e181c14181b1c0f0f120f1415
1113181313141414141414121519151515141712131212151513121410111316191d1f20
2b2c2e3134383b3d413c383a3f434542414140403e3d3c3b3d3c3b3b3c3b393633302e2e
30302d2a232b595070424d44504e575f5e646c
4d343b3336374937474243322e3a40515149413d373233373f3e39323d30262023181617
1316160f13141514111013161010110e13130b15111314121113110f1615151515161718
17181b1e23272b2e36312c2c323a3e403c3c3c3c3b3c3c3b3a3a3a3b3d3e3d3b3534302d
2b2a292926265c5e6a4556484e505b605a5b63
48363b3139394737424144312d3d414b5241373a3b39414e525055495a4644423d2a2221
1b1b19111714121212101012161216121a1a0d1e13171510101515111615131211121213
1011121415191a1c211e1b1b20262b2d2d2e303336393b3d3b3837383a3a38363536342f
29262526262451715b515b4f59575e5c50525e
40383e323d3a4335413f423232403f444a3b363e413b3f4c363e524f604a4d514d393131
2b2a2c272b1f18191b1612111613141215130d1315161410101416151313131212121313
15151413131314141311121215181a1b1c1e2124282c2f32363533343535343432353732
2b24232322233e7b47595350655b5851484f60
3a3c43323d383e35433d413636423e46423b3c454539373c3444585e624a434c4b3c3a3f
3b3b444649382d3031291f1b1d1f191d1512201015121113130f0f111213141515151514
15141313121213130f1011121313131313141517191b1c1e2b2a292b2f3233332d313331
2b2422212625367c455e51545f4f443f3d4d61
374146313a343c39453d433b38404253424041433d37383d4c57575f5444384543393e44
3c3a485251423a3f3f352c2a3740354633325d2e221c1d28251813161213141514130f0e
1313111010111112121314141413131312121212121213131d1d1d1f24292b2c2a2b2c2a
272422212420346d505f5b5e584235353b4f5f
3844482f37313a3c463d4640393d456147443e373336414d52523f473939314540383f42
34303d4a4037353c3c322d3038483b573f437f3f3a2f3645422b1f262626292927221e1a
161515141414141312131313121213141414141313121313151414161a1e202128272423
222323231c142f585a5a62655b433639455761
43444138323235363d463e4536495771343a2836494c523638324454373c373f3a3e4745
292e554f483b344737382e2d37476b563e538b5e463e2e5a552b3a2e4262623b52673637
39232b2e2a27202214201e0c12200c14151715111116161114151916101519121716171c
212324221c1e223c654f5c6f65393e3d456363
3f3f3f3e3833373d433d38423e465a7844382c3f4d474338382e414c3442323b394e5349
33374e3f46372e4032393031345b7e6537407a6e513f365b542e34324e5d633f5962424e
5545575b604a39423b403d2e27271e1e2019171715111217180d121c1813161816121317
1714141a253d3b3d566068544e343940465e6c
3b363a403a2f3241483b404a51485b744f3131424d42323b3a2b424333492e3b40645638
303f544a49382d3c323c36353b5b62583a47645e573737544f322e3651546c4962574555
474d635368513a3a524d4e4a382e3f363529262d271b1c29271e222c2e2f2d252424282d
2b262b393d51463d45666f463a353442454f6c
3e33353e35282d41413f514f584451594b2d373d43412c3a3c30483f314d2f4242745a2d
2e42544f4f3f3240364139353b4f3d494454544f5e32364f513e313d46497856674e3f3f
3b55633f615b413453434c4c362e54433f3a3c40392e313d545757535e766c433e4c5652
4c4e565d554d3c45466070543b403341424163
4c3b373e35262c4335425542453a464145354035374230343a3c4b3d2e48314837735d33
374448405044394639423630335047584a494d6067393950584c3d443b42815e614c3f31
45535e4e7167463f564052423030593e353c413f3c3d404251504d4d5e766332445f6959
50595d5357453b4c555e6d584147313d45435e
58463d40392d32463b4a4e36333b463f41444431313f37303a4c47392d40374a335f482e
3b494f4948423b47363e332c3a535564513c4a6664433a50554844403b3d7e63584f4736
4e46536e7f683f4e5440603a364e684331383d38394247465a47485e6d6f5b3f3c555d4d
4856574941414647615b643e434331394d515c
54433a3d3a3235434b504338324345433d493d312f354032405d3f38303c42493a4a2f28
3e4f564e3d3c3944323c35304d4e535e5332475c4f47394d4a3b4a3d4239767458544a3f
544e597f736f49584c3f7235447475483d3937373b40494f473a445d645c4e3f3f464946
4a52544f3d4652416e555c37423b35374f584e
473a32353632343b544e393e36463a3b364533312f2f4538486a3a38363e4c4941422c34
4d52493337383742313d3a37524b595d4e25475f3f4b3b5047355443463371855e554541
47555a6c4b6b4d4f49427f324b8874404b3a32373b3a45563d45586261635c4751454147
4a46474d4f4c59447f505d4741383c354b553c
492a303a412a32374b41464049383d3a3637322e2e323736496f462c2d4f4d39433d3d3e
414b49363b3e3b443648453e564275583e323d70314a415049405a3e3e4e55588e51545e
554c636349645254454961424554584339302d33414e55585259564b5975403a4d54444d
3f44444658363654765c5e475046373a4d4b39
502c2f353e2a3339453b423d48373d3c3536332f2f3336354467412d32504e3f52433c3c
3c43453a3a3d3a43334545424c3a6e533c343f7238584b524f43564845494a4070686e72
574b5d5b486b564f3f455b3d404f533e362f2c334351595c4756584d55704040464c414b
3f49484d49333b5e7f655c3a463f343b4e4d3d
592f2b303c2a34393f353e3b46363d3f33353430303435333e5b393238514f48674b3b3a
3739403f373b3941304045484233684f3a36437637604e4a4f3d484e594b4a324d7c7672
584c585145735c493b42583b3e4c503a342f2c3244555f623c51594e50683f4841463f49
3e4c48503e343e62806d5d343e3a343d4e4b3d

showpage
end
origstate restore

%%Trailer

%%EndDocument
@endspecial Fn 94 5373 a(Graeme) 46 b(S.) f(Ro) l(y) p
94 5446 3780 17 v 90 rotate dyy eop
%%Page: 2 2
2 1 bop Fo 94 4532 a(Cop) m(yrigh) m(t) 547 4529 y(c) p
Fm 522 4532 a(\015) p Fo 30 w(1997-2002) 34 b(Graeme) d(S.) f(Ro) m(y) p
Fl 31 w(<graeme.roy@analog.com>) p Fo 94 4656 a(P) m(ermission) e(is) g
(gran) m(ted) g(to) g(mak) m(e) h(and) e(distribute) g(v) m(erbatim) h
(copies) h(of) f(this) f(man) m(ual) h(pro) m(vided) f(the) h(cop) m
(y-) 94 4756 y(righ) m(t) j(notice) h(and) e(this) g(p) s(ermission) f
(notice) j(are) f(preserv) m(ed) f(on) g(all) h(copies.) 94
4881 y(P) m(ermission) h(is) f(gran) m(ted) g(to) h(cop) m(y) g(and) e
(distribute) h(mo) s(di\014ed) e(v) m(ersions) j(of) f(this) g(man) m
(ual) g(under) e(the) j(condi-) 94 4980 y(tions) f(for) e(v) m(erbatim)
i(cop) m(ying,) g(pro) m(vided) e(that) i(the) f(en) m(tire) g
(resulting) g(deriv) m(ed) g(w) m(ork) g(is) g(distributed) e(under) 94
5080 y(the) j(terms) f(of) h(a) g(p) s(ermission) e(notice) j(iden) m
(tical) g(to) f(this) f(one.) 94 5204 y(P) m(ermission) h(is) e(gran) m
(ted) i(to) g(cop) m(y) f(and) f(distribute) h(translations) g(of) g
(this) g(man) m(ual) g(in) m(to) h(another) f(language,) 94
5304 y(under) 38 b(the) i(ab) s(o) m(v) m(e) h(conditions) f(for) f(mo)
s(di\014ed) g(v) m(ersions,) j(except) f(that) f(this) f(p) s
(ermission) g(notice) h(ma) m(y) h(b) s(e) 94 5404 y(stated) 32
b(in) e(a) h(translation) g(appro) m(v) m(ed) g(b) m(y) f(the) g(F) -8
b(ree) 32 b(Soft) m(w) m(are) f(F) -8 b(oundation.) 94
5528 y(All) 41 b(pro) s(duct) d(names) i(men) m(tioned) g(in) f(the) h
(do) s(cumen) m(tation) h(and) e(source) h(co) s(de) f(for) h(this) f
(library) h(are) g(the) 94 5628 y(trademarks) 31 b(of) f(their) h(resp)
s(ectiv) m(e) g(o) m(wners.) p 90 rotate dyy eop
%%Page: -1 3
-1 2 bop Fo 3849 -116 a(i) p Fk 94 365 a(T) -13 b(able) 54
b(of) f(Con) l(ten) l(ts) p Fn 94 697 a(mpatrol) p Fj
33 w(.) 20 b(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) p
Fn 76 w(1) 94 955 y(F) -11 b(orew) l(ord) p Fj 21 w(.) 21
b(.) e(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) p
Fn 66 w(3) 94 1212 y(1) 135 b(Ov) l(erview) p Fj 12 w(.) 21
b(.) f(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) p Fn 57 w(5) 94
1469 y(2) 135 b(F) -11 b(eatures) p Fj 40 w(.) 20 b(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) p Fn 84 w(7) 94 1727 y(3) 135 b(Installation) p
Fj 14 w(.) 22 b(.) e(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) p Fn 59 w(13) 94
1984 y(4) 135 b(In) l(tegration) p Fj 21 w(.) 22 b(.) d(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) p Fn 66 w(15) p Fo 393 2109 a(4.1) 92 b(Adding) 30
b(mpatrol) p Fi 20 w(.) 16 b(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 50 w(15) 393 2208 y(4.2) 92
b(Remo) m(ving) 32 b(mpatrol) p Fi 11 w(.) 15 b(.) h(.) f(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) p Fo 40 w(17) p
Fn 94 2441 a(5) 135 b(Memory) 45 b(allo) t(cations) p
Fj 18 w(.) 21 b(.) f(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) p
Fn 62 w(19) p Fo 393 2565 a(5.1) 92 b(Static) 32 b(memory) e(allo) s
(cations) p Fi 13 w(.) 18 b(.) d(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) p
Fo 42 w(19) 393 2665 y(5.2) 92 b(Stac) m(k) 32 b(memory) e(allo) s
(cations) p Fi 21 w(.) 17 b(.) e(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 50 w(19) 393 2765 y(5.3) 92 b(Dynamic) 32 b(memory) e(allo) s
(cations) p Fi 16 w(.) 17 b(.) e(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 46 w(20) p
Fn 94 2997 a(6) 135 b(Op) t(erating) 46 b(system) g(supp) t(ort) p
Fj 15 w(.) 18 b(.) h(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) p Fn 59 w(21) p
Fo 393 3122 a(6.1) 92 b(Virtual) 31 b(memory) p Fi 19
w(.) 15 b(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g
(.) g(.) g(.) p Fo 48 w(21) 393 3221 y(6.2) 92 b(Call) 31
b(stac) m(ks) h(and) e(sym) m(b) s(ol) g(tables) p Fi
27 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) p Fo 56 w(22) 393 3321 y(6.3) 92 b(Threads) p
Fi 24 w(.) 15 b(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 54 w(24) p Fn 94 3553 a(7) 135 b(Using) 46 b(mpatrol) p
Fj 19 w(.) 20 b(.) g(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) p Fn 64 w(27) p Fo 393 3678 a(7.1) 92
b(Library) 30 b(b) s(eha) m(viour) p Fi 21 w(.) 15 b(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 50 w(27) 393
3778 y(7.2) 92 b(Logging) 32 b(and) e(tracing) p Fi 25
w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 53 w(28) 393 3877 y(7.3) 92 b(General) 32 b(errors) p
Fi 11 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 40 w(30) 393 3977 y(7.4) 92
b(Ov) m(erwrites) 31 b(and) f(underwrites) p Fi 23 w(.) 13
b(.) i(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) p Fo 52 w(30) 393 4076 y(7.5) 92 b(Using) 31
b(with) f(a) h(debugger) p Fi 18 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 47 w(32) 393 4176 y(7.6) 92 b(T) -8
b(esting) p Fi 20 w(.) 16 b(.) f(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 49 w(36) 393 4276 y(7.7) 92 b(Library) 30 b(functions) p
Fi 14 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 44 w(37) 393 4375 y(7.8) 92 b(Leak) 31
b(table) p Fi 21 w(.) 16 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 50 w(45) p Fn 94 4608 a(8) 135 b(T) -11 b(o) t(ols) p
Fj 37 w(.) 19 b(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) p
Fn 81 w(49) p Fo 393 4732 a(8.1) 92 b(Dbmallo) s(c-compatible) 33
b(functions) p Fi 20 w(.) 16 b(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 50 w(49) 393 4832
y(8.2) 92 b(Dmallo) s(c-compatible) 34 b(functions) p
Fi 24 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) p Fo 53 w(50) 393 4932 y(8.3) 92
b(Determining) 32 b(heap) e(di\013erences) p Fi 19 w(.) 15
b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 48 w(51) 393 5031 y(8.4) 92 b(Memory) 31
b(allo) s(cation) i(gauge) p Fi 8 w(.) 17 b(.) e(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h
(.) p Fo 37 w(51) 393 5131 y(8.5) 92 b(Memory) 31 b(allo) s(cation) i
(tracing) p Fi 27 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo
55 w(51) p 90 rotate dyy eop
%%Page: -2 4
-2 3 bop Fo 94 -116 a(ii) 3417 b(mpatrol) p Fn 94 83
a(9) 135 b(Utilities) p Fj 18 w(.) 23 b(.) c(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) p Fn 63 w(53) p Fo 393 208 a(9.1) 92 b(The) p
Fl 30 w(mpatrol) p Fo 29 w(command) p Fi 21 w(.) 14 b(.) h(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) p Fo 50 w(53) 393 307 y(9.2) 92 b(The) p
Fl 30 w(mleak) p Fo 29 w(command) p Fi 25 w(.) 15 b(.) g(.) g(.) g(.) h
(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 55 w(55) 393 407 y(9.3) 92
b(The) p Fl 30 w(mpsym) p Fo 29 w(command) p Fi 25 w(.) 15
b(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo
55 w(55) 393 506 y(9.4) 92 b(The) p Fl 30 w(mpedit) p
Fo 29 w(command) p Fi 23 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) p Fo 52 w(56) 393 606 y(9.5) 92 b(The) p Fl
30 w(hexwords) p Fo 28 w(command) p Fi 18 w(.) 16 b(.) f(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) p Fo 47 w(57) p Fn 94 839 a(10) 135 b(Pro\014ling) p
Fj 31 w(.) 20 b(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) p Fn 75 w(59) 94
1096 y(11) 135 b(T) -11 b(racing) p Fj 31 w(.) 20 b(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) p Fn 76 w(73) 94 1353 y(12) 135 b(Heap) 46
b(corruption) p Fj 17 w(.) 19 b(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) p Fn 62 w(81) 94 1611 y(13) 135
b(Memory) 45 b(leaks) p Fj 26 w(.) 21 b(.) e(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) p Fn 70 w(87) 94
1868 y(14) 135 b(Impro) l(ving) 46 b(p) t(erformance) p
Fj 29 w(.) 20 b(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) p Fn 74 w(89) 94
2125 y(15) 135 b(Ho) l(w) 46 b(it) g(w) l(orks) p Fj
16 w(.) 19 b(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) p Fn 60 w(93) 94 2383 y(16) 135 b(Examples) p
Fj 34 w(.) 20 b(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) p Fn 77 w(95) p
Fo 393 2507 a(16.1) 93 b(Getting) 32 b(started) p Fi
9 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 38 w(96) 393 2607 y(16.2) 93 b(Detecting) 33
b(incorrect) e(reuse) f(of) h(freed) f(memory) p Fi 14
w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) p Fo 44 w(104) 393 2707 y(16.3) 93
b(Detecting) 33 b(use) d(of) g(free) h(memory) p Fi 9
w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) h(.) p Fo 38 w(106) 393 2806 y(16.4) 93 b(Using) 30
b(o) m(v) m(er\015o) m(w) i(bu\013ers) p Fi 26 w(.) 15
b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 56 w(109) 393
2906 y(16.5) 93 b(Chec) m(king) 31 b(memory) f(accesses) p
Fi 20 w(.) 17 b(.) e(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 50 w(110) 393 3005
y(16.6) 93 b(Bad) 31 b(memory) f(op) s(erations) p Fi
9 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 38 w(111) 393
3105 y(16.7) 93 b(Incompatible) 31 b(function) f(calls) p
Fi 12 w(.) 16 b(.) f(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 42 w(112) 393 3205
y(16.8) 93 b(The) p Fl 30 w(alloca\(\)) p Fo 28 w(functions) p
Fi 26 w(.) 15 b(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 57 w(113) 393
3304 y(16.9) 93 b(The) p Fl 30 w(MP_MALLOC\(\)) p Fo
27 w(functions) p Fi 20 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 50 w(119) 393
3404 y(16.10) 93 b(Additional) 31 b(useful) f(information) p
Fi 26 w(.) 15 b(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) p Fo 56 w(121) p Fn 94 3636 a(17) 135 b(T) -11
b(utorial) p Fj 14 w(.) 20 b(.) g(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.)
f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) p
Fn 58 w(129) 94 3894 y(App) t(endix) 44 b(A) 134 b(F) -11
b(unctions) p Fj 16 w(.) 19 b(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) p Fn 60 w(137) p Fo 393 4018 a(A.1) 92 b(C) 30 b(dynamic) g(memory)
h(allo) s(cation) h(functions) p Fi 24 w(.) 15 b(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 54 w(137) 393 4118 y(A.2) 92 b(C) 30 b(dynamic) g(memory) h
(extension) g(functions) p Fi 10 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) p
Fo 39 w(141) 393 4218 y(A.3) 92 b(C) 30 b(dynamic) g(memory) h
(alternativ) m(e) h(functions) p Fi 26 w(.) 15 b(.) g(.) g(.) g(.) h(.)
f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 56 w(142) 393 4317 y(A.4) 92 b(C) p Fl(++) p Fo 30
w(dynamic) 30 b(memory) g(allo) s(cation) j(functions) p
Fi 19 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 49 w(143) 393 4417
y(A.5) 92 b(C) 30 b(memory) g(op) s(eration) h(functions) p
Fi 18 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h
(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 48 w(144) 393 4516 y(A.6) 92 b(mpatrol) 31
b(library) f(functions) p Fi 18 w(.) 14 b(.) h(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 48 w(146) p Fn 94 4749 a(App) t(endix) 44 b(B) 134
b(En) l(vironmen) l(t) p Fj 16 w(.) 21 b(.) e(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) p
Fn 60 w(153) 94 5006 y(App) t(endix) 44 b(C) 135 b(Options) p
Fj 41 w(.) 19 b(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) p
Fn 85 w(161) 94 5264 y(App) t(endix) 44 b(D) 135 b(Diagnostic) 46
b(messages) p Fj 17 w(.) 21 b(.) e(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) p Fn 61 w(167) 94 5521 y(App) t(endix) 44
b(E) 135 b(Library) 45 b(p) t(erformance) p Fj 11 w(.) 20
b(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) p
Fn 55 w(175) p 90 rotate dyy eop
%%Page: -3 5
-3 4 bop Fo 3798 -116 a(iii) p Fn 94 83 a(App) t(endix) 44
b(F) 134 b(File) 46 b(formats) p Fj 15 w(.) 20 b(.) g(.) f(.) h(.) f(.)
g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h
(.) f(.) p Fn 59 w(177) p Fo 393 208 a(F.1) 92 b(Pro\014ling) 31
b(\014le) f(format) p Fi 25 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fo 54 w(177) 393 307 y(F.2) 92 b(T) -8
b(racing) 31 b(\014le) g(format) p Fi 22 w(.) 16 b(.) f(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 52 w(178) p Fn
94 540 a(App) t(endix) 44 b(G) 134 b(Supp) t(orted) 44
b(systems) p Fj 22 w(.) 21 b(.) e(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.)
g(.) h(.) f(.) h(.) f(.) p Fn 66 w(179) 94 797 y(App) t(endix) 44
b(H) 135 b(P) l(orting) p Fj 15 w(.) 20 b(.) f(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) p Fn 59 w(185) 94 1054 y(App) t(endix) 44
b(I) 135 b(Notes) p Fj 32 w(.) 20 b(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) p Fn 75 w(193) p Fo 393
1179 a(I.1) 92 b(Notes) 31 b(for) g(all) g(platforms) p
Fi 23 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) p
Fo 52 w(193) 393 1279 y(I.2) 92 b(Notes) 31 b(for) g(UNIX) f(platforms)
p Fi 17 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fo 46 w(198) 393
1378 y(I.3) 92 b(Notes) 31 b(for) g(Amiga) g(platforms) p
Fi 27 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) h(.) f(.) g(.) g(.) p Fo 56 w(199) 393
1478 y(I.4) 92 b(Notes) 31 b(for) g(Windo) m(ws) f(platforms) p
Fi 18 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) p Fo 47 w(200) 393 1577 y(I.5) 92
b(Notes) 31 b(for) g(Net) m(w) m(are) h(platforms) p
Fi 15 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fo 45 w(200) p Fn 94 1810
a(App) t(endix) 44 b(J) 135 b(F) -11 b(requen) l(tly) 45
b(ask) l(ed) h(questions) p Fj 23 w(.) 20 b(.) g(.) f(.) h(.) f(.) g(.)
h(.) p Fn 67 w(203) p Fo 393 1934 a(J.1) 92 b(Do) s(cumen) m(tation) p
Fi 9 w(.) 17 b(.) e(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) p Fo 39 w(203) 393 2034 y(J.2) 92
b(Building) p Fi 17 w(.) 14 b(.) h(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 46 w(204) 393 2134 y(J.3) 92 b(Linking) p Fi 13 w(.) 14
b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) p Fo 42 w(206) 393
2233 y(J.4) 92 b(Running) p Fi 15 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) p Fo 45 w(207) 393 2333 y(J.5) 92 b(Files) p Fi 28
w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h
(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fo 57 w(211) p Fn 94 2565 a(App) t(endix) 44 b(K) 135
b(Related) 47 b(soft) l(w) l(are) p Fj 25 w(.) 21 b(.) f(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) p
Fn 69 w(213) 94 2823 y(App) t(endix) 44 b(L) 135 b(References) p
Fj 27 w(.) 20 b(.) g(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) p
Fn 71 w(233) 94 3080 y(App) t(endix) 44 b(M) 134 b(Ab) t(out) 44
b(the) i(author) p Fj 16 w(.) 19 b(.) h(.) f(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) p Fn 60 w(235) 94
3337 y(App) t(endix) 44 b(N) 135 b(Cop) l(ying) p Fj
24 w(.) 20 b(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) p
Fn 68 w(237) 94 3595 y(F) -11 b(unction) 45 b(index) p
Fj 38 w(.) 20 b(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) p Fn 82 w(247) 94 3852 y(Index) p
Fj 31 w(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) p
Fn 75 w(249) p 90 rotate dyy eop
%%Page: -4 6
-4 5 bop Fo 94 -116 a(iv) 3394 b(mpatrol) p 90 rotate
dyy eop
%%Page: 1 7
1 6 bop Fo 94 -116 a(mpatrol) 3422 b(1) p Fk 94 365 a(mpatrol) p
Fo 219 589 a(This) 42 b(do) s(cumen) m(t) g(describ) s(es) g(mpatrol,) k
(a) d(library) f(for) g(con) m(trolling) i(and) e(tracing) i(dynamic) e
(memory) 94 689 y(allo) s(cations.) 219 814 y(This) 30
b(is) g(edition) h(2.13) h(of) e(the) h(mpatrol) g(man) m(ual) f(for) h
(v) m(ersion) f(1.4.8,) j(8th) d(Jan) m(uary) -8 b(,) 31
b(2002.) p 90 rotate dyy eop
%%Page: 2 8
2 7 bop Fo 94 -116 a(2) 3422 b(mpatrol) p 90 rotate dyy
eop
%%Page: 3 9
3 8 bop Fo 94 -116 a(F) -8 b(orew) m(ord) 3368 b(3) p
Fk 94 365 a(F) -13 b(orew) l(ord) p Fo 219 598 a(I) 30
b(\014rst) g(started) g(writing) h(this) f(library) g(a) h(few) f(y) m
(ears) h(ago) g(when) f(the) g(compan) m(y) h(I) f(w) m(ork) g(for) g
(sen) m(t) h(me) g(out) 94 697 y(to) i(a) g(customer) f(who) g(had) f
(rep) s(orted) g(a) i(memory) f(leak,) i(whic) m(h) d(he) h(exp) s
(ected) h(w) m(as) f(coming) h(from) e(the) i(co) s(de) 94
797 y(generated) f(b) m(y) f(our) f(C) p Fl(++) p Fo
29 w(compiler.) 42 b(A) 31 b(few) g(y) m(ears) g(on) f(and) g(the) h
(library) g(has) f(c) m(hanged) h(dramatically) h(from) 94
897 y(its) f(\014rst) f(b) s(eginnings,) g(but) f(I) h(though) m(t) h
(I'd) f(release) i(it) f(publicly) f(in) g(case) h(an) m(y) m(one) h
(else) f(found) e(it) i(useful.) 219 1024 y(When) 26
b(writing) h(the) g(library) -8 b(,) 27 b(I) g(placed) g(more) g
(emphasis) f(on) g(the) h(quan) m(tit) m(y) h(and) e(qualit) m(y) i(of)
f(information) 94 1124 y(ab) s(out) 33 b(allo) s(cated) i(memory) e
(rather) g(than) f(the) h(sp) s(eed) f(and) h(e\016ciency) h(of) f
(allo) s(cating) i(the) e(actual) h(memory) -8 b(.) 94
1223 y(This) 30 b(means) g(that) i(the) e(library) g(will) h(use) f
(dramatically) i(more) f(memory) f(than) g(normal) h(dynamic) f(memory)
94 1323 y(allo) s(cation) f(libraries) d(and) f(can) h(slo) m(w) h(do) m
(wn) e(to) i(a) f(cra) m(wl) h(dep) s(ending) d(on) i(whic) m(h) f
(options) i(y) m(ou) f(use.) 39 b(Ho) m(w) m(ev) m(er,) 94
1422 y(the) 27 b(end) f(results) g(are) g(lik) m(ely) i(to) f(b) s(e) f
(accurate) h(and) f(reliable,) i(and) e(in) g(most) h(cases) g(the) f
(library) g(will) h(run) e(quite) 94 1522 y(happily) 30
b(at) h(a) g(sane) g(sp) s(eed.) 219 1649 y(The) j(mpatrol) i(library) e
(is) h(b) m(y) g(no) g(means) g(the) g(only) g(library) g(of) g(its) g
(kind.) 54 b(Solaris) 35 b(has) g(no) g(less) g(that) h(6) 94
1749 y(di\013eren) m(t) 31 b(mallo) s(c) h(libraries,) e(and) g(there) h
(are) f(plen) m(t) m(y) i(a) m(v) -5 b(ailable) 32 b(as) f(freew) m
(are) g(or) f(as) h(commercial) h(pro) s(ducts.) 94 1849
y(T) -8 b(ry) 32 b(to) g(k) m(eep) g(in) g(mind) e(that) i(mpatrol) g
(comes) h(with) e(absolutely) i(no) e(w) m(arran) m(t) m(y) i(and) e
(so) h(if) f(it) h(do) s(esn't) g(w) m(ork) 94 1948 y(for) 26
b(y) m(ou) h(and) e(y) m(ou) h(need) g(a) g(fast) g(solution,) i(try) e
(some) g(of) g(the) h(other) f(libraries) g(or) g(pro) s(ducts) e(a) m
(v) -5 b(ailable.) 42 b(I) 26 b(ha) m(v) m(e) 94 2048
y(listed) 32 b(some) g(of) f(the) g(most) h(p) s(opular) e(at) i(the) f
(end) f(of) i(this) f(man) m(ual) g(\(see) h(App) s(endix) e(K) g
([Related) j(soft) m(w) m(are],) 94 2148 y(page) f(213\).) 219
2275 y(This) 42 b(man) m(ual) i(is) f(arranged) f(so) i(that) f
(complete) i(reference) e(material) i(on) e(the) g(mpatrol) g(library) g
(can) 94 2374 y(b) s(e) 36 b(found) f(in) g(the) i(app) s(endices,) g
(while) f(in) m(tro) s(ductory) g(and) f(bac) m(kground) h(material) h
(can) g(b) s(e) e(found) g(in) h(the) 94 2474 y(preceding) 30
b(c) m(hapters) f(and) g(sections.) 41 b(F) -8 b(or) 30
b(readers) f(who) f(wish) g(to) i(delv) m(e) g(righ) m(t) g(in) f(and) f
(use) h(the) g(library) -8 b(,) 30 b(the) 94 2574 y(Installation) 36
b(\(see) g(Chapter) e(3) h([Installation],) j(page) d(13\)) h(and) e
(Examples) g(\(see) i(Chapter) e(16) h([Examples],) 94
2673 y(page) 28 b(95\)) g(c) m(hapters) f(should) f(b) s(e) g(enough) h
(to) g(get) h(started) f(in) g(com) m(bination) h(with) e(the) h(quic) m
(k) h(reference) f(card.) 94 2773 y(Otherwise,) 36 b(this) f(man) m
(ual) g(should) f(b) s(e) g(read) h(from) f(b) s(eginning) g(to) i(end)
e(in) h(order) f(to) i(get) g(the) f(most) g(out) g(of) 94
2873 y(the) g(soft) m(w) m(are) h(it) f(describ) s(es.) 53
b(Note) 36 b(that) f(all) g(of) g(the) g(output) f(sho) m(wn) g(from) g
(the) h(examples) g(w) m(as) g(pro) s(duced) 94 2972
y(on) c(32-bit) g(en) m(vironmen) m(ts,) g(although) g(mpatrol) g(can) g
(b) s(e) e(built) i(to) g(supp) s(ort) d(64-bit) k(en) m(vironmen) m
(ts) f(as) f(w) m(ell.) 219 3099 y(Due) 25 b(to) g(their) f(v) m(ery) h
(nature,) g(problems) f(with) g(dynamic) g(memory) g(allo) s(cations) i
(are) f(notoriously) g(di\016cult) 94 3199 y(to) k(repro) s(duce) d
(and) h(debug,) h(and) f(this) h(is) f(lik) m(ely) j(to) e(b) s(e) f
(the) h(case) g(if) g(y) m(ou) g(\014nd) e(a) i(bug) f(in) h(the) f
(mpatrol) h(library) 94 3299 y(as) c(it) g(migh) m(t) g(b) s(e) f
(extremely) i(hard) d(to) j(repro) s(duce) d(on) h(another) h(system.)
38 b(Details) 26 b(on) d(ho) m(w) h(to) g(rep) s(ort) f(bugs) g(are) 94
3398 y(giv) m(en) k(elsewhere) f(in) f(this) h(do) s(cumen) m(t) f
(\(see) i(App) s(endix) d(I) h([Notes],) k(page) d(193\),) i(but) d(it)
h(w) m(ould) g(b) s(e) f(v) m(ery) h(useful) 94 3498
y(if) j(y) m(ou) f(could) g(try) g(to) h(pro) m(vide) g(as) f(m) m(uc) m
(h) g(information) h(as) f(p) s(ossible) g(when) f(rep) s(orting) h(a) g
(problem,) h(and) e(that) 94 3598 y(includes) k(ha) m(ving) g(a) g(lo) s
(ok) h(in) e(the) h(library) g(source) f(co) s(de) h(to) h(see) f(if) g
(it's) g(ob) m(vious) h(what) e(is) h(wrong.) 42 b(Ho) m(w) m(ev) m
(er,) 94 3697 y(please) 31 b(try) f(to) h(read) f(the) h(frequen) m
(tly) f(ask) m(ed) h(questions) f(\(see) h(App) s(endix) d(J) i([F) -8
b(requen) m(tly) 32 b(ask) m(ed) e(questions],) 94 3797
y(page) g(203\)) h(\014rst) d(in) h(case) h(y) m(our) f(question) h(or)
f(problem) f(is) h(co) m(v) m(ered) i(there) e(since) h(they) f(are) g
(usually) g(up) s(dated) 94 3896 y(ev) m(ery) j(time) f(I) f(receiv) m
(e) i(a) f(question) f(ab) s(out) h(mpatrol.) 219 4024
y(The) 71 b(latest) i(v) m(ersion) e(of) h(the) f(mpatrol) g(library) g
(and) g(this) g(man) m(ual) g(can) h(alw) m(a) m(ys) h(b) s(e) d(found)
94 4123 y(at) p Fl 128 w(http://www.cbmamiga.demon.) o(co.) o(uk/m) o
(patr) o(ol/) p Fo -1 w(,) 146 b(and) 127 b(an) m(y) g(corresp) s
(ondence) g(relat-) 94 4223 y(ing) 101 b(to) g(mpatrol) f(\(bug) g(rep)
s(orts,) 117 b(enhancemen) m(t) 101 b(requests,) 117
b(complimen) m(ts,) i(etc.\)) 102 b(should) 94 4323 y(b) s(e) 91
b(sen) m(t) i(to) p Fl 92 w(mpatrol@cbmamiga.demon.c) o(o.uk) p
Fo -1 w(.) 219 b(I'd) 91 b(b) s(e) g(v) m(ery) h(in) m(terested) h(in) e
(hearing) 94 4422 y(an) m(y) 76 b(success) g(stories) g(with) f(using) g
(mpatrol) h(to) g(debug) f(programs,) 87 b(since) 76
b(I) f(get) h(v) m(ery) g(little) 94 4522 y(feedbac) m(k) c(apart) e
(from) g(the) h(o) s(ccasional) h(bug) e(rep) s(ort.) 161
b(The) 70 b(mpatrol) g(library) g(is) h(also) g(regis-) 94
4622 y(tered) 114 b(at) g(F) -8 b(reshMeat) 114 b(\() p
Fl(http://freshmeat.net/projec) o(ts/m) o(patr) o(ol/) p
Fo -1 w(\)) 108 b(and) k(SourceF) -8 b(orge) 94 4721
y(\() p Fl(http://sourceforge.net/proj) o(ects) o(/mpa) o(tro) o(l/) p
Fo(\)) 59 b(and) 65 b(sev) m(eral) h(other) g(soft) m(w) m(are) g
(sites) g(so) g(y) m(ou) 94 4821 y(can) 49 b(receiv) m(e) h
(noti\014cation) f(of) f(up) s(dates) g(there) g(as) g(w) m(ell.) 95
b(I) 48 b(normally) g(only) g(c) m(hec) m(k) i(m) m(y) e(e-mail) h(ab) s
(out) 94 4920 y(once) h(or) g(t) m(wice) g(a) g(w) m(eek,) 55
b(so) 50 b(don't) f(exp) s(ect) h(an) f(immediate) h(resp) s(onse.) 97
b(I) 49 b(can) g(also) i(b) s(e) d(reac) m(hed) i(at) p
Fl 94 5020 a(graeme.roy@analog.com) p Fo 26 w(but) 31
b(that) i(is) e(m) m(y) h(w) m(ork) g(e-mail) h(address.) 44
b(There) 31 b(is) h(also) g(a) g(discussion) f(group) 94
5120 y(at) p Fl 33 w(http://groups.yahoo.com/) o(grou) o(p/m) o(patr) o
(ol/) p Fo 25 w(where) g(y) m(ou) h(can) g(p) s(ost) g(mpatrol-related)
h(questions) 94 5219 y(but) d(y) m(ou) h(m) m(ust) f(\014rst) g
(subscrib) s(e) e(to) k(the) e(group) g(b) s(efore) g(y) m(ou) h(can) f
(send) g(mail) h(to) g(it.) 219 5347 y(Finally) -8 b(,) 66
b(I'd) 57 b(lik) m(e) i(to) g(thank) e(Stephan) g(Springl) g(\() p
Fl(springl@bfw-online.de) p Fo(\)) 52 b(for) 58 b(his) f(help) g(on) 94
5446 y(reading) j(debugging) g(information) g(from) f(ob) 5
b(ject) 61 b(\014les) e(via) i(the) f(GNU) g(BFD) h(library) -8
b(,) 67 b(and) 59 b(Adam) 94 5546 y(Zell) 68 b(\() p
Fl(zell@best.com) p Fo(\)) d(for) i(helping) h(with) f(patc) m(hing) h
(the) g(dynamic) g(link) m(er) g(supp) s(ort) d(functions) 94
5645 y(for) 53 b(loading) h(shared) f(libraries.) 109
b(Both) 54 b(Alexander) f(Barton) h(\() p Fl(abarton@innotrac.com) p
Fo(\)) 48 b(and) 53 b(Da) m(v) m(e) p 90 rotate dyy eop
%%Page: 4 10
4 9 bop Fo 94 -116 a(4) 3422 b(mpatrol) 94 365 y(Gibson) 58
b(\() p Fl(david.gibson@analog.com) p Fo(\)) 52 b(help) s(ed) 57
b(to) i(mak) m(e) f(mpatrol) g(thread-safe.) 124 b(Roger) 59
b(Keane) 94 465 y(\() p Fl(rgr@bcs-inc.com) p Fo(\)) 36
b(pro) m(vided) i(the) h(p) s(erl) g(co) s(de) g(in) f(the) p
Fl 39 w(mpsym) p Fo 38 w(command) g(and) h(also) h(the) f(idea) g(for) g
(the) p Fl 94 565 a(MP_USE_ATEXIT) p Fo 44 w(feature) 48
b(macro.) 92 b(Stev) m(e) 48 b(McIn) m(t) m(yre) h(\() p
Fl(smcintyre@allstor-sw.co.u) o(k) p Fo(\)) 42 b(help) s(ed) k(b) m(y)
94 664 y(diagnosing) d(the) p Fl 41 w(fork\(\)) p Fo
40 w(problem) e(and) g(pro) m(vided) g(example) h(co) s(de) f(on) h(ho)
m(w) f(to) h(\014x) f(it.) 74 b(P) m(eter) 43 b(Zijlstra) 94
764 y(\() p Fl(peter@xlnt-software.com) p Fo(\)) 25 b(con) m(tributed)
31 b(co) s(de) f(to) i(enhance) e(stac) m(k) i(traces) f(for) f
(errors.) 219 888 y(Boris) 111 b(Makushkin) f(\() p Fl
(oberon@antibiotic.ru) p Fo(\)) 105 b(requested,) 131
b(help) s(ed) 110 b(with,) 130 b(and) 110 b(pro-) 94
988 y(vided) 87 b(initial) h(testing) g(for) e(the) h(F) -8
b(reeBSD) 88 b(p) s(ort,) 101 b(and) 86 b(Iv) -5 b(an) 86
b(Finc) m(h) h(\() p Fl(i.finch@rl.ac.uk) p Fo(\),) 94
1088 y(Gerrit) 182 b(Bruc) m(hhaeuser) f(\() p Fl
(gbruchhaeuser@orga.com) p Fo(\)) c(and) j(Andreas) h(Sc) m(hallen) m
(b) s(erg) 94 1187 y(\() p Fl(andreas.schallenberg@inform) o(atik) o
(.uni) o(-ol) o(denb) o(urg.) o(de) p Fo(\)) 141 b(did) k(the) i(same) g
(for) g(the) 94 1287 y(T) -8 b(ru64) 59 b(and) f(SuSE) e(p) s(orts.) 124
b(Both) 59 b(Aleksandar) g(Donev) g(\() p Fl(donev@pa.msu.edu) p
Fo(\)) 54 b(and) k(V) -8 b(an) 59 b(Sn) m(yder) 94 1386
y(\() p Fl(vsnyder@math.jpl.nasa.gov) p Fo(\)) 69 b(pro) m(vided) k
(suggestions) j(and) d(co) s(de) i(for) f(using) g(mpatrol) g(with) 94
1486 y(F) m(OR) -8 b(TRAN.) 46 b(Mic) m(hael) g(An) m(thon) m(y) e(\() p
Fl(m@xyzfind.com) p Fo(\)) e(wrote) i(the) g(profdi\013) g(to) s(ol) h
(and) e(Jerome) i(Maran) m(t) 94 1586 y(\() p Fl(jerome@debian.org) p
Fo(\)) 27 b(did) i(the) i(Debian) g(GNU/Lin) m(ux) g(p) s(ort.) 219
1710 y(In) 37 b(addition,) j(after) f(sp) s(ending) d(w) m(ell) j(o) m
(v) m(er) g(2000) h(hours) d(designing) h(and) f(programming) g
(mpatrol,) k(m) m(y) 94 1810 y(sanit) m(y) 29 b(w) m(ould) f(not) g(ha)
m(v) m(e) i(b) s(een) d(preserv) m(ed) h(in) f(the) h(state) i(it) e
(is) g(in) g(to) s(da) m(y) h(w) m(ere) f(it) h(not) f(for) g(the) g(m)
m(usic) g(of) g(The) 94 1910 y(Chemical) j(Brothers,) g(The) e(Manic) j
(Street) e(Preac) m(hers,) h(Orbital) f(and) g(The) g(Pro) s(digy) -8
b(.) 40 b(Y) -8 b(ou) 31 b(can) f(no) m(w) h(argue) 94
2009 y(ho) m(w) g(sane) f(I) h(am) f(dep) s(ending) f(on) h(y) m(our) h
(m) m(usical) g(tastes!) 219 2134 y(Oh,) 25 b(and) f(alw) m(a) m(ys) j
(remem) m(b) s(er) d(to) h(do) g(\014nal) f(release) i(builds) e
(without) g(the) h(mpatrol) g(library) g(as) f(the) h(library) 94
2233 y(is) 31 b(m) m(uc) m(h) f(slo) m(w) m(er) i(than) e(normal) g
(mallo) s(c) i(implemen) m(tations) g(and) d(uses) h(m) m(uc) m(h) h
(more) f(memory) -8 b(.) 219 2358 y(Happ) m(y) 30 b(debugging!) 219
2482 y(Graeme) h(Ro) m(y) -8 b(,) 32 b(11th) f(Octob) s(er,) g(1999.)
219 2607 y(Edin) m(burgh,) e(Scotland.) p 90 rotate dyy
eop
%%Page: 5 11
5 10 bop Fo 94 -116 a(Chapter) 30 b(1:) 41 b(Ov) m(erview) 2899
b(5) p Fk 94 365 a(1) 81 b(Ov) l(erview) p Fo 219 589
a(The) 39 b(mpatrol) g(library) g(is) g(y) m(et) h(another) f(link) g
(library) g(that) g(attempts) h(to) g(diagnose) g(run-time) e(errors) 94
689 y(that) 28 b(are) g(caused) g(b) m(y) f(the) h(wrong) f(use) g(of) g
(dynamically) h(allo) s(cated) i(memory) -8 b(.) 40 b(If) 27
b(y) m(ou) h(don't) f(kno) m(w) g(what) h(the) p Fl 94
789 a(malloc\(\)) p Fo 33 w(function) 34 b(or) p Fl 34
w(operator) 28 b(new[]) p Fo 33 w(do) 35 b(then) f(this) g(library) g
(is) h(probably) f(not) g(for) g(y) m(ou.) 54 b(Y) -8
b(ou) 35 b(ha) m(v) m(e) 94 888 y(to) 30 b(ha) m(v) m(e) g(a) g
(certain) g(amoun) m(t) f(of) g(programming) g(exp) s(ertise) g(and) f
(a) i(kno) m(wledge) g(of) f(ho) m(w) g(to) g(run) f(a) h(command) 94
988 y(line) i(compiler) g(and) f(link) m(er) h(b) s(efore) f(y) m(ou) g
(should) g(attempt) h(to) g(use) f(this.) 219 1112 y(Along) 23
b(with) f(pro) m(viding) g(a) h(comprehensiv) m(e) g(and) e
(con\014gurable) h(log) i(of) e(all) h(dynamic) f(memory) h(op) s
(erations) 94 1212 y(that) 29 b(o) s(ccurred) e(during) g(the) h
(lifetime) h(of) f(a) g(program,) h(the) f(mpatrol) g(library) f(p) s
(erforms) g(extensiv) m(e) i(c) m(hec) m(king) 94 1312
y(to) 24 b(detect) g(an) m(y) f(misuse) f(of) h(dynamically) g(allo) s
(cated) h(memory) -8 b(.) 39 b(All) 23 b(of) g(this) f(functionalit) m
(y) i(can) f(b) s(e) f(in) m(tegrated) 94 1411 y(in) m(to) 34
b(existing) h(co) s(de) e(through) f(the) h(inclusion) g(of) g(a) h
(single) g(header) e(\014le) i(at) f(compile-time.) 51
b(On) 32 b(UNIX) i(and) 94 1511 y(Windo) m(ws) 43 b(platforms) e(\(and)
h(AmigaOS) g(when) f(using) p Fl 42 w(gcc) p Fo(\)) g(this) h(ma) m(y) h
(not) f(ev) m(en) h(b) s(e) e(necessary) i(as) f(the) 94
1611 y(mpatrol) 30 b(library) f(can) g(b) s(e) g(link) m(ed) h(with) e
(existing) j(ob) 5 b(ject) 30 b(\014les) f(at) h(link-time) g(or,) g
(on) f(some) h(platforms,) f(ev) m(en) 94 1710 y(dynamically) j(link) m
(ed) e(with) g(existing) i(programs) e(at) h(run-time.) 219
1835 y(All) e(logging) h(and) e(tracing) h(output) f(from) g(the) g
(mpatrol) h(library) f(is) g(sen) m(t) h(to) g(a) f(separate) i(log) f
(\014le) f(in) g(order) 94 1934 y(to) g(k) m(eep) g(its) f(diagnostics)
i(separate) f(from) e(an) m(y) i(that) g(the) f(program) g(b) s(eing) f
(tested) i(migh) m(t) g(generate.) 41 b(A) 27 b(wide) 94
2034 y(v) -5 b(ariet) m(y) 39 b(of) f(library) f(settings) i(can) e
(also) i(b) s(e) e(c) m(hanged) h(at) g(run-time) f(via) h(an) g(en) m
(vironmen) m(t) g(v) -5 b(ariable,) 40 b(th) m(us) 94
2134 y(remo) m(ving) 32 b(the) e(need) g(to) h(recompile) h(or) e
(relink) g(in) h(order) e(to) j(c) m(hange) f(the) g(library's) f(b) s
(eha) m(viour.) 219 2258 y(A) 40 b(\014le) g(con) m(taining) h(a) g
(summary) d(of) i(the) h(memory) e(allo) s(cation) k(pro\014ling) c
(statistics) j(for) d(a) i(particular) 94 2358 y(program) 31
b(can) g(b) s(e) g(pro) s(duced) e(b) m(y) h(the) i(mpatrol) f(library)
-8 b(.) 42 b(This) 30 b(\014le) h(can) g(then) g(b) s(e) f(read) h(b) m
(y) f(a) i(pro\014ling) e(to) s(ol) 94 2457 y(whic) m(h) j(will) g
(displa) m(y) g(a) g(set) g(of) g(tables) g(based) g(up) s(on) e(the) i
(accum) m(ulated) h(data.) 48 b(The) 32 b(pro\014ling) h(information) 94
2557 y(includes) 24 b(summaries) f(of) h(all) h(of) f(the) g(memory) g
(allo) s(cations) i(listed) e(b) m(y) g(size) h(and) e(the) h(function)
g(that) g(allo) s(cated) 94 2657 y(them) k(and) g(a) g(list) g(of) g
(memory) g(leaks) h(with) e(the) h(call) h(stac) m(k) h(of) e(the) g
(allo) s(cating) i(function.) 39 b(It) 28 b(also) h(includes) f(a) 94
2756 y(graph) 33 b(of) f(all) i(memory) e(allo) s(cations) j(listed) e
(in) g(tabular) f(form,) h(and) f(an) h(optional) g(graph) f(sp) s
(eci\014cation) i(\014le) 94 2856 y(for) d(later) g(pro) s(cessing) f
(b) m(y) g(the) p Fl 31 w(dot) p Fo 29 w(graph) g(visualisation) i(pac)
m(k) -5 b(age.) 219 2980 y(A) 29 b(\014le) g(con) m(taining) h(a) f
(concise) h(enco) s(ded) e(trace) i(of) f(all) g(memory) g(allo) s
(cations,) i(reallo) s(cations) g(and) d(deallo-) 94
3080 y(cations) 33 b(made) f(b) m(y) f(a) h(program) f(can) h(also) h
(b) s(e) d(pro) s(duced) g(b) m(y) i(the) f(mpatrol) h(library) -8
b(.) 44 b(This) 31 b(\014le) h(can) f(then) h(b) s(e) 94
3180 y(read) c(b) m(y) f(a) h(tracing) g(to) s(ol) g(whic) m(h) f(will)
h(deco) s(de) g(the) f(trace) i(and) d(displa) m(y) i(the) g(ev) m(en) m
(ts) g(in) f(tabular) h(or) f(graphical) 94 3279 y(form,) k(and) e
(also) j(displa) m(y) e(an) m(y) h(relev) -5 b(an) m(t) 32
b(statistics) g(that) f(could) f(b) s(e) g(calculated.) 219
3404 y(The) d(mpatrol) g(library) g(has) f(b) s(een) h(designed) f
(with) h(the) g(in) m(ten) m(tion) i(of) e(replacing) h(calls) g(to) g
(existing) g(C) f(and) 94 3504 y(C) p Fl(++) p Fo 30
w(memory) j(allo) s(cation) j(functions) d(as) h(seamlessly) h(as) e(p)
s(ossible,) h(but) e(in) i(man) m(y) f(cases) i(that) f(ma) m(y) g(not)
g(b) s(e) 94 3603 y(p) s(ossible) 26 b(and) f(sligh) m(t) i(co) s(de) f
(mo) s(di\014cations) g(ma) m(y) g(b) s(e) f(required.) 39
b(Ho) m(w) m(ev) m(er,) 29 b(a) d(prepro) s(cessor) f(macro) h(con) m
(tain-) 94 3703 y(ing) j(the) g(v) m(ersion) g(of) g(the) g(mpatrol) g
(library) f(is) h(pro) m(vided) f(for) h(the) g(purp) s(oses) e(of) h
(conditional) i(compilation) h(so) 94 3802 y(that) g(release) h(builds)
d(and) h(debug) g(builds) f(can) i(b) s(e) e(easily) j(automated.) p
90 rotate dyy eop
%%Page: 6 12
6 11 bop Fo 94 -116 a(6) 3422 b(mpatrol) p 90 rotate
dyy eop
%%Page: 7 13
7 12 bop Fo 94 -116 a(Chapter) 30 b(2:) 41 b(F) -8 b(eatures) 2936
b(7) p Fk 94 365 a(2) 81 b(F) -13 b(eatures) p Fo 219
598 a(An) 22 b(o) m(v) m(erall) j(list) e(of) g(features) g(con) m
(tained) h(in) e(the) h(mpatrol) g(library) f(is) h(giv) m(en) g(b) s
(elo) m(w.) 39 b(This) 22 b(is) g(not) h(in) m(tended) 94
698 y(to) 34 b(b) s(e) e(exhaustiv) m(e) i(since) g(the) f(b) s(est) f
(w) m(a) m(y) i(to) g(see) f(what) g(the) g(library) g(do) s(es) g(is) f
(to) i(read) f(the) g(do) s(cumen) m(tation) 94 797 y(and) d(try) g(it)
h(out.) p Fm 169 925 a(\017) p Fo 60 w(W) -8 b(ritten) 29
b(for) e(32-bit) i(and) d(64-bit) j(UNIX,) f(AmigaOS,) g(Windo) m(ws) f
(and) g(Net) m(w) m(are) i(platforms.) 40 b(Con) m(tains) 274
1025 y(direct) 26 b(supp) s(ort) d(for) h(\(and) h(tak) m(es) h(adv) -5
b(an) m(tage) 26 b(of) f(most) g(of) g(the) g(features) g(of) 7
b(\)) 25 b(AIX,) h(DG/UX,) g(DRS/NX,) 274 1124 y(D) m(YNIX/ptx,) g(F) -8
b(reeBSD,) 24 b(HP/UX,) f(IRIX,) f(Lin) m(ux,) i(LynxOS,) d(NetBSD,) i
(Op) s(enBSD,) f(SINIX,) f(Solaris,) 274 1224 y(SunOS,) f(T) -8
b(ru64) 22 b(and) f(UnixW) -8 b(are.) 39 b(Also) 23 b(con) m(tains) g
(target-sp) s(eci\014c) g(co) s(de) f(to) h(tak) m(e) g(adv) -5
b(an) m(tage) 24 b(of) e(Alpha,) 274 1323 y(In) m(tel) 27
b(80x86,) h(Motorola) g(680x0) f(and) e(88xx0,) j(MIPS,) e(HP) f(P) -8
b(A/RISC,) 26 b(IBM) g(RS/6000,) i(P) m(o) m(w) m(erPC) f(and) 274
1423 y(SP) -8 b(AR) m(C) 31 b(pro) s(cessors.) p Fm 169
1549 a(\017) p Fo 60 w(Has) 37 b(the) g(abilit) m(y) h(to) f(read) f
(sym) m(b) s(ols) g(from) g(executable) i(\014les) e(and) g(shared) g
(libraries) g(in) g(the) h(`) p Fl(a.out) p Fo(',) 274
1649 y(COFF,) 30 b(X) m(COFF,) h(ELF32,) g(ELF64) f(and) g(Windo) m(ws)
f(P) m(ortable) i(Executable) g(\014le) f(formats,) g(and) f(if) h(the)
274 1748 y(GNU) 37 b(BFD) h(library) d(is) h(a) m(v) -5
b(ailable) 39 b(then) d(the) g(mpatrol) h(library) e(can) i(read) f
(sym) m(b) s(ols) g(from) f(all) i(of) g(the) 274 1848
y(\014le) 32 b(formats) h(that) f(it) g(has) g(supp) s(ort) e(for) i
(as) g(w) m(ell.) 46 b(Can) 31 b(also) i(liase) g(with) f(AIX,) g
(BSD-based,) h(HP/UX,) 274 1948 y(IRIX,) 40 b(OSF,) f(SVR4-based) g
(and) f(Windo) m(ws) i(dynamic) f(link) m(ers) g(in) g(order) g(to) h
(\014nd) d(out) j(information) 274 2047 y(ab) s(out) 31
b(shared) e(libraries.) p Fm 169 2173 a(\017) p Fo 60
w(Can) 40 b(b) s(e) g(built) g(to) h(allo) s(cate) i(memory) d(from) g
(a) h(\014xed-sized) f(static) i(arra) m(y) f(rather) f(than) g(using) g
(heap) 274 2273 y(memory) 31 b(from) f(the) g(system.) p
Fm 169 2399 a(\017) p Fo 60 w(Can) f(b) s(e) g(built) g(as) g(arc) m
(hiv) m(e,) i(shared) e(and/or) g(thread-safe) h(libraries) f(on) g
(systems) g(that) h(supp) s(ort) e(them,) 274 2498 y(or) h(ev) m(en) g
(as) g(one) g(large) g(ob) 5 b(ject) 30 b(\014le.) 40
b(A) 29 b(lin) m(t) g(library) f(can) h(also) g(b) s(e) f(built) g
(from) g(the) h(mpatrol) g(library) f(on) 274 2598 y(UNIX) j
(platforms.) p Fm 169 2724 a(\017) p Fo 60 w(A) 25 b(release) g(v) m
(ersion) f(of) g(the) g(mpatrol) h(library) e(is) h(pro) m(vided,) h
(whic) m(h) f(has) f(the) h(same) h(functional) f(in) m(terface,) 274
2824 y(but) g(do) s(es) g(not) g(con) m(tain) i(an) m(y) f(of) f
(mpatrol's) h(debugging,) g(tracing) h(or) e(pro\014ling) f(features.)
39 b(It) 25 b(is) f(in) m(tended) 274 2923 y(to) 32 b(b) s(e) d(used) h
(to) h(quic) m(kly) g(remo) m(v) m(e) h(the) f(mpatrol) f(library) -8
b(.) p Fm 169 3049 a(\017) p Fo 60 w(Details) 31 b(of) e(memory) g
(allo) s(cations) i(and) e(free) g(memory) f(are) i(stored) f(in) m
(ternally) h(as) f(a) g(tree) h(structure) e(for) 274
3149 y(sp) s(eed) k(and) f(also) j(to) e(allo) m(w) i(the) e(b) s(est) g
(\014t) g(allo) s(cation) j(algorithm) e(to) g(b) s(e) e(used.) 46
b(This) 31 b(also) i(enables) g(the) 274 3249 y(library) 40
b(to) g(p) s(erform) e(in) m(telligen) m(t) k(resizing) f(of) e(memory)
h(allo) s(cations) h(and) e(can) h(b) s(e) f(used) g(to) h(quic) m(kly)
274 3348 y(determine) 31 b(if) f(an) h(address) e(has) h(b) s(een) g
(allo) s(cated) i(on) e(the) h(heap.) p Fm 169 3474 a(\017) p
Fo 60 w(Con) m(tains) g(19) h(replacemen) m(t) f(C) f(dynamic) g
(memory) h(allo) s(cation) h(functions:) p Fl 274 3600
a(malloc\(\)) p Fo 472 w(ANSI) 158 b(Allo) s(cates) 32
b(memory) -8 b(.) p Fl 274 3700 a(calloc\(\)) p Fo 472
w(ANSI) 158 b(Allo) s(cates) 32 b(zero-\014lled) g(memory) -8
b(.) p Fl 274 3799 a(memalign\(\)) p Fo 376 w(UNIX) 141
b(Allo) s(cates) 32 b(memory) f(with) f(a) h(sp) s(eci\014ed) e
(alignmen) m(t.) p Fl 274 3899 a(valloc\(\)) p Fo 472
w(UNIX) 141 b(Allo) s(cates) 32 b(page-aligned) h(memory) -8
b(.) p Fl 274 3999 a(pvalloc\(\)) p Fo 424 w(UNIX) 141
b(Allo) s(cates) 32 b(a) f(n) m(um) m(b) s(er) e(of) i(pages.) p
Fl 274 4098 a(alloca\(\)) p Fo 472 w(old) 257 b(Allo) s(cates) 32
b(temp) s(orary) e(memory) -8 b(.) p Fl 274 4198 a(strdup\(\)) p
Fo 472 w(UNIX) 141 b(Duplicates) 32 b(a) e(string.) p
Fl 274 4298 a(strndup\(\)) p Fo 424 w(old) 257 b(Duplicates) 32
b(a) e(string) h(with) f(a) h(maxim) m(um) f(length.) p
Fl 274 4397 a(strsave\(\)) p Fo 424 w(old) 257 b(Duplicates) 32
b(a) e(string.) p Fl 274 4497 a(strnsave\(\)) p Fo 376
w(old) 257 b(Duplicates) 32 b(a) e(string) h(with) f(a) h(maxim) m(um) f
(length.) p Fl 274 4596 a(strdupa\(\)) p Fo 424 w(old) 257
b(Duplicates) 32 b(a) e(string.) p Fl 274 4696 a(strndupa\(\)) p
Fo 376 w(old) 257 b(Duplicates) 32 b(a) e(string) h(with) f(a) h(maxim)
m(um) f(length.) p Fl 274 4796 a(realloc\(\)) p Fo 424
w(ANSI) 158 b(Resizes) 31 b(memory) -8 b(.) p Fl 274
4895 a(reallocf\(\)) p Fo 376 w(BSD) 194 b(Resizes) 31
b(memory) g(and) e(frees) i(on) f(failure.) p Fl 274
4995 a(recalloc\(\)) p Fo 376 w(old) 257 b(Resizes) 31
b(memory) g(allo) s(cated) h(b) m(y) p Fl 30 w(calloc\(\)) p
Fo(.) p Fl 274 5095 a(expand\(\)) p Fo 472 w(old) 257
b(Resizes) 31 b(memory) g(but) e(do) s(es) h(not) h(relo) s(cate) h
(it.) p Fl 274 5194 a(free\(\)) p Fo 568 w(ANSI) 158
b(F) -8 b(rees) 31 b(memory) -8 b(.) p Fl 274 5294 a(cfree\(\)) p
Fo 520 w(old) 257 b(F) -8 b(rees) 31 b(memory) g(allo) s(cated) h(b) m
(y) p Fl 30 w(calloc\(\)) p Fo(.) p Fl 274 5393 a(dealloca\(\)) p
Fo 376 w(new) 221 b(Explicitly) 31 b(frees) g(temp) s(orary) f(memory)
-8 b(.) p Fm 169 5519 a(\017) p Fo 60 w(Con) m(tains) 31
b(5) g(replacemen) m(t) h(C) e(dynamic) g(memory) g(extension) h
(functions:) p Fl 274 5645 a(xmalloc\(\)) p Fo 802 w(Allo) s(cates) h
(memory) f(without) f(failure.) p 90 rotate dyy eop
%%Page: 8 14
8 13 bop Fo 94 -116 a(8) 3422 b(mpatrol) p Fl 274 365
a(xcalloc\(\)) p Fo 802 w(Allo) s(cates) 32 b(zero-\014lled) g(memory) e
(without) g(failure.) p Fl 274 465 a(xstrdup\(\)) p Fo
802 w(Duplicates) i(a) e(string) h(without) f(failure.) p
Fl 274 565 a(xrealloc\(\)) p Fo 754 w(Resizes) h(memory) g(without) f
(failure.) p Fl 274 664 a(xfree\(\)) p Fo 898 w(F) -8
b(rees) 31 b(memory) -8 b(.) p Fm 169 785 a(\017) p Fo
60 w(Con) m(tains) 31 b(6) g(replacemen) m(t) h(C) e(dynamic) g(memory)
g(alternativ) m(e) j(functions:) p Fl 274 906 a(MP_MALLOC\(\)) p
Fo 706 w(Allo) s(cates) f(memory) f(without) f(failure.) p
Fl 274 1006 a(MP_CALLOC\(\)) p Fo 706 w(Allo) s(cates) i(zero-\014lled)
g(memory) e(without) g(failure.) p Fl 274 1105 a(MP_STRDUP\(\)) p
Fo 706 w(Duplicates) i(a) e(string) h(without) f(failure.) p
Fl 274 1205 a(MP_REALLOC\(\)) p Fo 658 w(Resizes) h(memory) g(without) f
(failure.) p Fl 274 1305 a(MP_FREE\(\)) p Fo 802 w(F) -8
b(rees) 31 b(memory) -8 b(.) p Fl 274 1404 a(MP_FAILURE\(\)) p
Fo 658 w(Sets) 30 b(the) h(allo) s(cation) i(failure) d(handler.) p
Fm 169 1525 a(\017) p Fo 60 w(Con) m(tains) 45 b(4) f(replacemen) m(t) h
(C) p Fl(++) p Fo 42 w(dynamic) f(memory) g(allo) s(cation) h(op) s
(erators) f(\(in) g(b) s(oth) p Fi 43 w(thr) -5 b(ow) p
Fo 56 w(and) p Fi 274 1625 a(nothr) g(ow) p Fo 43 w(forms\):) p
Fl 274 1746 a(operator) 29 b(new) p Fo 677 w(Allo) s(cates) j(memory) -8
b(.) p Fl 274 1845 a(operator) 29 b(new[]) p Fo 581 w(Allo) s(cates) j
(memory) f(for) f(an) g(arra) m(y) -8 b(.) p Fl 274 1945
a(operator) 29 b(delete) p Fo 533 w(F) -8 b(rees) 31
b(memory) -8 b(.) p Fl 274 2045 a(operator) 29 b(delete[]) p
Fo 437 w(F) -8 b(rees) 31 b(memory) g(allo) s(cated) h(b) m(y) p
Fl 30 w(operator) c(new[]) p Fo(.) p Fm 169 2166 a(\017) p
Fo 60 w(Con) m(tains) j(10) h(replacemen) m(t) f(C) f(memory) h(op) s
(eration) f(functions:) p Fl 274 2287 a(memset\(\)) p
Fo 472 w(ANSI) 158 b(Fills) 31 b(memory) g(with) f(a) g(sp) s(eci\014c)
h(b) m(yte.) p Fl 274 2386 a(bzero\(\)) p Fo 520 w(UNIX) 141
b(Fills) 31 b(memory) g(with) f(the) g(zero) h(b) m(yte.) p
Fl 274 2486 a(memccpy\(\)) p Fo 424 w(UNIX) 141 b(Copies) 30
b(memory) h(up) e(to) i(a) g(sp) s(eci\014c) f(b) m(yte.) p
Fl 274 2586 a(memcpy\(\)) p Fo 472 w(ANSI) 158 b(Copies) 30
b(non-o) m(v) m(erlapping) i(memory) -8 b(.) p Fl 274
2685 a(memmove\(\)) p Fo 424 w(ANSI) 158 b(Copies) 30
b(p) s(ossibly-o) m(v) m(erlapping) i(memory) -8 b(.) p
Fl 274 2785 a(bcopy\(\)) p Fo 520 w(UNIX) 141 b(Copies) 30
b(p) s(ossibly-o) m(v) m(erlapping) i(memory) -8 b(.) p
Fl 274 2884 a(memcmp\(\)) p Fo 472 w(ANSI) 158 b(Compares) 30
b(t) m(w) m(o) i(blo) s(c) m(ks) e(of) h(memory) -8 b(.) p
Fl 274 2984 a(bcmp\(\)) p Fo 568 w(UNIX) 141 b(Compares) 30
b(t) m(w) m(o) i(blo) s(c) m(ks) e(of) h(memory) -8 b(.) p
Fl 274 3084 a(memchr\(\)) p Fo 472 w(ANSI) 158 b(Searc) m(hes) 31
b(memory) f(for) g(a) h(sp) s(eci\014c) f(b) m(yte.) p
Fl 274 3183 a(memmem\(\)) p Fo 472 w(UNIX) 141 b(Searc) m(hes) 31
b(memory) f(for) g(sp) s(eci\014c) g(b) m(ytes.) p Fm
169 3304 a(\017) p Fo 60 w(All) i(of) g(the) g(ab) s(o) m(v) m(e) g
(functions) f(can) h(also) g(b) s(e) f(de\014ned) f(with) h(an) g
(additional) h(underscore) f(prep) s(ended) e(to) 274
3404 y(their) 22 b(external) h(name) f(in) g(order) f(to) i(catc) m(h) h
(all) e(uses) g(of) g(these) g(functions) g(in) g(the) g(system) g(and)
f(third-part) m(y) 274 3504 y(libraries.) p Fm 169 3625
a(\017) p Fo 60 w(Con) m(tains) 30 b(supp) s(ort) d(for) i(a) h
(user-de\014ned) d(lo) m(w-memory) k(handler) d(function,) h(including)
g(a) g(replacemen) m(t) 274 3724 y(for) i(the) f(C) p
Fl(++) p Fo 30 w(function,) p Fl 30 w(set_new_handler\(\)) p
Fo(.) p Fm 169 3845 a(\017) p Fo 60 w(The) 37 b(C) p
Fl(++) p Fo 35 w(dynamic) g(memory) f(allo) s(cation) j(op) s(erators) e
(mak) m(e) g(use) g(of) f(the) h(prepro) s(cessor) f(in) g(order) g(to)
274 3945 y(obtain) e(source-lev) m(el) i(information.) 50
b(If) 33 b(this) h(causes) g(problems) e(then) h(replacemen) m(t) i(op)
s(erator) f(names) 274 4044 y(ma) m(y) d(b) s(e) f(used) g(so) g(that) h
(the) g(existing) g(op) s(erators) g(will) g(still) g(w) m(ork.) p
Fm 169 4165 a(\017) p Fo 60 w(Con) m(tains) 50 b(supp) s(ort) e(for) h
(automatically) k(registering) d(an) m(y) g(functions) f(whose) h
(names) f(b) s(egin) g(with) 274 4265 y(`) p Fl(__mp_init_) p
Fo(') 39 b(and) i(`) p Fl(__mp_fini_) p Fo(') d(to) k(b) s(e) f(called)
h(when) e(the) h(mpatrol) h(library) e(is) h(initialised) i(and) 274
4365 y(terminated) 35 b(resp) s(ectiv) m(ely) -8 b(.) 53
b(A) 33 b(function) h(is) g(also) g(pro) m(vided) g(to) g(register) h
(additional) g(functions) e(to) i(b) s(e) 274 4464 y(called) d(when) d
(the) i(mpatrol) g(library) f(terminates.) p Fm 169 4585
a(\017) p Fo 60 w(Con) m(tains) 25 b(supp) s(ort) d(for) i
(user-de\014ned) f(prologue) h(and) g(epilogue) h(callbac) m(k) h
(functions,) g(whic) m(h) d(get) j(called) 274 4685 y(b) s(efore) k
(and) g(after) h(ev) m(ery) g(memory) g(allo) s(cation,) h(reallo) s
(cation) h(or) e(deallo) s(cation.) p Fm 169 4806 a(\017) p
Fo 60 w(A) 38 b(function) f(is) g(pro) m(vided) g(to) h(return) e(as) h
(m) m(uc) m(h) h(information) f(as) h(p) s(ossible) e(ab) s(out) h(a) h
(giv) m(en) g(memory) 274 4905 y(allo) s(cation) 30 b(or) d(free) h
(blo) s(c) m(k,) g(and) f(can) h(b) s(e) e(called) j(at) f(an) m(y) f
(time) h(during) e(program) h(execution.) 41 b(A) 28
b(similar) 274 5005 y(function) k(is) f(also) i(pro) m(vided) e(for) g
(calling) i(from) f(within) f(a) h(debugger) f(and) g(an) g(example) i
(command) e(\014le) 274 5105 y(is) g(pro) m(vided) f(for) g(use) g
(with) p Fl 30 w(gdb) p Fo(.) p Fm 169 5226 a(\017) p
Fo 60 w(A) h(function) f(is) h(pro) m(vided) f(to) h(displa) m(y) g
(library) f(settings) h(and) f(heap) g(usage) h(statistics,) i
(including) d(p) s(eak) 274 5325 y(memory) f(usage.) 41
b(This) 28 b(information) h(is) f(also) i(displa) m(y) m(ed) f(at) h
(program) e(termination,) i(and) e(can) h(also) h(b) s(e) 274
5425 y(placed) h(in) m(to) h(a) e(data) h(structure) f(at) i(run-time) d
(via) i(another) g(function.) p Fm 169 5546 a(\017) p
Fo 60 w(The) h(library) f(reads) h(an) m(y) h(user-con) m(trollable) g
(options) g(at) f(run-time) g(from) f(an) h(en) m(vironmen) m(t) h(v) -5
b(ariable,) 274 5645 y(but) 39 b(this) f(do) s(es) h(not) g(ha) m(v) m
(e) h(to) g(b) s(e) e(set) h(as) g(defaults) g(will) g(then) g(b) s(e) f
(used.) 65 b(This) 38 b(prev) m(en) m(ts) i(ha) m(ving) f(to) p
90 rotate dyy eop
%%Page: 9 15
9 14 bop Fo 94 -116 a(Chapter) 30 b(2:) 41 b(F) -8 b(eatures) 2936
b(9) 274 365 y(recompile) 36 b(an) m(ything) f(in) g(order) f(to) i(c) m
(hange) g(an) m(y) f(library) f(settings.) 55 b(An) 34
b(option) i(exists) f(to) h(displa) m(y) f(a) 274 465
y(quic) m(k-reference) f(summary) d(of) h(all) h(of) f(the) g
(recognised) h(options) f(to) h(the) f(standard) g(error) f(\014le) h
(stream.) 274 565 y(Library) g(settings) h(can) g(also) g(b) s(e) e
(set) i(and) f(read) g(from) g(within) g(user) f(co) s(de) i(after) f
(the) h(library) f(has) g(b) s(een) 274 664 y(initialised) g(b) m(y) e
(calling) i(t) m(w) m(o) g(in) m(ternal) f(functions.) p
Fm 169 791 a(\017) p Fo 60 w(All) 46 b(diagnostics) g(and) e(logging) i
(are) f(sen) m(t) h(to) f(a) g(\014le) g(in) f(the) h(curren) m(t) g
(directory) -8 b(,) 49 b(but) 44 b(this) h(can) g(b) s(e) 274
891 y(o) m(v) m(erridden,) 39 b(including) c(forcing) i(the) f(log) i
(\014le) e(to) h(b) s(e) f(the) g(standard) g(output) f(or) i(standard)
e(error) h(\014le) 274 990 y(streams.) 45 b(An) 31 b(en) m(vironmen) m
(t) h(v) -5 b(ariable) 33 b(sp) s(ecifying) e(a) h(default) g
(directory) g(in) f(whic) m(h) h(to) g(place) g(log) h(\014les) 274
1090 y(can) e(also) g(b) s(e) f(set.) p Fm 169 1217 a(\017) p
Fo 60 w(Options) k(exist) g(to) g(log) h(details) f(of) g(ev) m(ery) g
(memory) g(allo) s(cation,) j(reallo) s(cation) f(or) d(deallo) s
(cation) j(when) 274 1316 y(they) g(o) s(ccur.) 55 b(A) 35
b(function) g(exists) h(to) g(log) g(the) g(details) g(of) f(an) m(y) h
(memory) f(allo) s(cation) i(to) f(the) g(mpatrol) 274
1416 y(log) c(\014le.) p Fm 169 1543 a(\017) p Fo 60
w(Options) j(exist) g(to) h(halt) f(the) g(program) g(at) g(a) h(sp) s
(eci\014c) e(memory) h(allo) s(cation,) j(reallo) s(cation) g(or) c
(deallo-) 274 1642 y(cation) k(when) d(running) f(the) i(program) f
(within) h(a) g(debugger.) 57 b(These) 36 b(options) g(ha) m(v) m(e) h
(no) f(e\013ect) h(when) 274 1742 y(running) 29 b(the) i(program) f
(without) g(a) h(debugger.) p Fm 169 1869 a(\017) p Fo
60 w(An) 44 b(option) h(exists) g(to) f(enable) h(memory) f(allo) s
(cation) j(pro\014ling,) g(whic) m(h) d(forces) g(a) h(summary) e(of) h
(all) 274 1968 y(memory) d(allo) s(cation) j(statistics) e(to) g(b) s
(e) f(written) g(to) g(a) h(sp) s(eci\014ed) e(\014le) h(for) g(later) h
(use) e(b) m(y) h(a) g(pro\014ling) 274 2068 y(command.) 47
b(The) 31 b(pro\014ling) h(\014le) g(can) h(also) g(b) s(e) f(written) g
(at) h(a) g(sp) s(eci\014ed) e(frequency) -8 b(.) 46
b(An) 32 b(en) m(vironmen) m(t) 274 2168 y(v) -5 b(ariable) 37
b(sp) s(ecifying) f(a) g(default) g(directory) g(in) g(whic) m(h) g(to)
g(place) h(pro\014ling) e(output) h(\014les) g(can) g(also) h(b) s(e)
274 2267 y(set.) p Fm 169 2394 a(\017) p Fo 60 w(A) 23
b(pro\014ling) f(command) h(is) g(pro) m(vided) f(whic) m(h) g(reads) h
(a) g(pro\014ling) f(output) g(\014le) h(pro) s(duced) e(b) m(y) i(the)
g(mpatrol) 274 2494 y(library) f(and) f(displa) m(ys) h(a) g(set) g(of)
g(tables) g(based) f(on) h(the) g(accum) m(ulated) h(data.) 38
b(The) 22 b(pro\014ling) f(information) 274 2593 y(includes) 38
b(summaries) g(of) g(all) h(of) f(the) h(memory) f(allo) s(cations) i
(listed) f(b) m(y) f(size) h(and) e(the) i(function) e(that) 274
2693 y(allo) s(cated) j(them) d(and) g(a) h(list) g(of) f(memory) h
(leaks) g(with) f(the) h(call) g(stac) m(k) h(of) f(the) f(allo) s
(cating) j(function.) 274 2793 y(It) 35 b(also) h(includes) f(a) g
(graph) f(of) h(all) h(memory) f(allo) s(cations) i(listed) e(in) g
(tabular) g(form,) h(and) e(an) h(optional) 274 2892
y(graph) 30 b(sp) s(eci\014cation) i(\014le) e(for) g(later) h(pro) s
(cessing) g(b) m(y) f(the) p Fl 30 w(dot) p Fo 30 w(graph) g
(visualisation) h(pac) m(k) -5 b(age.) p Fm 169 3019
a(\017) p Fo 60 w(An) 28 b(option) g(exists) g(to) g(enable) g(memory) g
(allo) s(cation) i(tracing,) f(whic) m(h) f(forces) g(certain) g
(details) h(for) e(ev) m(ery) 274 3119 y(memory) e(allo) s(cation) i
(ev) m(en) m(t) g(to) e(b) s(e) f(written) h(to) h(a) f(sp) s
(eci\014ed) f(\014le) h(for) f(later) i(use) e(b) m(y) h(a) g(tracing) h
(command.) 274 3218 y(The) j(tracing) i(\014le) e(is) g(written) h(in) f
(a) g(concise) i(enco) s(ded) e(form) g(so) g(as) h(to) g(k) m(eep) g
(the) g(size) g(of) f(the) h(\014le) f(do) m(wn.) 274
3318 y(An) c(en) m(vironmen) m(t) g(v) -5 b(ariable) 26
b(sp) s(ecifying) f(a) g(default) g(directory) g(in) g(whic) m(h) f(to)
i(place) g(tracing) g(output) e(\014les) 274 3417 y(can) 31
b(also) g(b) s(e) f(set.) p Fm 169 3544 a(\017) p Fo
60 w(A) h(tracing) f(command) g(is) g(pro) m(vided) g(whic) m(h) f
(reads) h(a) g(tracing) h(output) e(\014le) h(pro) s(duced) f(b) m(y) h
(the) g(mpatrol) 274 3644 y(library) 41 b(and) e(displa) m(ys) i(the) g
(memory) f(allo) s(cation) j(ev) m(en) m(ts) f(in) e(tabular) g(or) h
(graphical) g(form.) 70 b(It) 41 b(also) 274 3744 y(displa) m(ys) 35
b(an) m(y) f(relev) -5 b(an) m(t) 35 b(statistics) h(that) f(could) f
(b) s(e) g(calculated,) j(and) c(has) h(options) g(to) h(write) f(out) h
(the) 274 3843 y(trace) i(in) d(HA) -8 b(TF) 36 b(format) f(or) g
(write) g(out) h(a) f(trace-driv) m(en) h(memory) f(allo) s(cation) i
(sim) m(ulation) f(program) 274 3943 y(as) 31 b(C) f(source) h(co) s
(de.) p Fm 169 4070 a(\017) p Fo 60 w(On) i(UNIX) g(platforms,) g(the) p
Fl 33 w(mmap\(\)) p Fo 32 w(function) f(can) h(optionally) i(b) s(e) d
(used) g(to) i(allo) s(cate) h(user) d(memory) 274 4169
y(instead) h(of) f(the) p Fl 32 w(sbrk\(\)) p Fo 30 w(function,) g(but)
f(only) h(if) g(the) g(system) g(supp) s(orts) e(it.) 45
b(If) p Fl 32 w(mmap\(\)) p Fo 30 w(is) 32 b(supp) s(orted) 274
4269 y(then) i(in) m(ternal) g(mpatrol) g(library) f(memory) g(is) h
(normally) g(allo) s(cated) h(with) e(this) h(function) f(in) g(order) g
(to) 274 4368 y(segregate) g(it) e(from) f(user) g(memory) g(but) g
(this) g(b) s(eha) m(viour) g(can) h(b) s(e) e(sw) m(app) s(ed) g
(around.) p Fm 169 4495 a(\017) p Fo 60 w(On) 35 b(non-UNIX) g
(platforms) g(where) g(the) g(mpatrol) h(library) e(o) m(v) m(errides) p
Fl 36 w(malloc\(\)) p Fo 33 w(without) h(requiring) 274
4595 y(the) 23 b(inclusion) g(of) g(`) p Fl(mpatrol.h) p
Fo(',) f(v) m(ersions) i(of) e(the) h(UNIX) g(functions) p
Fl 23 w(brk\(\)) p Fo 21 w(and) p Fl 22 w(sbrk\(\)) p
Fo 21 w(are) g(pro) m(vided) 274 4695 y(for) 37 b(compatibilit) m(y) h
(with) e(certain) h(libraries.) 59 b(These) 36 b(should) p
Fi 36 w(not) p Fo 45 w(b) s(e) g(called) i(b) m(y) e(user) g(co) s(de) g
(as) h(they) 274 4794 y(ha) m(v) m(e) 32 b(only) f(limited) g
(functionalit) m(y) -8 b(.) p Fm 169 4921 a(\017) p Fo
60 w(All) 27 b(newly-allo) s(cated) g(memory) e(that) h(is) g(not) g
(allo) s(cated) h(b) m(y) e(the) p Fl 26 w(calloc\(\)) p
Fo 23 w(or) p Fl 26 w(recalloc\(\)) p Fo 22 w(functions) 274
5021 y(will) j(b) s(e) f(pre-\014lled) g(with) g(a) h(non-zero) g(v) -5
b(alue) 28 b(in) f(order) f(to) j(catc) m(h) f(out) g(programs) f(that)
h(wrongly) f(assume) 274 5120 y(that) k(all) h(newly-allo) s(cated) g
(memory) e(is) h(zero) s(ed.) 41 b(This) 29 b(v) -5 b(alue) 31
b(can) g(b) s(e) f(mo) s(di\014ed) f(at) i(run-time.) p
Fm 169 5247 a(\017) p Fo 60 w(Can) k(automatically) k(c) m(hec) m(k) d
(to) h(see) e(if) h(there) f(ha) m(v) m(e) i(b) s(een) d(an) m(y) i
(illegal) i(writes) d(to) h(b) m(ytes) g(lo) s(cated) h(just) 274
5347 y(b) s(efore) c(and) g(after) h(ev) m(ery) g(memory) g(allo) s
(cation) h(through) e(the) h(use) f(of) g(o) m(v) m(er\015o) m(w) i
(bu\013ers.) 49 b(The) 33 b(size) h(of) 274 5446 y(suc) m(h) c(o) m(v) m
(er\015o) m(w) i(bu\013ers) d(and) h(the) h(v) -5 b(alue) 30
b(to) h(pre-\014ll) f(them) h(with) f(can) g(b) s(e) g(mo) s(di\014ed) f
(at) i(run-time.) 40 b(The) 274 5546 y(c) m(hec) m(ks) f(will) e(b) s
(e) f(p) s(erformed) f(b) s(efore) i(ev) m(ery) g(memory) g(allo) s
(cation) i(call) f(to) g(ensure) e(that) h(nothing) g(has) 274
5645 y(o) m(v) m(erwritten) 25 b(the) e(o) m(v) m(er\015o) m(w) h
(bu\013ers,) g(but) e(a) h(function) g(is) f(also) i(pro) m(vided) f
(to) g(p) s(erform) f(additional) i(c) m(hec) m(ks) p
90 rotate dyy eop
%%Page: 10 16
10 15 bop Fo 94 -116 a(10) 3377 b(mpatrol) 274 365 y(under) 34
b(the) h(programmer's) g(con) m(trol) h(and) f(an) g(option) g(exists) h
(to) g(sp) s(ecify) e(a) i(range) f(and) g(frequency) f(in) 274
465 y(whic) m(h) d(c) m(hec) m(ks) g(will) g(b) s(e) f(p) s(erformed.) p
Fm 169 583 a(\017) p Fo 60 w(On) c(systems) g(that) h(supp) s(ort) e
(them,) i(w) m(atc) m(h) h(p) s(oin) m(t) e(areas) h(can) g(b) s(e) e
(used) h(instead) g(of) h(o) m(v) m(er\015o) m(w) h(bu\013ers) d(so) 274
682 y(that) 31 b(ev) m(ery) g(read) f(and) g(write) g(to) h(memory) f
(is) g(c) m(hec) m(k) m(ed) i(to) f(ensure) e(that) i(it) f(is) h(not) f
(within) g(an) g(o) m(v) m(er\015o) m(w) 274 782 y(bu\013er.) p
Fm 169 900 a(\017) p Fo 60 w(Supp) s(orts) 37 b(the) i(`) p
Fl(-fcheck-memory-usage) p Fo(') 34 b(option) 40 b(of) p
Fl 39 w(gcc) p Fo 38 w(to) g(c) m(hec) m(k) h(all) f(heap) e(memory) h
(accesses) 274 999 y(in) d(programs) g(that) h(w) m(ere) f(compiled) h
(with) f(that) h(option.) 58 b(Curren) m(tly) 36 b(this) g(only) g
(supp) s(orts) e(c) m(hec) m(king) 274 1099 y(that) f(memory) e
(accesses) i(do) f(not) g(o) m(v) m(er\015o) m(w) h(heap) e(allo) s
(cations) j(or) e(access) g(free) g(memory) -8 b(,) 33
b(rather) e(than) 274 1199 y(k) m(eeping) h(records) e(of) g
(individual) g(memory) g(accesses) i(that) f(GNU) g(Chec) m(k) m(er) h
(do) s(es.) p Fm 169 1316 a(\017) p Fo 60 w(Can) d(automatically) j(c) m
(hec) m(k) f(to) f(see) f(if) g(there) h(ha) m(v) m(e) g(b) s(een) e
(an) m(y) i(illegal) h(writes) e(to) h(free) f(memory) g(blo) s(c) m
(ks.) 274 1416 y(The) i(v) -5 b(alue) 32 b(to) g(pre-\014ll) f(free) g
(memory) g(blo) s(c) m(ks) h(with) f(can) g(b) s(e) g(mo) s(di\014ed) f
(at) i(run-time.) 43 b(The) 31 b(c) m(hec) m(k) i(will) 274
1516 y(b) s(e) i(p) s(erformed) e(b) s(efore) h(ev) m(ery) i(memory) f
(allo) s(cation) i(call) f(to) g(ensure) e(that) h(nothing) g(has) f(o)
m(v) m(erwritten) 274 1615 y(the) e(free) f(memory) h(blo) s(c) m(k,) g
(but) e(a) i(function) f(is) g(also) i(pro) m(vided) e(to) h(p) s
(erform) e(additional) i(c) m(hec) m(ks) g(under) 274
1715 y(the) k(programmer's) f(con) m(trol) i(and) e(an) g(option) h
(exists) g(to) g(sp) s(ecify) f(a) h(range) g(in) f(whic) m(h) g(c) m
(hec) m(ks) i(will) f(b) s(e) 274 1814 y(p) s(erformed.) p
Fm 169 1932 a(\017) p Fo 60 w(On) g(systems) h(that) g(supp) s(ort) e
(memory) i(protection,) j(ev) m(ery) d(memory) g(allo) s(cation) i(can)
e(optionally) h(b) s(e) 274 2032 y(allo) s(cated) i(at) e(least) h(one)
f(page) g(of) g(memory) -8 b(.) 62 b(That) 38 b(w) m(a) m(y) -8
b(,) 40 b(an) m(y) e(free) g(memory) f(blo) s(c) m(ks) h(can) g(b) s(e)
f(made) 274 2131 y(read) c(and) g(write) g(protected) h(so) f(that) g
(nothing) g(can) h(access) g(free) f(memory) g(on) g(the) g(heap.) 48
b(An) 32 b(option) 274 2231 y(is) d(pro) m(vided) e(to) i(sp) s(ecify) f
(whether) g(all) h(memory) f(allo) s(cations) i(should) d(b) s(e) h
(allo) s(cated) i(at) f(the) f(start) h(or) f(at) 274
2331 y(the) j(end) f(of) g(suc) m(h) g(pages,) i(and) d(the) i(b) m
(ytes) g(left) g(o) m(v) m(er) h(within) d(the) i(pages) g(b) s(ecome) g
(o) m(v) m(er\015o) m(w) h(bu\013ers.) p Fm 169 2448
a(\017) p Fo 60 w(All) j(freed) f(memory) g(allo) s(cations) i(can) e
(optionally) h(b) s(e) f(prev) m(en) m(ted) g(from) g(b) s(eing) f
(returned) g(to) i(the) f(free) 274 2548 y(memory) g(p) s(o) s(ol.) 49
b(This) 33 b(is) g(useful) g(for) g(detecting) i(if) f(use) f(is) g(b) s
(eing) g(made) h(of) f(freed) g(memory) h(just) e(after) 274
2648 y(a) h(memory) f(allo) s(cation) i(has) e(b) s(een) f(freed.) 46
b(The) 31 b(con) m(ten) m(ts) j(of) e(the) g(memory) g(allo) s(cation) j
(can) d(either) h(b) s(e) 274 2747 y(preserv) m(ed) 26
b(or) g(can) g(b) s(e) f(pre-\014lled) g(with) h(a) g(v) -5
b(alue) 26 b(in) g(order) f(to) i(detect) g(illegal) h(writes) e(to) g
(the) g(freed) g(mem-) 274 2847 y(ory) 36 b(allo) s(cation.) 60
b(In) 35 b(addition,) i(only) f(a) g(sp) s(eci\014ed) g(n) m(um) m(b) s
(er) e(of) i(recen) m(tly-freed) h(memory) f(allo) s(cations) 274
2947 y(can) f(b) s(e) f(prev) m(en) m(ted) h(from) f(b) s(eing) g
(returned) f(to) i(the) g(free) f(memory) h(p) s(o) s(ol.) 52
b(An) m(y) 34 b(older) h(freed) f(memory) 274 3046 y(allo) s(cations) f
(will) e(then) f(ev) m(en) m(tually) i(b) s(e) e(reused.) p
Fm 169 3164 a(\017) p Fo 60 w(The) p Fl 31 w(alloca\(\)) p
Fo(,) p Fl 29 w(strdupa\(\)) p Fo 28 w(and) p Fl 30 w(strndupa\(\)) p
Fo 28 w(functions) g(are) h(implemen) m(ted) g(so) g(that) h(the) f
(temp) s(o-) 274 3264 y(rary) 26 b(stac) m(k-based) i(allo) s(cations) g
(that) f(they) g(w) m(ould) f(normally) g(mak) m(e) h(are) g(no) m(w) f
(temp) s(orary) g(heap-based) 274 3363 y(allo) s(cations) 38
b(that) d(can) h(b) s(e) e(traced) i(b) m(y) f(mpatrol.) 55
b(Suc) m(h) 34 b(allo) s(cations) j(will) f(b) s(e) e(implicitly) i
(freed) f(when) 274 3463 y(the) d(function) g(that) g(allo) s(cated) i
(them) d(returns,) g(but) g(a) h(function) g(also) g(exists) h(to) f
(explicitly) h(free) f(them) 274 3562 y(as) f(w) m(ell.) p
Fm 169 3680 a(\017) p Fo 60 w(Calls) c(to) g(memory) f(op) s(eration) g
(functions) g(\(suc) m(h) g(as) p Fl 26 w(memset\(\)) p
Fo 24 w(or) p Fl 26 w(memcpy\(\)) p Fo(\)) e(ha) m(v) m(e) k(their) e
(argumen) m(ts) 274 3780 y(c) m(hec) m(k) m(ed) 34 b(to) e(ensure) f
(that) h(they) f(do) h(not) g(pass) f(n) m(ull) g(p) s(oin) m(ters) g
(or) h(attempt) g(to) h(read) e(or) g(write) h(memory) 274
3879 y(straddling) d(the) f(b) s(oundary) f(of) h(a) h(previously) g
(allo) s(cated) h(memory) e(blo) s(c) m(k,) i(although) f(an) f(option)
h(exists) 274 3979 y(to) j(turn) f(suc) m(h) f(an) i(error) e(in) m(to)
i(a) g(w) m(arning) f(so) h(that) f(the) h(op) s(eration) f(can) h
(still) g(b) s(e) f(p) s(erformed.) 41 b(T) -8 b(racing) 274
4079 y(from) 30 b(all) i(suc) m(h) e(functions) g(can) g(also) i
(optionally) f(b) s(e) f(written) h(to) g(the) f(log) i(\014le.) p
Fm 169 4196 a(\017) p Fo 60 w(The) 41 b(in) m(ternal) i(data) f
(structures) e(used) h(b) m(y) g(the) h(library) f(are) h(k) m(ept) g
(separate) g(from) f(the) h(rest) f(of) h(the) 274 4296
y(memory) 26 b(allo) s(cations.) 42 b(On) 25 b(systems) h(that) h(supp)
s(ort) d(memory) i(protection,) i(all) f(of) f(these) h(in) m(ternal) f
(data) 274 4396 y(structures) 37 b(will) h(b) s(e) f(write-protected) i
(in) e(order) g(to) i(prev) m(en) m(t) f(corruption) f(b) m(y) g(the) h
(calling) h(program.) 274 4495 y(This) 30 b(feature) h(can) g(b) s(e) e
(o) m(v) m(erridden) i(at) g(run-time) f(as) g(it) h(can) g(slo) m(w) g
(the) g(program) f(do) m(wn.) p Fm 169 4613 a(\017) p
Fo 60 w(Certain) d(signals) g(can) f(b) s(e) g(sa) m(v) m(ed) h(and) f
(restored) g(on) h(en) m(try) f(to) h(eac) m(h) h(library) e(function) g
(and) p Fl 25 w(errno) p Fo 25 w(is) g(set) 274 4713
y(to) p Fl 31 w(ENOMEM) p Fo 28 w(if) j(memory) h(cannot) g(b) s(e) f
(allo) s(cated,) j(except) e(for) f(the) h(ANSI) f(C) p
Fl(++) p Fo 29 w(op) s(erators) h(whic) m(h) f(thro) m(w) 274
4812 y(the) p Fl 31 w(std::bad_alloc) p Fo 27 w(exception) i(instead.) p
Fm 169 4930 a(\017) p Fo 60 w(On) 42 b(systems) f(that) i(supp) s(ort) d
(memory) i(protection,) k(the) c(library) g(attempts) h(to) f(detect) h
(an) m(y) g(illegal) 274 5030 y(memory) 38 b(accesses) h(and) e(displa)
m(y) h(as) g(m) m(uc) m(h) g(information) g(as) g(it) g(can) g(obtain) g
(ab) s(out) g(the) f(address) g(in) 274 5129 y(question) 31
b(and) f(where) g(the) g(illegal) j(memory) d(access) i(o) s(ccurred.) p
Fm 169 5247 a(\017) p Fo 60 w(A) k(call) g(stac) m(k) h(tracebac) m(k) g
(from) d(an) m(y) i(function) f(p) s(erforming) e(a) j(memory) f(allo) s
(cation) i(is) e(stored) h(if) f(the) 274 5347 y(library) 27
b(supp) s(orts) d(this) j(feature) f(on) h(the) g(system) f(it) h(is) g
(b) s(eing) f(run) f(on.) 39 b(This) 26 b(information) h(can) f(then) h
(b) s(e) 274 5446 y(displa) m(y) m(ed) j(when) e(information) h(ab) s
(out) g(a) g(sp) s(eci\014c) g(memory) g(allo) s(cation) i(is) e
(required.) 40 b(Man) m(y) 29 b(di\013eren) m(t) 274
5546 y(call) e(stac) m(k) g(tracebac) m(k) g(implemen) m(tations) g
(are) e(pro) m(vided) g(for) g(di\013eren) m(t) h(platforms.) 39
b(A) 25 b(function) g(is) g(also) 274 5645 y(pro) m(vided) 30
b(to) i(write) e(the) h(curren) m(t) f(call) i(stac) m(k) f(to) h(the) e
(mpatrol) h(log) g(\014le.) p 90 rotate dyy eop
%%Page: 11 17
11 16 bop Fo 94 -116 a(Chapter) 30 b(2:) 41 b(F) -8 b(eatures) 2890
b(11) p Fm 169 365 a(\017) p Fo 60 w(Sym) m(b) s(ol) 37
b(table) g(details) h(from) e(executable) i(\014les) f(and) f(shared) g
(libraries) h(are) g(automatically) i(read) e(on) 274
465 y(systems) 21 b(that) g(supp) s(ort) e(this) h(feature) h(in) g
(order) f(to) h(mak) m(e) g(the) g(call) h(stac) m(k) g(tracebac) m(ks)
g(more) f(meaningful.) 274 565 y(An) 27 b(option) g(also) h(exists) f
(to) h(displa) m(y) f(a) g(complete) h(list) f(of) g(the) g(sym) m(b) s
(ols) g(that) g(w) m(ere) g(read) g(b) m(y) f(the) h(library) 274
664 y(at) 32 b(program) e(termination.) 42 b(A) 31 b(function) f(is) h
(also) g(pro) m(vided) g(to) g(return) e(sym) m(b) s(olic) i
(information) g(ab) s(out) 274 764 y(an) m(y) g(co) s(de) g(address.) p
Fm 169 888 a(\017) p Fo 60 w(Compiler-generated) 26 b(line) e(n) m(um) m
(b) s(er) f(tables) h(from) g(an) m(y) g(debugging) g(sections) h(that)
g(exist) g(in) e(executable) 274 988 y(\014les) 32 b(and) g(shared) f
(libraries) h(can) g(also) h(b) s(e) e(used) g(b) m(y) h(the) g
(mpatrol) g(library) f(in) h(order) f(to) i(pro) m(vide) f(more) 274
1088 y(meaningful) f(information) h(in) f(call) h(stac) m(k) h
(tracebac) m(ks.) 45 b(An) 30 b(external) i(command) f(is) g(also) h
(pro) m(vided) f(to) 274 1187 y(mak) m(e) h(use) e(of) g(a) h(debugger)
f(to) h(get) h(suc) m(h) e(information) h(if) f(one) h(is) f(a) m(v) -5
b(ailable.) p Fm 169 1312 a(\017) p Fo 60 w(If) 28 b(the) h(library) f
(is) g(unable) g(to) h(automatically) i(determine) e(a) f(program's) h
(executable) g(\014lename) g(to) g(read) 274 1411 y(sym) m(b) s(ols) e
(from) g(then) f(an) h(option) h(exists) f(to) h(sp) s(ecify) f(the) g
(full) f(path) h(to) h(the) f(program's) g(executable) i(\014le.) p
Fm 169 1536 a(\017) p Fo 60 w(Options) 23 b(are) g(pro) m(vided) f(to) h
(edit) h(and) e(list) h(a) g(source) g(\014le) g(at) g(a) g(sp) s
(eci\014c) f(line) h(n) m(um) m(b) s(er) f(when) f(a) i(w) m(arning) g
(or) 274 1636 y(error) h(o) s(ccurs) f(due) g(to) h(that) g(source) g
(line.) 39 b(An) 23 b(external) i(command) e(whic) m(h) g(pro) m(vides)
h(this) f(functionalit) m(y) 274 1735 y(out) m(with) 32
b(the) f(mpatrol) h(library) f(is) g(included,) g(and) f(functions) h
(are) g(pro) m(vided) g(to) h(do) f(this) g(from) f(within) 274
1835 y(user) g(co) s(de.) p Fm 169 1959 a(\017) p Fo
60 w(An) h(option) h(exists) f(to) h(c) m(hange) g(the) g(default) f
(alignmen) m(t) h(used) e(for) h(general-purp) s(ose) g(memory) g(allo)
s(ca-) 274 2059 y(tions.) p Fm 169 2183 a(\017) p Fo
60 w(Con) m(tains) 25 b(supp) s(ort) d(for) h(a) h(user-de\014ned) f
(limit) h(to) h(a) m(v) -5 b(ailable) 26 b(memory) e(whic) m(h) f(can) h
(b) s(e) f(useful) g(for) h(stress-) 274 2283 y(testing) 32
b(a) f(program) f(in) g(sim) m(ulated) h(lo) m(w) g(memory) f
(conditions.) p Fm 169 2408 a(\017) p Fo 60 w(Con) m(tains) 36
b(a) f(feature) g(to) g(randomly) g(fail) g(a) g(sp) s(eci\014c) g
(frequency) f(of) h(memory) f(allo) s(cations) j(whic) m(h) e(can) 274
2507 y(b) s(e) 30 b(useful) g(for) g(stress-testing) i(error) e(reco) m
(v) m(ery) i(co) s(de) e(in) g(a) h(program.) p Fm 169
2632 a(\017) p Fo 60 w(An) i(option) h(exists) g(to) g(displa) m(y) g
(a) g(complete) g(memory) g(map) f(of) g(the) h(heap) f(at) h(program) f
(termination.) 274 2731 y(A) e(function) f(to) h(do) f(this) h(is) f
(also) h(a) m(v) -5 b(ailable) 33 b(to) e(call) h(at) f(an) m(y) g(p) s
(oin) m(t) f(during) f(program) h(execution.) p Fm 169
2856 a(\017) p Fo 60 w(A) 38 b(function) f(is) g(pro) m(vided) g(to) h
(tak) m(e) h(a) e(snapshot) g(of) g(the) h(heap) f(at) h(the) f(curren)
m(t) g(p) s(oin) m(t) h(in) e(execution.) 274 2956 y(The) f(v) -5
b(alue) 36 b(returned) f(b) m(y) g(this) h(function) f(can) h(then) f
(b) s(e) g(used) f(to) j(pinp) s(oin) m(t) d(the) i(di\013erences) g
(in) f(heap) 274 3055 y(allo) s(cation) e(details) f(b) s(et) m(w) m
(een) f(that) g(p) s(oin) m(t) f(and) g(a) g(later) i(p) s(oin) m(t) e
(in) g(the) h(program.) p Fm 169 3180 a(\017) p Fo 60
w(F) -8 b(unctions) 32 b(are) f(pro) m(vided) f(to) i(iterate) g
(across) g(all) f(of) g(the) g(curren) m(t) g(heap) f(allo) s(cations) j
(and) d(call) i(a) f(user-) 274 3279 y(de\014ned) f(callbac) m(k) i
(function) e(for) g(eac) m(h) i(one) f(they) f(\014nd.) p
Fm 169 3404 a(\017) p Fo 60 w(A) 23 b(leak) g(table) h(is) e(pro) m
(vided,) i(whic) m(h) e(records) g(a) h(\015at) g(pro\014le) f(of) g
(memory) h(allo) s(cation) h(b) s(eha) m(viour) e(b) s(et) m(w) m(een)
274 3504 y(t) m(w) m(o) 30 b(p) s(oin) m(ts) e(in) g(a) g(program) g
(and) g(is) g(k) m(ey) m(ed) h(b) m(y) f(source) g(\014le) h(lo) s
(cation.) 41 b(Memory) 29 b(allo) s(cation) h(ev) m(en) m(ts) g(can) 274
3603 y(either) 35 b(b) s(e) f(recorded) g(in) g(the) h(leak) g(table) h
(automatically) h(via) e(a) g(run-time) f(option) h(or) f(the) h(leak) g
(table) 274 3703 y(can) c(b) s(e) f(manipulated) g(through) g(sev) m
(eral) i(functions.) p Fm 169 3827 a(\017) p Fo 60 w(F) -8
b(unctions) 29 b(are) g(pro) m(vided) f(to) h(write) g(user-de\014ned) d
(information) j(directly) g(to) g(the) g(mpatrol) f(log) i(\014le,) f
(as) 274 3927 y(w) m(ell) j(as) e(hexadecimal) i(memory) e(dumps) f(of)
h(an) m(y) h(memory) f(lo) s(cation.) p Fm 169 4051 a(\017) p
Fo 60 w(Options) i(exist) h(to) g(displa) m(y) g(all) g(freed) f(and) g
(unfreed) e(memory) j(allo) s(cations) h(at) f(program) f(termination)
274 4151 y(in) f(order) g(to) h(detect) h(memory) e(leaks,) i(as) e(w) m
(ell) h(as) g(all) g(free) f(memory) h(blo) s(c) m(ks.) 43
b(A) 32 b(separate) g(program) f(is) 274 4251 y(also) h(pro) m(vided) e
(for) g(lo) s(cating) i(memory) e(leaks) h(in) f(un\014nished) e(log) k
(\014les.) p Fm 169 4375 a(\017) p Fo 60 w(An) 38 b(option) h(exists) g
(to) g(ab) s(ort) f(the) g(program) g(with) g(a) g(failure) h
(condition) f(if) g(there) h(are) f(more) h(than) f(a) 274
4475 y(sp) s(eci\014ed) h(n) m(um) m(b) s(er) g(of) g(unfreed) f
(memory) i(allo) s(cations) i(at) e(program) f(termination.) 69
b(This) 39 b(could) h(b) s(e) 274 4575 y(useful) j(for) g(batc) m(h) h
(testing) h(in) e(order) g(to) h(c) m(hec) m(k) h(that) f(all) h(tests)
f(free) g(up) e(most) i(of) f(their) h(allo) s(cated) 274
4674 y(memory) -8 b(.) p Fm 169 4799 a(\017) p Fo 60
w(Memory) 43 b(allo) s(cations) h(can) f(b) s(e) p Fi
41 w(marke) -5 b(d) p Fo 53 w(to) 43 b(indicate) g(to) g(the) f
(mpatrol) g(library) g(that) h(they) f(should) 274 4898
y(remain) 34 b(allo) s(cated) h(for) f(the) f(lifetime) i(of) f(the) g
(program) f(and) g(should) g(not) g(b) s(e) g(freed) g(or) h(b) s(e) f
(listed) h(as) g(a) 274 4998 y(memory) d(leak.) p Fm
169 5122 a(\017) p Fo 60 w(F) -8 b(unctions) 34 b(alw) m(a) m(ys) h
(rep) s(ort) d(if) h(their) g(argumen) m(ts) h(are) f(illegal) i(in) e
(order) g(to) g(pinp) s(oin) m(t) g(an) m(y) g(errors,) h(and) 274
5222 y(options) g(exist) g(to) g(p) s(erform) d(rigorous) i(c) m(hec) m
(king) i(of) e(argumen) m(ts) h(when) e(allo) s(cating,) k(reallo) s
(cating) g(and) 274 5322 y(freeing) j(memory) -8 b(.) 64
b(In) 37 b(addition,) k(c) m(hec) m(king) f(is) e(p) s(erformed) e(to) j
(ensure) e(that) i(memory) f(allo) s(cated) i(b) m(y) p
Fl 274 5421 a(operator) 29 b(new[]) p Fo 29 w(is) h(not) h(freed) f
(with) p Fl 30 w(free\(\)) p Fo 28 w(for) g(example.) p
Fm 169 5546 a(\017) p Fo 60 w(The) 36 b(t) m(yp) s(e) g(of) g(function)
f(p) s(erforming) g(a) h(memory) g(allo) s(cation) i(is) e(alw) m(a) m
(ys) i(stored) d(along) i(with) f(the) g(al-) 274 5645
y(lo) s(cation,) 47 b(as) c(w) m(ell) g(as) f(the) h(\014le) f(and) f
(line) i(n) m(um) m(b) s(er) e(it) h(w) m(as) h(called) g(from.) 76
b(If) 41 b(compiled) i(with) p Fl 42 w(gcc) p Fo(,) p
90 rotate dyy eop
%%Page: 12 18
12 17 bop Fo 94 -116 a(12) 3377 b(mpatrol) 274 365 y(the) 36
b(function) e(name) h(will) h(also) g(b) s(e) e(stored) h(and) f(the) i
(thread) e(iden) m(ti\014er) i(will) f(b) s(e) f(stored) h(if) g(using)
g(the) 274 465 y(thread-safe) c(library) -8 b(.) p Fm
169 589 a(\017) p Fo 60 w(The) 41 b(library) f(uses) h(a) g(header) f
(\014le) h(to) h(rede\014ne) e(the) h(memory) g(allo) s(cation) i
(functions) d(as) h(macros) g(in) 274 689 y(order) 34
b(to) h(obtain) g(more) f(information) g(ab) s(out) g(where) g(they) g
(w) m(ere) h(called) g(from.) 52 b(This) 33 b(is) i(not) f(strictly) 274
789 y(required) 22 b(on) g(UNIX) g(and) f(Windo) m(ws) h(platforms) g
(\(and) g(AmigaOS) g(when) f(using) p Fl 21 w(gcc) p
Fo(\),) j(since) e(the) g(library) 274 888 y(automatically) 39
b(rede\014nes) c(the) h(default) g(system) f(memory) h(allo) s(cation) i
(functions.) 56 b(All) 36 b(rede\014nitions) 274 988
y(in) d(the) h(header) f(can) g(also) h(b) s(e) f(disabled) f(b) m(y) h
(de\014ning) g(the) p Fl 33 w(NDEBUG) p Fo 31 w(prepro) s(cessor) f
(macro,) j(whic) m(h) e(also) 274 1088 y(disables) e(the) f(e\013ect) i
(of) f(calling) h(an) m(y) e(mpatrol) h(library) f(function.) p
Fm 169 1212 a(\017) p Fo 60 w(A) c(command) g(is) g(supplied) e(to) j
(run) d(a) j(program) e(that) i(w) m(as) f(link) m(ed) g(with) f(the) i
(mpatrol) f(library) f(with) h(an) m(y) 274 1312 y(sp) s(eci\014ed) 31
b(options) g(on) f(the) h(command) g(line.) 43 b(On) 29
b(some) j(UNIX) f(platforms,) g(an) g(option) g(also) h(exists) f(to)
274 1411 y(o) m(v) m(erride) 37 b(the) f(default) g(memory) g(allo) s
(cation) i(routines) e(for) f(an) m(y) i(dynamically-link) m(ed) g
(program) e(that) 274 1511 y(w) m(as) c(not) g(previously) f(link) m
(ed) h(with) f(the) g(mpatrol) h(library) -8 b(.) p Fm
169 1636 a(\017) p Fo 60 w(The) 44 b(mpatrol) g(library) f(can) h(b) s
(e) f(built) g(to) i(liaise) g(with) e(P) m(arasoft) i(In) m(use,) i(a)
d(commercial) h(graphical) 274 1735 y(memory) 33 b(usage) h(to) s(ol) g
(that) f(can) g(displa) m(y) g(the) g(curren) m(t) g(memory) g(map) f
(of) h(a) h(running) d(pro) s(cess.) 47 b(In) m(use) 274
1835 y(is) 31 b(supplied) e(with) h(P) m(arasoft) i(Insure) p
Fl(++) p Fo(.) p Fm 169 1959 a(\017) p Fo 60 w(Comes) f(with) g(a) g
(library) f(of) h(to) s(ols) g(that) h(are) f(built) f(on) h(top) g(of)
f(the) h(mpatrol) g(library) g(and) f(can) h(b) s(e) f(used) 274
2059 y(to) i(extend) e(it) h(for) f(sp) s(eci\014c) g(applications.) p
Fm 169 2183 a(\017) p Fo 60 w(An) 35 b(automak) m(e) h(macro) f(is) g
(pro) m(vided) f(to) i(ease) f(the) g(in) m(tegration) i(of) e(mpatrol)
g(in) m(to) g(a) g(new) f(or) h(existing) 274 2283 y(pro) 5
b(ject.) p Fm 169 2408 a(\017) p Fo 60 w(A) 42 b(small) f(to) s(ol) h
(is) f(pro) m(vided) f(to) i(read) f(a) g(dictionary) h(\014le) f(and) f
(displa) m(y) i(all) f(of) h(the) f(w) m(ords) f(that) i(can) 274
2507 y(b) s(e) 33 b(represen) m(ted) g(in) f(hexadecimal) i(form.) 48
b(Suc) m(h) 33 b(hexadecimal) h(constan) m(ts) g(can) f(b) s(e) f(used)
h(to) g(initialise) 274 2607 y(v) -5 b(ariables) 32 b(in) e(user) f
(programs) h(in) g(order) g(to) h(aid) g(debugging.) p
Fm 169 2731 a(\017) p Fo 60 w(The) e(library) g(and) f(to) s(ols) i
(can) f(b) s(e) f(built) h(using) g(the) g(GNU) g(auto) s(conf,) h
(automak) m(e) h(and) d(libto) s(ol) i(utilities.) 274
2831 y(Build) f(scripts) f(are) g(also) h(supplied) e(to) i(build) f(b)
s(oth) f(installation) j(pac) m(k) -5 b(ages) 30 b(and) e(binary) g
(distributions.) 274 2931 y(A) j(Lin) m(ux) f(Soft) m(w) m(are) h(Map) g
(\014le) f(is) h(also) g(pro) m(vided.) p Fm 169 3055
a(\017) p Fo 60 w(A) g(small) g(test) g(suite) g(is) f(pro) m(vided) g
(in) g(order) g(to) h(test) h(basic) e(features.) p Fm
169 3180 a(\017) p Fo 60 w(User) d(do) s(cumen) m(tation) g(is) g
(curren) m(tly) f(a) m(v) -5 b(ailable) 29 b(in) d(T) 2094
3199 y(E) 2144 3180 y(Xinfo) h(format) g(as) g(w) m(ell) g(as) g(UNIX) g
(man) m(ual) f(pages) 274 3279 y(and) i(a) g(quic) m(k) g(reference) g
(card.) 40 b(The) 27 b(source) h(co) s(de) g(for) g(the) f(library) h
(and) f(to) s(ols) i(can) f(also) g(b) s(e) f(formatted) 274
3379 y(for) k(a) f(prin) m(ted) g(man) m(ual.) p 90 rotate
dyy eop
%%Page: 13 19
13 18 bop Fo 94 -116 a(Chapter) 30 b(3:) 41 b(Installation) 2773
b(13) p Fk 94 365 a(3) 81 b(Installation) p Fo 219 586
a(The) 29 b(mpatrol) i(library) e(w) m(as) h(initially) i(dev) m(elop) s
(ed) e(on) g(an) g(Amiga) h(4000/040) i(running) 28 b(AmigaOS) j(3.1.)
41 b(I) 94 686 y(then) 34 b(installed) h(Red) e(Hat) i(Lin) m(ux) e
(5.1) i(on) f(m) m(y) g(Amiga) h(and) e(added) h(supp) s(ort) e(for) h
(Lin) m(ux/m68k.) 52 b(I'v) m(e) 35 b(no) m(w) 94 785
y(just) i(recen) m(tly) h(purc) m(hased) e(a) i(Dell) g(Inspiron) d
(7500) k(Noteb) s(o) s(ok) f(PC) e(and) h(put) f(m) m(y) h(Amiga) h(in)
f(retiremen) m(t,) 94 885 y(so) c(dev) m(elopmen) m(t) h(will) f(no) m
(w) f(con) m(tin) m(ue) i(on) e(Red) g(Hat) h(Lin) m(ux) f(6.2) i(and) e
(ab) s(o) m(v) m(e) h(on) f(the) h(In) m(tel) g(platform.) 47
b(I'v) m(e) 94 985 y(tried) 32 b(m) m(y) g(b) s(est) f(to) h(mak) m(e) h
(it) f(as) f(easy) i(as) e(p) s(ossible) g(to) i(build) d(and) h
(install) h(mpatrol) g(on) g(an) m(y) f(system,) i(but) d(it) 94
1084 y(isn't) j(lik) m(ely) h(to) f(run) e(smo) s(othly) h(for) g(ev) m
(eryb) s(o) s(dy) -8 b(.) 46 b(Ho) m(w) m(ev) m(er,) 35
b(there) e(shouldn't) e(b) s(e) h(an) m(y) g(ma) 5 b(jor) 32
b(problems) g(if) 94 1184 y(y) m(ou) f(p) s(erform) e(the) i(follo) m
(wing) h(steps.) 219 1308 y(Note) 22 b(that) g(if) e(y) m(ou) i(w) m
(an) m(t) f(to) h(c) m(hec) m(k) g(the) f(in) m(tegrit) m(y) i(of) e
(the) g(\014les) g(that) g(came) h(with) e(the) h(mpatrol) h
(distribution) 94 1407 y(y) m(ou) 38 b(can) f(use) g(the) g(`) p
Fl(CHECKSUMS) p Fo(') e(\014le) i(in) f(the) h(`) p Fl(mpatrol) p
Fo(') f(base) h(directory) -8 b(.) 61 b(Y) -8 b(ou) 38
b(m) m(ust) e(ha) m(v) m(e) j(the) p Fl 37 w(md5sum) p
Fo 94 1507 a(command) 31 b(installed) g(on) f(y) m(our) g(system) h(in)
f(order) g(to) h(mak) m(e) g(use) f(of) h(this) f(\014le.) 219
1631 y(If) 38 b(y) m(ou) h(wish) f(to) h(use) f(GNU) i(auto) s(conf,) h
(automak) m(e) f(and) e(libto) s(ol) i(to) f(build) e(and) h(install) i
(mpatrol) f(y) m(ou) 94 1730 y(ma) m(y) 34 b(do) f(so) h(b) m(y) f(en) m
(tering) h(the) g(`) p Fl(pkg/auto) p Fo(') d(directory) j(and) f(t) m
(yping) g(`) p Fl(./setup) p Fo('.) 48 b(This) 33 b(will) g(construct) h
(the) 94 1830 y(directory) 42 b(structure) e(that) h(is) g(required) f
(b) m(y) h(these) g(to) s(ols) h(and) e(will) h(also) h(create) g(a) f
(`) p Fl(configure) p Fo(') e(script.) 94 1930 y(Please) 29
b(see) f(the) g(`) p Fl(INSTALL) p Fo(') e(\014le) i(in) f(that) h
(directory) g(for) g(information) g(on) f(ho) m(w) h(to) g(pro) s
(ceed.) 40 b(Note) 28 b(that) h(y) m(ou) 94 2029 y(can) d(clean) g(up) e
(the) h(`) p Fl(pkg/auto) p Fo(') f(directory) h(b) m(y) g(t) m(yping) h
(`) p Fl(make) j(distclean) p Fo(') 23 b(\(if) j(the) f(`) p
Fl(configure) p Fo(') e(script) i(has) 94 2129 y(already) 31
b(b) s(een) f(run\)) f(follo) m(w) m(ed) j(b) m(y) f(`) p
Fl(./cleanup) p Fo('.) 219 2253 y(F) -8 b(or) 31 b(a) g(man) m(ual) g
(installation,) h(p) s(erform) d(the) i(follo) m(wing) g(steps.) 144
2377 y(1.) 60 b(Go) 32 b(in) m(to) f(the) f(`) p Fl(build) p
Fo(') g(directory) h(and) f(then) g(in) m(to) h(the) g(appropriate) f
(sub) s(directory) f(for) h(y) m(our) h(system.) 144
2500 y(2.) 60 b(Edit) 35 b(the) g(`) p Fl(Makefile) p
Fo(') e(in) i(that) g(directory) h(and) e(c) m(hec) m(k) i(that) g(it) f
(is) g(using) f(the) h(appropriate) g(compiler) 274 2600
y(and) 42 b(build) f(to) s(ols.) 77 b(The) p Fl 42 w(CC) p
Fo 41 w(macro) 43 b(sp) s(eci\014es) f(the) g(compiler) p
Fh 2489 2567 a(1) p Fo 2527 2600 a(,) j(the) p Fl 43
w(AR) p Fo 41 w(macro) e(sp) s(eci\014es) f(the) g(to) s(ol) 274
2700 y(used) 36 b(to) i(build) e(the) h(arc) m(hiv) m(e) h(library) e
(and) g(the) p Fl 37 w(LD) p Fo 36 w(macro) i(sp) s(eci\014es) e(the) h
(to) s(ol) h(to) f(build) f(the) h(shared) 274 2799 y(library) -8
b(.) 39 b(The) p Fl 23 w(CFLAGS) p Fo 22 w(macro) 24
b(sp) s(eci\014es) f(compiler) h(options) g(that) g(are) g(alw) m(a) m
(ys) h(to) f(b) s(e) f(used,) h(the) p Fl 24 w(OFLAGS) p
Fo 274 2899 a(macro) 36 b(sp) s(eci\014es) f(optimisation) i(options) e
(for) g(the) g(compiler,) i(the) p Fl 36 w(SFLAGS) p
Fo 33 w(macro) f(sp) s(eci\014es) f(options) 274 2998
y(to) 28 b(b) s(e) e(passed) g(to) h(the) g(compiler) g(when) f
(building) f(a) i(shared) f(library) g(and) g(the) p
Fl 27 w(TFLAGS) p Fo 25 w(macro) h(sp) s(eci\014es) 274
3098 y(options) 39 b(to) g(b) s(e) f(passed) f(to) i(the) g(compiler) g
(when) e(building) g(a) i(thread-safe) g(library) -8
b(.) 64 b(Y) -8 b(ou) 39 b(ma) m(y) g(also) 274 3198
y(need) 31 b(to) g(c) m(hange) g(the) g(library) f(names) g(and) g
(library) g(build) f(commands) h(on) g(di\013eren) m(t) h(systems.) 274
3322 y(Note) 42 b(that) e(the) g(generic) h(UNIX) g(`) p
Fl(Makefile) p Fo(') d(con) m(tains) j(a) f(macro) h(called) p
Fl 41 w(GUISUP) p Fo 38 w(whic) m(h) f(is) g(set) g(to) p
Fl 274 3421 a(false) p Fo 34 w(b) m(y) 34 b(default.) 54
b(If) 34 b(it) i(is) e(set) h(to) p Fl 36 w(true) p Fo
33 w(then) g(the) p Fl 35 w(mptrace) p Fo 32 w(command) g(will) g(b) s
(e) f(built) g(with) h(GUI) 274 3521 y(supp) s(ort) 30
b(enabled.) 44 b(Ho) m(w) m(ev) m(er,) 34 b(y) m(our) e(system) g(m) m
(ust) f(con) m(tain) i(the) e(correct) i(header) e(\014les) h(and) f
(libraries) 274 3620 y(in) g(order) e(to) j(supp) s(ort) c(this.) 144
3744 y(3.) 60 b(Use) 51 b(the) p Fl 50 w(make) p Fo 48
w(command) f(\(or) g(equiv) -5 b(alen) m(t\)) 52 b(to) e(build) f(the) h
(mpatrol) g(library) f(in) h(arc) m(hiv) m(e) h(form.) 274
3844 y(The) 37 b(`) p Fl(all) p Fo(') g(target) i(builds) d(all) i(p) s
(ossible) e(com) m(binations) j(of) e(the) g(mpatrol) h(library) f(for)
f(y) m(our) i(system.) 274 3944 y(The) g(`) p Fl(clean) p
Fo(') e(target) j(remo) m(v) m(es) g(all) g(relev) -5
b(an) m(t) 39 b(ob) 5 b(ject) 38 b(\014les) f(from) h(the) f(curren) m
(t) h(directory) -8 b(,) 40 b(while) e(the) 274 4043
y(`) p Fl(clobber) p Fo(') 30 b(target) j(also) f(remo) m(v) m(es) h
(all) f(libraries) f(that) h(ha) m(v) m(e) h(b) s(een) d(built) h(from)
g(the) h(curren) m(t) f(directory) -8 b(.) 274 4143 y(On) 24
b(some) g(UNIX) g(platforms,) h(the) f(`) p Fl(lint) p
Fo(') g(target) h(will) f(build) f(a) p Fl 25 w(lint) p
Fo 22 w(library) h(for) f(the) h(mpatrol) h(library) -8
b(.) 144 4267 y(4.) 60 b(If) 37 b(the) g(mpatrol) g(library) f(is) h
(to) g(b) s(e) f(built) g(with) h(supp) s(ort) e(for) h(P) m(arasoft) i
(In) m(use) e(then) h(the) p Fl 36 w(MP_INUSE_) 274 4366
y(SUPPORT) p Fo 22 w(prepro) s(cessor) 23 b(macro) h(m) m(ust) f(b) s
(e) g(de\014ned) f(in) h(the) p Fl 24 w(CFLAGS) p Fo
21 w(p) s(ortion) g(of) h(the) g(`) p Fl(Makefile) p
Fo(') d(b) s(efore) 274 4466 y(building.) 37 b(This) 21
b(will) h(ensure) e(that) i(In) m(use) f(will) g(b) s(e) g(noti\014ed) g
(of) h(ev) m(ery) g(memory) f(allo) s(cation,) 26 b(reallo) s(cation)
274 4566 y(and) 33 b(deallo) s(cation,) j(but) c(the) h(Insure) p
Fl(++) p Fo 31 w(run) m(time) f(library) h(will) g(also) h(ha) m(v) m
(e) g(to) f(b) s(e) f(link) m(ed) i(in) e(with) h(an) m(y) 274
4665 y(program) e(that) g(uses) f(mpatrol.) 144 4789
y(5.) 60 b(Cop) m(y) 41 b(all) h(of) f(the) g(libraries) g(that) g(ha) m
(v) m(e) i(b) s(een) d(built) g(in) m(to) i(y) m(our) f(lo) s(cal) h
(library) e(directory) -8 b(.) 73 b(If) 41 b(there) 274
4889 y(w) m(ere) 34 b(sym) m(b) s(olic) f(links) f(created) i(in) e
(the) h(`) p Fl(build) p Fo(') f(directory) h(then) f(these) h(should) f
(b) s(e) g(recreated) h(in) g(the) 274 4988 y(lo) s(cal) e(library) f
(directory) g(rather) g(than) f(simply) g(cop) m(ying) i(them.) 40
b(Y) -8 b(ou) 31 b(ma) m(y) f(need) f(to) i(run) d(a) i(command) 274
5088 y(suc) m(h) d(as) p Fl 28 w(ldconfig) p Fo 25 w(in) f(order) h
(for) g(the) g(system) g(to) h(recognise) h(the) e(newly-installed) h
(libraries,) g(and) f(y) m(ou) 274 5187 y(ma) m(y) 33
b(also) f(need) g(to) g(add) f(the) h(\014lename) g(of) f(the) h
(directory) g(con) m(taining) i(the) d(newly-installed) i(libraries) 274
5287 y(to) 44 b(an) e(en) m(vironmen) m(t) h(v) -5 b(ariable) 44
b(suc) m(h) e(as) p Fl 43 w(LD_LIBRARY_PATH) p Fo 38
w(if) h(y) m(ou) g(installed) g(the) g(libraries) f(in) h(a) 274
5387 y(non-standard) 30 b(lo) s(cation.) p 94 5462 1200
4 v Fh 143 5522 a(1) p Fg 219 5554 a(On) d(man) n(y) h(systems) g(this)
g(actually) g(a) g(C) p Ff(++) p Fg 29 w(compiler) h(b) n(y) e
(default,) i(and) f(should) g(b) r(e) f(a) i(C) p Ff(++) p
Fg 28 w(compiler) g(if) g(y) n(ou) e(wish) i(to) f(use) 219
5645 y(the) d(C) p Ff(++) p Fg 27 w(op) r(erators.) p
90 rotate dyy eop
%%Page: 14 20
14 19 bop Fo 94 -116 a(14) 3377 b(mpatrol) 144 365 y(6.) 60
b(Cop) m(y) 39 b(the) p Fl 39 w(mpatrol) p Fo(,) p Fl
39 w(mprof) p Fo(,) p Fl 40 w(mptrace) p Fo 36 w(and) p
Fl 38 w(mleak) p Fo 38 w(programs) f(that) h(ha) m(v) m(e) h(b) s(een) e
(built) g(in) m(to) i(y) m(our) 274 465 y(lo) s(cal) 28
b(bin) d(directory) -8 b(.) 40 b(Y) -8 b(ou) 26 b(ma) m(y) h(also) f
(wish) f(to) i(cop) m(y) g(the) p Fl 26 w(mpsym) p Fo(,) p
Fl 25 w(mpedit) p Fo 24 w(and) p Fl 26 w(hexwords) p
Fo 23 w(commands) 274 565 y(to) 32 b(y) m(our) e(lo) s(cal) i(bin) d
(directory) i(as) g(w) m(ell) g(if) f(y) m(our) h(system) f(supp) s
(orts) f(Bourne) h(shell) g(scripts.) 144 689 y(7.) 60
b(Go) 32 b(up) e(t) m(w) m(o) i(directory) g(lev) m(els) g(in) m(to) g
(the) f(`) p Fl(src) p Fo(') f(directory) i(and) e(cop) m(y) i(the) f
(`) p Fl(mpatrol.h) p Fo(',) e(`) p Fl(mpalloc.h) p Fo(') 274
789 y(and) h(`) p Fl(mpdebug.h) p Fo(') f(header) h(\014les) g(in) m
(to) h(y) m(our) g(lo) s(cal) g(include) g(directory) -8
b(.) 144 913 y(8.) 60 b(Go) 29 b(up) d(one) i(directory) g(lev) m(el) h
(in) m(to) g(the) f(`) p Fl(tools) p Fo(') e(directory) i(and) f(cop) m
(y) i(all) f(of) g(the) f(header) h(\014les) f(in) m(to) i(the) 274
1013 y(`) p Fl(mpatrol) p Fo(') g(sub) s(directory) h(\(whic) m(h) g(y)
m(ou'll) i(need) e(to) h(create\)) h(in) e(y) m(our) g(lo) s(cal) i
(include) e(directory) -8 b(.) 144 1137 y(9.) 60 b(On) 30
b(UNIX) g(platforms,) g(go) h(up) e(one) i(directory) f(lev) m(el) i
(in) m(to) f(the) g(`) p Fl(man) p Fo(') e(directory) i(and) e(cop) m
(y) i(the) g(`) p Fl(man1) p Fo(') 274 1237 y(and) d(`) p
Fl(man3) p Fo(') f(sub) s(directories) g(to) i(y) m(our) e(lo) s(cal) i
(man) f(directory) -8 b(.) 41 b(Unfortunately) -8 b(,) 29
b(the) f(lo) s(cation) h(for) f(man-) 274 1337 y(ual) 38
b(pages) f(v) -5 b(aries) 37 b(from) g(system) g(to) g(system) h(so) f
(y) m(ou) g(ma) m(y) g(or) g(ma) m(y) h(not) f(also) h(b) s(e) e(able) h
(to) h(cop) m(y) g(the) 274 1436 y(`) p Fl(cat1) p Fo(') 26
b(and) g(`) p Fl(cat3) p Fo(') g(sub) s(directories) g(as) h(w) m(ell.)
40 b(The) 26 b(`) p Fl(man*) p Fo(') g(sub) s(directories) g(con) m
(tain) i(the) e(unformatted) 274 1536 y(man) m(ual) 31
b(pages) g(while) g(the) f(`) p Fl(cat*) p Fo(') g(sub) s(directories) g
(con) m(tain) h(the) g(formatted) g(man) m(ual) g(pages.) 98
1660 y(10.) 61 b(Go) 31 b(up) e(one) i(directory) g(lev) m(el) g(in) m
(to) h(the) e(`) p Fl(doc) p Fo(') g(directory) g(and) g(examine) h
(the) f(\014les) g(lo) s(cated) i(there.) 40 b(The) 274
1760 y(`) p Fl(mpatrol.texi) p Fo(') 26 b(\014le) i(con) m(tains) h
(the) g(T) 1630 1780 y(E) 1680 1760 y(Xinfo) f(source) g(for) g(this) g
(man) m(ual) h(and) e(can) i(b) s(e) e(translated) i(in) m(to) 274
1860 y(a) 24 b(wide) f(v) -5 b(ariet) m(y) 24 b(of) f(do) s(cumen) m
(tation) h(formats.) 39 b(The) 22 b(`) p Fl(refcard.tex) p
Fo(') f(\014le) i(con) m(tains) h(the) f(LaT) 3484 1879
y(E) 3535 1860 y(X) g(source) 274 1959 y(for) 36 b(the) f(quic) m(k) h
(reference) f(card) h(and) e(can) i(b) s(e) e(translated) i(in) m(to) g
(formats) g(suitable) g(for) f(prin) m(ting) g(on) m(to) 274
2059 y(a) e(few) e(pages.) 45 b(There) 31 b(should) g(already) h(b) s
(e) f(translated) i(\014les) e(in) h(the) g(`) p Fl(doc) p
Fo(') f(directory) -8 b(,) 33 b(but) e(if) h(not) g(y) m(ou) 274
2159 y(will) f(ha) m(v) m(e) g(to) f(generate) i(them) d(y) m(ourself) i
(using) e(the) h(`) p Fl(Makefile) p Fo(') e(pro) m(vided.) 40
b(Y) -8 b(ou) 31 b(can) f(then) f(install) i(or) 274
2258 y(prin) m(t) f(these) h(do) s(cumen) m(ts.) 274
2383 y(The) 22 b(mpatrol) g(library) g(source) g(co) s(de) h(can) f
(also) h(b) s(e) f(formatted) g(for) g(a) h(prin) m(ted) e(man) m(ual) i
(for) f(later) h(p) s(erusal.) 274 2482 y(The) 33 b(`) p
Fl(source) p Fo(') e(target) j(in) f(the) g(`) p Fl(Makefile) p
Fo(') d(within) j(the) f(`) p Fl(doc) p Fo(') h(directory) g(can) g(b) s
(e) f(used) g(to) h(build) f(the) 274 2582 y(source) 41
b(co) s(de) f(do) s(cumen) m(tation) h(in) f(D) m(VI,) h(p) s
(ostscript) f(and) f(PDF) i(formats,) i(but) c(b) s(e) h(prepared) f
(for) h(a) 274 2682 y(large) 32 b(n) m(um) m(b) s(er) d(of) i(pages!)
274 2806 y(If) 36 b(y) m(ou) g(are) g(not) h(installing) g(on) e(a) i
(system) f(that) g(supp) s(orts) e(UNIX) i(man) m(ual) h(pages) f(then)
g(y) m(ou) g(should) 274 2906 y(also) 27 b(c) m(hec) m(k) g(in) e(the) h
(`) p Fl(man) p Fo(') f(directory) h(to) g(ensure) f(that) h(there) g
(are) g(alternativ) m(e) i(formats) e(for) f(the) h(mpatrol) 274
3005 y(man) m(ual) i(pages) f(that) h(y) m(ou) f(can) g(install.) 41
b(If) 26 b(not,) i(y) m(ou) g(will) f(ha) m(v) m(e) h(to) g(generate) g
(them) f(y) m(ourself) g(using) g(the) 274 3105 y(`) p
Fl(Makefile) p Fo(') i(pro) m(vided.) 219 3279 y(Alternativ) m(ely) -8
b(,) 33 b(the) d(`) p Fl(pkg) p Fo(') f(directory) h(con) m(tains) h
(\014les) f(that) g(can) g(b) s(e) f(used) g(to) i(automatically) h
(generate) g(a) p Fi 94 3379 a(p) -5 b(ackage) p Fo 39
w(in) 31 b(a) g(sp) s(eci\014c) g(format) g(suitable) h(for) e
(installation) j(on) e(a) g(system.) 43 b(F) -8 b(our) 31
b(pac) m(k) -5 b(age) 33 b(formats) e(\(PK) m(G,) 94
3479 y(SD/UX,) 42 b(RPM) e(and) f(Debian\)) i(and) f(three) g(arc) m
(hiv) m(e) i(formats) e(are) h(curren) m(tly) f(supp) s(orted) e
(\(generic) k(tap) s(e) 94 3578 y(arc) m(hiv) m(e,) 33
b(LhA) c(and) h(ZIP\).) 219 3703 y(The) f(\014rst) g(pac) m(k) -5
b(age) 31 b(format) f(is) g(generally) g(used) f(on) g(UNIX) h(SVR4) g
(systems,) g(while) f(the) h(second) f(is) h(used) 94
3802 y(on) k(HP/UX) g(systems.) 49 b(The) 33 b(RPM) g(and) g(Debian) g
(pac) m(k) -5 b(age) 36 b(formats) d(w) m(ere) h(in) m(tro) s(duced) e
(b) m(y) h(Red) g(Hat) i(and) 94 3902 y(Debian) c(resp) s(ectiv) m(ely)
h(for) e(use) g(in) g(their) h(Lin) m(ux) f(distributions.) 219
4027 y(The) h(generic) i(tap) s(e) f(arc) m(hiv) m(e) h(can) g(b) s(e) e
(used) g(as) h(a) g(distribution) f(for) h(UNIX) g(systems) g(where) f
(no) h(pac) m(k) -5 b(age) 94 4126 y(format) 44 b(is) g(supp) s(orted,)
h(but) d(it) i(do) s(es) f(not) h(con) m(tain) g(information) g(on) f
(ho) m(w) g(to) i(install) f(the) f(\014les) h(on) f(the) 94
4226 y(system) 28 b(once) f(they) h(ha) m(v) m(e) g(b) s(een) e
(extracted) j(from) d(the) i(distribution.) 39 b(The) 26
b(LhA) h(and) f(ZIP) g(formats) i(are) f(also) 94 4325
y(roughly) 35 b(the) g(same,) i(but) d(the) h(LhA) g(format) g(is) g
(in) m(tended) g(for) f(Amiga) i(systems) f(and) g(is) g(used) f(for) h
(Aminet) 94 4425 y(distributions,) j(while) e(the) g(ZIP) g(format) g
(is) g(in) m(tended) h(for) f(Windo) m(ws) g(systems) g(and) g(is) g
(used) f(for) h(WinSite) 94 4525 y(distributions.) 219
4649 y(Y) -8 b(ou) 31 b(should) e(really) i(kno) m(w) g(what) f(y) m
(ou) h(are) g(doing) f(b) s(efore) g(y) m(ou) h(attempt) g(to) g(build)
e(a) i(pac) m(k) -5 b(age,) 33 b(and) d(y) m(ou) 94 4749
y(should) g(also) h(b) s(e) f(a) m(w) m(are) i(that) f(some) g(of) f
(the) h(pac) m(k) -5 b(age) 32 b(\014les) e(ma) m(y) h(need) f(to) i(b)
s(e) d(mo) s(di\014ed) g(b) s(efore) h(y) m(ou) h(b) s(egin.) 219
4873 y(In) f(addition,) g(a) h(Lin) m(ux) f(Soft) m(w) m(are) i(Map) e
(index) g(\014le) h(exists) g(in) f(the) g(`) p Fl(pkg/lsm) p
Fo(') f(directory) -8 b(.) 219 4998 y(Note) 39 b(that) e(the) h(`) p
Fl(extra) p Fo(') e(directory) i(that) g(comes) g(with) f(the) g
(mpatrol) h(distribution) e(con) m(tains) j(sev) m(eral) 94
5098 y(protot) m(yp) s(e) c(con\014guration) g(\014les) e(for) h
(certain) h(third-part) m(y) f(programs.) 51 b(These) 34
b(\014les) g(should) f(b) s(e) h(examined) 94 5197 y(so) c(that) f(y) m
(ou) h(can) f(decide) g(whether) g(to) g(in) m(tegrate) j(their) d(con)
m(ten) m(ts) h(in) m(to) g(y) m(our) f(existing) h(con\014guration) g
(\014les.) 94 5297 y(The) g(purp) s(ose) f(of) i(eac) m(h) g(\014le) g
(is) f(describ) s(ed) f(in) h(the) h(relev) -5 b(an) m(t) 32
b(sections) f(of) g(this) f(man) m(ual.) p 90 rotate
dyy eop
%%Page: 15 21
15 20 bop Fo 94 -116 a(Chapter) 30 b(4:) 41 b(In) m(tegration) 2786
b(15) p Fk 94 365 a(4) 81 b(In) l(tegration) p Fo 219
589 a(This) 36 b(section) h(describ) s(es) e(ho) m(w) i(to) g(go) g(ab)
s(out) f(adding) g(or) g(remo) m(ving) h(the) g(mpatrol) f(library) g
(from) g(y) m(our) 94 689 y(co) s(de.) 57 b(There) 35
b(are) g(sev) m(eral) i(lev) m(els) g(for) e(eac) m(h) i(category) g
(so) f(it) g(is) f(w) m(orth) h(reading) f(ab) s(out) h(eac) m(h) g(b) s
(efore) f(pro-) 94 788 y(ceeding.) p Fn 94 1046 a(4.1) 69
b(Adding) 44 b(mpatrol) p Fo 219 1228 a(The) 30 b(follo) m(wing) i
(steps) f(should) f(allo) m(w) i(y) m(ou) f(to) h(easily) f(in) m
(tegrate) i(the) e(mpatrol) g(library) g(in) m(to) g(an) g(existing) 94
1328 y(application,) 38 b(although) d(some) g(of) g(them) g(ma) m(y) g
(not) g(b) s(e) g(a) m(v) -5 b(ailable) 37 b(to) e(do) g(on) g(man) m
(y) f(platforms.) 54 b(They) 35 b(are) 94 1428 y(listed) g(in) e(the) h
(order) g(of) g(n) m(um) m(b) s(er) e(of) i(c) m(hanges) h(required) e
(to) i(mo) s(dify) e(existing) h(co) s(de) g(|) g(the) g(last) h(step) f
(will) 94 1527 y(require) d(a) f(complete) i(recompilation) g(of) f
(all) g(y) m(our) f(co) s(de.) 144 1652 y(1.) 60 b(This) 46
b(step) f(is) h(curren) m(tly) g(only) g(a) m(v) -5 b(ailable) 48
b(on) e(D) m(YNIX/ptx,) 52 b(F) -8 b(reeBSD,) 47 b(IRIX,) f(Lin) m(ux,)
j(NetBSD,) 274 1751 y(Op) s(enBSD,) 27 b(Solaris) h(and) f(T) -8
b(ru64) 28 b(platforms) f(and) g(on) h(DG/UX) h(4.20MU07) p
Fh 2907 1718 a(1) p Fo 2975 1751 a(or) e(later) i(platforms) e(with) 274
1851 y(the) p Fl 31 w(LD_PRELOAD) p Fo 28 w(feature.) 274
1975 y(If) 44 b(y) m(our) g(program) f(or) h(application) h(has) f(b) s
(een) f(dynamically) h(link) m(ed) g(with) g(the) g(system) g(C) f
(library) 274 2075 y(\(`) p Fl(libc.so) p Fo('\)) 24
b(or) h(an) f(alternativ) m(e) j(mallo) s(c) f(shared) e(library) g
(then) g(y) m(ou) h(can) g(use) f(the) h(`) p Fl(--dynamic) p
Fo(') d(option) 274 2175 y(to) 30 b(the) e(`) p Fl(mpatrol) p
Fo(') f(command) i(to) g(o) m(v) m(erride) g(the) g(default) g
(de\014nitions) f(of) p Fl 28 w(malloc\(\)) p Fo(,) f(etc.) j(at) f
(run-time) 274 2274 y(without) 36 b(ha) m(ving) g(to) h(relink) e(y) m
(our) h(program.) 56 b(If) 35 b(y) m(our) h(program) f(is) h(m) m
(ultithreaded) g(then) f(y) m(ou) h(m) m(ust) 274 2374
y(also) c(add) e(the) g(`) p Fl(--threads) p Fo(') e(option) j(to) g
(pic) m(k) g(up) f(the) g(m) m(ultithreaded) h(shared) f(libraries) g
(instead.) 274 2498 y(F) -8 b(or) 29 b(example,) h(if) e(y) m(our) g
(program's) g(executable) i(\014le) e(is) g(called) h(`) p
Fl(testprog) p Fo(') e(and) g(it) i(accepts) g(an) f(option) 274
2598 y(sp) s(ecifying) f(an) g(input) f(\014le,) i(y) m(ou) g(can) f
(force) g(the) g(system's) h(dynamic) e(link) m(er) i(to) g(use) e
(mpatrol's) i(v) m(ersions) 274 2698 y(of) p Fl 31 w(malloc\(\)) p
Fo(,) g(etc.) k(instead) f(of) f(the) h(default) f(v) m(ersions) h(b) m
(y) f(t) m(yping:) p Fl 514 2826 a(mpatrol) 46 b(--dynamic) g
(./testprog) f(-i) i(file) p Fo 274 2951 a(The) 27 b(resulting) h(log) h
(\014le) e(should) g(b) s(e) f(called) j(`) p Fl(mpatrol.<procid>.log) p
Fo(') 22 b(b) m(y) 28 b(default) f(\(where) p Fe 28 w(pro) s(cid) p
Fo 30 w(is) 274 3050 y(the) h(curren) m(t) e(pro) s(cess) h(id\),) h
(but) e(if) h(no) f(suc) m(h) h(\014le) g(exists) h(after) f(running) e
(the) i(`) p Fl(mpatrol) p Fo(') f(command) g(then) 274
3150 y(it) 35 b(will) g(not) f(b) s(e) f(p) s(ossible) h(to) h(force) g
(the) f(run-time) g(linking) g(of) g(mpatrol) h(functions) e(to) i(y) m
(our) f(program) 274 3250 y(and) d(y) m(ou) h(will) g(ha) m(v) m(e) h
(to) f(pro) s(ceed) f(to) h(the) g(next) g(step.) 44
b(Note) 33 b(that) f(the) p Fl 31 w(mpatrol) p Fo 30
w(command) f(o) m(v) m(errides) 274 3349 y(an) m(y) g(previous) f
(setting) i(of) e(the) p Fl 31 w(MPATROL_OPTIONS) p Fo
26 w(en) m(vironmen) m(t) h(v) -5 b(ariable.) 144 3474
y(2.) 60 b(This) 26 b(step) g(is) g(curren) m(tly) g(only) g(a) m(v) -5
b(ailable) 28 b(on) e(UNIX) g(and) f(Windo) m(ws) h(platforms) g(\(and)
g(AmigaOS) g(when) 274 3573 y(using) p Fl 30 w(gcc) p
Fo(\).) 274 3698 y(Y) -8 b(ou) 25 b(should) e(b) s(e) h(able) g(to) h
(link) f(in) g(the) g(mpatrol) g(library) g(when) f(linking) h(y) m
(our) g(program) g(without) g(ha) m(ving) 274 3798 y(to) i(recompile) g
(an) m(y) g(of) f(y) m(our) g(ob) 5 b(ject) 26 b(\014les) f(or) g
(libraries,) h(but) f(this) g(will) g(only) g(b) s(e) f(w) m(orth) m
(while) i(on) f(systems) 274 3897 y(where) 30 b(stac) m(k) i(tracebac) m
(ks) f(are) g(supp) s(orted,) d(otherwise) j(y) m(ou) f(should) f(pro) s
(ceed) h(to) h(the) f(next) g(step) h(since) 274 3997
y(there) 38 b(will) g(not) f(b) s(e) g(enough) g(information) h(for) f
(y) m(ou) h(to) g(tell) h(where) e(the) g(calls) i(to) f(dynamic) f
(memory) 274 4096 y(allo) s(cation) c(functions) d(to) s(ok) h(place.)
274 4221 y(Information) d(on) f(ho) m(w) g(to) h(link) f(the) g
(mpatrol) h(library) e(to) i(an) f(application) i(is) e(giv) m(en) h
(at) g(the) g(start) f(of) h(the) 274 4321 y(examples) 33
b(\(see) f(Chapter) f(16) h([Examples],) h(page) f(95\),) i(but) c(y) m
(ou) i(should) f(note) h(that) g(if) g(y) m(our) f(program) 274
4420 y(do) s(es) 26 b(not) f(directly) h(call) h(an) m(y) f(of) f(the) h
(functions) f(in) g(the) h(mpatrol) f(library) g(then) g(it) h(will) g
(not) g(b) s(e) f(link) m(ed) g(in) 274 4520 y(and) i(y) m(ou) g(will) g
(not) g(see) h(a) f(log) h(\014le) f(b) s(eing) g(generated) h(when) e
(y) m(ou) h(run) e(it.) 41 b(Y) -8 b(ou) 27 b(can) g(force) h(the) f
(linking) g(of) 274 4619 y(the) 32 b(mpatrol) f(library) g(b) m(y) f
(causing) p Fl 32 w(malloc\(\)) p Fo 28 w(to) i(b) s(e) f(unde\014ned) d
(on) j(the) g(link) g(line,) h(usually) f(through) 274
4719 y(the) g(use) f(of) h(the) f(`) p Fl(-u) p Fo(') g(link) m(er) h
(option.) 274 4843 y(If) f(y) m(our) f(program) h(is) f(m) m
(ultithreaded) h(then) f(y) m(ou) h(m) m(ust) g(use) f(the) h
(thread-safe) g(v) m(ersion) g(of) g(the) g(mpatrol) 274
4943 y(library) 40 b(and) e(p) s(ossibly) h(also) h(link) g(in) f(the) h
(system) f(threads) g(library) g(as) h(w) m(ell.) 69
b(Not) 41 b(doing) e(this) h(will) 274 5043 y(usually) 31
b(result) f(in) g(y) m(our) g(program) g(failing) i(somewhere) e(in) g
(the) h(mpatrol) f(library) g(co) s(de.) 144 5167 y(3.) 60
b(All) 28 b(of) f(the) g(follo) m(wing) h(steps) f(will) g(require) g
(y) m(ou) g(to) h(recompile) g(some) f(or) g(all) g(of) h(y) m(our) e
(co) s(de) h(so) h(that) f(y) m(our) 274 5267 y(co) s(de) 34
b(calls) h(dynamic) e(memory) h(allo) s(cation) i(functions) d(from) g
(the) h(mpatrol) g(library) f(rather) g(than) h(the) 274
5366 y(system) d(C) f(library) -8 b(.) p 94 5462 1200
4 v Fh 143 5522 a(1) p Fg 219 5554 a(Also) 33 b(a) n(v) l(ailable) g
(on) f(DG/UX) g(4.20MU05) i(with) e(patc) n(h) g(dgux) p
2081 5554 24 4 v 27 w(R4.20MU05.p59) i(and) e(DG/UX) g(4.20MU06) i
(with) e(patc) n(h) 219 5645 y(dgux) p 389 5645 V 27
w(R4.20MU06.p08.) p 90 rotate dyy eop
%%Page: 16 22
16 21 bop Fo 94 -116 a(16) 3377 b(mpatrol) 274 365 y(This) 30
b(\014rst) g(step) g(is) h(only) f(a) m(v) -5 b(ailable) 33
b(when) c(using) p Fl 30 w(gcc) p Fo(.) 274 491 y(Y) -8
b(ou) 29 b(can) f(mak) m(e) h(use) e(of) h(the) p Fl
28 w(gcc) p Fo 27 w(option) h(`) p Fl(-fcheck-memory-usage) p
Fo(') 22 b(whic) m(h) 28 b(instructs) f(the) h(compiler) 274
591 y(to) 40 b(place) g(calls) g(to) g(error-c) m(hec) m(king) g
(functions) f(b) s(efore) f(eac) m(h) i(access) h(to) e(memory) -8
b(.) 67 b(This) 38 b(can) h(result) 274 691 y(in) f(a) g(dramatic) g
(slo) m(wdo) m(wn) g(of) f(y) m(our) h(co) s(de) g(so) g(y) m(ou) f(ma)
m(y) i(wish) d(to) j(limit) f(the) g(use) f(of) h(this) f(option) h(to)
274 790 y(a) j(few) f(source) g(\014les,) j(but) d(it) g(do) s(es) g
(pro) m(vide) h(a) f(v) m(ery) h(thorough) f(metho) s(d) f(of) i
(ensuring) e(that) i(y) m(ou) f(do) 274 890 y(not) e(access) h(memory) e
(b) s(ey) m(ond) g(the) g(b) s(ounds) f(of) h(a) h(memory) f(allo) s
(cation) j(or) d(attempt) i(to) f(access) h(free) 274
989 y(memory) -8 b(.) 41 b(Ho) m(w) m(ev) m(er,) 31 b(b) s(e) d(a) m(w)
m(are) h(that) g(the) g(c) m(hec) m(ks) g(are) g(only) g(placed) f(in) g
(the) h(b) s(o) s(dies) e(of) h(functions) g(that) 274
1089 y(ha) m(v) m(e) j(b) s(een) d(compiled) h(with) g(this) f(option) i
(and) e(are) h(missing) g(from) f(all) i(functions) e(that) i(ha) m(v) m
(e) g(not.) 40 b(Y) -8 b(ou) 274 1189 y(m) m(ust) 26
b(link) f(in) g(the) h(mpatrol) f(library) g(when) g(using) f(this) i
(option,) h(otherwise) f(y) m(ou) f(will) h(get) g(link) m(er) g
(errors.) 274 1315 y(The) 38 b(`) p Fl(-fcheck-memory-usage) p
Fo(') 32 b(option) 38 b(w) m(as) g(added) f(to) p Fl
38 w(gcc) p Fo 37 w(to) h(supp) s(ort) e(GNU) i(Chec) m(k) m(er,) i
(whic) m(h) 274 1414 y(can) c(b) s(e) f(considered) g(to) h(b) s(e) e
(the) h(run-time) g(system) h(for) f(this) g(option.) 55
b(GNU) 36 b(Chec) m(k) m(er) g(also) g(includes) 274
1514 y(the) 41 b(abilit) m(y) i(to) e(detect) h(reads) f(from) f
(uninitialised) h(memory) -8 b(,) 44 b(something) d(that) g(mpatrol) g
(do) s(es) g(not) 274 1614 y(curren) m(tly) 35 b(supp) s(ort,) g(and) f
(deals) h(with) g(stac) m(k) h(ob) 5 b(jects) 35 b(as) h(w) m(ell.) 55
b(GNU) 35 b(Chec) m(k) m(er) h(cannot) f(b) s(e) f(used) g(in) 274
1713 y(conjunction) d(with) f(mpatrol.) 144 1839 y(4.) 60
b(F) -8 b(or) 36 b(this) e(step,) j(if) d(y) m(ou) h(ha) m(v) m(e) h(a)
f(rough) f(idea) h(of) g(where) f(the) h(function) g(calls) g(lie) h
(that) f(y) m(ou) g(w) m(ould) g(lik) m(e) 274 1939 y(to) 30
b(trace) g(or) e(test,) i(y) m(ou) f(need) f(only) h(recompile) h(the) e
(relev) -5 b(an) m(t) 30 b(source) f(\014les.) 40 b(Y) -8
b(ou) 29 b(should) f(mo) s(dify) f(these) 274 2038 y(source) 44
b(\014les) e(to) i(include) f(the) g(`) p Fl(mpatrol.h) p
Fo(') d(header) j(\014le) g(b) s(efore) g(an) m(y) g(calls) h(to) f
(dynamic) g(memory) 274 2138 y(allo) s(cation) 33 b(or) e(memory) f(op)
s(eration) h(functions.) 274 2264 y(Ho) m(w) m(ev) m(er,) f(y) m(ou) c
(should) f(tak) m(e) j(particular) e(care) h(to) g(ensure) e(that) h
(all) h(calls) h(to) e(memory) g(allo) s(cation) j(func-) 274
2364 y(tions) e(in) f(the) g(mpatrol) h(library) e(will) i(b) s(e) e
(matc) m(hed) i(b) m(y) f(calls) h(to) g(memory) f(reallo) s(cation) j
(or) d(deallo) s(cation) 274 2463 y(functions) j(in) f(the) h(mpatrol) f
(library) -8 b(,) 30 b(since) e(if) h(they) g(are) g(unmatc) m(hed) f
(then) g(the) h(log) h(\014le) e(will) h(either) g(\014ll) 274
2563 y(up) 37 b(with) g(errors) g(complaining) h(ab) s(out) f(trying) h
(to) g(free) f(unkno) m(wn) f(allo) s(cations,) 42 b(or) 37
b(w) m(arnings) g(ab) s(out) 274 2663 y(unfreed) 30 b(memory) g(allo) s
(cations) i(at) f(the) g(end) f(of) g(execution.) 144
2789 y(5.) 60 b(This) 24 b(step) h(requires) f(y) m(ou) h(to) g
(recompile) h(all) f(of) g(y) m(our) g(source) g(\014les) f(to) h
(include) g(the) g(`) p Fl(mpatrol.h) p Fo(') d(header) 274
2888 y(\014le.) 41 b(Ob) m(viously) -8 b(,) 30 b(this) f(will) h(tak) m
(e) h(the) f(longest) g(amoun) m(t) g(of) g(time) g(to) g(in) m
(tegrate,) i(but) d(need) g(not) g(require) 274 2988
y(y) m(ou) k(to) f(c) m(hange) h(an) m(y) g(source) f(\014les) g(if) f
(the) i(compiler) f(y) m(ou) g(are) h(using) e(has) h(a) g(command) g
(line) g(option) g(to) 274 3088 y(include) f(a) f(sp) s(eci\014c) h
(header) f(\014le) g(b) s(efore) g(an) m(y) h(source) f(\014les.) 274
3214 y(F) -8 b(or) 41 b(example,) p Fl 42 w(gcc) p Fo
39 w(comes) f(with) g(a) f(`) p Fl(-include) p Fo(') f(option) i(whic) m
(h) f(has) h(this) f(feature,) k(so) c(if) h(y) m(ou) g(had) 274
3313 y(to) 34 b(recompile) h(a) e(source) h(\014le) f(called) h(`) p
Fl(test.c) p Fo(') e(then) h(the) g(follo) m(wing) i(command) e(w) m
(ould) g(allo) m(w) i(y) m(ou) e(to) 274 3413 y(include) e(`) p
Fl(mpatrol.h) p Fo(') d(without) i(ha) m(ving) h(to) g(mo) s(dify) f
(the) h(source) f(\014le:) p Fl 514 3543 a(gcc) 47 b(-include) f
(/usr/local/include/mpatr) o(ol.h) 41 b(-c) 47 b(test.c) p
Fo 219 3697 a(In) 22 b(all) h(cases,) i(it) e(will) f(b) s(e) g
(desirable) g(to) h(compile) h(y) m(our) e(source) g(\014les) h(with) f
(compiler-generated) i(debugging) 94 3796 y(information) j(since) g
(that) g(ma) m(y) g(b) s(e) f(able) h(to) g(b) s(e) f(used) g(b) m(y) g
(the) h(`) p Fl(USEDEBUG) p Fo(') e(option) i(or) f(the) p
Fl 27 w(mpsym) p Fo 25 w(command.) 94 3896 y(In) e(addition,) i(more) f
(sym) m(b) s(olic) g(information) f(will) h(b) s(e) f(a) m(v) -5
b(ailable) 27 b(if) d(the) g(executable) i(\014les) f(ha) m(v) m(e) g
(not) g(had) f(their) 94 3996 y(sym) m(b) s(ol) 37 b(tables) h(stripp) s
(ed) e(from) h(them,) i(although) e(mpatrol) h(can) f(also) h(fall) g
(bac) m(k) g(to) g(using) f(the) g(dynamic) 94 4095 y(sym) m(b) s(ol) 31
b(table) g(from) f(dynamically) h(link) m(ed) g(executable) h(\014les.)
219 4223 y(Note) 44 b(that) g(an) e(automak) m(e) j(macro) e(is) g(no) m
(w) g(pro) m(vided) f(to) i(allo) m(w) g(y) m(ou) f(to) h(in) m
(tegrate) h(mpatrol) e(in) m(to) h(a) 94 4322 y(new) h(or) g(existing) h
(pro) 5 b(ject) 45 b(that) h(uses) e(the) i(GNU) f(auto) s(conf) g(and)
g(automak) m(e) i(to) s(ols.) 85 b(It) 45 b(is) g(lo) s(cated) h(in) 94
4422 y(`) p Fl(extra/mpatrol.m4) p Fo(',) 22 b(whic) m(h) h(should) g
(b) s(e) g(copied) h(to) g(the) g(directory) g(con) m(taining) h(all) g
(of) f(the) g(lo) s(cal) h(auto) s(conf) 94 4522 y(and) 37
b(automak) m(e) i(macros) f(on) f(y) m(our) g(system,) i(usually) e(`) p
Fl(/usr/local/share/aclocal) p Fo -1 w('.) 56 b(The) 36
b(automak) m(e) 94 4621 y(macro) g(it) f(de\014nes) f(is) g(called) p
Fl 36 w(AM_WITH_MPATROL) p Fo(,) e(whic) m(h) i(should) g(b) s(e) g
(added) g(to) h(the) g(libraries) f(section) i(in) 94
4721 y(the) i(`) p Fl(configure.in) p Fo(') d(\014le) j(for) g(y) m
(our) f(pro) 5 b(ject.) 64 b(It) 38 b(tak) m(es) h(one) f(optional) h
(parameter) f(sp) s(ecifying) g(whether) 94 4821 y(mpatrol) f(should) f
(b) s(e) f(included) h(in) g(the) h(pro) 5 b(ject) 37
b(\(`) p Fl(yes) p Fo('\)) f(or) h(not) f(\(`) p Fl(no) p
Fo('\).) 60 b(This) 35 b(can) i(also) g(b) s(e) f(sp) s(eci\014ed) g
(as) 94 4920 y(`) p Fl(threads) p Fo(') 28 b(if) h(y) m(ou) g(wish) f
(to) i(use) e(the) h(threadsafe) g(v) m(ersion) h(of) f(the) g(mpatrol)
g(library) -8 b(.) 40 b(Y) -8 b(ou) 30 b(can) f(o) m(v) m(erride) h
(the) 94 5020 y(v) -5 b(alue) 30 b(of) e(the) h(optional) h(parameter) f
(with) f(the) h(`) p Fl(--with-mpatrol) p Fo(') c(option) k(to) g(the) g
(resulting) g(`) p Fl(configure) p Fo(') 94 5119 y(shell) i(script.) 219
5247 y(If) 47 b(y) m(ou) g(are) h(using) e(the) p Fl
48 w(AM_WITH_MPATROL) p Fo 43 w(automak) m(e) j(macro) f(then) e(y) m
(ou) i(ma) m(y) g(wish) e(to) i(use) f(the) 94 5347 y(`) p
Fl(mpdebug.h) p Fo(') c(header) h(\014le) h(instead) g(of) f(`) p
Fl(mpatrol.h) p Fo('.) 81 b(This) 44 b(ensures) f(that) i(the) p
Fl 45 w(MP_MALLOC\(\)) p Fo 42 w(family) 94 5446 y(of) 28
b(functions) e(are) h(alw) m(a) m(ys) i(de\014ned,) d(ev) m(en) i(if) f
(libmpatrol) g(or) g(libmpallo) s(c) g(are) h(una) m(v) -5
b(ailable.) 40 b(It) 27 b(mak) m(es) h(use) f(of) 94
5546 y(the) p Fl 28 w(HAVE_MPATROL) p Fo 25 w(and) p
Fl 27 w(HAVE_MPALLOC) p Fo 24 w(prepro) s(cessor) f(macros) j(that) f
(are) g(con) m(trolled) h(b) m(y) e(the) h(automak) m(e) 94
5645 y(macro,) k(but) d(in) h(other) h(resp) s(ects) f(b) s(eha) m(v) m
(es) h(in) f(exactly) i(the) f(same) g(w) m(a) m(y) g(as) g(`) p
Fl(mpatrol.h) p Fo('.) p 90 rotate dyy eop
%%Page: 17 23
17 22 bop Fo 94 -116 a(Chapter) 30 b(4:) 41 b(In) m(tegration) 2786
b(17) p Fn 94 365 a(4.2) 69 b(Remo) l(ving) 46 b(mpatrol) p
Fo 219 548 a(Once) 22 b(y) m(ou) h(ha) m(v) m(e) g(ironed) f(out) h
(all) g(of) g(the) f(problems) g(in) g(y) m(our) g(co) s(de) h(with) f
(the) g(help) g(of) h(the) f(mpatrol) h(library) -8 b(,) 94
648 y(there) 41 b(will) g(come) g(a) g(time) f(where) g(y) m(ou) h
(wish) e(to) i(build) f(y) m(our) g(program) g(without) g(an) m(y) h
(of) f(its) h(debugging) 94 747 y(features,) 32 b(either) f(to) g
(impro) m(v) m(e) h(the) f(sp) s(eed) f(that) h(it) g(runs) f(at,) h
(or) g(p) s(erhaps) e(ev) m(en) i(for) g(a) g(release.) 43
b(Cho) s(ose) 31 b(one) 94 847 y(of) d(the) f(follo) m(wing) h(steps) f
(to) h(help) e(y) m(ou) i(remo) m(v) m(e) g(the) f(mpatrol) h(library) e
(from) h(y) m(our) g(program) f(\(y) m(ou) i(only) f(need) 94
946 y(to) 32 b(p) s(erform) d(them) h(if) g(y) m(ou) h(link) m(ed) g(y)
m(our) f(program) g(with) g(the) h(mpatrol) f(library\).) 144
1071 y(1.) 60 b(The) 45 b(quic) m(k) m(est) i(w) m(a) m(y) g(to) f
(remo) m(v) m(e) h(the) e(mpatrol) h(library) f(from) g(y) m(our) h
(application) g(is) g(to) g(link) f(with) 274 1171 y(libmpallo) s(c) 33
b(instead) f(of) f(libmpatrol.) 45 b(This) 31 b(con) m(tains) i
(replacemen) m(ts) g(for) e(all) i(of) f(the) f(mpatrol) h(library) 274
1270 y(functions,) e(either) g(implemen) m(ting) h(memory) e(allo) s
(cation) k(or) c(memory) h(op) s(eration) g(functions) f(with) h(the)
274 1370 y(system) k(C) f(library) -8 b(,) 34 b(or) f(doing) g(nothing)
g(in) g(the) h(functions) e(whic) m(h) h(p) s(erform) f(debugging,) i
(pro\014ling) f(or) 274 1469 y(tracing.) 42 b(This) 28
b(metho) s(d) h(is) h(a) g(v) m(ery) f(quic) m(k) h(w) m(a) m(y) h(to) f
(remo) m(v) m(e) h(the) e(mpatrol) h(library) f(but) g(will) g(not) h
(result) 274 1569 y(in) h(v) m(ery) f(e\016cien) m(t) i(co) s(de.) 144
1694 y(2.) 60 b(The) 28 b(next) g(option) g(is) g(to) h(recompile) g
(all) g(of) f(the) g(source) g(\014les) g(whic) m(h) f(include) h(the) g
(`) p Fl(mpatrol.h) p Fo(') e(header) 274 1793 y(\014le,) 37
b(but) d(this) g(time) i(de\014ne) e(the) p Fl 34 w(NDEBUG) p
Fo 33 w(prepro) s(cessor) g(macro.) 55 b(This) 33 b(automatically) 38
b(disables) d(the) 274 1893 y(rede\014nition) g(of) p
Fl 35 w(malloc\(\)) p Fo(,) e(etc.) j(and) e(prev) m(en) m(ts) h(calls)
h(b) s(eing) e(made) h(to) g(an) m(y) g(mpatrol) g(library) g(func-) 274
1993 y(tions.) 46 b(Ob) m(viously) -8 b(,) 33 b(this) f(option) g(is) g
(the) h(most) f(time-consuming) h(of) f(the) g(t) m(w) m(o,) i(but) d
(will) h(result) g(in) g(the) 274 2092 y(complete) g(remo) m(v) -5
b(al) 32 b(of) f(all) g(references) f(to) i(the) e(mpatrol) h(library)
-8 b(.) 144 2217 y(3.) 60 b(The) 28 b(\014nal) g(option) g(is) g(to) h
(guard) f(all) h(of) f(the) g(mpatrol-sp) s(eci\014c) h(co) s(de) f(in)
g(y) m(our) g(program) f(with) h(a) h(prepro-) 274 2316
y(cessor) 34 b(macro,) h(p) s(ossibly) d(called) p Fl
34 w(HAVE_MPATROL) p Fo(,) f(and) h(then) h(recompiling) g(all) h(of) g
(y) m(our) f(source) g(co) s(de) 274 2416 y(with) 27
b(this) h(macro) f(unde\014ned.) 38 b(This) 26 b(is) h(the) h(b) s(est)
f(option) g(but) g(relies) h(on) f(y) m(ou) h(ha) m(ving) f(originally)
i(made) 274 2516 y(these) i(c) m(hanges) h(when) d(y) m(ou) i(\014rst) e
(started) i(in) m(tegrating) i(the) d(mpatrol) h(library) f(in) m(to) h
(y) m(our) f(program.) 219 2665 y(Note) 42 b(that) g(if) f(y) m(ou) g
(used) f(the) p Fl 41 w(AM_WITH_MPATROL) p Fo 37 w(automak) m(e) i
(macro) g(as) f(detailed) h(in) e(the) h(previous) 94
2765 y(section) 48 b(to) e(build) f(y) m(our) h(application) h(then) e
(y) m(ou) i(should) d(p) s(erform) h(a) h(clean) h(recompilation) g
(using) f(the) 94 2864 y(`) p Fl(--without-mpatrol) p
Fo(') 28 b(option) k(to) h(the) f(`) p Fl(configure) p
Fo(') d(shell) j(script) g(in) f(order) h(to) g(completely) i(remo) m
(v) m(e) f(the) 94 2964 y(mpatrol) e(library) -8 b(.) 219
3088 y(Note) 26 b(also) g(that) g(if) f(y) m(ou) h(used) e(the) h(`) p
Fl(-fcheck-memory-usage) p Fo(') 20 b(option) 26 b(of) f(the) g(GNU) h
(compiler) g(to) f(c) m(hec) m(k) 94 3188 y(all) 31 b(memory) f
(accesses) h(then) e(y) m(ou) h(m) m(ust) g(recompile) h(without) e
(that) i(option) f(in) f(order) h(for) f(y) m(our) h(program) f(to) 94
3288 y(run) g(at) j(a) e(reasonable) h(sp) s(eed.) p
90 rotate dyy eop
%%Page: 18 24
18 23 bop Fo 94 -116 a(18) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 19 25
19 24 bop Fo 94 -116 a(Chapter) 30 b(5:) 41 b(Memory) 31
b(allo) s(cations) 2445 b(19) p Fk 94 365 a(5) 81 b(Memory) 54
b(allo) t(cations) p Fo 219 582 a(In) 24 b(the) g(C) h(and) e(C) p
Fl(++) p Fo 24 w(programming) h(languages) i(there) f(are) g(generally)
g(three) g(di\013eren) m(t) g(t) m(yp) s(es) f(of) h(memory) 94
682 y(allo) s(cation) h(that) f(can) f(b) s(e) e(used) h(to) i(hold) e
(the) h(con) m(ten) m(ts) h(of) f(v) -5 b(ariables.) 39
b(Other) 23 b(programming) g(languages) i(suc) m(h) 94
781 y(as) j(P) m(ascal,) h(BASIC) d(and) g(F) m(OR) -8
b(TRAN) 28 b(also) g(supp) s(ort) d(some) i(of) g(these) g(t) m(yp) s
(es) g(of) g(allo) s(cation,) j(although) d(their) 94
881 y(implemen) m(tations) 32 b(ma) m(y) f(b) s(e) f(sligh) m(tly) i
(di\013eren) m(t.) p Fn 94 1134 a(5.1) 69 b(Static) 45
b(memory) h(allo) t(cations) p Fo 219 1315 a(The) 21
b(\014rst) f(t) m(yp) s(e) i(of) f(memory) h(allo) s(cation) h(is) f
(kno) m(wn) e(as) i(a) p Fi 22 w(static) j(memory) g(al) 5
b(lo) -5 b(c) g(ation) p Fo(,) 26 b(whic) m(h) 21 b(corresp) s(onds) 94
1415 y(to) 39 b(\014le) f(scop) s(e) f(v) -5 b(ariables) 39
b(and) e(lo) s(cal) i(static) g(v) -5 b(ariables.) 63
b(The) 37 b(addresses) g(and) g(sizes) i(of) f(these) g(allo) s
(cations) 94 1515 y(are) 30 b(\014xed) e(at) i(the) f(time) g(of) g
(compilation) p Fh 1498 1482 a(1) p Fo 1566 1515 a(and) f(so) h(they) g
(can) h(b) s(e) e(placed) h(in) g(a) g(\014xed-sized) g(data) g(area) h
(whic) m(h) 94 1614 y(then) k(corresp) s(onds) e(to) j(a) f(section) h
(within) f(the) g(\014nal) f(link) m(ed) h(executable) i(\014le.) 51
b(Suc) m(h) 33 b(memory) h(allo) s(cations) 94 1714 y(are) 29
b(called) h(static) g(b) s(ecause) e(they) h(do) f(not) h(v) -5
b(ary) 28 b(in) g(lo) s(cation) i(or) e(size) h(during) f(the) g
(lifetime) i(of) e(the) h(program.) 219 1837 y(There) g(can) h(b) s(e) f
(man) m(y) h(t) m(yp) s(es) g(of) g(data) g(sections) h(within) e(an) h
(executable) h(\014le;) g(the) f(three) g(most) g(common) 94
1937 y(are) k(normal) f(data,) i(BSS) e(data) h(and) e(read-only) i
(data.) 50 b(BSS) 33 b(data) h(con) m(tains) g(v) -5
b(ariables) 34 b(and) f(arra) m(ys) g(whic) m(h) 94 2036
y(are) 41 b(to) f(b) s(e) g(initialised) h(to) g(zero) f(at) h
(run-time) e(and) h(so) g(is) g(treated) h(as) f(a) g(sp) s(ecial) h
(case,) i(since) d(the) h(actual) 94 2136 y(con) m(ten) m(ts) g(of) e
(the) g(section) i(need) d(not) i(b) s(e) e(stored) h(in) g(the) g
(executable) h(\014le.) 67 b(Read-only) 40 b(data) f(consists) h(of) 94
2235 y(constan) m(t) h(v) -5 b(ariables) 40 b(and) f(arra) m(ys) h
(whose) g(con) m(ten) m(ts) h(are) f(guaran) m(teed) g(not) g(to) g(c) m
(hange) h(when) d(a) i(program) 94 2335 y(is) c(b) s(eing) e(run.) 53
b(F) -8 b(or) 36 b(example,) h(on) e(a) g(t) m(ypical) i(SVR4) e(UNIX) g
(system) g(the) g(follo) m(wing) i(v) -5 b(ariable) 35
b(de\014nitions) 94 2435 y(w) m(ould) c(result) f(in) g(them) g(b) s
(eing) g(placed) h(in) f(the) h(follo) m(wing) h(sections:) p
Fl 334 2562 a(int) 47 b(a;) 525 b(/*) 47 b(BSS) g(data) g(*/) 334
2666 y(int) g(b) h(=) f(1;) 334 b(/*) 47 b(normal) f(data) h(*/) 334
2769 y(const) g(int) g(c) g(=) h(2;) f(/*) g(read-only) e(data) i(*/) p
Fo 219 2893 a(In) c(C) g(the) g(\014rst) g(example) h(w) m(ould) f(b) s
(e) g(considered) g(a) p Fi 44 w(tentative) p Fo 50 w(declaration,) 49
b(and) 42 b(if) i(there) f(w) m(as) h(no) 94 2992 y(subsequen) m(t) 37
b(de\014nition) h(of) g(that) g(v) -5 b(ariable) 39 b(in) e(the) h
(curren) m(t) f(translation) i(unit) e(then) h(it) g(w) m(ould) f(b) s
(ecome) i(a) p Fi 94 3092 a(c) -5 b(ommon) p Fo 39 w(v) g(ariable) 30
b(in) g(the) f(resulting) h(ob) 5 b(ject) 31 b(\014le.) 40
b(When) 29 b(the) h(ob) 5 b(ject) 31 b(\014le) e(gets) i(link) m(ed) f
(with) f(other) h(ob) 5 b(ject) 94 3191 y(\014les,) 37
b(an) m(y) e(common) h(v) -5 b(ariables) 35 b(with) g(the) g(same) h
(name) f(b) s(ecome) g(one) g(v) -5 b(ariable,) 38 b(or) d(tak) m(e) h
(their) f(de\014nition) 94 3291 y(from) 28 b(a) h(non-ten) m(tativ) m
(e) i(de\014nition) c(of) i(that) g(v) -5 b(ariable.) 40
b(In) 28 b(the) g(former) g(case,) i(the) e(v) -5 b(ariable) 29
b(is) f(placed) h(in) f(the) 94 3391 y(BSS) i(section.) 42
b(Note) 32 b(that) f(C) p Fl(++) p Fo 29 w(has) f(no) h(supp) s(ort) d
(for) i(ten) m(tativ) m(e) k(declarations.) 219 3514
y(As) h(all) h(static) h(memory) e(allo) s(cations) i(ha) m(v) m(e) f
(sizes) g(and) f(address) f(o\013sets) i(that) g(are) f(kno) m(wn) g
(at) h(compile-) 94 3613 y(time) 28 b(and) f(are) h(explicitly) h
(initialised,) g(there) f(is) f(v) m(ery) h(little) h(that) f(can) f
(go) h(wrong) f(with) g(them.) 40 b(Data) 29 b(can) f(b) s(e) 94
3713 y(read) j(or) g(written) g(past) g(the) g(end) f(of) h(suc) m(h) g
(v) -5 b(ariables,) 32 b(but) e(that) h(is) g(a) g(common) g(problem) g
(with) f(all) i(memory) 94 3813 y(allo) s(cations) d(and) d(is) g
(generally) h(easy) g(to) g(lo) s(cate) h(in) e(that) h(case.) 41
b(On) 25 b(systems) h(that) h(separate) h(read-only) e(data) 94
3912 y(from) k(normal) h(data,) g(writing) f(to) i(a) e(read-only) h(v)
-5 b(ariable) 31 b(can) g(b) s(e) f(quic) m(kly) h(diagnosed) f(at) i
(run-time.) p Fn 94 4165 a(5.2) 69 b(Stac) l(k) 45 b(memory) g(allo) t
(cations) p Fo 219 4346 a(The) 32 b(second) g(t) m(yp) s(e) h(of) f
(memory) h(allo) s(cation) h(is) f(kno) m(wn) e(as) i(a) p
Fi 33 w(stack) i(memory) g(al) 5 b(lo) -5 b(c) g(ation) p
Fo(,) 36 b(whic) m(h) c(corre-) 94 4446 y(sp) s(onds) k(to) i
(non-static) h(lo) s(cal) f(v) -5 b(ariables) 38 b(and) f(call-b) m
(y-v) -5 b(alue) 40 b(parameter) e(v) -5 b(ariables.) 62
b(The) 37 b(sizes) h(of) f(these) 94 4546 y(allo) s(cations) 30
b(are) e(\014xed) e(at) i(the) g(time) g(of) f(compilation) i(but) d
(their) i(addresses) e(will) i(v) -5 b(ary) 27 b(dep) s(ending) f(on) h
(when) 94 4645 y(the) 35 b(function) g(whic) m(h) f(de\014nes) g(them) h
(is) g(called.) 55 b(Their) 34 b(con) m(ten) m(ts) j(are) e(not) g
(immediately) h(initialised,) i(and) 94 4745 y(m) m(ust) 23
b(b) s(e) f(explicitly) i(initialised) g(b) m(y) e(the) h(programmer) f
(up) s(on) f(en) m(try) i(to) h(the) e(function) h(or) f(when) g(they) h
(b) s(ecome) 94 4845 y(visible) 31 b(in) f(scop) s(e.) 219
4968 y(Suc) m(h) 42 b(memory) h(allo) s(cations) i(are) e(placed) g(in)
g(a) g(system) g(memory) f(area) i(called) g(the) p Fi
43 w(stack) p Fo(,) i(whic) m(h) d(is) 94 5067 y(allo) s(cated) e(p) s
(er) d(pro) s(cess) p Fh 944 5034 a(2) p Fo 1020 5067
a(and) g(generally) i(gro) m(ws) g(do) m(wn) e(in) g(memory) -8
b(.) 67 b(When) 39 b(a) g(function) f(is) h(called,) k(the) 94
5167 y(state) d(of) e(the) g(calling) i(function) e(m) m(ust) g(b) s(e)
f(preserv) m(ed) h(so) g(that) h(when) e(the) h(called) h(function) f
(returns,) h(the) 94 5267 y(calling) j(function) e(can) g(resume) g
(execution.) 71 b(That) 40 b(state) h(is) f(stored) h(on) f(the) g
(stac) m(k,) k(including) c(all) h(lo) s(cal) 94 5366
y(v) -5 b(ariables) 36 b(and) f(parameters.) 56 b(The) 34
b(compiler) i(generates) h(co) s(de) e(to) h(increase) g(the) g(size) g
(of) f(the) h(stac) m(k) h(up) s(on) p 94 5456 1200 4
v Fh 143 5517 a(1) p Fg 219 5548 a(Or) 25 b(more) i(accurately) -6
b(,) 26 b(at) g(link) f(time.) p Fh 143 5614 a(2) p Fg
219 5645 a(Or) g(p) r(er) h(thread) f(on) h(some) g(systems.) p
90 rotate dyy eop
%%Page: 20 26
20 25 bop Fo 94 -116 a(20) 3377 b(mpatrol) 94 365 y(en) m(try) 40
b(to) f(a) h(function,) g(and) f(decrease) h(the) f(size) g(of) h(the) f
(stac) m(k) h(up) s(on) d(exit) j(from) e(a) i(function,) h(as) e(w) m
(ell) h(as) 94 465 y(sa) m(ving) 32 b(and) e(restoring) g(the) h(v) -5
b(alues) 31 b(of) f(registers.) 219 589 y(There) 21 b(are) h(a) g(few) f
(common) h(problems) e(using) h(stac) m(k) i(memory) f(allo) s
(cations,) j(and) c(most) h(generally) h(in) m(v) m(olv) m(e) 94
689 y(uninitialised) 45 b(v) -5 b(ariables,) 49 b(whic) m(h) c(a) g(go)
s(o) s(d) f(compiler) h(can) g(usually) g(diagnose) g(at) g
(compile-time.) 86 b(Some) 94 789 y(compilers) 27 b(also) f(ha) m(v) m
(e) h(options) f(to) g(initialise) i(all) e(lo) s(cal) h(v) -5
b(ariables) 27 b(with) e(a) h(bit) g(pattern) g(so) f(that) i
(uninitialised) 94 888 y(stac) m(k) 32 b(v) -5 b(ariables) 31
b(will) g(cause) g(program) f(faults) g(at) h(run-time.) 41
b(As) 30 b(with) g(static) i(memory) e(allo) s(cations,) j(there) 94
988 y(can) h(b) s(e) f(problems) g(with) g(reading) h(or) f(writing) h
(past) g(the) f(end) g(of) h(stac) m(k) h(v) -5 b(ariables,) 35
b(but) e(as) h(their) f(sizes) i(are) 94 1088 y(\014xed) 30
b(these) h(can) g(usually) f(easily) h(b) s(e) f(lo) s(cated.) p
Fn 94 1345 a(5.3) 69 b(Dynamic) 45 b(memory) g(allo) t(cations) p
Fo 219 1528 a(The) 31 b(last) h(t) m(yp) s(e) g(of) f(memory) h(allo) s
(cation) h(is) f(kno) m(wn) f(as) g(a) p Fi 32 w(dynamic) k(memory) g
(al) 5 b(lo) -5 b(c) g(ation) p Fo(,) 34 b(whic) m(h) d(corre-) 94
1627 y(sp) s(onds) 21 b(to) j(memory) e(allo) s(cated) j(via) p
Fl 23 w(malloc\(\)) p Fo 20 w(or) p Fl 23 w(operator) j(new[]) p
Fo(.) 37 b(The) 22 b(sizes,) j(addresses) d(and) g(con) m(ten) m(ts) 94
1727 y(of) 31 b(suc) m(h) f(memory) g(v) -5 b(ary) 30
b(at) g(run-time) g(and) g(so) g(can) g(cause) h(a) g(lot) g(of) f
(problems) f(when) h(trying) g(to) h(diagnose) g(a) 94
1826 y(fault) i(in) g(a) g(program.) 47 b(These) 32 b(memory) h(allo) s
(cations) h(are) f(called) h(dynamic) f(memory) f(allo) s(cations) j(b)
s(ecause) 94 1926 y(their) c(lo) s(cation) h(and) e(size) h(can) g(v) -5
b(ary) 30 b(throughout) g(the) g(lifetime) i(of) f(a) f(program.) 219
2051 y(Suc) m(h) 44 b(memory) g(allo) s(cations) i(are) f(placed) f(in)
g(a) h(system) f(memory) h(area) g(called) g(the) p Fi
44 w(he) -5 b(ap) p Fo(,) 50 b(whic) m(h) 44 b(is) 94
2150 y(allo) s(cated) 30 b(p) s(er) c(pro) s(cess) h(on) g(some) g
(systems,) h(but) f(on) g(others) g(ma) m(y) h(b) s(e) f(allo) s(cated)
i(directly) f(from) e(the) i(system) 94 2250 y(in) f(scattered) h(blo) s
(c) m(ks.) 40 b(Unlik) m(e) 28 b(memory) e(allo) s(cated) j(on) d(the) h
(stac) m(k,) j(memory) c(allo) s(cated) j(on) d(the) h(heap) g(is) g
(not) 94 2350 y(freed) f(when) e(a) i(function) f(or) h(scop) s(e) f
(is) h(exited) g(and) f(so) g(m) m(ust) h(b) s(e) f(explicitly) i
(freed) e(b) m(y) g(the) h(programmer.) 38 b(The) 94
2449 y(pattern) c(of) g(allo) s(cations) i(and) d(deallo) s(cations) j
(is) d(not) h(guaran) m(teed) h(to) f(b) s(e) g(\(and) f(is) h(not) g
(really) g(exp) s(ected) g(to) 94 2549 y(b) s(e\)) e(linear) h(and) e
(so) i(the) f(functions) f(that) i(allo) s(cate) i(memory) d(from) f
(the) i(heap) e(m) m(ust) h(b) s(e) g(able) g(to) h(e\016cien) m(tly) 94
2648 y(reuse) 39 b(freed) g(memory) g(and) f(resize) i(existing) g
(allo) s(cated) h(memory) e(on) g(request.) 67 b(In) 38
b(some) h(programming) 94 2748 y(languages) 29 b(there) e(is) f(supp) s
(ort) f(for) i(a) p Fi 27 w(garb) -5 b(age) 30 b(c) -5
b(ol) 5 b(le) -5 b(ctor) p Fo(,) 30 b(whic) m(h) c(attempts) i(to) f
(automatically) j(free) d(memory) 94 2848 y(that) 45
b(has) e(had) g(all) h(references) g(to) g(it) g(remo) m(v) m(ed,) k
(but) 43 b(this) g(has) h(traditionally) h(not) f(b) s(een) e(v) m(ery)
i(p) s(opular) 94 2947 y(for) 36 b(programming) g(languages) h(suc) m
(h) e(as) h(C) f(and) g(C) p Fl(++) p Fo(,) i(and) e(has) g(b) s(een) h
(more) f(widely) h(used) f(in) h(functional) 94 3047
y(languages) c(lik) m(e) g(ML) p Fh 816 3014 a(3) p Fo
853 3047 a(.) 219 3171 y(Because) k(dynamic) f(memory) g(allo) s
(cations) i(are) e(p) s(erformed) e(at) j(run-time) e(rather) h(than) g
(compile-time,) 94 3271 y(they) e(are) f(out) m(with) h(the) f(domain) g
(of) g(the) h(compiler) f(and) g(m) m(ust) g(b) s(e) f(implemen) m(ted)
i(in) f(a) g(run-time) g(pac) m(k) -5 b(age,) 94 3371
y(usually) 29 b(as) g(a) h(set) f(of) g(functions) g(within) f(a) i
(link) m(er) f(library) -8 b(.) 40 b(Suc) m(h) 28 b(a) i(pac) m(k) -5
b(age) 31 b(manages) e(the) h(heap) e(in) h(suc) m(h) g(a) 94
3470 y(w) m(a) m(y) f(as) f(to) h(abstract) g(its) f(underlying) e
(structure) i(from) f(the) h(programmer,) g(pro) m(viding) g(a) g
(common) g(in) m(terface) 94 3570 y(to) j(heap) e(managemen) m(t) i(on)
e(di\013eren) m(t) h(systems.) 40 b(Ho) m(w) m(ev) m(er,) 31
b(this) p Fi 29 w(mal) 5 b(lo) -5 b(c) 32 b(libr) -5
b(ary) p Fo 38 w(m) m(ust) 28 b(decide) h(whether) f(to) 94
3670 y(implemen) m(t) 35 b(a) f(fast) h(memory) f(allo) s(cator,) j(a) d
(space-conserving) h(memory) f(allo) s(cator,) k(or) c(a) g(bit) g(of) g
(b) s(oth.) 51 b(It) 94 3769 y(m) m(ust) 32 b(also) g(try) f(to) h(k) m
(eep) f(its) h(o) m(wn) f(in) m(ternal) h(tables) g(to) g(a) f(minim) m
(um) g(so) g(as) h(to) f(conserv) m(e) i(memory) -8 b(,) 32
b(but) e(this) 94 3869 y(means) h(that) g(it) g(has) f(v) m(ery) h
(little) h(capabilit) m(y) g(to) f(diagnose) g(errors) f(if) g(an) m(y)
h(o) s(ccur.) 219 3993 y(In) 40 b(some) i(compiler) g(implemen) m
(tations) g(there) g(is) f(a) g(builtin) g(function) g(called) p
Fl 42 w(alloca\(\)) p Fo(.) 71 b(This) 40 b(is) i(a) 94
4093 y(dynamic) h(memory) g(allo) s(cation) j(function) d(that) h(allo)
s(cates) h(memory) e(from) g(the) g(stac) m(k) i(rather) e(than) g(the)
94 4193 y(heap,) 28 b(and) d(so) i(the) f(memory) g(is) h
(automatically) i(freed) d(when) f(the) h(function) g(that) h(called) h
(it) e(returns.) 38 b(This) 26 b(is) 94 4292 y(a) 31
b(non-standard) f(feature) h(that) g(is) g(not) g(guaran) m(teed) h(to)
f(b) s(e) f(presen) m(t) h(in) f(a) h(compiler,) g(and) f(indeed) g(ma)
m(y) i(not) 94 4392 y(b) s(e) 27 b(p) s(ossible) g(to) i(implemen) m(t)
f(on) f(some) h(systems) p Fh 1762 4359 a(4) p Fo 1799
4392 a(.) 40 b(Ho) m(w) m(ev) m(er,) 30 b(the) e(mpatrol) g(library) f
(pro) m(vides) g(a) h(debugging) 94 4491 y(v) m(ersion) 36
b(of) f(this) h(function) e(\(and) h(a) h(few) f(other) g(related) h
(functions\)) g(on) f(all) h(systems,) g(so) g(that) g(they) f(mak) m
(e) 94 4591 y(use) c(of) f(the) h(heap) f(instead) g(of) h(the) g(stac)
m(k.) 219 4716 y(As) 38 b(can) h(b) s(e) f(seen) h(from) f(the) g(ab) s
(o) m(v) m(e) i(paragraphs,) g(dynamic) f(memory) f(allo) s(cations) j
(are) e(the) f(t) m(yp) s(es) h(of) 94 4815 y(memory) 29
b(allo) s(cations) i(that) e(can) g(cause) g(the) g(most) g(problems) e
(in) i(a) g(program) f(since) h(almost) h(nothing) e(ab) s(out) 94
4915 y(them) 34 b(can) h(b) s(e) e(used) g(b) m(y) h(the) g(compiler) h
(to) f(giv) m(e) i(the) e(programmer) g(useful) f(w) m(arnings) h(ab) s
(out) f(using) h(unini-) 94 5015 y(tialised) 29 b(v) -5
b(ariables,) 29 b(using) e(freed) g(memory) -8 b(,) 29
b(running) c(o\013) j(the) g(end) f(of) g(a) h(dynamically-allo) s
(cated) i(arra) m(y) -8 b(,) 30 b(etc.) 94 5114 y(It) k(is) g(these) g
(t) m(yp) s(es) f(of) h(memory) f(allo) s(cation) j(problems) d(that) h
(the) g(mpatrol) g(library) f(lo) m(v) m(es) i(to) f(get) h(its) f
(teeth) 94 5214 y(in) m(to!) p 94 5365 1200 4 v Fh 143
5425 a(3) p Fg 219 5457 a(There) 26 b(is) h(curren) n(tly) e(at) i
(least) g(one) f(garbage) h(collection) h(pac) n(k) l(age) e(a) n(v) l
(ailable) h(for) g(C) g(and) e(C) p Ff(++) p Fg 27 w(\(see) i(App) r
(endix) d(K) i([Related) 219 5548 y(soft) n(w) n(are],) i(page) e
(213\).) p Fh 143 5614 a(4) p Fg 219 5645 a(Some) g(compilers) h(no) n
(w) f(supp) r(ort) f(v) l(ariable) h(length) g(arra) n(ys) g(whic) n(h)
g(pro) n(vide) f(roughly) h(the) f(same) h(functionalit) n(y) -6
b(.) p 90 rotate dyy eop
%%Page: 21 27
21 26 bop Fo 94 -116 a(Chapter) 30 b(6:) 41 b(Op) s(erating) 30
b(system) h(supp) s(ort) 2182 b(21) p Fk 94 365 a(6) 81
b(Op) t(erating) 53 b(system) g(supp) t(ort) p Fo 219
581 a(Beneath) 40 b(ev) m(ery) g(mallo) s(c) g(library's) f(public) g
(in) m(terface) h(there) g(is) f(the) g(underlying) f(op) s(erating) i
(system's) 94 681 y(memory) 22 b(managemen) m(t) h(in) m(terface.) 40
b(This) 20 b(pro) m(vides) i(features) g(whic) m(h) f(can) h(b) s(e) f
(as) h(simple) g(as) g(giving) g(pro) s(cesses) 94 781
y(the) 33 b(abilit) m(y) h(to) f(allo) s(cate) i(a) e(new) f(blo) s(c) m
(k) h(of) g(memory) f(for) g(themselv) m(es,) j(or) d(it) h(can) g
(o\013er) g(adv) -5 b(anced) 33 b(features) 94 880 y(suc) m(h) f(as) g
(protecting) h(areas) g(of) f(memory) g(from) f(b) s(eing) h(read) g
(or) g(written.) 45 b(Some) 32 b(em) m(b) s(edded) f(systems) h(ha) m
(v) m(e) 94 980 y(no) g(op) s(erating) f(systems) h(and) e(hence) i(no)
f(supp) s(ort) f(for) h(dynamic) g(memory) g(allo) s(cation,) j(and) d
(so) g(the) h(mallo) s(c) 94 1079 y(library) k(m) m(ust) g(instead) g
(allo) s(cate) i(blo) s(c) m(ks) f(of) f(memory) g(from) f(a) h
(\014xed-sized) g(arra) m(y) -8 b(.) 59 b(The) 35 b(mpatrol) h(library)
94 1179 y(can) i(b) s(e) e(built) h(to) h(supp) s(ort) d(all) j(of) f
(the) g(ab) s(o) m(v) m(e) h(t) m(yp) s(es) f(of) h(system,) h(but) d
(the) h(more) g(features) h(an) e(op) s(erating) 94 1279
y(system) 31 b(can) g(pro) m(vide) f(it) h(with,) f(the) h(more) f(it) h
(can) g(do.) 219 1402 y(On) e(op) s(erating) i(systems) f(suc) m(h) f
(as) i(UNIX) f(and) g(Windo) m(ws,) g(all) h(dynamic) f(memory) g(allo)
s(cation) i(requests) 94 1501 y(from) 22 b(a) g(pro) s(cess) g(are) g
(dealt) h(with) f(b) m(y) f(using) h(a) g(feature) h(called) p
Fi 23 w(virtual) i(memory) p Fo(.) 40 b(This) 21 b(means) h(that) g(a) g
(pro) s(cess) 94 1601 y(cannot) 38 b(p) s(erform) e(illegal) j
(requests) e(without) g(them) g(b) s(eing) g(denied,) h(whic) m(h) f
(protects) h(the) f(other) h(running) 94 1700 y(pro) s(cesses) 32
b(and) g(the) g(op) s(erating) g(system) g(from) g(b) s(eing) f
(a\013ected) j(b) m(y) e(suc) m(h) f(errors.) 45 b(Ho) m(w) m(ev) m
(er,) 35 b(on) d(AmigaOS) 94 1800 y(and) c(Net) m(w) m(are) i
(platforms) d(there) i(is) f(no) f(virtual) i(memory) e(supp) s(ort) f
(and) i(so) g(all) h(pro) s(cesses) e(e\013ectiv) m(ely) k(share) 94
1900 y(the) j(same) f(address) f(space) i(as) f(the) g(op) s(erating) h
(system) f(and) f(an) m(y) i(other) f(running) e(pro) s(cesses.) 49
b(This) 32 b(means) 94 1999 y(that) 44 b(one) f(pro) s(cess) g(can) g
(acciden) m(tally) i(write) e(in) m(to) h(the) f(data) h(structures) e
(of) h(another) g(pro) s(cess,) j(usually) 94 2099 y(causing) e(the) e
(other) h(pro) s(cess) f(to) i(fail) f(and) f(bring) g(do) m(wn) g(the)
h(system.) 78 b(In) 42 b(addition,) k(a) d(pro) s(cess) f(whic) m(h) 94
2199 y(allo) s(cates) i(a) d(lot) g(of) g(memory) g(will) g(result) f
(in) h(there) f(b) s(eing) h(less) g(a) m(v) -5 b(ailable) 43
b(memory) d(for) h(other) g(running) 94 2298 y(pro) s(cesses,) 31
b(and) f(in) g(extreme) h(cases) g(the) g(op) s(erating) g(system) f
(itself.) p Fn 94 2551 a(6.1) 69 b(Virtual) 45 b(memory) p
Fi 219 2732 a(Virtual) e(memory) p Fo 51 w(is) e(an) h(op) s(erating) g
(system) f(feature) h(that) g(w) m(as) g(originally) h(used) d(to) i
(pro) m(vide) g(large) 94 2831 y(usable) 31 b(address) f(spaces) h(for)
f(ev) m(ery) i(pro) s(cess) e(on) h(mac) m(hines) g(that) g(had) f(v) m
(ery) h(little) i(ph) m(ysical) e(memory) -8 b(.) 42
b(It) 31 b(is) 94 2931 y(used) d(b) m(y) g(an) g(op) s(erating) g
(system) g(to) h(fo) s(ol) p Fh 1506 2898 a(1) p Fo 1572
2931 a(a) f(running) f(pro) s(cess) g(in) m(to) i(b) s(elieving) g
(that) f(it) h(can) f(allo) s(cate) j(a) d(v) -5 b(ast) 94
3031 y(amoun) m(t) 36 b(of) f(memory) f(for) h(its) g(o) m(wn) g(purp) s
(oses,) f(although) h(whether) f(it) i(is) e(allo) m(w) m(ed) j(to) e
(or) g(not) g(dep) s(ends) e(on) 94 3130 y(the) e(op) s(erating) g
(system) f(and) g(the) h(p) s(ermissions) e(of) h(the) h(individual) f
(user.) 219 3253 y(Virtual) 22 b(memory) f(w) m(orks) g(b) m(y) g
(translating) h(a) g(virtual) f(address) f(\(whic) m(h) i(the) f(pro) s
(cess) g(uses\)) g(in) m(to) h(a) f(ph) m(ysical) 94
3353 y(address) 30 b(\(whic) m(h) g(the) g(op) s(erating) g(system) g
(uses\).) 41 b(It) 30 b(is) g(generally) h(implemen) m(ted) f(via) h(a)
f(piece) h(of) f(hardw) m(are) 94 3452 y(called) 44 b(a) p
Fi 44 w(memory) h(management) g(unit) p Fo(,) i(or) 42
b(MMU.) 79 b(The) 42 b(MMU's) i(primary) e(job) g(is) h(to) h
(translate) g(an) m(y) 94 3552 y(virtual) 28 b(addresses) f(that) h
(are) f(referred) g(to) h(b) m(y) f(mac) m(hine) h(instructions) f(in) m
(to) h(ph) m(ysical) g(addresses) f(b) m(y) g(lo) s(oking) 94
3652 y(up) 34 b(a) h(table) h(whic) m(h) e(is) h(built) f(b) m(y) h
(the) f(op) s(erating) h(system.) 54 b(This) 34 b(table) h(con) m
(tains) h(mappings) e(to) h(and) f(from) p Fi 94 3751
a(p) -5 b(ages) p Fh 309 3718 a(2) p Fo 373 3751 a(rather) 24
b(than) h(b) m(ytes) g(since) g(it) g(w) m(ould) f(otherwise) h(b) s(e)
f(v) m(ery) h(ine\016cien) m(t) h(to) f(handle) f(mappings) g(b) s(et) m
(w) m(een) 94 3851 y(individual) 40 b(b) m(ytes.) 71
b(As) 41 b(a) f(result,) j(ev) m(ery) e(virtual) g(memory) f(op) s
(eration) h(op) s(erates) g(on) f(pages,) k(whic) m(h) c(are) 94
3951 y(indivisible) 31 b(and) f(are) g(alw) m(a) m(ys) i(aligned) f(to)
g(the) g(system) g(page) g(size.) 219 4073 y(Ev) m(en) c(though) f(eac)
m(h) i(pro) s(cess) e(can) h(no) m(w) g(see) g(a) g(h) m(uge) g
(address) f(space,) i(what) e(happ) s(ens) f(when) h(it) h(attempts) 94
4173 y(to) k(allo) s(cate) i(more) d(pages) h(than) f(actually) i(ph) m
(ysically) f(exist,) g(or) f(allo) s(cate) j(an) d(additional) h(page) g
(of) f(memory) 94 4273 y(when) i(all) i(of) e(the) h(ph) m(ysical) g
(pages) g(are) g(in) g(use) f(b) m(y) g(it) i(and) e(other) g(pro) s
(cesses?) 47 b(This) 32 b(problem) g(is) h(solv) m(ed) g(b) m(y) 94
4372 y(the) f(op) s(erating) h(system) f(temp) s(orarily) g(sa) m(ving)
g(one) g(or) g(more) g(of) g(the) g(least-used) h(pages) f(\(whic) m(h)
g(migh) m(t) h(not) 94 4472 y(necessarily) e(b) s(elong) f(that) g
(that) h(pro) s(cess\)) e(to) i(a) f(sp) s(ecial) g(place) h(in) e(the)
h(\014le) g(system) g(called) h(a) p Fi 30 w(swap) i(\014le) p
Fo(,) e(and) 94 4572 y(mapping) 37 b(the) h(new) f(pages) h(to) g(the) f
(ph) m(ysical) h(addresses) f(where) g(the) g(old) h(pages) g(once) g
(resided.) 61 b(The) 37 b(old) 94 4671 y(pages) 31 b(whic) m(h) f(ha) m
(v) m(e) h(b) s(een) p Fi 30 w(swapp) -5 b(e) g(d) 35
b(out) p Fo 39 w(are) c(no) f(longer) g(curren) m(tly) h(accessible,) h
(but) d(their) h(lo) s(cation) i(in) e(the) 94 4771 y(sw) m(ap) h
(\014le) f(is) h(noted) f(in) g(the) h(translation) g(table.) 219
4894 y(Ho) m(w) m(ev) m(er,) f(if) c(one) h(of) f(the) h(pages) g(that)
g(has) f(b) s(een) g(sw) m(app) s(ed) f(out) i(is) g(accessed) g
(again,) i(a) p Fi 27 w(p) -5 b(age) 30 b(fault) p Fo
35 w(o) s(ccurs) 94 4993 y(at) 23 b(the) f(instruction) g(whic) m(h) g
(referred) f(to) h(the) g(address) f(and) g(the) i(op) s(erating) f
(system) g(catc) m(hes) h(this) f(and) f(reloads) 94
5093 y(the) 37 b(page) g(from) e(the) i(sw) m(ap) f(\014le,) i(p) s
(ossibly) d(ha) m(ving) i(to) f(sw) m(ap) h(out) f(another) g(page) h
(to) g(mak) m(e) g(space) g(for) f(the) p 94 5182 1200
4 v Fh 143 5243 a(1) p Fg 219 5274 a(W) -6 b(ell,) 30
b(p) r(erhaps) f(that's) g(to) r(o) g(harsh) g(a) g(w) n(ord,) h(but) e
(it) h(will) h(certainly) f(seem) h(that) e(w) n(a) n(y) h(to) g(a) g
(pro) r(cess) h(running) e(on) h(a) g(32-bit) 219 5366
y(UNIX) f(system) h(with) g(only) g(4) h(megab) n(ytes) f(of) h(ph) n
(ysical) f(memory) -6 b(,) 30 b(and) f(y) n(et) g(it) g(will) i(b) r(e)
e(able) g(to) h(read) f(from) h(and) f(write) h(to) 219
5457 y(o) n(v) n(er) 25 b(4) h(gigab) n(ytes) h(of) f(virtual) g
(memory!) p Fh 143 5522 a(2) p Fg 219 5554 a(The) 20
b(size) i(of) f(a) f(page) h(v) l(aries) g(b) r(et) n(w) n(een) f(op) r
(erating) h(systems) g(and) f(pro) r(cessor) h(arc) n(hitectures,) h
(but) e(they) f(are) i(generally) g(around) 219 5645
y(4) 26 b(or) g(8) g(kilob) n(ytes) g(in) f(size,) i(and) e(are) i(alw)
n(a) n(ys) f(a) g(p) r(o) n(w) n(er) g(of) h(t) n(w) n(o.) p
90 rotate dyy eop
%%Page: 22 28
22 27 bop Fo 94 -116 a(22) 3377 b(mpatrol) 94 365 y(new) 26
b(one.) 40 b(If) 25 b(this) h(o) s(ccurs) g(to) s(o) h(often) f(then) g
(the) g(op) s(erating) h(system) f(can) h(slo) m(w) f(do) m(wn,) h(ha) m
(ving) g(to) f(constan) m(tly) 94 465 y(sw) m(ap) 33
b(in) g(and) f(sw) m(ap) h(out) g(the) g(same) h(pages) f(o) m(v) m(er)
i(and) d(o) m(v) m(er) i(again.) 50 b(Suc) m(h) 32 b(a) h(problem) g
(is) g(called) p Fi 34 w(thr) -5 b(ashing) p Fo 94 565
a(and) 28 b(can) g(only) f(really) i(b) s(e) e(o) m(v) m(ercome) j(b) m
(y) e(using) f(less) h(virtual) g(memory) g(or) f(buying) g(more) h(ph)
m(ysical) g(memory) -8 b(.) 219 695 y(It) 42 b(is) h(also) g(p) s
(ossible) f(to) h(tak) m(e) h(adv) -5 b(an) m(tage) 44
b(of) f(the) f(virtual) h(memory) f(system's) h(in) m(teraction) h(b) s
(et) m(w) m(een) 94 795 y(ph) m(ysical) 28 b(memory) g(and) e(the) i
(\014le) f(system) h(in) f(program) g(co) s(de,) i(since) e(mapping) g
(an) g(existing) i(\014le) e(to) h(memory) 94 894 y(means) 23
b(that) g(the) g(usual) f(\014le) h(I/O) g(op) s(erations) g(can) g(b) s
(e) f(replaced) h(with) f(memory) h(read) f(and) h(write) f(op) s
(erations.) 94 994 y(The) i(op) s(erating) h(system) f(will) h(w) m
(ork) f(out) g(the) h(optim) m(um) f(w) m(a) m(y) h(to) g(read) f(and) g
(write) g(an) m(y) h(bu\013ers) e(and) g(it) i(means) 94
1093 y(that) 38 b(only) f(one) g(cop) m(y) h(of) f(the) g(\014le) g
(exists) g(in) g(b) s(oth) f(ph) m(ysical) h(memory) g(and) f(the) h
(\014le) g(system.) 60 b(Note) 38 b(that) 94 1193 y(this) 26
b(is) f(ho) m(w) p Fi 26 w(shar) -5 b(e) g(d) 30 b(libr) -5
b(aries) p Fh 1137 1160 a(3) p Fo 1202 1193 a(on) 25
b(UNIX) h(platforms) f(are) h(generally) h(implemen) m(ted,) g(with) e
(eac) m(h) i(individual) 94 1293 y(pro) s(cess) j(that) h(uses) f(the) h
(shared) f(library) f(ha) m(ving) i(it) g(mapp) s(ed) e(to) i
(somewhere) g(in) f(its) h(address) e(space.) 219 1423
y(Another) 42 b(ma) 5 b(jor) 41 b(feature) h(of) g(virtual) g(memory) f
(is) h(its) g(abilit) m(y) h(to) f(read) g(protect) g(and) f(write) h
(protect) 94 1523 y(individual) 33 b(pages) h(of) g(pro) s(cess) f
(memory) -8 b(.) 51 b(This) 32 b(means) i(that) g(the) f(op) s(erating)
h(system) g(can) g(con) m(trol) h(access) 94 1622 y(to) c(di\013eren) m
(t) g(parts) f(of) g(the) h(address) e(space) i(for) f(eac) m(h) h(pro)
s(cess,) f(and) g(also) h(means) f(that) h(a) g(pro) s(cess) f(can) g
(read) 94 1722 y(and/or) d(write) f(protect) h(an) f(area) h(of) g
(memory) f(when) f(it) i(w) m(an) m(ts) g(to) g(ensure) e(that) i(it) g
(w) m(on't) f(ev) m(er) h(read) g(or) f(write) 94 1821
y(to) 38 b(it) f(again.) 62 b(If) 36 b(an) h(illegal) i(memory) e
(access) h(is) f(detected) h(then) f(a) p Fi 37 w(signal) p
Fo 47 w(will) g(b) s(e) f(sen) m(t) h(to) h(the) f(pro) s(cess,) 94
1921 y(whic) m(h) c(can) h(either) f(b) s(e) g(caugh) m(t) h(and) e
(handled) h(or) g(will) g(otherwise) h(terminate) g(the) f(pro) s
(cess.) 49 b(Note) 34 b(that) g(as) 94 2021 y(with) 26
b(all) g(virtual) g(memory) g(op) s(erations,) h(this) e(abilit) m(y) i
(to) f(protect) h(memory) e(only) h(applies) g(to) g(pages,) i(so) d
(that) 94 2120 y(it) 31 b(is) g(not) f(p) s(ossible) g(to) h(protect) h
(individual) e(b) m(ytes.) 219 2251 y(Ho) m(w) m(ev) m(er,) g(some) e
(v) m(ersions) f(of) g(UNIX) h(ha) m(v) m(e) g(programmable) f(soft) m
(w) m(are) p Fi 29 w(watch) k(p) -5 b(oints) p Fo 36
w(whic) m(h) 27 b(are) h(imple-) 94 2350 y(men) m(ted) 35
b(at) f(op) s(erating) h(system) f(lev) m(el.) 52 b(These) 34
b(are) g(normally) g(used) f(b) m(y) h(debuggers) g(to) g(w) m(atc) m
(h) h(a) g(sp) s(eci\014ed) 94 2450 y(area) g(of) f(memory) g(that) g
(is) g(exp) s(ected) g(to) h(b) s(e) e(read) h(from) f(or) h(written) g
(to,) h(but) e(can) h(just) g(as) g(easily) h(b) s(e) e(used) 94
2550 y(to) c(implemen) m(t) g(memory) f(protection) i(at) f(b) m(yte) g
(lev) m(el.) 41 b(Unfortunately) -8 b(,) 30 b(as) e(this) h(feature) f
(is) h(implemen) m(ted) f(in) 94 2649 y(soft) m(w) m(are) p
Fh 419 2616 a(4) p Fo 484 2649 a(rather) e(than) g(in) g(hardw) m(are,)
g(w) m(atc) m(h) i(p) s(oin) m(ts) e(tend) f(to) i(b) s(e) f
(incredibly) f(slo) m(w,) j(mainly) e(as) g(a) h(result) f(of) 94
2749 y(the) 31 b(op) s(erating) g(system) g(ha) m(ving) g(to) g(c) m
(hec) m(k) i(ev) m(ery) e(instruction) f(b) s(efore) h(it) g(is) f
(executed.) 43 b(In) 29 b(addition,) j(some) 94 2848
y(UNIX) i(platforms) f(only) g(allo) m(w) i(a) e(certain) h(n) m(um) m
(b) s(er) e(of) h(soft) m(w) m(are) i(w) m(atc) m(h) f(p) s(oin) m(ts) f
(to) h(b) s(e) f(in) g(use) f(at) i(an) m(y) g(one) 94
2948 y(time,) e(so) f(ev) m(en) h(if) f(y) m(our) f(system) h(supp) s
(orts) e(them) i(y) m(ou) g(ma) m(y) h(not) f(b) s(e) f(able) h(to) h
(use) e(them) h(with) g(the) g(mpatrol) 94 3048 y(library) f(if) h
(there) f(are) h(man) m(y) g(memory) f(allo) s(cations) i(in) e(use) h
(at) g(one) f(time.) 219 3178 y(There) 38 b(is) h(also) h(an) e
(additional) i(problem) e(when) g(using) g(w) m(atc) m(h) i(p) s(oin) m
(ts,) h(whic) m(h) d(is) h(due) f(to) h(misaligned) 94
3278 y(reads) d(from) f(memory) -8 b(.) 57 b(These) 35
b(can) h(o) s(ccur) g(with) f(compiler-generated) j(co) s(de) d(or) h
(with) f(optimised) h(library) 94 3377 y(routines) h(where) f(memory) h
(read,) h(mo) m(v) m(e) g(or) f(write) f(op) s(erations) h(ha) m(v) m
(e) h(b) s(een) e(optimised) h(to) g(w) m(ork) g(at) g(w) m(ord) 94
3477 y(lev) m(el) c(rather) d(than) h(b) m(yte) g(lev) m(el.) 43
b(F) -8 b(or) 31 b(example,) h(the) p Fl 31 w(memcpy\(\)) p
Fo 28 w(function) e(w) m(ould) h(normally) g(b) s(e) f(written) g(to) 94
3577 y(cop) m(y) 35 b(memory) f(a) h(b) m(yte) f(at) h(a) f(time,) i
(but) e(on) g(some) g(systems) g(this) g(can) g(b) s(e) g(impro) m(v) m
(ed) g(b) m(y) g(cop) m(ying) h(a) f(w) m(ord) 94 3676
y(at) 40 b(a) f(time.) 67 b(Unfortunately) -8 b(,) 41
b(care) f(has) e(to) i(b) s(e) e(tak) m(en) i(when) d(reading) i(and) f
(writing) h(suc) m(h) g(w) m(ords) f(as) h(the) 94 3776
y(equiv) -5 b(alen) m(t) 33 b(b) m(ytes) f(ma) m(y) f(not) g(b) s(e) g
(aligned) h(on) f(w) m(ord) f(b) s(oundaries.) 42 b(T) -8
b(ec) m(hnically) g(,) 33 b(reading) e(additional) h(b) m(ytes) 94
3875 y(b) s(efore) 37 b(or) g(after) g(a) h(memory) f(allo) s(cation) i
(when) d(they) h(share) g(the) g(same) g(w) m(ord) g(is) g(legal,) j
(but) c(when) g(using) 94 3975 y(w) m(atc) m(h) g(p) s(oin) m(ts) e
(suc) m(h) f(errors) h(will) g(b) s(e) g(pic) m(k) m(ed) h(up.) 51
b(The) 33 b(mpatrol) i(library) e(replaces) i(most) g(of) f(the) g
(memory) 94 4075 y(op) s(eration) 29 b(functions) e(pro) m(vided) h(b) m
(y) g(the) g(system) g(libraries) g(with) g(safer) g(v) m(ersions,) h
(although) f(they) g(ma) m(y) h(not) 94 4174 y(b) s(e) h(as) h
(e\016cien) m(t.) 219 4305 y(An) 41 b(op) s(erating) h(system) g(with) f
(virtual) g(memory) h(is) f(usually) g(going) i(to) f(run) e(ev) m(er) i
(so) g(sligh) m(tly) h(slo) m(w) m(er) 94 4404 y(than) 34
b(an) g(op) s(erating) h(system) f(without) g(it) p Fh
1558 4371 a(5) p Fo 1596 4404 a(,) h(but) f(the) g(adv) -5
b(an) m(tages) 36 b(of) e(virtual) g(memory) g(far) g(out) m(w) m(eigh)
i(the) 94 4504 y(disadv) -5 b(an) m(tages,) 33 b(esp) s(ecially) e
(when) e(used) h(for) g(debugging) h(purp) s(oses.) p
Fn 94 4776 a(6.2) 69 b(Call) 46 b(stac) l(ks) f(and) g(sym) l(b) t(ol) g
(tables) p Fo 219 4964 a(As) 36 b(stated) g(in) g(the) g(section) h(on)
e(stac) m(k) j(memory) d(allo) s(cations) j(\(see) f(Section) g(5.2) f
([Stac) m(k) i(memory) d(allo-) 94 5064 y(cations],) f(page) e(19\),) h
(when) e(a) h(function) f(is) g(called,) i(a) f(cop) m(y) g(of) g(the) g
(caller's) g(state) h(information) f(\(including) p 94
5176 1200 4 v Fh 143 5237 a(3) p Fg 219 5268 a(DLLs) 26
b(on) f(Windo) n(ws) h(platforms.) p Fh 143 5334 a(4) p
Fg 219 5366 a(The) g(op) r(erating) h(system) e(is) i(still) f
(considered) g(soft) n(w) n(are.) p Fh 143 5431 a(5) p
Fg 219 5463 a(Due) 31 b(to) g(the) g(o) n(v) n(erhead) g(of) h(ha) n
(ving) f(to) h(translate) g(ev) n(ery) e(address) i(and) f(sw) n(ap) h
(in) f(and) g(out) g(pages) h(|) f(although) h(memory) 219
5554 y(mapp) r(ed) i(\014les) i(will) g(usually) f(b) r(e) g(more) g
(e\016cien) n(t) g(than) f(using) h(normal) h(\014le) f(op) r(erations)
h(on) f(a) g(system) g(without) g(virtual) 219 5645 y(memory) -6
b(.) p 90 rotate dyy eop
%%Page: 23 29
23 28 bop Fo 94 -116 a(Chapter) 30 b(6:) 41 b(Op) s(erating) 30
b(system) h(supp) s(ort) 2182 b(23) 94 365 y(lo) s(cal) 38
b(v) -5 b(ariables) 37 b(and) f(registers\)) h(is) g(sa) m(v) m(ed) g
(on) g(the) f(stac) m(k) i(so) f(that) g(it) g(can) f(b) s(e) g
(restored) h(when) e(the) i(called) 94 465 y(function) d(returns.) 52
b(On) 33 b(man) m(y) i(op) s(erating) f(systems) h(there) f(is) g(a) p
Fi 35 w(c) -5 b(al) 5 b(ling) 37 b(c) -5 b(onvention) p
Fh 3109 432 a(6) p Fo 3181 465 a(whic) m(h) 34 b(de\014nes) g(the) 94
565 y(la) m(y) m(out) c(of) d(suc) m(h) g(stac) m(k) i(en) m(tries) f
(so) g(that) g(co) s(de) g(compiled) g(in) f(di\013eren) m(t) h
(languages) g(and) f(with) g(di\013eren) m(t) h(com-) 94
664 y(pilers) e(can) h(b) s(e) e(in) m(termixed.) 40
b(This) 25 b(usually) h(sp) s(eci\014es) f(at) i(whic) m(h) f(stac) m
(k) h(o\013sets) g(the) g(stac) m(k) g(p) s(oin) m(ter,) g(program) 94
764 y(coun) m(ter) 37 b(and) e(lo) s(cal) i(v) -5 b(ariables) 36
b(for) f(the) h(calling) h(function) e(can) h(b) s(e) f(found,) h
(although) g(on) f(some) h(pro) s(cessor) 94 863 y(arc) m(hitectures) 27
b(the) e(function) g(calling) h(con) m(v) m(en) m(tions) h(are) f(sp) s
(eci\014ed) e(b) m(y) h(the) g(hardw) m(are) g(and) f(so) h(the) g(op) s
(erating) 94 963 y(system) 31 b(m) m(ust) f(use) g(these) h(instead.)
219 1085 y(On) 38 b(systems) g(that) h(ha) m(v) m(e) h(consisten) m(t) f
(calling) h(con) m(v) m(en) m(tions,) j(it) c(is) f(usually) h(p) s
(ossible) f(to) h(p) s(erform) e(call) 94 1184 y(stac) m(k) p
Fi 39 w(tr) -5 b(ac) g(eb) g(acks) p Fo 46 w(from) 36
b(within) g(the) h(curren) m(t) g(function) g(in) f(order) g(to) i
(determine) f(the) g(stac) m(k) h(of) f(function) 94
1284 y(calls) g(that) g(led) e(to) i(the) f(curren) m(t) f(function.) 57
b(This) 34 b(is) i(extremely) h(useful) e(for) g(debugging) h(purp) s
(oses) e(and) h(is) 94 1384 y(done) 40 b(b) m(y) f(examining) h(the) f
(curren) m(t) g(stac) m(k) i(frame) e(to) h(see) g(if) f(there) h(is) f
(a) h(p) s(oin) m(ter) f(to) h(the) g(previous) e(stac) m(k) 94
1483 y(frame.) 66 b(If) 38 b(there) h(is,) i(then) d(it) h(can) g(b) s
(e) f(follo) m(w) m(ed) i(to) g(\014nd) d(out) i(all) g(of) g(the) g
(state) h(information) e(ab) s(out) h(the) 94 1583 y(calling) 34
b(function.) 44 b(This) 31 b(can) h(b) s(e) f(rep) s(eated) h(un) m
(til) g(there) g(are) g(no) g(more) g(stac) m(k) h(frames) p
Fh 3109 1550 a(7) p Fo 3146 1583 a(.) 45 b(This) 31 b(is) h(generally)
94 1682 y(ho) m(w) f(this) f(information) h(is) f(determined) g(b) m(y)
h(debuggers) f(when) f(a) i(call) g(stac) m(k) h(tracebac) m(k) g(is) f
(requested.) 219 1804 y(In) 23 b(addition) h(to) g(the) f(p) s(oin) m
(ter) h(to) g(the) g(previous) f(stac) m(k) i(frame,) g(the) f(sa) m(v)
m(ed) g(state) h(information) f(also) g(alw) m(a) m(ys) 94
1904 y(con) m(tains) j(the) f(sa) m(v) m(ed) g(program) f(coun) m(ter) h
(register,) i(whic) m(h) d(con) m(tains) h(either) g(the) f(address) g
(of) g(the) h(instruction) 94 2003 y(that) f(p) s(erformed) e(the) h
(function) g(call,) j(or) d(the) h(address) e(of) h(the) g(instruction)
h(at) g(whic) m(h) e(to) i(con) m(tin) m(ue) h(execution) 94
2103 y(when) 40 b(the) i(called) g(function) f(returns) p
Fh 1430 2070 a(8) p Fo 1466 2103 a(.) 72 b(This) 40 b(information) i
(can) f(b) s(e) f(used) g(to) i(iden) m(tify) g(whic) m(h) e(function)
94 2203 y(p) s(erformed) 34 b(the) i(call,) h(since) f(the) f(address) g
(of) g(the) g(instruction) h(m) m(ust) f(lie) h(b) s(et) m(w) m(een) g
(the) f(start) h(and) e(end) h(of) 94 2302 y(one) c(of) g(the) f
(functions) g(in) g(the) h(pro) s(cess.) 219 2424 y(There) 40
b(are) h(sev) m(eral) h(di\013eren) m(t) f(w) m(a) m(ys) g(to) h(p) s
(erform) d(stac) m(k) j(un) m(winding.) 69 b(The) 40
b(\014rst) g(requires) g(compiler) 94 2524 y(supp) s(ort) 34
b(and) h(uses) g(builtin) g(functions) h(to) g(determine) f(the) h
(next) g(stac) m(k) h(frame) e(and) g(the) h(return) f(address.) 94
2623 y(The) 43 b(GNU) h(C) e(compiler,) p Fl 47 w(gcc) p
Fo(,) j(supp) s(orts) c(this) i(but) g(unfortunately) f(the) h(n) m(um)
m(b) s(er) f(of) h(stac) m(k) h(frames) f(to) 94 2723
y(tra) m(v) m(erse) f(m) m(ust) d(b) s(e) h(kno) m(wn) f(at) h
(compile-time) i(rather) e(than) f(run-time.) 69 b(The) 39
b(second) h(metho) s(d) f(requires) 94 2822 y(op) s(erating) e(system) g
(supp) s(ort,) g(with) f(a) h(library) f(of) h(routines) f(pro) m
(vided) h(to) g(p) s(erform) e(call) j(stac) m(k) g(tra) m(v) m(ersal.)
94 2922 y(Unfortunately) -8 b(,) 26 b(suc) m(h) d(routines) g(can) g(b)
s(e) g(quite) g(time) h(consuming) f(and) f(ma) m(y) i(require) f(a) g
(lot) i(of) e(resources,) i(but) 94 3022 y(on) h(the) f(other) h(hand) e
(they) i(are) g(lik) m(ely) g(to) h(b) s(e) d(v) m(ery) i(reliable) h
(at) f(obtaining) g(the) f(necessary) h(information.) 39
b(The) 94 3121 y(mpatrol) e(library) e(can) h(b) s(e) f(built) h(to) g
(supp) s(ort) e(either) i(of) g(these) g(metho) s(ds,) h(with) e(the) p
Fl 36 w(MP_BUILTINSTACK_) 94 3221 y(SUPPORT) p Fo 29
w(and) 30 b(the) p Fl 30 w(MP_LIBRARYSTACK_SUPPORT) p
Fo 24 w(prepro) s(cessor) g(macros.) 219 3343 y(A) k(third) g(w) m(a) m
(y) h(to) g(p) s(erform) e(stac) m(k) j(un) m(winding) d(in) m(v) m
(olv) m(es) j(reading) f(\(or) g(e\013ectiv) m(ely) i(disassem) m
(bling\)) e(the) 94 3442 y(instructions) 27 b(that) f(are) h(b) s(eing)
f(executed) h(in) f(order) g(to) h(determine) f(the) h(size) g(of) f
(the) h(stac) m(k) h(frame) e(b) s(eing) g(used) 94 3542
y(and) 36 b(the) h(address) e(of) i(the) f(instruction) h(at) g(whic) m
(h) f(execution) h(will) g(resume) f(when) f(the) i(function) f
(returns.) 94 3641 y(This) 28 b(can) h(also) g(b) s(e) f(quite) h(a) f
(reliable) i(metho) s(d) e(of) g(obtaining) h(call) h(stac) m(k) g
(information) f(but) e(is) i(only) f(lik) m(ely) i(to) 94
3741 y(b) s(e) f(feasible) h(on) e(a) i(pro) s(cessor) e(arc) m
(hitecture) j(whic) m(h) e(has) f(a) i(v) m(ery) f(simple) g
(instruction) g(set,) h(suc) m(h) e(as) i(a) f(RISC) p
Fh 3838 3708 a(9) p Fo 94 3841 a(arc) m(hitecture.) 43
b(MIPS) 30 b(pro) s(cessors) g(are) g(a) h(go) s(o) s(d) f(example) h
(of) g(this.) 219 3962 y(The) e(\014nal) h(metho) s(d) f(of) h(stac) m
(k) h(un) m(winding) e(requires) g(that) h(the) g(frame) g(p) s(oin) m
(ter) g(and) f(return) g(address) g(are) 94 4062 y(b) s(oth) 36
b(stored) g(on) g(the) g(stac) m(k) i(whenev) m(er) e(a) g(new) g
(function) f(is) h(called.) 59 b(The) 36 b(c) m(hain) h(of) f(frame) g
(p) s(oin) m(ters) g(can) 94 4162 y(then) 27 b(b) s(e) f(follo) m(w) m
(ed) i(do) m(wn) e(the) h(stac) m(k,) i(and) d(the) h(return) e
(addresses) h(can) h(b) s(e) f(read) g(at) i(a) e(giv) m(en) i
(o\013set) g(from) e(the) 94 4261 y(frame) g(p) s(oin) m(ters.) 39
b(This) 24 b(is) i(usually) f(p) s(ossible) g(with) g(CISC) p
Fh 2078 4228 a(10) p Fo 2172 4261 a(pro) s(cessor) g(arc) m(hitectures)
i(that) f(ha) m(v) m(e) g(dedicated) 94 4361 y(call) 34
b(instructions) f(whic) m(h) f(automatically) k(sa) m(v) m(e) e(suc) m
(h) e(information) h(on) f(the) h(stac) m(k,) i(although) e(some) g
(RISC) 94 4461 y(pro) s(cessors) 39 b(also) i(sa) m(v) m(e) g(these) f
(as) f(w) m(ell.) 69 b(Ho) m(w) m(ev) m(er,) 44 b(inline) c(functions) f
(and) g(compiler) h(optimisations) h(can) 94 4560 y(sometimes) c
(result) f(in) f(the) h(frame) g(p) s(oin) m(ter) g(b) s(eing) f
(omitted,) j(usually) e(resulting) g(in) f(an) h(inabilit) m(y) h(to) f
(w) m(alk) 94 4660 y(the) 31 b(stac) m(k.) 219 4781 y(Ho) m(w) m(ev) m
(er,) 42 b(in) 37 b(order) g(to) i(determine) f(this) f(sym) m(b) s
(olic) h(information,) i(it) e(m) m(ust) g(b) s(e) f(p) s(ossible) g
(to) i(\014nd) d(out) 94 4881 y(where) f(the) g(start) h(and) e(end) h
(addresses) f(of) i(all) g(of) f(the) g(functions) g(in) f(the) i(pro) s
(cess) e(are.) 56 b(This) 34 b(can) h(usually) 94 4981
y(only) 28 b(b) s(e) g(read) f(from) h(ob) 5 b(ject) 29
b(\014les,) f(since) g(they) g(con) m(tain) i(the) e(sym) m(b) s(ol) f
(tables) i(that) f(w) m(ere) h(used) e(b) m(y) g(the) i(link) m(er) 94
5080 y(to) 35 b(generate) h(the) f(\014nal) f(executable) h(\014le) g
(for) f(the) g(program.) 52 b(The) 34 b(ob) 5 b(ject) 35
b(\014le's) g(sym) m(b) s(ol) f(tables) h(normally) p
94 5165 1200 4 v Fh 143 5225 a(6) p Fg 219 5257 a(Usually) 26
b(part) f(of) i(the) p Fd 25 w(Applic) l(ation) h(Binary) g(Interfac) l
(e) p Fg(,) f(or) f(ABI.) p Fh 143 5322 a(7) p Fg 219
5354 a(A) f(pro) r(cess) i(also) g(kno) n(wn) e(as) p
Fd 26 w(stack) k(unwinding) p Fg(.) p Fh 143 5419 a(8) p
Fg 219 5451 a(Also) d(kno) n(wn) f(as) i(the) p Fd 25
w(r) l(eturn) i(addr) l(ess) p Fg(.) p Fh 143 5517 a(9) p
Fg 219 5548 a(Reduced) c(Instruction) g(Set) g(Computer.) p
Fh 110 5614 a(10) p Fg 219 5645 a(Complex) h(Instruction) f(Set) h
(Computer.) p 90 rotate dyy eop
%%Page: 24 30
24 29 bop Fo 94 -116 a(24) 3377 b(mpatrol) 94 365 y(con) m(tain) 32
b(information) e(ab) s(out) g(the) h(start) f(address,) g(size,) h
(name) g(and) e(visibilit) m(y) j(of) e(ev) m(ery) h(sym) m(b) s(ol) f
(that) h(w) m(as) 94 465 y(de\014ned,) 37 b(but) f(this) g(dep) s(ends)
e(on) i(the) h(format) f(of) g(the) h(ob) 5 b(ject) 37
b(\014le) f(and) g(if) g(the) g(sym) m(b) s(ol) g(tables) h(ha) m(v) m
(e) h(b) s(een) 94 565 y(stripp) s(ed) 29 b(from) h(the) h(\014nal) f
(executable) i(\014le.) 219 689 y(If) g(the) g(ob) 5
b(ject) 33 b(\014le) f(w) m(as) h(created) g(b) m(y) f(a) h(compiler) g
(then) e(it) i(ma) m(y) g(also) g(con) m(tain) g(debugging) g
(information) 94 789 y(that) j(w) m(as) e(generated) i(b) m(y) e(the) h
(compiler) g(for) f(use) h(with) f(a) h(debugger.) 53
b(Suc) m(h) 33 b(information) i(ma) m(y) g(include) g(a) 94
888 y(mapping) f(of) g(co) s(de) h(addresses) e(to) i(source) g(lines) p
Fh 1772 855 a(11) p Fo 1842 888 a(,) h(and) d(this) h(information) h
(can) f(b) s(e) g(used) f(b) m(y) h(the) h(mpatrol) 94
988 y(library) 30 b(to) i(pro) m(vide) e(more) h(meaningful) f
(information) g(in) g(call) i(stac) m(k) g(tracebac) m(ks.) 219
1112 y(On) k(systems) h(that) h(supp) s(ort) d(shared) i(libraries,) i
(additional) f(w) m(ork) f(m) m(ust) g(b) s(e) g(done) g(to) h
(determine) f(the) 94 1212 y(sym) m(b) s(olic) i(information) f(for) f
(all) i(of) f(the) g(functions) f(whic) m(h) g(ha) m(v) m(e) i(b) s
(een) e(de\014ned) g(in) g(them.) 63 b(The) 37 b(sym) m(b) s(ols) 94
1311 y(for) e(functions) e(that) i(are) g(de\014ned) e(in) h(shared) g
(libraries) g(normally) h(app) s(ear) e(as) i(unde\014ned) d(sym) m(b) s
(ols) i(in) g(the) 94 1411 y(executable) 23 b(\014le) d(for) g(the) h
(program) f(and) g(so) h(m) m(ust) f(b) s(e) g(searc) m(hed) h(in) f
(the) h(system) g(in) f(order) g(to) h(get) h(the) f(necessary) 94
1511 y(information.) 42 b(It) 30 b(is) g(usually) h(necessary) f(to) h
(liaise) h(with) e(the) p Fi 31 w(dynamic) k(linker) p
Fh 2828 1478 a(12) p Fo 2928 1511 a(on) c(man) m(y) h(systems.) p
Fn 94 1767 a(6.3) 69 b(Threads) p Fo 219 1950 a(On) 38
b(systems) h(with) f(virtual) h(memory) -8 b(,) 41 b(suc) m(h) e(as) g
(UNIX) g(and) f(Windo) m(ws,) j(user) d(programs) g(are) h(run) f(as) p
Fi 94 2049 a(pr) -5 b(o) g(c) g(esses) p Fo 44 w(whic) m(h) 34
b(ha) m(v) m(e) h(their) g(o) m(wn) f(address) f(space) i(and) e
(resources.) 52 b(If) 34 b(a) g(pro) s(cess) g(needs) f(to) i(create) h
(sub-) 94 2149 y(pro) s(cesses) f(to) h(p) s(erform) d(other) i(tasks) g
(it) g(m) m(ust) g(call) p Fl 36 w(fork\(\)) p Fo 33
w(or) p Fl 35 w(spawn\(\)) p Fo 33 w(to) g(create) h(new) f(pro) s
(cesses,) h(but) 94 2249 y(these) c(new) f(pro) s(cesses) h(do) f(not) h
(share) f(the) h(same) g(address) e(space) i(or) g(resources) g(as) f
(the) h(paren) m(t) g(pro) s(cess.) 43 b(If) 94 2348
y(pro) s(cesses) 34 b(need) f(to) h(share) f(memory) g(they) g(m) m
(ust) g(either) h(use) f(a) h(message) g(passing) f(in) m(terface) i
(or) e(explicitly) 94 2448 y(mark) e(a) f(range) h(of) g(memory) f(as) g
(shareable.) 219 2572 y(T) -8 b(raditionally) g(,) 37
b(this) d(w) m(as) h(not) f(to) s(o) h(m) m(uc) m(h) g(of) f(a) h
(handicap) e(as) i(parallel) g(pro) s(cessing) f(w) m(as) h(an) f(exp) s
(ensiv) m(e) 94 2672 y(luxury) 27 b(and) g(could) h(only) g(b) s(e) g
(made) g(use) f(of) h(b) m(y) g(the) g(k) m(ernel) h(of) f(suc) m(h) f
(systems.) 40 b(Ho) m(w) m(ev) m(er,) 31 b(with) d(the) g(birth) f(of)
94 2772 y(fast) 32 b(pro) s(cessors) f(and) g(parallel) i(programming,)
e(programs) h(could) f(b) s(e) g(made) g(to) i(run) d(more) h
(e\016cien) m(tly) j(and) 94 2871 y(faster) 28 b(on) f(m) m(ulti-pro) s
(cessor) h(systems) f(b) m(y) h(ha) m(ving) f(more) h(than) f(one) p
Fi 27 w(thr) -5 b(e) g(ad) p Fo 39 w(of) 28 b(con) m(trol.) 41
b(This) 27 b(w) m(as) g(ac) m(hiev) m(ed) 94 2971 y(b) m(y) e(allo) m
(wing) h(pro) s(cesses) e(to) h(ha) m(v) m(e) h(more) e(than) h(one) f
(program) g(coun) m(ter) h(through) f(whic) m(h) g(the) h(pro) s
(cessor) f(could) 94 3070 y(execute) 39 b(instructions,) f(and) e(if) h
(one) g(thread) g(of) g(con) m(trol) h(stalled) f(for) g(a) g
(particular) g(reason) g(then) g(another) 94 3170 y(could) 31
b(con) m(tin) m(ue) h(without) e(stalling) i(the) e(en) m(tire) h(pro) s
(cess.) 219 3294 y(Suc) m(h) k(m) m(ultithreaded) h(programs) f(allo) m
(w) j(parallel) e(programming) g(and) f(implicit) i(shared) e(memory) g
(b) s(e-) 94 3394 y(t) m(w) m(een) g(threads) f(since) g(all) g
(threads) g(in) f(a) h(pro) s(cess) f(share) h(the) g(same) g(address) f
(space) h(and) f(resources.) 51 b(This) 94 3494 y(is) 32
b(similar) f(to) h(op) s(erating) f(systems) g(that) h(ha) m(v) m(e) g
(no) f(virtual) h(memory) -8 b(,) 32 b(suc) m(h) e(as) i(AmigaOS) f
(and) f(Net) m(w) m(are) p Fh 3776 3461 a(13) p Fo 3849
3494 a(,) 94 3593 y(except) j(that) f(once) g(a) g(pro) s(cess) f
(terminates,) h(all) h(threads) e(terminate) h(as) g(w) m(ell) g(and) f
(all) h(of) f(its) h(resources) g(are) 94 3693 y(still) g(reclaimed.)
219 3817 y(Multithreaded) 43 b(programming) g(generally) h(needs) f(no)
f(compiler) i(supp) s(ort,) g(but) e(do) s(es) h(require) g(some) 94
3917 y(primitiv) m(e) 31 b(op) s(erations) f(to) g(b) s(e) f(supp) s
(orted) f(b) m(y) i(the) f(op) s(erating) i(system) e(for) h(a) g
(threads) f(library) g(to) i(call.) 41 b(The) 94 4017
y(functions) 28 b(that) h(are) g(a) m(v) -5 b(ailable) 31
b(in) d(the) g(threads) g(library) g(pro) m(vide) g(the) h(means) f
(for) g(a) h(pro) s(cess) f(to) h(create) h(and) 94 4116
y(destro) m(y) 38 b(threads.) 59 b(There) 37 b(are) g(curren) m(tly) g
(sev) m(eral) h(p) s(opular) d(threads) i(libraries) g(a) m(v) -5
b(ailable,) 41 b(although) c(the) 94 4216 y(POSIX) 30
b(threads) g(standard) f(remains) i(the) f(de\014nitiv) m(e) h
(implemen) m(tation.) 219 4340 y(It) 40 b(is) h(alw) m(a) m(ys) h(imp) s
(ortan) m(t) e(to) h(remem) m(b) s(er) f(when) f(programming) h(a) h(m)
m(ultithreaded) g(application) g(that) 94 4440 y(b) s(ecause) k(all) g
(threads) f(in) g(a) g(pro) s(cess) g(share) g(the) h(same) f(address) g
(space,) k(measures) c(m) m(ust) g(b) s(e) g(tak) m(en) h(to) 94
4539 y(prev) m(en) m(t) 40 b(threads) f(reading) h(and) e(writing) i
(global) g(data) g(in) f(a) h(haphazard) f(fashion.) 67
b(This) 38 b(can) i(either) g(b) s(e) 94 4639 y(done) d(b) m(y) g(lo) s
(c) m(king) i(with) e(semaphores) f(and) h(m) m(utexes,) j(or) d(can) g
(b) s(e) g(p) s(erformed) e(b) m(y) i(using) g(stac) m(k) h(v) -5
b(ariables) 94 4739 y(instead) 37 b(of) g(global) h(v) -5
b(ariables) 37 b(since) g(ev) m(ery) g(thread) f(has) h(its) g(o) m(wn)
f(lo) s(cal) i(stac) m(k.) 61 b(Care) 36 b(m) m(ust) h(b) s(e) f(tak) m
(en) h(to) 94 4838 y(write) 30 b(re-en) m(tran) m(t) g(functions) f(|) g
(i.e.) h(a) f(function) g(will) g(giv) m(e) i(exactly) f(the) g(same) f
(result) g(with) g(one) g(thread) g(as) 94 4938 y(it) i(will) g(with) f
(m) m(ultiple) h(threads) f(running) f(it) i(at) g(the) f(same) h
(time.) 219 5062 y(The) 37 b(mpatrol) i(library) e(can) h(b) s(e) g
(built) f(as) i(a) f(thread-safe) g(library) g(with) g(supp) s(ort) e
(for) h(m) m(ulti-threaded) 94 5162 y(programs.) 86 b(When) 45
b(this) g(library) g(is) g(link) m(ed) h(with) f(y) m(our) g(program,)
50 b(only) 45 b(one) h(thread) f(at) h(a) g(time) g(can) 94
5261 y(allo) s(cate,) 26 b(reallo) s(cate) d(or) e(deallo) s(cate) i
(dynamic) d(memory) -8 b(,) 24 b(or) c(p) s(erform) g(a) h(memory) f
(op) s(eration) i(via) p Fl 21 w(memcpy\(\)) p Fo(,) p
94 5359 1200 4 v Fh 110 5419 a(11) p Fg 219 5451 a(Generally) k(kno) n
(wn) g(as) g(a) g(line) g(n) n(um) n(b) r(er) f(table.) p
Fh 110 5517 a(12) p Fg 219 5548 a(Whic) n(h) g(is) h(the) g(part) f(of)
i(the) e(op) r(erating) i(system) e(that) h(p) r(erforms) h(the) e
(run-time) g(linking) h(of) g(shared) g(libraries.) p
Fh 110 5614 a(13) p Fg 219 5645 a(Where) g(the) f(k) n(ernel) g(is) h
(e\013ectiv) n(ely) g(a) g(single) h(pro) r(cess) f(running) f(all) i
(user) f(programs) h(as) f(threads.) p 90 rotate dyy
eop
%%Page: 25 31
25 30 bop Fo 94 -116 a(Chapter) 30 b(6:) 41 b(Op) s(erating) 30
b(system) h(supp) s(ort) 2182 b(25) p Fl 94 365 a(memset\(\)) p
Fo(,) 37 b(etc.) 61 b(This) 35 b(do) s(es) i(not) g(tak) m(e) h(full) e
(adv) -5 b(an) m(tage) 39 b(of) e(the) g(p) s(oten) m(tial) h
(concurrency) e(in) h(the) g(library) -8 b(,) 94 465
y(but) 30 b(at) h(least) h(it) f(will) g(allo) m(w) g(the) g(debugging)
f(of) h(m) m(ulti-threaded) g(programs.) 219 589 y(The) k(pro) s(cess) f
(of) h(making) h(the) f(mpatrol) g(library) g(thread-safe) g(w) m(as) h
(made) f(more) g(complicated) i(b) m(y) e(the) 94 689
y(fact) i(that) f(the) g(m) m(utexes) g(protecting) h(the) f(library's)
f(data) i(structures) e(had) g(to) h(b) s(e) f(recursiv) m(e,) j(since)
e(some) 94 789 y(of) 30 b(the) g(functions) f(that) i(the) e(library) h
(will) g(call) g(ma) m(y) h(call) p Fl 31 w(malloc\(\)) p
Fo 27 w(and) p Fl 29 w(free\(\)) p Fo 28 w(or) f(an) m(y) g(other) f
(functions) 94 888 y(rede\014ned) 35 b(b) m(y) g(the) g(library) -8
b(.) 56 b(If) 34 b(this) i(w) m(as) f(to) h(happ) s(en) e(with) h
(non-recursiv) m(e) g(m) m(utexes) h(then) f(the) h(recursiv) m(e) 94
988 y(call) k(w) m(ould) e(result) g(in) g(the) h(thread) f(attempting)
h(to) g(lo) s(c) m(k) h(a) e(m) m(utex) h(that) g(it) f(already) h(o) m
(wned.) 65 b(Ho) m(w) m(ev) m(er,) 94 1088 y(implemen) m(ting) 32
b(recursiv) m(e) e(m) m(utexes) i(w) m(as) e(only) h(half) f(the) h
(problem.) 219 1212 y(The) 38 b(other) h(problem) f(with) g(writing) g
(a) h(thread-safe) g(mallo) s(c) h(library) e(is) g(that) h(it) g(m) m
(ust) g(b) s(e) f(initialised) 94 1312 y(b) s(efore) 28
b(the) h(program) f(b) s(ecomes) g(m) m(ulti-threaded.) 41
b(If) 27 b(the) i(library) e(is) i(initialised) g(when) e(there) i(are)
f(m) m(ultiple) 94 1411 y(threads) 39 b(running) e(then) h(one) h
(thread) f(ma) m(y) h(b) s(e) f(attempting) i(to) g(initialise) g(the) f
(m) m(utexes) g(whilst) g(another) 94 1511 y(thread) e(ma) m(y) g(b) s
(e) f(attempting) i(to) f(lo) s(c) m(k) h(an) e(uninitialised) h(m) m
(utex.) 60 b(Ideally) -8 b(,) 39 b(the) e(b) s(est) f(place) i(to) f
(initialise) 94 1611 y(the) 31 b(library) g(w) m(ould) f(b) s(e) g(at) i
(the) f(start) g(of) p Fl 31 w(main\(\)) p Fo 29 w(but) f(there) h(is) g
(curren) m(tly) g(no) g(w) m(a) m(y) g(to) h(do) f(this) f(other) h
(than) 94 1710 y(getting) 38 b(users) c(to) j(explicitly) g(plan) m(t) f
(calls) h(to) f(initialise) h(the) f(library) f(in) g(their) h(co) s
(de.) 56 b(This) 35 b(is) h(not) g(a) g(v) m(ery) 94
1810 y(satisfactory) f(solution) e(if) g(all) h(w) m(e) f(w) m(an) m(t)
h(to) f(do) g(is) g(link) g(in) f(the) h(replacemen) m(t) i(mallo) s(c)
e(library) g(without) g(an) m(y) 94 1910 y(need) e(for) f
(recompilation.) 219 2034 y(F) -8 b(ortunately) g(,) 45
b(there) c(are) g(some) g(w) m(a) m(ys) g(to) g(plan) m(t) g
(initialisation) i(calls) f(b) s(efore) p Fl 40 w(main\(\)) p
Fo 39 w(is) e(called,) 45 b(but) 94 2134 y(they) 38 b(all) g(ha) m(v) m
(e) h(some) f(dra) m(wbac) m(ks.) 62 b(The) 37 b(\014rst) f(w) m(a) m
(y) j(is) e(to) h(use) f(a) h(static) h(\014le-scop) s(e) f
(constructor) g(in) f(C) p Fl(++) p Fo(,) 94 2233 y(whic) m(h) 29
b(will) g(then) f(initialise) i(the) f(m) m(utexes) g(and) f(the) h
(library) f(data) h(structures) f(b) s(efore) g(the) h(co) s(de) f(in) p
Fl 29 w(main\(\)) p Fo 94 2333 a(is) 34 b(executed.) 51
b(Ho) m(w) m(ev) m(er,) 37 b(on) d(man) m(y) f(systems) h(this) f(will)
h(require) f(the) h(\014nal) f(link) h(to) g(b) s(e) f(p) s(erformed) f
(b) m(y) i(the) 94 2433 y(C) p Fl(++) p Fo 30 w(compiler) d(that) g
(built) f(the) g(library) -8 b(.) 41 b(That) 30 b(ma) m(y) h(not) f(b) s
(e) g(desirable) g(or) h(ev) m(en) g(p) s(ossible) e(in) h(man) m(y) h
(cases.) 94 2532 y(Unfortunately) -8 b(,) 36 b(this) d(dra) m(wbac) m
(k) h(app) s(ears) e(in) h(the) h(second) f(metho) s(d,) h(whic) m(h) f
(in) m(v) m(olv) m(es) j(using) d(the) g(GNU) h(C) 94
2632 y(compiler) j(to) g(compile) g(the) f(library) -8
b(.) 58 b(This) 36 b(compiler) g(has) g(an) g(extension) h(whic) m(h) f
(allo) m(ws) h(functions) f(to) h(b) s(e) 94 2731 y(sp) s(eci\014ed) 26
b(as) h(constructors) g(whic) m(h) g(will) g(b) s(e) f(called) i(b) s
(efore) p Fl 26 w(main\(\)) p Fo(,) e(but) g(means) g(that) i(an) m(y) f
(program) f(whic) m(h) 94 2831 y(is) 33 b(link) m(ed) h(with) e(the) h
(resulting) g(library) g(m) m(ust) g(b) s(e) f(link) m(ed) h(with) g
(the) g(GNU) h(C) e(compiler) i(driv) m(er.) 48 b(Ho) m(w) m(ev) m(er,)
94 2931 y(man) m(y) 31 b(systems) f(are) h(no) m(w) f(GNU-based) i
(whic) m(h) e(w) m(ould) g(mean) g(that) h(this) f(w) m(ould) h(happ) s
(en) d(an) m(yw) m(a) m(y) -8 b(.) 219 3055 y(The) 37
b(\014nal) g(w) m(a) m(y) h(of) g(initialising) g(the) g(m) m(utexes) g
(and) f(the) g(library) g(data) h(structures) f(is) g(to) h(plan) m(t) g
(a) g(call) 94 3155 y(to) j(the) f(initialisation) i(routines) e(from) f
(a) h(sp) s(ecial) g(section) h(whic) m(h) e(the) h(system) g(will) g
(call) h(b) s(efore) p Fl 40 w(main\(\)) p Fo 94 3254
a(is) 36 b(called.) 56 b(This) 34 b(section) i(is) f(called) h(the) g
(`) p Fl(.init) p Fo(') e(section) i(on) f(ELF-based) g(platforms,) h
(but) f(ma) m(y) g(exist) h(in) 94 3354 y(another) 27
b(form) e(on) h(other) h(platforms) f(to) s(o.) 40 b(This) 25
b(has) h(the) g(adv) -5 b(an) m(tage) 28 b(that) f(the) f(system) g
(link) m(er) h(can) f(b) s(e) g(used) 94 3454 y(to) 32
b(link) f(the) g(\014nal) g(program,) g(but) g(a) g(p) s(ossible) g
(disadv) -5 b(an) m(tage) 32 b(is) f(that) h(the) f(library) g(ma) m(y)
h(b) s(e) e(initialised) i(to) s(o) 94 3553 y(early) -8
b(,) 39 b(p) s(ossibly) 34 b(b) s(efore) h(the) h(en) m(vironmen) m(t) g
(or) g(\014le) f(streams) h(ha) m(v) m(e) h(b) s(een) e(set) h(up.) 55
b(Y) -8 b(ou) 36 b(ma) m(y) g(\014nd) e(that) i(if) 94
3653 y(one) 31 b(of) g(the) f(ab) s(o) m(v) m(e) i(metho) s(ds) d(do) s
(es) i(not) f(w) m(ork) h(for) f(y) m(ou) g(then) h(p) s(erhaps) d
(another) j(one) f(will.) p 90 rotate dyy eop
%%Page: 26 32
26 31 bop Fo 94 -116 a(26) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 27 33
27 32 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(27) p Fk 94 365 a(7) 81 b(Using) 53
b(mpatrol) p Fo 219 594 a(This) 31 b(c) m(hapter) i(con) m(tains) g(a) g
(general) g(description) f(of) g(all) h(of) g(the) f(features) g(of) g
(mpatrol) h(and) e(ho) m(w) h(to) h(use) 94 693 y(them) j(e\013ectiv) m
(ely) -8 b(.) 60 b(Y) -8 b(ou'll) 37 b(also) f(\014nd) e(a) i(complete)
i(reference) e(for) f(mpatrol) h(in) f(the) h(app) s(endices,) h(but) e
(y) m(ou) 94 793 y(ma) m(y) h(wish) e(to) i(try) f(out) g(the) g
(examples) h(\(see) g(Chapter) e(16) i([Examples],) h(page) f(95\)) g
(and) f(the) g(tutorial) h(\(see) 94 893 y(Chapter) 30
b(17) h([T) -8 b(utorial],) 33 b(page) e(129\)) h(b) s(efore) e
(reading) g(further.) p Fn 94 1154 a(7.1) 69 b(Library) 45
b(b) t(eha) l(viour) p Fo 219 1338 a(Most) h(of) g(the) f(b) s(eha) m
(viour) g(of) g(the) h(mpatrol) f(library) g(can) h(b) s(e) e(con) m
(trolled) j(at) f(run-time) f(via) h(options) 94 1437
y(whic) m(h) 33 b(are) g(read) g(from) f(the) p Fl 33
w(MPATROL_OPTIONS) p Fo 29 w(en) m(vironmen) m(t) h(v) -5
b(ariable.) 49 b(This) 32 b(prev) m(en) m(ts) h(y) m(ou) g(ha) m(ving) g
(to) 94 1537 y(recompile) g(or) e(relink) h(eac) m(h) g(time) g(y) m
(ou) g(w) m(an) m(t) h(to) f(c) m(hange) g(a) g(library) f(setting,) i
(and) e(so) h(mak) m(es) g(it) g(really) g(easy) 94 1637
y(to) d(try) f(out) h(di\013eren) m(t) f(settings) h(to) g(lo) s(cate) h
(a) f(particular) f(bug.) 39 b(Y) -8 b(ou) 29 b(should) e(kno) m(w) h
(ho) m(w) g(to) h(set) g(the) f(v) -5 b(alue) 29 b(of) 94
1736 y(an) i(en) m(vironmen) m(t) g(v) -5 b(ariable) 31
b(on) f(y) m(our) g(system) h(b) s(efore) f(y) m(ou) h(read) f(on.) 219
1862 y(By) i(default,) h(the) f(mpatrol) g(library) g(will) g(attempt) h
(to) f(determine) g(the) g(minim) m(um) g(required) f(alignmen) m(t) 94
1962 y(for) 37 b(an) m(y) g(generic) g(memory) f(allo) s(cation) j
(when) d(it) h(\014rst) f(initialises) i(itself.) 60
b(This) 35 b(ma) m(y) i(b) s(e) f(a\013ected) i(b) m(y) f(the) 94
2062 y(compiler) 29 b(and) e(its) g(settings) i(when) e(the) g(library)
g(w) m(as) h(built) g(but) e(it) j(should) d(normally) i(re\015ect) g
(the) g(minim) m(um) 94 2161 y(alignmen) m(t) 36 b(required) e(b) m(y) g
(the) h(pro) s(cessor) f(on) g(y) m(our) h(system.) 53
b(If) 34 b(y) m(ou) h(w) m(ould) f(prefer) g(a) h(larger) g(\(or) g(p) s
(erhaps) 94 2261 y(ev) m(en) 40 b(smaller\)) h(default) e(alignmen) m
(t) i(y) m(ou) e(ma) m(y) h(c) m(hange) h(it) e(at) i(run-time) d
(using) h(the) h(`) p Fl(DEFALIGN) p Fo(') d(option.) 94
2360 y(The) 31 b(v) -5 b(alue) 31 b(y) m(ou) h(supply) d(m) m(ust) i(b)
s(e) f(in) h(b) m(ytes,) h(m) m(ust) f(b) s(e) f(a) h(p) s(o) m(w) m
(er) g(of) g(t) m(w) m(o,) i(and) d(should) g(not) h(b) s(e) g(larger) g
(that) 94 2460 y(the) h(system) g(page) g(size.) 45 b(If) 31
b(y) m(ou) h(encoun) m(ter) g(bus) e(errors) h(due) g(to) h(misaligned)
g(memory) f(accesses) i(then) f(y) m(ou) 94 2560 y(should) e(increase) h
(this) f(v) -5 b(alue.) 219 2686 y(On) 41 b(systems) g(that) h(ha) m(v)
m(e) h(virtual) f(memory) g(the) f(library) g(will) h(attempt) h(to) f
(write-protect) h(all) g(of) f(its) 94 2785 y(in) m(ternal) 33
b(structures) f(when) f(user) g(co) s(de) h(is) g(b) s(eing) g(run.) 44
b(This) 32 b(ensures) f(that) h(it) h(is) f(nearly) g(imp) s(ossible) g
(for) g(a) 94 2885 y(program) i(to) h(corrupt) f(an) m(y) h(mpatrol) f
(library) g(data.) 53 b(Ho) m(w) m(ev) m(er,) 37 b(unprotecting) e(and)
e(then) h(protecting) i(the) 94 2985 y(structures) 27
b(at) h(ev) m(ery) g(library) f(call) i(has) e(a) g(sligh) m(t) i(o) m
(v) m(erhead) f(so) g(y) m(ou) f(ma) m(y) h(prefer) f(to) h(disable) f
(this) g(b) s(eha) m(viour) 94 3084 y(b) m(y) k(using) f(the) g(`) p
Fl(NOPROTECT) p Fo(') f(option.) 41 b(This) 29 b(has) h(no) h(e\013ect)
h(on) e(systems) g(that) h(ha) m(v) m(e) h(no) e(virtual) h(memory) -8
b(.) 219 3210 y(Usually) 23 b(it) f(is) g(desirable) h(for) f(man) m(y)
g(system) g(library) g(routines) g(to) h(b) s(e) e(protected) i(from) f
(b) s(eing) g(in) m(terrupted) 94 3310 y(b) m(y) 35 b(certain) g
(signals) g(since) g(they) g(ma) m(y) g(themselv) m(es) h(b) s(e) e
(called) h(from) g(signal) g(handlers.) 52 b(If) 34 b(this) g(is) h
(not) g(the) 94 3409 y(case) 25 b(then) e(it) h(ma) m(y) g(b) s(e) e(p)
s(ossible) h(to) h(in) m(terrupt) f(the) g(program) h(from) e(within) h
(suc) m(h) g(routines,) i(p) s(erhaps) d(causing) 94
3509 y(problems) 29 b(if) g(their) h(global) g(v) -5
b(ariables) 30 b(are) g(left) g(in) f(an) g(unde\014ned) e(state.) 42
b(As) 29 b(the) h(mpatrol) f(library) g(replaces) 94
3609 y(some) j(of) f(these) g(system) g(library) g(routines) f(it) i
(is) f(also) g(p) s(ossible) g(to) g(sp) s(ecify) g(that) g(they) g
(are) h(protected) f(from) 94 3708 y(certain) e(in) m(terrupt) f
(signals) g(using) f(the) h(`) p Fl(SAFESIGNALS) p Fo(') e(option.) 40
b(Ho) m(w) m(ev) m(er,) 31 b(this) c(can) i(sometimes) f(result) g(in)
94 3808 y(it) 33 b(b) s(eing) f(hard) f(to) i(in) m(terrupt) f(the) g
(program) g(from) g(the) g(k) m(eyb) s(oard) g(if) g(a) h(lot) g(of) g
(pro) s(cessor) e(time) i(is) g(sp) s(en) m(t) e(in) 94
3908 y(mpatrol) g(routines,) g(whic) m(h) f(is) g(wh) m(y) g(this) g(b)
s(eha) m(viour) g(is) h(disabled) f(b) m(y) g(default) p
Fh 2802 3875 a(1) p Fo 2840 3908 a(.) 219 4034 y(On) 35
b(UNIX) i(platforms,) h(the) p Fl 36 w(fork\(\)) p Fo
35 w(function) e(can) g(cause) h(problems) f(if) g(it) h(is) f(used) f
(to) i(mak) m(e) h(a) e(cop) m(y) 94 4133 y(of) e(the) f(paren) m(t) g
(pro) s(cess) g(without) g(immediately) i(calling) f(one) g(of) f(the) p
Fl 33 w(exec\(\)) p Fo 32 w(family) g(of) g(functions.) 49
b(This) 94 4233 y(is) 38 b(b) s(ecause) g(the) g(c) m(hild) h(pro) s
(cess) e(inherits) h(all) h(of) f(the) g(memory) g(allo) s(cations) i
(of) e(the) g(paren) m(t) g(pro) s(cess,) i(but) 94 4332
y(also) 32 b(inherits) e(the) g(log,) i(pro\014le) e(and) g(trace) h
(\014les) g(as) f(w) m(ell.) 42 b(If) 30 b(b) s(oth) f(the) i(paren) m
(t) f(and) g(c) m(hild) h(pro) s(cesses) f(mak) m(e) 94
4432 y(subsequen) m(t) 35 b(memory) g(allo) s(cations) j(there) d(will)
h(b) s(e) e(m) m(ultiple) i(en) m(tries) g(with) f(the) h(same) f(allo)
s(cation) j(indices) 94 4532 y(written) 31 b(to) g(the) g(log,) h
(pro\014le) f(or) f(trace) i(\014les.) 41 b(This) 30
b(can) h(b) s(e) f(most) h(confusing) f(when) g(pro) s(cessing) g
(these) h(\014les) 94 4631 y(afterw) m(ards!) 39 b(As) 24
b(a) h(w) m(ork) -5 b(around,) 24 b(the) h(mpatrol) f(library) g(will) g
(alw) m(a) m(ys) h(c) m(hec) m(k) h(the) e(curren) m(t) g(pro) s(cess) g
(iden) m(ti\014er) 94 4731 y(ev) m(ery) 30 b(time) f(one) g(of) f(its) h
(functions) f(is) h(called) g(if) g(the) g(`) p Fl(CHECKFORK) p
Fo(') d(option) j(is) f(used) g(and) g(will) h(op) s(en) f(new) g(log,)
94 4831 y(pro\014le) 35 b(or) g(trace) h(\014les) f(if) g(it) h(has) e
(determined) h(that) h(the) f(pro) s(cess) f(has) h(b) s(een) f(fork) m
(ed.) 55 b(If) 35 b(the) g(`) p Fl(CHECKFORK) p Fo(') 94
4930 y(option) i(is) e(not) h(used) f(then) h(a) g(call) h(to) p
Fl 36 w(__mp_reinit\(\)) p Fo 32 w(should) e(b) s(e) g(added) g(as) h
(the) g(\014rst) f(function) g(call) i(in) 94 5030 y(the) 31
b(c) m(hild) g(pro) s(cess) f(in) g(order) g(to) h(duplicate) g(the) f
(b) s(eha) m(viour) g(of) h(the) f(`) p Fl(CHECKFORK) p
Fo(') f(option.) 219 5156 y(On) 34 b(UNIX) g(systems,) i(the) f(usual) f
(w) m(a) m(y) i(for) e(mallo) s(c) h(libraries) g(to) g(allo) s(cate) i
(memory) e(from) f(the) g(pro) s(cess) 94 5255 y(heap) j(is) f(through)
g(the) p Fl 36 w(sbrk\(\)) p Fo 35 w(system) h(call.) 60
b(This) 35 b(allo) s(cates) k(memory) d(from) g(a) h(con) m(tiguous) h
(heap,) g(but) 94 5355 y(has) 33 b(the) g(disadv) -5
b(an) m(tage) 34 b(in) f(that) g(other) g(library) f(functions) h(ma) m
(y) g(also) h(allo) s(cate) h(memory) d(using) h(the) g(same) 94
5455 y(function,) d(th) m(us) g(creating) h(holes) g(in) e(the) i
(heap.) 40 b(This) 29 b(is) h(not) g(a) h(problem) e(for) h(mpatrol,) h
(but) e(y) m(ou) h(ma) m(y) h(ha) m(v) m(e) p 94 5553
1200 4 v Fh 143 5614 a(1) p Fg 219 5645 a(In) 25 b(mpatrol) h(release) h
(1.0) g(it) f(w) n(as) h(enabled) e(b) n(y) g(default.) p
90 rotate dyy eop
%%Page: 28 34
28 33 bop Fo 94 -116 a(28) 3377 b(mpatrol) 94 365 y(a) 29
b(suspicion) g(that) g(y) m(our) f(bug) g(is) h(due) f(to) h(a) g
(function) g(from) f(another) h(library) f(corrupting) g(y) m(our) g
(data) i(so) f(y) m(ou) 94 465 y(ma) m(y) k(wish) f(to) g(use) g(the) h
(`) p Fl(USEMMAP) p Fo(') d(option.) 47 b(This) 31 b(is) h(only) h(a) m
(v) -5 b(ailable) 34 b(on) e(systems) g(that) h(ha) m(v) m(e) g(the) p
Fl 33 w(mmap\(\)) p Fo 94 565 a(system) 38 b(call) g(and) e(allo) m(ws)
j(mpatrol) e(to) h(allo) s(cate) i(all) e(of) f(its) g(memory) g(from) g
(a) g(part) g(of) g(the) h(pro) s(cess) e(heap) 94 664
y(that) 26 b(is) g(non-con) m(tiguous) g(\(i.e.) h(eac) m(h) g(call) f
(to) p Fl 26 w(mmap\(\)) p Fo 24 w(ma) m(y) g(return) e(a) i(blo) s(c) m
(k) g(of) g(memory) f(that) h(is) f(completely) 94 764
y(unrelated) 36 b(to) g(that) g(returned) e(b) m(y) h(the) h(previous) f
(call\).) 57 b(It) 36 b(ma) m(y) g(also) g(b) s(e) f(required) g(on) g
(some) h(systems) f(in) 94 863 y(order) 30 b(for) h(the) f(mpatrol) h
(library) f(to) h(implemen) m(t) g(memory) f(protection.) 219
989 y(Beginning) 37 b(with) f(release) i(1.3.3,) i(the) c(mpatrol) h
(library) f(no) m(w) h(allo) s(cates) h(its) f(in) m(ternal) g(memory) g
(in) f(the) 94 1088 y(opp) s(osite) 23 b(w) m(a) m(y) g(to) g(user) e
(memory) h(on) g(UNIX) g(systems) h(that) f(supp) s(ort) f(the) p
Fl 22 w(mmap\(\)) p Fo 20 w(system) h(call.) 40 b(This) 21
b(means) 94 1188 y(that) 39 b(b) m(y) f(default,) i(user) e(memory) f
(is) i(allo) s(cated) h(with) p Fl 37 w(sbrk\(\)) p Fo
36 w(whereas) e(in) m(ternal) h(memory) f(is) g(allo) s(cated) 94
1288 y(with) p Fl 31 w(mmap\(\)) p Fo(,) 30 b(and) h(this) g(b) s(eha) m
(viour) g(is) g(rev) m(ersed) g(when) f(the) i(`) p Fl(USEMMAP) p
Fo(') d(option) j(is) f(used.) 42 b(This) 31 b(w) m(as) g(done) 94
1387 y(to) 36 b(segregate) i(user) c(memory) h(from) g(in) m(ternal) g
(memory) -8 b(,) 37 b(and) e(w) m(as) g(esp) s(ecially) i(required) d
(for) h(the) p Fl 35 w(mptrace) p Fo 94 1487 a(command's) c(graphical) g
(displa) m(y) -8 b(.) 219 1612 y(The) 25 b(`) p Fl(CHECK) p
Fo(') g(option) g(allo) m(ws) i(y) m(ou) f(to) g(sp) s(ecify) f(that) h
(ev) m(ery) h(time) f(an) f(mpatrol) h(library) f(function) g(is) h
(called) 94 1712 y(the) 40 b(library) e(will) i(automatically) i(c) m
(hec) m(k) e(the) g(freed) e(memory) h(and) g(o) m(v) m(er\015o) m(w) h
(bu\013ers) e(of) h(ev) m(ery) h(memory) 94 1812 y(allo) s(cation,) d
(although) d(this) g(can) g(slo) m(w) g(program) f(execution) i(do) m
(wn,) f(esp) s(ecially) h(if) f(y) m(ou) g(susp) s(ect) f(the) g(error)
94 1911 y(y) m(ou) 39 b(are) f(lo) s(oking) h(for) f(o) s(ccurs) f(at) i
(the) f(1000th) i(memory) e(allo) s(cation,) k(for) c(example.) 64
b(Y) -8 b(ou) 38 b(can) g(therefore) 94 2011 y(use) e(the) g(`) p
Fl(CHECK) p Fo(') f(option) i(to) f(sp) s(ecify) g(a) g(range) h(of) f
(memory) g(allo) s(cations) i(at) e(whic) m(h) g(the) g(mpatrol) g
(library) 94 2111 y(will) e(automatically) h(c) m(hec) m(k) f(the) f
(freed) g(memory) f(and) g(o) m(v) m(er\015o) m(w) i(bu\013ers.) 47
b(All) 33 b(other) g(allo) s(cations) i(that) e(fall) 94
2210 y(outside) c(this) f(range) h(will) g(not) f(b) s(e) g(c) m(hec) m
(k) m(ed.) 42 b(Y) -8 b(ou) 29 b(can) f(also) i(sp) s(ecify) d(an) i
(optional) g(frequency) f(at) h(whic) m(h) f(this) 94
2310 y(c) m(hec) m(king) f(should) d(b) s(e) g(p) s(erformed.) 38
b(No) 25 b(suc) m(h) g(c) m(hec) m(king) i(is) e(p) s(erformed) e(b) m
(y) i(default) g(in) g(mpatrol) g(release) h(1.4.0) 94
2409 y(and) k(on) m(w) m(ards) h(|) f(y) m(ou) g(m) m(ust) h(sp) s
(ecify) f(`) p Fl(CHECK=-) p Fo(') f(to) i(get) g(the) g(original) g(b)
s(eha) m(viour.) 219 2535 y(On) g(UNIX) h(systems,) g(the) g(mpatrol) g
(library) f(can) h(also) h(in) m(v) m(ok) m(e) h(the) p
Fl 32 w(mpedit) p Fo 30 w(command) d(to) i(edit) f(source) 94
2634 y(\014les) j(that) g(sho) m(w) g(up) e(in) i(an) m(y) g(w) m
(arnings) f(or) h(error) f(messages) i(that) f(it) g(generates.) 55
b(This) 34 b(can) h(only) g(happ) s(en) 94 2734 y(if) f(the) f
(diagnostic) i(message) f(can) g(b) s(e) f(traced) h(bac) m(k) g(to) g
(a) f(sp) s(eci\014c) g(source) h(line) g(in) f(the) g(program;) i(in) e
(man) m(y) 94 2834 y(cases) e(this) e(is) g(not) h(p) s(ossible.) 40
b(If) 29 b(editing) h(the) f(\014les) h(is) f(not) h(required,) f(a) g
(con) m(text) j(listing) e(of) f(the) h(appropriate) 94
2933 y(source) h(line) f(can) h(b) s(e) e(generated) j(instead.) 40
b(The) 30 b(`) p Fl(EDIT) p Fo(') g(option) g(sp) s(eci\014es) g(that) h
(\014les) f(are) h(to) f(b) s(e) g(edited) h(and) 94
3033 y(the) f(`) p Fl(LIST) p Fo(') f(option) g(sp) s(eci\014es) g
(that) h(a) g(con) m(text) h(listing) f(is) f(to) h(b) s(e) f
(generated.) 41 b(These) 29 b(options) h(are) f(m) m(utually) 94
3133 y(exclusiv) m(e.) 219 3258 y(If) h(the) g(mpatrol) g(library) g
(that) h(w) m(as) f(built) g(for) g(y) m(our) g(system) g(supp) s(orts)
e(reading) i(sym) m(b) s(olic) h(information) 94 3358
y(from) 21 b(a) h(program's) f(executable) i(\014le,) h(but) c(it) i
(cannot) g(lo) s(cate) h(the) f(executable) h(\014le,) g(or) f(y) m(ou)
f(wish) g(to) h(sp) s(ecify) f(an) 94 3457 y(alternativ) m(e,) 35
b(y) m(ou) d(can) g(use) f(the) g(`) p Fl(PROGFILE) p
Fo(') f(option) i(to) g(do) g(this.) 44 b(All) 32 b(this) f(do) s(es) g
(is) h(instruct) f(the) h(mpatrol) 94 3557 y(library) 42
b(to) h(read) f(sym) m(b) s(ols) f(from) h(this) g(\014le) g(instead.)
76 b(Note) 43 b(that) f(on) g(systems) g(that) h(supp) s(ort) d
(dynamic) 94 3656 y(linking,) 28 b(the) e(library) g(can) g(also) h
(read) f(sym) m(b) s(ols) f(from) h(a) g(dynamically) h(link) m(ed) f
(executable) i(\014le) e(that) h(has) f(had) 94 3756
y(its) 31 b(normal) g(sym) m(b) s(ol) f(table) h(stripp) s(ed.) 219
3881 y(Finally) -8 b(,) 34 b(a) e(list) g(of) g(all) h(of) f(the) g
(recognised) h(options) f(in) f(the) h(mpatrol) g(library) g(can) g(b) s
(e) f(displa) m(y) m(ed) h(to) h(the) 94 3981 y(standard) j(error) h
(\014le) g(stream) g(b) m(y) f(using) h(the) g(`) p Fl(HELP) p
Fo(') f(option.) 60 b(This) 36 b(will) h(not) g(a\013ect) h(the) f
(settings) h(of) f(the) 94 4081 y(library) 30 b(in) h(an) m(y) f(w) m
(a) m(y) -8 b(,) 32 b(so) f(y) m(ou) g(should) e(b) s(e) h(able) h(to) g
(use) f(other) g(options) h(at) g(the) g(same) g(time.) p
Fn 94 4340 a(7.2) 69 b(Logging) 45 b(and) g(tracing) p
Fo 219 4524 a(If) 36 b(y) m(ou) h(w) m(ould) g(lik) m(e) h(to) f(see) g
(a) g(complete) i(log) e(of) g(all) h(of) f(the) f(memory) h(allo) s
(cations,) k(reallo) s(cations) e(and) 94 4623 y(deallo) s(cations) 23
b(p) s(erformed) c(b) m(y) i(y) m(our) f(program,) j(use) d(the) h(`) p
Fl(LOGALL) p Fo(') e(option.) 38 b(This) 20 b(pro) m(vides) g(detailed)
i(tracing) 94 4723 y(for) 31 b(eac) m(h) h(of) f(the) g(mpatrol) g
(library) g(functions,) f(and) h(a) g(full) g(description) f(of) h(the)
g(format) h(of) f(suc) m(h) f(tracing) i(is) 94 4823
y(giv) m(en) i(in) e(Example) h(1) f(\(see) i(Section) f(16.1) h
([Example) f(1],) h(page) f(96\).) 48 b(Alternativ) m(ely) -8
b(,) 36 b(y) m(ou) d(ma) m(y) g(select) h(one) 94 4922
y(or) e(more) h(t) m(yp) s(es) f(of) g(functions) f(to) i(b) s(e) e
(traced) i(using) e(the) i(`) p Fl(LOGALLOCS) p Fo(',) d(`) p
Fl(LOGREALLOCS) p Fo(',) g(`) p Fl(LOGFREES) p Fo(') h(and) 94
5022 y(`) p Fl(LOGMEMORY) p Fo(') h(options) h(if) h(y) m(ou) f(feel) h
(that) g(the) g(log) g(\014le) f(is) h(to) s(o) g(large) g(when) e(`) p
Fl(LOGALL) p Fo(') g(is) i(used.) 48 b(By) 34 b(default) 94
5122 y(all) e(diagnostics) f(from) f(the) g(mpatrol) h(library) f(get) h
(sen) m(t) g(to) g(`) p Fl(mpatrol.log) p Fo(') d(in) i(the) g(curren) m
(t) g(directory) -8 b(,) 32 b(but) 94 5221 y(this) f(can) f(b) s(e) g
(c) m(hanged) h(using) e(the) i(`) p Fl(LOGFILE) p Fo(') e(option.) 41
b(In) 29 b(fact,) j(y) m(ou) e(can) h(also) g(sp) s(ecify) f(a) h
(directory) f(where) 94 5321 y(all) e(log) h(\014les) e(from) f(the) h
(mpatrol) h(library) e(will) i(get) g(placed) g(b) m(y) e(setting) j
(the) p Fl 27 w(LOGDIR) p Fo 25 w(en) m(vironmen) m(t) f(v) -5
b(ariable.) 219 5446 y(On) 25 b(systems) g(that) h(supp) s(ort) e(it,) j
(ev) m(ery) f(log) h(en) m(try) f(also) g(con) m(tains) h(a) f(call) g
(stac) m(k) h(tracebac) m(k) h(that) e(ma) m(y) g(also) 94
5546 y(include) 31 b(the) g(names) f(of) h(the) g(sym) m(b) s(ols) f
(that) i(app) s(ear) e(on) g(the) h(call) h(stac) m(k.) 43
b(If) 30 b(the) h(ob) 5 b(ject) 32 b(\014le) e(access) i(library) 94
5645 y(that) k(mpatrol) f(w) m(as) g(built) f(with) g(has) h(supp) s
(ort) d(for) j(reading) g(line) f(n) m(um) m(b) s(er) g(tables) h(from)
f(ob) 5 b(ject) 36 b(\014les) e(then) p 90 rotate dyy
eop
%%Page: 29 35
29 34 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(29) 94 365 y(the) 35 b(`) p Fl(USEDEBUG) p
Fo(') e(option) h(will) h(also) g(try) f(to) h(determine) g(the) f
(\014le) h(name) f(and) g(line) g(n) m(um) m(b) s(er) f(for) h(eac) m
(h) i(en) m(try) 94 465 y(in) e(the) h(call) h(stac) m(k,) h(but) c
(only) i(if) f(the) g(ob) 5 b(ject) 36 b(\014les) e(con) m(tain) h(the)
g(relev) -5 b(an) m(t) 36 b(debugging) e(information.) 53
b(This) 94 565 y(information) 32 b(will) g(only) f(b) s(e) g(a) m(v) -5
b(ailable) 33 b(b) s(efore) e(program) g(termination) h(and) f(so) g
(an) m(y) h(call) g(stac) m(k) h(tracebac) m(ks) 94 664
y(that) e(app) s(ear) f(after) g(the) g(library) g(summary) f(will) h
(not) h(b) s(e) e(displa) m(y) m(ed) i(with) f(their) g(corresp) s
(onding) f(\014le) h(name) 94 764 y(and) e(line) g(n) m(um) m(b) s(er.)
39 b(This) 27 b(option) h(will) h(also) f(slo) m(w) h(do) m(wn) e
(program) h(execution) h(since) g(a) f(searc) m(h) g(through) g(the) 94
863 y(line) k(n) m(um) m(b) s(er) e(tables) i(will) f(ha) m(v) m(e) i
(to) e(b) s(e) g(made) g(ev) m(ery) h(time) g(a) f(call) i(stac) m(k) g
(is) e(displa) m(y) m(ed.) 43 b(Alternativ) m(ely) -8
b(,) 35 b(the) p Fl 94 963 a(mpsym) p Fo 29 w(command) 30
b(ma) m(y) h(b) s(e) f(used) f(to) i(pro) s(cess) f(an) g(mpatrol) h
(log) g(\014le) f(with) g(a) h(debugger) f(in) g(order) g(to) g(obtain)
94 1063 y(sym) m(b) s(ol) h(names) f(and) g(source) g(lev) m(el) i
(information) f(for) f(an) m(y) h(call) g(stac) m(ks.) 219
1245 y(Because) c(the) p Fl 26 w(alloca\(\)) p Fo(,) p
Fl 24 w(strdupa\(\)) p Fo 23 w(and) p Fl 25 w(strndupa\(\)) p
Fo 22 w(functions) e(automatically) k(free) c(their) h(allo) s(ca-) 94
1345 y(tions) k(when) e(the) h(calling) i(function) d(returns,) h(the) g
(log) h(en) m(tries) g(for) f(these) g(t) m(yp) s(es) g(of) g(memory) g
(allo) s(cation) j(are) 94 1445 y(sligh) m(tly) 37 b(di\013eren) m(t.)
57 b(The) 35 b(actual) i(memory) f(allo) s(cation) i(will) e(ha) m(v) m
(e) h(an) e(en) m(try) h(similar) g(to) p Fl 36 w(malloc\(\)) p
Fo(,) f(etc.,) 94 1544 y(but) d(the) h(memory) g(deallo) s(cation) h
(will) f(b) s(e) f(mark) m(ed) h(as) g(b) s(eing) f(done) g(b) m(y) p
Fl 33 w(alloca\(\)) p Fo 30 w(and) g(will) h(o) s(ccur) f(at) i(the) 94
1644 y(next) h(call) g(to) g(an) f(mpatrol) g(library) g(function) g
(after) g(the) h(calling) g(function) f(has) g(returned.) 50
b(Ho) m(w) m(ev) m(er,) 38 b(an) m(y) 94 1743 y(suc) m(h) 29
b(allo) s(cations) h(that) f(are) g(explicitly) h(deallo) s(cated) g
(with) e(the) p Fl 29 w(dealloca\(\)) p Fo 26 w(function) g(will) g(b) s
(e) g(mark) m(ed) h(as) 94 1843 y(b) s(eing) h(done) h(b) m(y) p
Fl 30 w(dealloca\(\)) p Fo(.) 219 2026 y(The) e(mpatrol) g(library) g
(will) h(alw) m(a) m(ys) h(try) e(to) h(displa) m(y) f(as) h(m) m(uc) m
(h) f(useful) f(information) i(as) f(p) s(ossible) g(in) g(this) 94
2125 y(log) h(\014le,) f(and) f(will) h(alw) m(a) m(ys) h(displa) m(y) e
(a) h(summary) e(of) i(library) f(settings) h(and) f(statistics) i
(when) e(y) m(our) g(program) 94 2225 y(terminates) k(successfully) -8
b(.) 41 b(If) 30 b(y) m(ou) h(don't) g(get) g(this) g(then) f(y) m(our)
g(program) h(did) e(not) i(call) p Fl 32 w(exit\(\)) p
Fo 29 w(and) e(either) 94 2325 y(called) p Fl 34 w(abort\(\)) p
Fo 30 w(or) k(w) m(as) f(terminated) h(b) m(y) f(the) h(op) s(erating) g
(system) f(instead.) 47 b(In) 32 b(suc) m(h) g(cases,) i(either) f(use)
f(a) 94 2424 y(debugger) 26 b(to) g(see) h(where) e(y) m(our) g
(program) h(crashed) f(or) h(use) f(the) h(`) p Fl(LOGALL) p
Fo(') e(option) i(to) h(see) f(the) g(last) g(successful) 94
2524 y(library) k(call) i(in) e(the) h(log) g(\014le) g(so) f(that) h
(y) m(ou) g(ha) m(v) m(e) h(a) e(rough) g(idea) h(of) g(where) e(y) m
(our) i(program) f(crashed.) 219 2707 y(It) 44 b(is) f(also) h(p) s
(ossible) f(to) i(get) f(mpatrol) g(to) g(write) g(more) f(summary) g
(information) h(to) g(the) f(log) i(\014le) e(af-) 94
2806 y(ter) 38 b(it) f(writes) g(out) g(its) h(settings) g(and) e
(statistics) j(at) e(program) g(termination.) 61 b(Use) 38
b(the) f(`) p Fl(SHOWFREED) p Fo(') e(and) 94 2906 y(`) p
Fl(SHOWUNFREED) p Fo(') f(options) j(to) g(displa) m(y) g(a) f(list) h
(of) g(freed) f(and) g(unfreed) f(memory) h(allo) s(cations.) 61
b(The) 35 b(former) 94 3005 y(will) f(only) f(b) s(e) g(displa) m(y) m
(ed) h(if) f(the) g(`) p Fl(NOFREE) p Fo(') f(option) i(is) f(used,) g
(but) g(the) g(latter) i(can) e(b) s(e) g(useful) f(for) h(detecting) 94
3105 y(memory) i(leaks.) 55 b(The) 34 b(`) p Fl(SHOWFREE) p
Fo(') f(option) i(can) g(b) s(e) f(used) g(to) i(displa) m(y) f(a) g
(summary) e(of) i(an) m(y) g(free) g(memory) 94 3205
y(blo) s(c) m(ks.) 219 3387 y(The) 24 b(`) p Fl(SHOWMAP) p
Fo(') g(option) h(will) g(displa) m(y) g(a) h(memory) e(map) h(of) g
(the) g(heap) g(that) g(w) m(as) g(v) -5 b(alid) 25 b(when) f(the) h
(pro) s(cess) 94 3487 y(terminated,) 31 b(and) e(the) h(`) p
Fl(SHOWSYMBOLS) p Fo(') d(option) j(will) g(displa) m(y) f(an) m(y) h
(sym) m(b) s(olic) g(information) g(that) g(the) g(mpa-) 94
3587 y(trol) i(library) e(managed) h(to) g(obtain) g(from) g(an) m(y) g
(executable) h(\014les) e(and) g(libraries) h(that) g(w) m(ere) g
(relev) -5 b(an) m(t) 32 b(to) g(the) 94 3686 y(program) f(b) s(eing) f
(tested.) 41 b(All) 31 b(of) g(the) f(ab) s(o) m(v) m(e) i(\014v) m(e) e
(options) h(can) g(b) s(e) f(selected) h(with) g(the) f(`) p
Fl(SHOWALL) p Fo(') f(option.) 219 3869 y(F) -8 b(or) 27
b(the) g(purp) s(ose) e(of) h(detecting) i(memory) f(leaks,) h(y) m(ou)
f(can) g(instruct) f(the) g(mpatrol) h(library) f(to) h(automat-) 94
3968 y(ically) k(log) g(ev) m(ery) f(memory) g(allo) s(cation) h(ev) m
(en) m(t) g(in) m(to) g(a) e(sp) s(ecial) i(hash) d(table) j(called) f
(the) g(leak) g(table) h(with) e(the) 94 4068 y(`) p
Fl(LEAKTABLE) p Fo(') 34 b(option.) 56 b(This) 35 b(option) h(will) g
(then) f(cause) h(the) g(mpatrol) f(library) g(to) i(displa) m(y) e(a) h
(sorted) g(sum-) 94 4168 y(mary) 29 b(of) f(all) i(of) f(the) f(memory)
h(leaks) g(or) g(unfreed) e(memory) h(allo) s(cations) j(to) e(the) g
(mpatrol) g(log) h(\014le) e(when) g(the) 94 4267 y(program) e
(terminates.) 40 b(The) 24 b(leak) j(table) f(is) f(indexed) g(b) m(y) g
(the) h(source) f(\014le) h(and) f(line) g(n) m(um) m(b) s(er) f(where)
h(memory) 94 4367 y(allo) s(cation) 31 b(ev) m(en) m(ts) f(o) s(ccur,) e
(but) g(if) g(this) g(information) h(is) f(not) h(a) m(v) -5
b(ailable) 31 b(then) c(either) i(the) g(function) f(name) g(or) 94
4467 y(the) 36 b(return) e(address) g(will) h(b) s(e) f(used) g
(instead.) 55 b(Note) 36 b(that) g(this) f(option) g(di\013ers) g(from)
f(the) i(`) p Fl(SHOWUNFREED) p Fo(') 94 4566 y(option) 31
b(in) f(that) h(it) g(will) g(summarise) f(where) g(the) g(leaks) i
(came) f(from) f(rather) g(than) g(sho) m(w) h(the) f(full) g(details) i
(of) 94 4666 y(eac) m(h) g(individual) e(unfreed) f(memory) h(allo) s
(cation.) 219 4848 y(Because) c(the) f(log) h(\014le) e(can) h(con) m
(tain) h(v) m(erb) s(ose) f(information) g(ab) s(out) g(memory) f(allo)
s(cations,) 29 b(reallo) s(cations,) 94 4948 y(deallo) s(cations) e
(and) d(op) s(erations,) i(it) f(can) g(end) f(up) g(b) s(eing) g(to) s
(o) h(large) h(if) e(all) i(suc) m(h) e(information) h(is) f(b) s(eing)
g(logged) 94 5048 y(for) g(a) g(large) h(program.) 39
b(T) -8 b(o) 24 b(get) h(around) e(this,) i(it) g(is) e(p) s(ossible) h
(to) p Fi 24 w(tr) -5 b(ac) g(e) p Fo 32 w(all) 25 b(memory) f(allo) s
(cation,) k(reallo) s(cation) 94 5147 y(and) 33 b(deallo) s(cation) i
(ev) m(en) m(ts) f(in) f(a) h(concise) g(w) m(a) m(y) -8
b(,) 35 b(to) f(b) s(e) e(stored) h(in) g(a) g(separate) h(\014le) g
(for) e(later) i(pro) s(cessing) f(b) m(y) 94 5247 y(the) p
Fl 38 w(mptrace) p Fo 34 w(command.) 60 b(By) 37 b(default,) i(no) e
(suc) m(h) g(tracing) g(is) g(p) s(erformed) f(but) g(it) h(can) g(b) s
(e) f(enabled) h(with) 94 5347 y(the) 29 b(`) p Fl(TRACE) p
Fo(') d(option.) 41 b(The) 27 b(default) h(tracing) h(output) f(\014le)
g(is) f(`) p Fl(mpatrol.trace) p Fo(',) f(but) h(this) h(can) g(b) s(e)
f(c) m(hanged) 94 5446 y(using) 35 b(the) h(`) p Fl(TRACEFILE) p
Fo(') d(option.) 57 b(As) 35 b(with) g(the) h(`) p Fl(LOGFILE) p
Fo(') e(option,) j(y) m(ou) f(can) f(also) i(sp) s(ecify) e(a) g
(directory) 94 5546 y(where) d(all) g(tracing) h(output) f(\014les) f
(from) h(the) g(mpatrol) g(library) f(will) h(get) h(placed) g(b) m(y) e
(setting) i(the) p Fl 32 w(TRACEDIR) p Fo 94 5645 a(en) m(vironmen) m
(t) e(v) -5 b(ariable.) p 90 rotate dyy eop
%%Page: 30 36
30 35 bop Fo 94 -116 a(30) 3377 b(mpatrol) p Fn 94 365
a(7.3) 69 b(General) 45 b(errors) p Fo 219 545 a(By) 40
b(default,) h(the) f(mpatrol) f(library) g(follo) m(ws) i(the) e
(guidelines) h(for) f(ANSI) g(C) f(and) h(C) p Fl(++) p
Fo 38 w(regarding) h(the) 94 645 y(b) s(eha) m(viour) 29
b(of) h(the) g(dynamic) f(memory) g(allo) s(cation) j(and) d(memory) g
(op) s(eration) h(functions) f(it) h(replaces.) 41 b(This) 94
744 y(means) 21 b(that) g(calling) p Fl 21 w(malloc\(\)) p
Fo 18 w(with) f(a) h(size) g(of) g(zero) g(is) f(allo) m(w) m(ed,) k
(for) c(example.) 38 b(Ho) m(w) m(ev) m(er,) 25 b(w) m(arnings) 20
b(can) h(b) s(e) 94 844 y(generated) i(for) e(all) h(of) g(these) f(t) m
(yp) s(es) h(of) f(calls) i(b) m(y) e(using) g(the) g(`) p
Fl(CHECKALL) p Fo(') f(option.) 38 b(The) 21 b(`) p Fl(CHECKALLOCS) p
Fo(') d(option) 94 944 y(w) m(arns) j(only) g(ab) s(out) g(calls) h(to)
p Fl 22 w(malloc\(\)) p Fo 19 w(and) e(similar) i(functions) e(with) h
(a) h(size) g(of) f(zero,) j(the) d(`) p Fl(CHECKREALLOCS) p
Fo(') 94 1043 y(option) 28 b(w) m(arns) e(only) h(ab) s(out) g(calls) h
(to) p Fl 28 w(realloc\(\)) p Fo 24 w(and) f(similar) g(functions) f
(with) h(either) g(a) h(n) m(ull) f(p) s(oin) m(ter) g(or) g(a) 94
1143 y(size) g(of) e(zero,) i(and) e(the) g(`) p Fl(CHECKFREES) p
Fo(') e(option) j(w) m(arns) f(only) g(ab) s(out) g(calls) i(to) p
Fl 26 w(free\(\)) p Fo 23 w(and) e(similar) g(functions) 94
1243 y(with) k(a) g(n) m(ull) g(p) s(oin) m(ter.) 40
b(The) 29 b(`) p Fl(CHECKMEMORY) p Fo(') d(option) j(giv) m(es) i(an) d
(error) h(if) g(a) g(zero-size) i(memory) e(op) s(eration) g(is) 94
1342 y(p) s(erformed) g(on) i(a) f(`) p Fl(NULL) p Fo(') g(p) s(oin) m
(ter) g(|) h(this) f(is) g(normally) h(allo) m(w) m(ed) h(b) m(y) e
(default.) 219 1464 y(All) g(newly-allo) s(cated) h(memory) f(can) f(b)
s(e) g(pre-\014lled) g(with) g(a) h(sp) s(eci\014ed) e(b) m(yte) i(b) m
(y) g(using) e(the) i(`) p Fl(ALLOCBYTE) p Fo(') 94 1564
y(option.) 42 b(This) 29 b(can) i(b) s(e) f(used) f(to) i(catc) m(h) h
(out) f(co) s(de) f(that) h(exp) s(ects) g(newly-allo) s(cated) h
(memory) f(to) g(b) s(e) e(zero) s(ed,) 94 1663 y(although) j(this) f
(option) g(will) g(ha) m(v) m(e) i(no) d(e\013ect) j(on) e(memory) g
(that) g(w) m(as) g(allo) s(cated) i(with) p Fl 31 w(calloc\(\)) p
Fo(.) 40 b(All) 32 b(free) 94 1763 y(memory) 38 b(can) g(also) h(b) s
(e) e(pre-\014lled) h(with) g(a) g(di\013eren) m(t) g(sp) s(eci\014ed) f
(b) m(yte) i(b) m(y) f(using) f(the) h(`) p Fl(FREEBYTE) p
Fo(') e(option.) 94 1862 y(This) j(will) g(catc) m(h) h(out) f(co) s
(de) g(that) h(exp) s(ects) f(to) g(b) s(e) g(able) g(to) h(use) e(the)
h(con) m(ten) m(ts) i(of) e(freed) f(memory) -8 b(.) 67
b(Note) 94 1962 y(that) 39 b(y) m(ou) f(ma) m(y) h(wish) e(to) i(c) m
(hange) g(these) f(options) g(from) g(their) g(default) g(v) -5
b(alues) 38 b(on) g(y) m(our) g(system) g(so) g(that) 94
2062 y(the) 31 b(con) m(ten) m(ts) h(can) e(b) s(e) f(\014lled) h(with)
g(v) -5 b(alues) 30 b(that) h(are) g(least) g(lik) m(ely) h(to) e(b) s
(e) g(used) f(at) i(run-time.) 40 b(F) -8 b(or) 31 b(example,) 94
2161 y(ensuring) i(that) i(the) f(p) s(oin) m(ter) g(represen) m
(tation) h(of) f(the) g(v) -5 b(alue) 34 b(can) g(nev) m(er) h(b) s(e) e
(a) h(v) -5 b(alid) 34 b(p) s(oin) m(ter,) h(or) f(that) h(the) 94
2261 y(\015oating) 43 b(p) s(oin) m(t) e(represen) m(tation) h(will) g
(alw) m(a) m(ys) g(b) s(e) f(in) m(v) -5 b(alid.) 74
b(These) 41 b(v) -5 b(alues) 41 b(will) h(v) -5 b(ary) 41
b(across) h(op) s(erating) 94 2361 y(systems) 31 b(and) f(pro) s
(cessor) g(arc) m(hitectures.) 219 2482 y(Alternativ) m(ely) -8
b(,) 27 b(the) d(mpatrol) f(library) f(can) i(b) s(e) e(instructed) g
(to) i(k) m(eep) g(all) f(\(or) h(a) f(certain) h(n) m(um) m(b) s(er) d
(of) j(recen) m(t\)) 94 2582 y(freed) 35 b(memory) f(allo) s(cations) j
(so) e(that) g(its) g(diagnostics) h(can) e(b) s(e) g(clearer) i(ab) s
(out) e(whic) m(h) h(freed) f(allo) s(cation) j(a) 94
2682 y(piece) 31 b(of) f(co) s(de) g(is) f(erroneously) h(trying) f(to)
i(access.) 42 b(This) 28 b(is) i(con) m(trolled) h(with) f(the) f(`) p
Fl(NOFREE) p Fo(') g(option,) h(whic) m(h) 94 2781 y(accepts) 47
b(an) e(argumen) m(t) h(sp) s(ecifying) f(the) g(maxim) m(um) g(n) m
(um) m(b) s(er) f(of) h(recen) m(tly-freed) i(memory) e(allo) s
(cations) 94 2881 y(to) f(prev) m(en) m(t) g(b) s(eing) e(reused.) 78
b(If) 42 b(the) h(argumen) m(t) h(is) f(zero) g(then) g(all) h(freed) e
(memory) h(allo) s(cations) i(will) f(b) s(e) 94 2980
y(immediately) 28 b(reused) d(b) m(y) h(the) g(mpatrol) g(library) -8
b(.) 39 b(If) 26 b(the) g(argumen) m(t) g(is) g(non-zero) g(then) g
(the) g(mpatrol) g(library) 94 3080 y(will) 38 b(use) e(up) g(more) h
(memory) g(than) g(usual) f(since) i(it) f(has) g(to) h(k) m(eep) f
(all) h(of) f(the) g(freed) g(memory) g(allo) s(cations) 94
3180 y(lying) f(around) d(un) m(til) i(their) g(lifetime) h(has) f
(expired.) 53 b(Note) 36 b(that) f(this) g(option) g(distinguishes) f
(b) s(et) m(w) m(een) p Fi 35 w(fr) -5 b(e) g(e) p Fo
94 3279 a(memory) 31 b(and) p Fi 30 w(fr) -5 b(e) g(e) g(d) p
Fo 41 w(memory) d(.) p Fi 42 w(F) h(r) i(e) g(e) p Fo
39 w(memory) 30 b(is) h(unallo) s(cated) h(memory) e(that) h(has) g(b) s
(een) f(tak) m(en) i(from) e(the) 94 3379 y(system) h(heap.) p
Fi 41 w(F) -7 b(r) i(e) g(e) g(d) p Fo 42 w(memory) 30
b(is) h(a) f(freed) h(memory) f(allo) s(cation,) j(with) d(all) i(of) e
(the) h(original) h(details) f(of) g(the) 94 3479 y(allo) s(cation) i
(preserv) m(ed.) 219 3600 y(Normally) -8 b(,) 28 b(the) f(`) p
Fl(NOFREE) p Fo(') d(option) j(will) f(\014ll) g(the) g(freed) g(allo) s
(cation) i(with) e(the) g(free) g(b) m(yte) h(so) f(that) g(an) m(y) h
(co) s(de) 94 3700 y(that) 35 b(accesses) g(it) g(will) f(hop) s
(efully) f(fall) h(o) m(v) m(er.) 52 b(Ho) m(w) m(ev) m(er,) 37
b(the) d(original) h(con) m(ten) m(ts) h(can) e(b) s(e) f(preserv) m
(ed) g(using) 94 3800 y(the) h(`) p Fl(PRESERVE) p Fo(') d(option) j
(in) e(case) j(y) m(ou) e(need) g(to) h(see) f(what) g(the) g(con) m
(ten) m(ts) i(w) m(ere) f(just) e(b) s(efore) h(it) h(w) m(as) f
(freed.) 94 3899 y(The) g(`) p Fl(NOFREE) p Fo(') e(option) j(is) e
(also) i(a\013ected) g(b) m(y) f(the) g(`) p Fl(PAGEALLOC) p
Fo(') e(option,) j(since) f(then) f(the) h(freed) g(allo) s(cation) 94
3999 y(will) 38 b(ha) m(v) m(e) g(its) g(con) m(ten) m(ts) g(b) s(oth) f
(read) f(and) h(write) g(protected) h(so) f(that) h(nothing) f(can) g
(access) i(them.) 60 b(If) 37 b(the) 94 4099 y(`) p Fl(PRESERVE) p
Fo(') 23 b(option) i(is) f(used) g(in) g(this) g(case) i(then) e(the) g
(freed) g(allo) s(cation) j(will) e(only) f(b) s(e) g(made) g
(write-protected) 94 4198 y(so) 31 b(that) g(the) g(original) g(con) m
(ten) m(ts) h(can) f(b) s(e) f(read) g(from) g(but) g(not) g(written) h
(to.) 219 4320 y(Note) 37 b(that) f(if) g(the) g(argumen) m(t) g(sp) s
(eci\014ed) f(with) g(the) h(`) p Fl(NOFREE) p Fo(') e(option) j(is) e
(non-zero) h(then) g(the) g(mpatrol) 94 4420 y(library) 30
b(will) h(store) g(all) g(recen) m(tly-freed) h(memory) e(allo) s
(cations) i(in) e(a) h(queue.) 40 b(Once) 31 b(the) f(queue) g(has) g
(\014lled) g(to) 94 4519 y(the) f(p) s(oin) m(t) g(sp) s(eci\014ed) f
(with) g(the) g(`) p Fl(NOFREE) p Fo(') g(option) h(then) f(all) h
(subsequen) m(t) f(calls) i(to) f(free) g(memory) f(will) h(result) 94
4619 y(in) e(the) g(most) g(recen) m(tly-freed) h(memory) f(allo) s
(cation) i(b) s(eing) d(placed) h(at) h(the) f(end) f(of) h(the) g
(queue) f(and) g(the) h(freed) 94 4718 y(memory) 33 b(allo) s(cation) i
(at) f(the) f(b) s(eginning) f(of) h(the) g(queue) f(will) h(b) s(e) f
(returned) g(to) h(the) g(free) g(memory) g(p) s(o) s(ol) f(for) 94
4818 y(later) h(reuse.) 46 b(Ob) m(viously) -8 b(,) 33
b(the) f(larger) g(the) g(freed) g(queue) g(size,) h(the) f(b) s(etter)
g(c) m(hance) h(of) f(detecting) i(attempts) 94 4918
y(to) 40 b(access) h(previously-freed) e(memory) -8 b(,) 42
b(but) c(unfortunately) h(more) g(memory) h(will) f(b) s(e) g(used) f
(up) g(and) h(the) 94 5017 y(mpatrol) 31 b(library) f(will) h(ha) m(v) m
(e) g(to) h(k) m(eep) f(trac) m(k) g(of) g(a) f(larger) i(n) m(um) m(b)
s(er) d(of) h(memory) g(allo) s(cations.) p Fn 94 5266
a(7.4) 69 b(Ov) l(erwrites) 46 b(and) f(underwrites) p
Fo 219 5446 a(Once) d(a) g(blo) s(c) m(k) g(of) g(memory) g(has) g(b) s
(een) f(allo) s(cated,) 47 b(it) 42 b(is) g(imp) s(erativ) m(e) h(that)
f(the) h(program) e(do) s(es) h(not) 94 5546 y(attempt) 30
b(to) f(write) g(an) m(y) f(data) i(past) e(the) h(end) e(of) i(the) g
(blo) s(c) m(k) f(or) h(write) f(an) m(y) h(data) g(just) f(b) s(efore)
g(the) h(b) s(eginning) 94 5645 y(of) 40 b(the) f(blo) s(c) m(k.) 68
b(Ev) m(en) 39 b(writing) g(a) h(single) g(b) m(yte) g(just) e(b) s(ey)
m(ond) h(the) g(end) g(of) g(an) g(allo) s(cation) j(or) d(just) f(b) s
(efore) p 90 rotate dyy eop
%%Page: 31 37
31 36 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(31) 94 365 y(the) 32 b(b) s(eginning) e(of) h(an) g
(allo) s(cation) i(can) e(cause) h(ha) m(v) m(o) s(c.) 44
b(This) 30 b(is) h(b) s(ecause) g(most) g(mallo) s(c) h(libraries) f
(store) h(the) 94 465 y(details) d(of) e(the) h(allo) s(cated) h(blo) s
(c) m(k) f(in) f(the) g(\014rst) g(few) g(w) m(ords) g(b) s(efore) f
(the) i(b) s(eginning) e(of) i(the) f(blo) s(c) m(k,) i(suc) m(h) e(as)
h(its) 94 565 y(size) j(and) e(a) i(p) s(oin) m(ter) e(to) i(the) f
(next) g(blo) s(c) m(k.) 41 b(The) 29 b(mpatrol) i(library) e(do) s(es)
g(not) i(do) e(this,) h(so) g(a) h(program) e(whic) m(h) 94
664 y(failed) 34 b(using) e(the) h(normal) g(mallo) s(c) h(library) e
(and) g(w) m(ork) m(ed) i(when) d(the) i(mpatrol) h(library) e(w) m(as)
h(link) m(ed) g(in) g(is) g(a) 94 764 y(p) s(ossible) d(candidate) i
(for) e(turning) f(on) h(o) m(v) m(er\015o) m(w) i(bu\013ers.) 219
886 y(Suc) m(h) 27 b(memory) h(corruption) f(can) h(b) s(e) f
(extremely) i(di\016cult) e(to) i(pinp) s(oin) m(t) e(as) h(it) g(is) g
(unlik) m(ely) g(to) h(sho) m(w) e(itself) 94 985 y(un) m(til) h(the) f
(next) g(call) i(is) e(made) g(to) h(the) f(mallo) s(c) h(library) -8
b(,) 28 b(or) f(if) g(the) g(in) m(ternal) h(mallo) s(c) g(library) f
(blo) s(c) m(ks) g(w) m(ere) h(not) 94 1085 y(o) m(v) m(erwritten,) 35
b(the) e(next) f(time) h(the) g(data) g(is) f(read) h(from) f(the) g
(blo) s(c) m(k) h(that) g(w) m(as) g(o) m(v) m(erwritten.) 48
b(If) 32 b(the) g(former) 94 1184 y(is) g(the) g(case) h(then) f(the) g
(next) g(library) f(call) i(will) g(cause) f(an) g(in) m(ternal) g
(error) g(or) f(a) i(crash,) f(but) f(only) h(when) f(the) 94
1284 y(memory) 25 b(blo) s(c) m(k) g(that) g(w) m(as) f(a\013ected) i
(is) f(referenced.) 38 b(This) 24 b(is) g(lik) m(ely) i(to) f(disapp) s
(ear) f(when) f(using) h(the) h(mpatrol) 94 1384 y(library) 33
b(since) g(it) g(k) m(eeps) h(its) f(in) m(ternal) h(structures) e
(separate,) j(and) d(write-protects) i(them) f(on) g(systems) f(that) 94
1483 y(supp) s(ort) d(memory) h(protection.) 219 1605
y(In) f(order) h(to) h(iden) m(tify) f(suc) m(h) g(errors,) g(it) h(is)
f(p) s(ossible) f(to) i(place) g(sp) s(ecial) g(bu\013ers) p
Fh 2929 1572 a(2) p Fo 2995 1605 a(on) f(either) h(side) f(of) g(ev) m
(ery) 94 1705 y(memory) 42 b(allo) s(cation,) 48 b(and) 41
b(these) i(will) f(b) s(e) f(pre-\014lled) h(with) g(a) g(sp) s
(eci\014ed) g(b) m(yte.) 76 b(Before) 43 b(ev) m(ery) g(mpatrol) 94
1804 y(library) 26 b(call,) j(the) d(library) g(will) g(c) m(hec) m(k) i
(the) e(in) m(tegrit) m(y) i(of) e(ev) m(ery) h(suc) m(h) f(o) m(v) m
(er\015o) m(w) h(bu\013er) e(in) h(order) g(to) h(c) m(hec) m(k) g(for)
94 1904 y(a) 35 b(memory) g(underwrite) e(or) i(o) m(v) m(erwrite.) 55
b(Dep) s(ending) 34 b(on) h(the) f(n) m(um) m(b) s(er) g(of) g(allo) s
(cations) j(and) d(size) i(of) e(these) 94 2004 y(bu\013ers,) 39
b(this) e(can) h(tak) m(e) h(a) e(noticable) i(amoun) m(t) f(of) g
(time) g(\(whic) m(h) f(is) h(wh) m(y) f(o) m(v) m(er\015o) m(w) h
(bu\013ers) f(are) g(disabled) 94 2103 y(b) m(y) 43 b(default\),) k
(but) c(can) g(mean) g(that) h(these) f(errors) g(get) h(noticed) g(so)
s(oner.) 78 b(The) 43 b(option) g(whic) m(h) g(go) m(v) m(erns) 94
2203 y(this) 32 b(is) g(`) p Fl(OFLOWSIZE) p Fo('.) 42
b(The) 31 b(b) m(yte) i(with) e(whic) m(h) g(they) h(get) h
(pre-\014lled) e(can) h(b) s(e) f(c) m(hanged) h(with) g(`) p
Fl(OFLOWBYTE) p Fo('.) 94 2302 y(Dep) s(ending) i(on) g(what) g(gets) h
(written,) g(it) g(migh) m(t) f(only) h(b) s(e) e(p) s(ossible) g(to) i
(see) g(suc) m(h) f(errors) f(when) g(a) h(di\013eren) m(t) 94
2402 y(size) e(of) e(bu\013er) g(or) g(a) h(di\013eren) m(t) g
(pre-\014ll) f(b) m(yte) h(is) f(used.) 219 2524 y(Note) 38
b(that) g(y) m(ou) f(ma) m(y) g(wish) f(to) i(c) m(hange) g(the) f(`) p
Fl(OFLOWBYTE) p Fo(') d(from) j(its) g(default) g(v) -5
b(alue) 37 b(on) g(y) m(our) g(system) 94 2623 y(so) d(that) h(the) f
(con) m(ten) m(ts) h(can) f(b) s(e) g(\014lled) f(with) h(v) -5
b(alues) 34 b(that) g(are) g(least) h(lik) m(ely) h(to) e(b) s(e) f
(used) g(at) i(run-time.) 50 b(F) -8 b(or) 94 2723 y(example,) 44
b(ensuring) 39 b(that) i(the) g(p) s(oin) m(ter) f(represen) m(tation) h
(of) g(the) f(v) -5 b(alue) 41 b(can) f(nev) m(er) h(b) s(e) e(a) i(v)
-5 b(alid) 41 b(p) s(oin) m(ter,) 94 2823 y(or) c(that) f(the) h
(\015oating) g(p) s(oin) m(t) f(represen) m(tation) i(will) e(alw) m(a)
m(ys) i(b) s(e) d(in) m(v) -5 b(alid.) 59 b(These) 36
b(v) -5 b(alues) 37 b(will) f(v) -5 b(ary) 36 b(across) 94
2922 y(op) s(erating) f(systems) e(and) h(pro) s(cessor) f(arc) m
(hitectures,) j(but) d(ma) m(y) i(also) g(v) -5 b(ary) 33
b(dep) s(ending) g(on) g(the) h(datat) m(yp) s(es) 94
3022 y(that) d(y) m(ou) g(will) g(b) s(e) f(exp) s(ecting) h(to) g
(store) g(in) f(the) g(memory) h(allo) s(cations.) 219
3144 y(A) h(w) m(orse) g(situation) g(can) g(o) s(ccur) f(when) g(it) h
(is) f(only) h(reads) f(from) g(memory) h(that) g(o) m(v) m(er\015o) m
(w) h(or) e(under\015o) m(w;) 94 3243 y(i.e.) h(with) e(the) h(fault) m
(y) g(co) s(de) g(reading) f(just) g(b) s(efore) g(or) h(just) e(past) i
(a) g(memory) f(allo) s(cation.) 43 b(These) 31 b(cannot) g(b) s(e) 94
3343 y(detected) 39 b(b) m(y) e(o) m(v) m(er\015o) m(w) h(bu\013ers) e
(as) h(it) h(is) f(not) g(p) s(ossible) g(using) f(con) m(v) m(en) m
(tional) k(means) d(to) h(in) m(terrupt) e(ev) m(ery) 94
3443 y(single) g(read) f(from) g(memory) -8 b(.) 56 b(Ho) m(w) m(ev) m
(er,) 38 b(on) e(systems) f(with) g(virtual) g(memory) -8
b(,) 37 b(it) f(is) f(p) s(ossible) g(to) h(use) f(the) 94
3542 y(memory) c(protection) h(feature) f(to) g(pro) m(vide) g(an) f
(alternativ) m(e) j(to) e(o) m(v) m(er\015o) m(w) h(bu\013ers,) e
(although) h(at) g(the) g(added) 94 3642 y(exp) s(ense) f(of) h
(increased) g(memory) f(usage.) 219 3764 y(The) g(`) p
Fl(PAGEALLOC) p Fo(') f(option) i(turns) f(on) g(this) h(feature) g
(and) f(automatically) k(rounds) 29 b(up) h(the) h(size) g(of) g(ev) m
(ery) 94 3863 y(memory) 38 b(allo) s(cation) i(to) e(a) g(m) m(ultiple)
g(of) f(the) h(system) g(page) g(size.) 62 b(It) 38 b(also) g(rounds) e
(up) h(the) g(size) i(of) e(ev) m(ery) 94 3963 y(o) m(v) m(er\015o) m
(w) d(bu\013er) d(to) i(a) g(m) m(ultiple) g(of) g(the) f(system) g
(page) h(size) h(so) e(that) h(ev) m(ery) g(memory) f(allo) s(cation) j
(o) s(ccupies) 94 4063 y(its) h(o) m(wn) e(set) i(of) e(pages) i(of) f
(virtual) g(memory) f(and) g(no) h(t) m(w) m(o) h(memory) e(allo) s
(cations) j(o) s(ccup) m(y) e(the) g(same) g(page) 94
4162 y(of) 30 b(virtual) g(memory) -8 b(.) 41 b(The) 29
b(o) m(v) m(er\015o) m(w) i(bu\013ers) d(are) i(then) g(read) f(and) g
(write) h(protected) g(so) g(that) g(an) m(y) g(memory) 94
4262 y(accesses) 25 b(to) e(them) g(will) g(generate) i(an) d(error) p
Fh 1592 4229 a(3) p Fo 1629 4262 a(.) 39 b(F) -8 b(ollo) m(wing) 25
b(on) e(from) f(the) h(previous) f(section,) k(the) d(`) p
Fl(PAGEALLOC) p Fo(') 94 4361 y(option) j(also) h(causes) e(free) h
(memory) f(to) h(b) s(e) f(read) g(and) g(write) g(protected) h(as) g
(w) m(ell) g(since) g(that) g(will) f(also) i(o) s(ccup) m(y) 94
4461 y(non-o) m(v) m(erlapping) 32 b(virtual) f(memory) f(pages.) 219
4583 y(The) c(remaining) i(memory) e(that) i(is) f(left) h(o) m(v) m
(er) g(within) e(an) h(allo) s(cation's) j(pages) d(is) g(e\013ectiv) m
(ely) j(turned) c(in) m(to) 94 4682 y(traditional) 33
b(o) m(v) m(er\015o) m(w) g(bu\013ers,) e(b) s(eing) g(pre-\014lled) g
(with) g(the) g(o) m(v) m(er\015o) m(w) i(b) m(yte) f(and) f(c) m(hec) m
(k) m(ed) i(p) s(erio) s(dically) f(b) m(y) 94 4782 y(the) 40
b(mpatrol) g(library) f(to) h(ensure) f(that) h(nothing) f(has) g
(written) h(in) m(to) g(them.) 68 b(Ho) m(w) m(ev) m(er,) 44
b(b) s(ecause) 39 b(of) h(this) 94 4882 y(remaining) 32
b(memory) -8 b(,) 32 b(the) f(library) g(has) g(a) g(c) m(hoice) i(of) e
(where) g(to) h(place) g(the) f(memory) h(allo) s(cation) h(within) e
(its) 94 4981 y(pages.) 48 b(If) 32 b(it) i(places) f(the) g(allo) s
(cation) i(at) e(the) g(v) m(ery) f(b) s(eginning) g(then) h(it) g
(will) g(catc) m(h) h(memory) e(underwrites,) 94 5081
y(but) 39 b(if) g(it) g(places) h(the) f(allo) s(cation) j(at) d(the) g
(v) m(ery) h(end) e(then) h(it) g(will) h(catc) m(h) g(memory) f(o) m
(v) m(erwrites.) 68 b(Suc) m(h) 39 b(a) 94 5181 y(c) m(hoice) f(can) e
(b) s(e) f(con) m(trolled) i(at) f(run-time) g(b) m(y) f(supplying) f
(an) i(argumen) m(t) g(to) g(the) g(`) p Fl(PAGEALLOC) p
Fo(') e(option.) 56 b(If) 94 5280 y(`) p Fl(PAGEALLOC=LOWER) p
Fo(') 21 b(is) k(used) e(then) h(ev) m(ery) h(allo) s(cation) i(will) e
(b) s(e) e(placed) i(at) g(the) g(v) m(ery) f(b) s(eginning) g(of) h
(its) f(pages) p 94 5365 1200 4 v Fh 143 5425 a(2) p
Fg 219 5457 a(Commonly) i(kno) n(wn) g(as) p Fd 26 w(over\015ow) j
(bu\013ers) p Fg 33 w(or) p Fd 26 w(fenc) l(e) f(p) l(osts) p
Fg(.) p Fh 143 5522 a(3) p Fg 219 5554 a(This) d(is) g(a) f(feature) h
(that) f(w) n(as) i(\014rst) e(used) g(b) n(y) f(Electric) j(F) -6
b(ence) 24 b(\(see) g(App) r(endix) f(K) h([Related) h(soft) n(w) n
(are],) i(page) d(213\)) i(to) e(trac) n(k) 219 5645
y(do) n(wn) i(memory) f(corruption.) p 90 rotate dyy
eop
%%Page: 32 38
32 37 bop Fo 94 -116 a(32) 3377 b(mpatrol) 94 365 y(and) 30
b(if) h(`) p Fl(PAGEALLOC=UPPER) p Fo(') c(is) j(used) g(then) g(the) h
(placemen) m(t) h(will) f(b) s(e) f(at) h(the) g(v) m(ery) g(end) e(of)
i(its) g(pages.) 42 b(This) 94 465 y(is) 34 b(probably) e(b) s(etter) i
(explained) f(in) g(Example) h(3) g(\(see) g(Section) g(16.3) h
([Example) f(3],) h(page) f(106\)) h(where) e(the) 94
565 y(problems) d(with) g(`) p Fl(PAGEALLOC=UPPER) p
Fo(') d(and) j(alignmen) m(t) h(are) g(also) g(discussed.) 219
696 y(Ob) m(viously) -8 b(,) 28 b(there) e(are) g(still) h(some) g
(de\014ciencies) g(when) e(using) g(`) p Fl(PAGEALLOC) p
Fo(') f(since) j(it) f(can) g(use) g(up) f(a) i(h) m(uge) 94
796 y(amoun) m(t) 40 b(of) e(memory) h(\(esp) s(ecially) h(with) f(`) p
Fl(NOFREE) p Fo('\)) e(and) h(the) h(o) m(v) m(er\015o) m(w) h
(bu\013ers) e(within) g(an) h(allo) s(cation's) 94 895
y(pages) d(can) f(still) h(b) s(e) e(read) h(without) g(causing) h(an) e
(immediate) i(error.) 54 b(Both) 36 b(of) f(these) h(de\014ciencies) f
(can) h(b) s(e) 94 995 y(o) m(v) m(ercome) e(b) m(y) d(using) g(the) g
(`) p Fl(OFLOWWATCH) p Fo(') e(option) i(to) h(install) p
Fi 32 w(softwar) -5 b(e) 35 b(watch) g(p) -5 b(oints) p
Fo 40 w(instead) 31 b(of) h(o) m(v) m(er\015o) m(w) 94
1095 y(bu\013ers,) d(but) g(there) h(are) g(still) h(v) m(ery) f(few) f
(systems) g(that) i(supp) s(ort) d(soft) m(w) m(are) j(w) m(atc) m(h) f
(p) s(oin) m(ts) g(at) g(the) g(momen) m(t,) 94 1194
y(and) 37 b(it) g(can) g(slo) m(w) g(a) g(program's) g(execution) h(sp)
s(eed) e(do) m(wn) g(b) m(y) h(a) g(factor) h(of) f(around) e(10,000.)
62 b(The) 37 b(reason) 94 1294 y(for) g(this) g(is) f(that) i(soft) m
(w) m(are) g(w) m(atc) m(h) g(p) s(oin) m(ts) e(instruct) h(the) g(op) s
(erating) g(system) g(to) g(c) m(hec) m(k) h(ev) m(ery) g(read) e(from)
94 1393 y(and) c(write) h(to) g(memory) -8 b(,) 34 b(whic) m(h) e
(means) h(that) g(it) g(has) f(to) h(single-step) h(through) e(a) h
(pro) s(cess) f(c) m(hec) m(king) i(ev) m(ery) 94 1493
y(instruction) 29 b(b) s(efore) f(it) h(is) g(executed.) 41
b(Ho) m(w) m(ev) m(er,) 31 b(this) e(is) f(a) h(v) m(ery) g(thorough) g
(w) m(a) m(y) g(of) g(c) m(hec) m(king) h(for) f(o) m(v) m(er\015o) m
(ws) 94 1593 y(and) 42 b(is) g(unlik) m(ely) g(to) h(miss) e(an) m
(ything,) 46 b(although) c(there) g(ma) m(y) h(b) s(e) e(problems) g
(with) h(misaligned) g(memory) 94 1692 y(accesses) 32
b(when) e(using) g(w) m(atc) m(h) h(p) s(oin) m(ts) g(\(see) g(Section)
g(6.1) h([Virtual) f(memory],) f(page) i(21\).) 219 1824
y(Note) 40 b(that) e(from) g(release) i(1.1.0) g(of) e(mpatrol,) j(the)
d(library) g(comes) h(with) f(replacemen) m(t) h(functions) f(for) 94
1923 y(man) m(y) 45 b(memory) g(op) s(eration) h(functions,) i(suc) m
(h) c(as) p Fl 46 w(memset\(\)) p Fo 42 w(and) p Fl 44
w(memcpy\(\)) p Fo(.) 82 b(These) 45 b(new) f(functions) 94
2023 y(pro) m(vide) 27 b(additional) h(c) m(hec) m(ks) g(to) f(ensure) f
(that) h(if) f(a) h(memory) g(op) s(eration) g(is) f(b) s(eing) h(p) s
(erformed) e(on) h(a) h(memory) 94 2123 y(blo) s(c) m(k,) 32
b(the) e(op) s(eration) h(will) g(not) f(read) h(or) f(write) h(b) s
(efore) f(or) g(b) s(ey) m(ond) g(the) g(b) s(oundaries) f(of) i(that) g
(blo) s(c) m(k.) 219 2254 y(Normally) -8 b(,) 27 b(if) d(an) g(error) f
(is) h(disco) m(v) m(ered) i(in) d(the) h(call) i(to) e(suc) m(h) g
(functions,) h(the) f(mpatrol) h(library) e(will) i(rep) s(ort) 94
2354 y(the) 36 b(error) f(but) f(prev) m(en) m(t) i(the) g(op) s
(eration) f(from) g(b) s(eing) g(p) s(erformed) e(b) s(efore) i(con) m
(tin) m(uing) i(execution.) 56 b(If) 35 b(the) 94 2453
y(error) 29 b(w) m(as) h(that) f(the) h(range) f(of) g(memory) g(b) s
(eing) g(op) s(erated) g(on) g(o) m(v) m(er\015o) m(w) m(ed) i(the) e
(b) s(oundaries) f(of) h(an) g(existing) 94 2553 y(memory) k(allo) s
(cation) j(then) d(the) g(`) p Fl(ALLOWOFLOW) p Fo(') e(option) i(can) g
(b) s(e) g(used) f(to) i(turn) e(the) h(error) g(in) m(to) h(a) f(w) m
(arning) 94 2653 y(and) 39 b(force) h(the) f(op) s(eration) g(to) h
(con) m(tin) m(ue.) 69 b(This) 38 b(b) s(eha) m(viour) h(can) g(b) s(e)
f(desirable) i(in) e(certain) i(cases) g(where) 94 2752
y(third-part) m(y) c(libraries) f(are) h(b) s(eing) f(used) g(that) h
(mak) m(e) g(suc) m(h) f(calls) i(but) d(the) i(end) f(result) g(do) s
(es) g(not) h(o) m(v) m(er\015o) m(w) 94 2852 y(the) 31
b(allo) s(cation) i(b) s(oundary) -8 b(.) 219 2983 y(F) g(rom) 54
b(release) h(1.3.3) h(of) e(mpatrol,) 60 b(the) 54 b(library) f(comes) i
(with) e(functions) h(that) g(in) m(terface) h(to) g(the) 94
3083 y(`) p Fl(-fcheck-memory-usage) p Fo(') 33 b(option) k(of) g(the) h
(GNU) f(compiler.) 62 b(This) 36 b(option) i(instructs) e(the) i
(compiler) f(to) 94 3183 y(place) g(error-c) m(hec) m(king) h(calls) f
(b) s(efore) e(eac) m(h) i(read) f(or) g(write) g(to) g(memory) -8
b(.) 58 b(The) 35 b(functions) g(that) i(are) f(called) 94
3282 y(then) h(c) m(hec) m(k) h(to) g(ensure) e(that) h(the) h(memory) e
(access) i(do) s(es) f(not) g(o) m(v) m(er\015o) m(w) h(a) f(heap) g
(memory) g(allo) s(cation) i(or) 94 3382 y(access) c(free) f(memory) -8
b(.) 51 b(This) 32 b(can) i(b) s(e) f(a) h(v) m(ery) g(useful) f(w) m
(a) m(y) h(to) g(go) h(through) e(y) m(our) g(co) s(de) h(lo) s(oking) g
(for) f(errors) 94 3481 y(with) 28 b(a) g(\014ne) f(to) s(oth-com) m
(b,) j(but) e(b) s(e) f(a) m(w) m(are) i(that) g(it) f(do) s(es) f(slo)
m(w) i(do) m(wn) e(execution) i(b) m(y) f(a) g(large) h(factor.) 41
b(It) 28 b(also) 94 3581 y(only) 34 b(a\013ects) h(functions) f(that) g
(w) m(ere) g(compiled) g(with) g(this) f(option,) j(so) e(if) f(the) h
(problem) f(lies) i(in) e(a) h(function) 94 3681 y(that) d(w) m(as) g
(not) g(recompiled) g(with) f(`) p Fl(-fcheck-memory-usage) p
Fo(') 25 b(then) 30 b(it) h(w) m(on't) g(do) f(m) m(uc) m(h) h(go) s(o)
s(d.) 219 3812 y(T) -8 b(o) 40 b(conclude,) j(if) d(y) m(ou) h(susp) s
(ect) e(y) m(our) h(program) g(has) g(a) g(piece) h(of) f(co) s(de) g
(whic) m(h) g(is) g(p) s(erforming) f(illegal) 94 3912
y(memory) 26 b(underwrites) e(or) i(o) m(v) m(erwrites) h(to) f(a) g
(memory) f(allo) s(cation) j(y) m(ou) e(turn) e(on) i(the) f(`) p
Fl(CHECK=-) p Fo(') g(option) h(and) 94 4011 y(y) m(ou) h(should) e
(use) g(eac) m(h) i(of) f(the) g(follo) m(wing) i(options) e(in) f
(sequence,) j(but) d(only) h(if) g(y) m(our) g(system) g(supp) s(orts) e
(them.) 94 4111 y(If) 31 b(all) g(else) g(fails) g(and) f(y) m(ou) h
(are) g(using) f(the) h(GNU) g(compiler) g(then) f(y) m(ou) h(could) g
(try) f(recompiling) i(some) f(or) f(all) 94 4211 y(of) h(y) m(our) f
(co) s(de) h(with) f(the) h(`) p Fl(-fcheck-memory-usage) p
Fo(') 25 b(option.) 144 4342 y(1.) 60 b(`) p Fl(OFLOWSIZE=8) p
Fo(') 144 4470 y(2.) g(`) p Fl(OFLOWSIZE=32) p Fo(') 144
4598 y(3.) g(`) p Fl(OFLOWSIZE=1) p Fo(') 28 b(`) p Fl(PAGEALLOC=LOWER)
p Fo(') 144 4726 y(4.) 60 b(`) p Fl(OFLOWSIZE=1) p Fo(') 28
b(`) p Fl(PAGEALLOC=UPPER) p Fo(') 144 4854 y(5.) 60
b(`) p Fl(OFLOWSIZE=8) p Fo(') 28 b(`) p Fl(OFLOWWATCH) p
Fo(') 144 4982 y(6.) 60 b(`) p Fl(OFLOWSIZE=32) p Fo(') 28
b(`) p Fl(OFLOWWATCH) p Fo(') p Fn 94 5257 a(7.5) 69
b(Using) 45 b(with) h(a) f(debugger) p Fo 219 5446 a(If) 37
b(y) m(ou) i(w) m(ould) e(lik) m(e) j(to) e(use) g(mpatrol) g(to) h
(pause) e(at) i(a) f(sp) s(eci\014c) g(memory) f(allo) s(cation,) 43
b(reallo) s(cation) d(or) 94 5546 y(deallo) s(cation) g(in) c(a) i
(debugger) e(then) h(this) g(section) h(will) f(describ) s(e) g(ho) m
(w) g(to) g(go) h(ab) s(out) f(it.) 61 b(Unfortunately) -8
b(,) 94 5645 y(debuggers) 40 b(v) -5 b(ary) 40 b(widely) h(in) e
(function) h(and) g(usage) h(and) e(are) i(normally) f(v) m(ery) h
(system-dep) s(enden) m(t.) 69 b(The) p 90 rotate dyy
eop
%%Page: 33 39
33 38 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(33) 94 365 y(example) 34 b(b) s(elo) m(w) e(will) h
(use) p Fl 33 w(gdb) p Fo 31 w(as) g(the) g(debugger,) g(but) f(as) h
(long) g(as) g(y) m(ou) g(kno) m(w) f(ho) m(w) h(to) g(set) g(a) g
(breakp) s(oin) m(t) 94 465 y(within) d(a) h(debugger,) f(an) m(y) h
(one) g(will) g(do.) 219 595 y(First) 26 b(of) g(all,) i(decide) e
(where) g(y) m(ou) g(w) m(ould) g(lik) m(e) h(the) f(mpatrol) g
(library) f(to) i(pause) e(when) g(running) f(y) m(our) i(pro-) 94
695 y(gram) c(within) e(the) h(debugger.) 38 b(Y) -8
b(ou) 21 b(can) h(c) m(ho) s(ose) g(one) f(allo) s(cation) i(index) e
(to) h(break) e(at) i(using) f(the) g(`) p Fl(ALLOCSTOP) p
Fo(') 94 795 y(option,) 31 b(or) e(y) m(ou) h(can) g(c) m(ho) s(ose) h
(to) f(break) g(at) g(a) g(sp) s(eci\014c) f(reallo) s(cation) j(of) e
(that) g(allo) s(cation) i(b) m(y) d(also) i(using) e(the) 94
894 y(`) p Fl(REALLOCSTOP) p Fo(') d(option.) 40 b(If) 28
b(y) m(ou) g(use) g(`) p Fl(REALLOCSTOP) p Fo(') d(without) j(using) g
(`) p Fl(ALLOCSTOP) p Fo(') e(then) h(y) m(ou) i(will) f(break) 94
994 y(at) h(the) f(\014rst) f(memory) g(allo) s(cation) j(that) e(has) g
(b) s(een) f(reallo) s(cated) i(the) f(sp) s(eci\014ed) f(n) m(um) m(b)
s(er) f(of) i(times.) 41 b(Y) -8 b(ou) 28 b(can) 94 1093
y(also) i(c) m(ho) s(ose) g(to) f(break) g(at) g(the) g(p) s(oin) m(t) f
(in) h(y) m(our) f(program) h(that) g(frees) f(a) h(sp) s(eci\014c) g
(allo) s(cation) i(index) d(b) m(y) g(using) 94 1193
y(the) j(`) p Fl(FREESTOP) p Fo(') e(option.) 219 1323
y(The) 42 b(normal) g(pro) s(cess) f(for) h(determining) g(where) g(y) m
(ou) g(w) m(ould) g(lik) m(e) h(to) g(pause) f(y) m(our) g(program) g
(in) g(the) 94 1423 y(debugger) 37 b(is) f(b) m(y) g(using) g(the) h(`)
p Fl(LOGALL) p Fo(') e(option) i(and) f(examining) h(the) f(log) i
(\014le) e(pro) s(duced) f(b) m(y) h(mpatrol.) 59 b(If) 94
1523 y(y) m(our) 40 b(program) g(crashed) f(then) h(y) m(ou) g(should) f
(lo) s(ok) h(at) h(the) f(last) h(en) m(try) f(in) f(the) h(log) h
(\014le) f(to) h(see) f(what) g(the) 94 1622 y(allo) s(cation) d(index)
d(\(and) h(p) s(ossibly) e(also) j(the) e(reallo) s(cation) j(index\)) d
(of) h(the) g(last) g(successful) f(call) i(w) m(as.) 53
b(Y) -8 b(ou) 94 1722 y(can) 28 b(then) f(decide) h(whic) m(h) g(of) f
(the) h(ab) s(o) m(v) m(e) g(options) g(to) g(use.) 40
b(Note) 29 b(that) f(the) f(debugger) h(will) g(break) f(at) h(a) g(p) s
(oin) m(t) 94 1821 y(b) s(efore) 33 b(an) m(y) f(w) m(ork) h(is) f
(done) g(b) m(y) h(the) f(mpatrol) h(library) f(for) g(that) h(allo) s
(cation) i(index) d(so) h(that) g(y) m(ou) f(can) h(see) g(if) 94
1921 y(it) e(w) m(as) g(the) g(last) g(successful) f(op) s(eration) h
(that) g(caused) f(the) h(damage.) 219 2051 y(Ha) m(ving) 40
b(decided) e(whic) m(h) g(com) m(bination) h(of) g(mpatrol) f(options) h
(to) g(use,) h(y) m(ou) f(should) e(set) i(them) f(in) g(the) p
Fl 94 2151 a(MPATROL_OPTIONS) p Fo 30 w(en) m(vironmen) m(t) d(v) -5
b(ariable) 35 b(b) s(efore) e(running) g(the) h(debugger) g(on) g(y) m
(our) g(program.) 51 b(Alter-) 94 2251 y(nativ) m(ely) -8
b(,) 49 b(y) m(our) 43 b(debugger) g(ma) m(y) g(ha) m(v) m(e) h(a) g
(command) e(that) i(allo) m(ws) g(y) m(ou) g(to) f(mo) s(dify) f(y) m
(our) h(en) m(vironmen) m(t) 94 2350 y(during) 34 b(debugging,) i(but) d
(y) m(ou're) j(just) e(as) g(w) m(ell) i(setting) f(the) g(en) m
(vironmen) m(t) g(v) -5 b(ariable) 36 b(b) s(efore) e(y) m(ou) h(run) e
(the) 94 2450 y(debugger) e(as) f(it) h(shouldn't) f(mak) m(e) h(an) m
(y) g(di\013erence) p Fh 1871 2417 a(4) p Fo 1909 2450
a(.) 219 2580 y(After) i(y) m(ou) g(get) g(to) h(the) e(debugger) h
(command) f(prompt,) g(y) m(ou) h(should) f(set) h(a) g(breakp) s(oin) m
(t) f(at) i(the) p Fl 32 w(__mp_) 94 2680 y(trap\(\)) p
Fo 23 w(function.) 39 b(This) 24 b(is) g(the) h(function) f(that) h
(gets) h(called) g(when) d(the) i(sp) s(eci\014ed) f(allo) s(cation) j
(index) d(and/or) 94 2780 y(reallo) s(cation) 33 b(index) d(app) s
(ears) f(and) g(so) i(when) e(y) m(ou) h(run) f(y) m(our) h(program) g
(under) e(the) j(debugger) e(the) i(mpatrol) 94 2879
y(library) h(will) h(call) p Fl 33 w(__mp_trap\(\)) p
Fo 29 w(and) f(the) g(debugger) g(will) h(stop) f(at) h(that) g(p) s
(oin) m(t.) 46 b(If) 32 b(y) m(ou) h(are) f(not) h(running) 94
2979 y(y) m(our) i(program) g(within) f(a) h(debugger,) h(or) f(if) f
(y) m(ou) h(ha) m(v) m(en't) h(set) g(the) f(breakp) s(oin) m(t,) h
(then) p Fl 34 w(__mp_trap\(\)) p Fo 32 w(will) 94 3078
y(still) e(b) s(e) f(called,) i(but) d(it) h(w) m(on't) h(do) f(an) m
(ything.) 48 b(Note) 35 b(that) e(there) g(ma) m(y) h(b) s(e) e(some) h
(naming) g(issues) g(on) g(some) 94 3178 y(platforms) f(where) f(the) h
(visible) g(name) g(of) g(a) g(global) g(function) g(gets) g(an) g
(underscore) f(prep) s(ended) e(to) j(it.) 45 b(Y) -8
b(ou) 94 3278 y(ma) m(y) 31 b(ha) m(v) m(e) h(to) f(tak) m(e) h(that) f
(in) m(to) g(accoun) m(t) h(when) e(setting) h(the) g(breakp) s(oin) m
(t) f(on) g(suc) m(h) g(systems.) 219 3408 y(No) m(w) 25
b(that) f(y) m(ou) h(ha) m(v) m(e) g(set) f(the) p Fl
25 w(MPATROL_OPTIONS) p Fo 19 w(en) m(vironmen) m(t) h(v) -5
b(ariable) 25 b(and) e(ha) m(v) m(e) i(set) g(the) f(debugger) 94
3508 y(to) 38 b(break) e(at) p Fl 37 w(__mp_trap\(\)) p
Fo(,) f(all) i(that) g(is) f(required) g(is) g(for) g(y) m(ou) h(to) g
(run) e(y) m(our) h(program.) 58 b(Hop) s(efully) -8
b(,) 39 b(the) 94 3607 y(debugger) 21 b(should) f(stop) h(at) p
Fl 21 w(__mp_trap\(\)) p Fo(.) 35 b(If) 20 b(it) i(do) s(esn't) e(then)
h(y) m(ou) g(ma) m(y) g(ha) m(v) m(e) i(to) e(c) m(hec) m(k) i(y) m
(our) d(en) m(vironmen) m(t) 94 3707 y(v) -5 b(ariable) 38
b(settings) g(to) g(ensure) e(that) i(they) f(are) g(the) h(same) f(as)
g(when) f(y) m(ou) i(ran) e(the) h(program) g(out) m(with) h(the) 94
3807 y(debugger,) 27 b(although) f(ob) m(viously) g(with) f(the) h
(addition) g(of) f(`) p Fl(ALLOCSTOP) p Fo(',) g(etc.) 40
b(Once) 26 b(the) f(program) g(has) h(b) s(een) 94 3906
y(halted) 31 b(b) m(y) f(the) g(debugger,) h(y) m(ou) f(can) g(then) g
(single-step) i(through) d(y) m(our) h(co) s(de) g(un) m(til) h(y) m
(ou) f(see) h(where) f(it) g(go) s(es) 94 4006 y(wrong.) 47
b(If) 32 b(this) g(is) g(near) g(the) h(end) f(of) g(y) m(our) g
(program) g(then) h(y) m(ou'll) g(ha) m(v) m(e) h(sa) m(v) m(ed) f(y) m
(ourself) f(a) h(lot) h(of) e(time) h(b) m(y) 94 4105
y(using) d(this) h(metho) s(d.) 219 4236 y(The) e(follo) m(wing) h
(example) g(will) g(b) s(e) e(used) g(to) i(illustrate) h(the) e(steps)
g(in) m(v) m(olv) m(ed) i(in) e(using) f(the) i(`) p
Fl(ALLOCSTOP) p Fo(',) 94 4335 y(`) p Fl(REALLOCSTOP) p
Fo(') g(and) i(`) p Fl(FREESTOP) p Fo(') f(options.) 47
b(Ho) m(w) m(ev) m(er,) 35 b(it) e(is) f(only) h(for) f(tutorial) i
(purp) s(oses) c(and) i(the) h(same) 94 4435 y(e\013ect) 39
b(could) e(easily) h(b) s(e) f(ac) m(hiev) m(ed) i(b) m(y) d(breaking) i
(at) f(line) h(18) g(in) e(a) i(debugger) f(b) s(ecause) g(in) f(this) h
(case) h(it) g(is) 94 4535 y(ob) m(vious) 30 b(from) e(the) h(co) s(de)
h(and) e(the) h(mpatrol) g(log) h(\014le) f(where) g(it) g(is) g(going)
h(wrong.) 40 b(In) 28 b(real) i(programs) e(this) h(is) 94
4634 y(hardly) h(ev) m(er) h(the) g(case) p Fh 890 4601
a(5) p Fo 928 4634 a(.) p Fl 382 4769 a(1) 95 b(/*) 382
4873 y(2) 143 b(*) 48 b(Allocates) d(1000) h(blocks) h(of) g(16) g
(bytes,) f(freeing) g(each) g(block) h(immediately) 382
4976 y(3) 143 b(*) 48 b(after) e(it) h(is) g(allocated,) e(and) i
(freeing) f(the) h(last) g(block) f(twice.) 382 5080
y(4) 143 b(*/) p 94 5273 1200 4 v Fh 143 5334 a(4) p
Fg 219 5366 a(Unless) 26 b(y) n(ou'v) n(e) f(link) n(ed) g(the) g
(debugger) h(with) g(the) f(mpatrol) i(library) -6 b(.) p
Fh 143 5431 a(5) p Fg 219 5463 a(The) 30 b(other) f(reason) h(that) f
(this) g(program) i(is) e(simple) h(is) g(b) r(ecause) g(a) g(prop) r
(er) f(example) g(w) n(ould) h(generally) g(in) n(v) n(olv) n(e) f
(crashing) 219 5554 y(the) h(program,) i(but) e(on) g(AmigaOS) g(and) g
(Net) n(w) n(are) h(that) f(w) n(ould) g(also) i(in) n(v) n(olv) n(e) e
(crashing) h(the) f(system) g(|) g(not) g(something) 219
5645 y(y) n(ou'd) 25 b(w) n(an) n(t) h(to) g(do) f(whilst) i(trying) e
(this) h(out.) p 90 rotate dyy eop
%%Page: 34 40
34 39 bop Fo 94 -116 a(34) 3377 b(mpatrol) p Fl 382 469
a(7) 95 b(#include) 46 b("mpatrol.h") 334 780 y(10) 95
b(int) 47 b(main\(void\)) 334 884 y(11) 95 b({) 334 988
y(12) 286 b(void) 47 b(*p;) 334 1092 y(13) 286 b(int) 47
b(i;) 334 1299 y(15) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g(<) h(1000;)
e(i++\)) 334 1403 y(16) 477 b(if) 47 b(\(p) h(=) f(malloc\(16\)\)) 334
1507 y(17) 668 b(free\(p\);) 334 1611 y(18) 286 b(free\(p\);) 334
1714 y(19) g(return) 46 b(EXIT_SUCCESS;) 334 1818 y(20) 95
b(}) p Fo 219 1961 a(Compile) 28 b(this) f(example) h(co) s(de) g(with)
f(debugging) g(information) h(enabled) g(and) e(link) i(it) g(with) f
(the) h(mpatrol) 94 2060 y(library) -8 b(,) 34 b(then) e(set) p
Fl 32 w(MPATROL_OPTIONS) p Fo 29 w(to) h(`) p Fl(LOGALL) p
Fo(') e(and) h(run) e(the) j(resulting) f(program.) 47
b(If) 32 b(y) m(ou) g(examine) 94 2160 y(`) p Fl(mpatrol.log) p
Fo(') c(y) m(ou) j(will) g(see) g(the) f(follo) m(wing) i(near) e(the) h
(b) s(ottom) g(of) f(the) h(\014le.) p Fl 334 2307 a(...) 334
2514 y(ALLOC:) 47 b(malloc) f(\(1000,) g(16) h(bytes,) f(4) h(bytes\)) g
([main|test.c|16]) 716 2618 y(0x08049449) e(main+57) 716
2722 y(0x4007C9CB) g(__libc_start_main+255) 716 2826
y(0x08049381) g(_start+33) 334 3033 y(returns) h(0x080620E8) 334
3241 y(FREE:) h(free) f(\(0x080620E8\)) f([main|test.c|17]) 716
3344 y(0x08049470) g(main+96) 716 3448 y(0x4007C9CB) g
(__libc_start_main+255) 716 3552 y(0x08049381) g(_start+33) 525
3760 y(0x080620E8) g(\(16) i(bytes\)) f({malloc:1000:0}) e
([main|test.c|16]) 716 3863 y(0x08049449) h(main+57) 716
3967 y(0x4007C9CB) g(__libc_start_main+255) 716 4071
y(0x08049381) g(_start+33) 334 4278 y(FREE:) i(free) f(\(0x080620E8\)) f
([main|test.c|18]) 716 4382 y(0x08049491) g(main+129) 716
4486 y(0x4007C9CB) g(__libc_start_main+255) 716 4590
y(0x08049381) g(_start+33) 334 4797 y(ERROR:) i([NOTALL]:) e(free:) h
(0x080620E8) f(has) i(not) g(been) g(allocated) 334 5005
y(...) p Fo 219 5147 a(In) 41 b(this) g(example,) k(w) m(e'll) d(w) m
(an) m(t) g(to) g(use) f(`) p Fl(ALLOCSTOP) p Fo(') e(to) j(halt) g
(the) f(program) h(at) f(the) h(1000th) h(mem-) 94 5247
y(ory) c(allo) s(cation) i(so) d(that) h(w) m(e) g(can) g(step) g
(through) e(it) i(with) g(a) f(debugger.) 65 b(So,) 41
b(set) p Fl 39 w(MPATROL_OPTIONS) p Fo 34 w(to) 94 5347
y(`) p Fl(ALLOCSTOP=1000) p Fo(') 30 b(and) j(load) h(the) f(program) g
(in) m(to) h(the) f(debugger.) 49 b(If) 33 b(y) m(ou) g(are) h(using) p
Fl 33 w(gdb) p Fo 32 w(y) m(ou) f(can) h(no) m(w) 94
5446 y(do) c(the) f(follo) m(wing) i(steps,) f(but) e(if) i(y) m(ou) f
(are) h(not) g(y) m(ou) f(will) h(ha) m(v) m(e) h(to) f(use) f(the) g
(equiv) -5 b(alen) m(t) 31 b(commands) e(in) g(y) m(our) 94
5546 y(debugger.) 56 b(Note) 36 b(that) g(`) p Fl(\(gdb\)) p
Fo(') f(is) g(the) g(debugger) g(command) h(prompt) e(and) h(so) g(an) m
(ything) h(that) g(app) s(ears) 94 5645 y(on) 31 b(that) g(line) f
(after) h(that) g(should) f(b) s(e) f(t) m(yp) s(ed) h(as) h(a) g
(command.) p 90 rotate dyy eop
%%Page: 35 41
35 40 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(35) p Fl 334 365 a(\(gdb\)) 47 b(break) f(__mp_trap)
334 469 y(Breakpoint) f(1) j(at) f(0x804ee83) 334 573
y(\(gdb\)) g(run) 334 677 y(Starting) f(program:) g(a.out) 334
780 y(Breakpoint) f(1,) j(0x804ee83) d(in) i(__mp_trap\(\)) 334
884 y(\(gdb\)) g(backtrace) 334 988 y(#0) 95 b(0x804ee83) 46
b(in) h(__mp_trap\(\)) 334 1092 y(#1) 95 b(0x804c61b) 46
b(in) h(__mp_getmemory\(\)) 334 1196 y(#2) 95 b(0x8049894) 46
b(in) h(__mp_alloc\(\)) 334 1299 y(#3) 95 b(0x8049449) 46
b(in) h(main\(\)) f(at) h(test.c:16) 334 1403 y(\(gdb\)) g(finish) 334
1507 y(Run) g(till) g(exit) g(from) f(#0) 95 b(0x804ee83) 45
b(in) j(__mp_trap\(\)) 334 1611 y(0x804c61b) e(in) h
(__mp_getmemory\(\)) 334 1714 y(\(gdb\)) g(finish) 334
1818 y(Run) g(till) g(exit) g(from) f(#0) 95 b(0x804c61b) 45
b(in) j(__mp_getmemory\(\)) 334 1922 y(0x8049894) e(in) h
(__mp_alloc\(\)) 334 2026 y(\(gdb\)) g(finish) 334 2130
y(Run) g(till) g(exit) g(from) f(#0) 95 b(0x8049894) 45
b(in) j(__mp_alloc\(\)) 334 2233 y(0x8049449) e(in) h(main\(\)) f(at) h
(test.c:16) 334 2337 y(16) 668 b(if) 47 b(\(p) g(=) h(malloc\(16\)\))
334 2441 y(\(gdb\)) f(step) 334 2545 y(17) 859 b(free\(p\);) 334
2648 y(\(gdb\)) 47 b(step) 334 2752 y(15) 477 b(for) 47
b(\(i) g(=) h(0;) f(i) g(<) h(1000;) e(i++\)) 334 2856
y(\(gdb\)) h(step) 334 2960 y(18) 477 b(free\(p\);) 334
3064 y(\(gdb\)) 47 b(quit) 334 3167 y(The) g(program) f(is) h(running.)
94 b(Exit) 46 b(anyway?) g(\(y) h(or) g(n\)) h(y) p Fo
219 3314 a(After) 32 b(setting) g(the) g(breakp) s(oin) m(t) g(and) e
(running) g(the) i(program,) g(the) f(debugger) h(halts) g(at) p
Fl 32 w(__mp_trap\(\)) p Fo(.) 94 3414 y(Because) p Fl
24 w(__mp_trap\(\)) p Fo 20 w(is) 22 b(a) h(function) f(within) g(the) g
(mpatrol) h(library) -8 b(,) 24 b(y) m(ou) f(don't) f(w) m(an) m(t) h
(to) h(b) s(other) d(stepping) 94 3513 y(through) 35
b(an) m(y) g(of) g(the) h(library) e(functions,) i(and) f(in) g(this) f
(case) j(y) m(ou) e(can't) h(since) f(the) h(mpatrol) f(library) g(w) m
(as) 94 3613 y(not) j(compiled) f(with) f(debugging) h(information) g
(enabled.) 60 b(So,) 39 b(after) e(returning) f(from) h(all) g(of) g
(the) g(library) 94 3712 y(functions,) 32 b(the) f(source) g(line) h(b)
s(ecomes) f(line) g(16) h(b) s(ecause) g(that) f(w) m(as) h(the) f(lo) s
(cation) i(of) e(the) g(1000th) i(memory) 94 3812 y(allo) s(cation.) 51
b(Single-stepping) 33 b(t) m(wice) h(gets) g(us) e(to) h(line) g(18) h
(whic) m(h) e(is) h(our) f(destination.) 49 b(Note) 34
b(that) f(the) g(\014le) 94 3912 y(`) p Fl(extra/.gdbinit) p
Fo(') k(included) j(in) g(the) g(mpatrol) h(distribution) e(con) m
(tains) j(prede\014ned) c(commands) i(whic) m(h) 94 4011
y(mak) m(e) 32 b(setting) f(the) g(allo) s(cation) i(index) d(to) h
(stop) f(at) h(m) m(uc) m(h) g(easier.) 219 4158 y(Sometimes) 24
b(it) h(is) e(useful) g(to) i(b) s(e) e(able) h(to) g(see) g
(information) g(ab) s(out) g(a) g(memory) f(allo) s(cation) j(whilst) e
(running) 94 4258 y(a) e(program) g(from) f(within) g(a) h(debugger.) 38
b(The) p Fl 21 w(__mp_printinfo\(\)) p Fo 17 w(function) 21
b(is) h(pro) m(vided) f(for) g(that) i(purp) s(ose) 94
4357 y(and) 34 b(tak) m(es) i(a) f(heap) f(address) f(as) i(its) f
(only) h(argumen) m(t.) 53 b(Using) 34 b(the) h(ab) s(o) m(v) m(e) g
(example,) h(it) f(w) m(ould) f(ha) m(v) m(e) i(b) s(een) 94
4457 y(p) s(ossible) 30 b(to) i(prin) m(t) e(out) g(information) h(ab) s
(out) f(the) g(p) s(oin) m(ter) h(`) p Fl(p) p Fo(') f(at) i(line) e
(17) h(from) f(within) p Fl 30 w(gdb) p Fo(:) p Fl 334
4608 a(\(gdb\)) 47 b(call) f(__mp_printinfo\(p\)) 334
4711 y(address) g(0x080620E8) f(located) h(in) h(allocated) f(block:)
525 4815 y(start) h(of) g(block:) 237 b(0x080620E8) 525
4919 y(size) 47 b(of) g(block:) 285 b(16) 47 b(bytes) 525
5023 y(stored) f(type:) 381 b(<unknown>) 525 5127 y(stored) 46
b(type) h(size:) 142 b(<unknown>) 525 5230 y(user) 47
b(data:) 476 b(0x00000000) 525 5334 y(allocated) 46 b(by:) 333
b(malloc) 525 5438 y(allocation) 45 b(index:) 142 b(1000) 525
5542 y(reallocation) 45 b(index:) h(0) 525 5645 y(modification) f
(event:) h(1999) p 90 rotate dyy eop
%%Page: 36 42
36 41 bop Fo 94 -116 a(36) 3377 b(mpatrol) p Fl 525 365
a(flags:) 667 b(none) 525 469 y(calling) 46 b(function:) 141
b(main) 525 573 y(called) 46 b(from) h(file:) 142 b(test.c) 525
677 y(called) 46 b(at) i(line:) 237 b(16) 525 780 y(function) 46
b(call) h(stack:) 716 884 y(0x08049449) e(main) 716 988
y(0x4007C9CB) g(__libc_start_main) 716 1092 y(0x08049381) g(_start) p
Fo 219 1215 a(Some) d(debuggers,) j(suc) m(h) c(as) p
Fl 42 w(gdb) p Fo(,) j(also) f(allo) m(w) h(y) m(ou) e(to) g(de\014ne) g
(y) m(our) f(o) m(wn) h(commands) g(for) f(use) h(in) g(a) 94
1315 y(debugging) g(session.) 76 b(The) 41 b(follo) m(wing) i(example) g
(de\014nes) e(a) h(new) p Fl 42 w(gdb) p Fo 41 w(command) f(called) i
(`) p Fl(printalloc) p Fo(') 94 1415 y(whic) m(h) 31
b(calls) p Fl 31 w(__mp_printinfo\(\)) p Fh 1325 1382
a(6) p Fo 1358 1415 a(:) p Fl 334 1542 a(\(gdb\)) 47
b(define) f(printalloc) 334 1646 y(Type) h(commands) f(for) h
(definition) e(of) i("printalloc".) 334 1750 y(End) g(with) g(a) g
(line) g(saying) f(just) h("end".) 334 1854 y(>call) g
(__mp_printinfo\($arg0\)) 334 1957 y(>end) 334 2061 y(\(gdb\)) g
(document) e(printalloc) 334 2165 y(Type) i(documentation) d(for) j
("printalloc".) 334 2269 y(End) g(with) g(a) g(line) g(saying) f(just) h
("end".) 334 2372 y(>Displays) f(information) e(about) j(an) g(address)
f(in) h(the) g(heap.) 334 2476 y(>end) p Fn 94 2731 a(7.6) 69
b(T) -11 b(esting) p Fo 219 2912 a(The) 20 b(mpatrol) i(library) e(has)
h(sev) m(eral) h(features) f(that) h(mak) m(e) g(it) f(useful) f(when) g
(testing) i(a) f(program's) g(dynamic) 94 3012 y(memory) 35
b(allo) s(cations.) 55 b(These) 35 b(are) f(features) h(that) g(do) g
(not) g(help) f(in) g(\014xing) g(an) h(existing) g(bug,) g(but) f
(rather) 94 3112 y(help) c(to) i(iden) m(tify) e(additional) i(bugs) d
(that) i(ma) m(y) g(b) s(e) f(lurking) g(in) g(y) m(our) g(co) s(de.)
219 3235 y(It) 36 b(is) f(p) s(ossible) h(to) g(set) g(a) g(sim) m
(ulated) g(upp) s(er) e(limit) i(on) g(the) g(amoun) m(t) g(of) f(heap)
h(memory) f(a) m(v) -5 b(ailable) 38 b(to) f(a) 94 3335
y(pro) s(cess) d(with) g(the) h(`) p Fl(LIMIT) p Fo(') e(option,) k
(whic) m(h) d(accepts) h(a) g(size) g(in) f(b) m(ytes,) i(but) e(will) h
(b) s(e) f(disabled) g(when) f(it) i(is) 94 3434 y(zero.) 40
b(This) 22 b(can) i(b) s(e) f(extremely) h(useful) f(for) g(testing) h
(a) g(program) f(under) f(sim) m(ulated) i(lo) m(w) g(memory) f
(conditions) 94 3534 y(to) 32 b(see) g(ho) m(w) f(it) h(handles) f(suc)
m(h) f(errors.) 43 b(Of) 30 b(course,) i(y) m(ou) g(should) e(set) h
(the) h(heap) f(limit) h(to) g(a) f(v) -5 b(alue) 32
b(less) f(than) 94 3634 y(the) g(amoun) m(t) g(of) f(actual) i(a) m(v)
-5 b(ailable) 33 b(memory) d(otherwise) h(this) f(option) h(will) g(ha)
m(v) m(e) g(no) g(e\013ect.) 42 b(Note) 32 b(that) f(the) 94
3733 y(mpatrol) 38 b(library) f(ma) m(y) g(use) g(up) f(a) i(small) f
(amoun) m(t) h(of) f(heap) g(memory) g(when) f(it) h(initialises) i
(itself) p Fh 3554 3700 a(7) p Fo 3629 3733 a(so) f(the) 94
3833 y(v) -5 b(alue) 32 b(passed) e(to) h(the) g(`) p
Fl(LIMIT) p Fo(') e(option) i(ma) m(y) g(need) g(to) g(b) s(e) f(set) h
(sligh) m(tly) h(higher) e(than) h(y) m(ou) f(w) m(ould) h(normally) 94
3932 y(exp) s(ect.) 219 4056 y(It) 23 b(is) h(also) g(p) s(ossible) f
(to) h(instruct) f(the) h(mpatrol) g(library) f(to) h(randomly) e(fail)
i(a) g(certain) g(n) m(um) m(b) s(er) f(of) g(memory) 94
4156 y(allo) s(cations) h(so) f(that) f(y) m(ou) g(can) g(further) f
(test) i(error) e(handling) g(co) s(de) h(in) g(a) g(program.) 38
b(The) 21 b(frequency) h(at) g(whic) m(h) 94 4255 y(failures) 35
b(o) s(ccur) f(can) g(b) s(e) f(con) m(trolled) j(with) e(the) g(`) p
Fl(FAILFREQ) p Fo(') f(option,) i(where) f(a) h(v) -5
b(alue) 34 b(of) g(zero) h(means) f(that) 94 4355 y(no) c(failures) f
(will) g(o) s(ccur,) h(but) e(an) m(y) i(other) f(v) -5
b(alue) 30 b(will) f(randomly) g(cause) h(failures.) 40
b(F) -8 b(or) 30 b(example,) h(a) e(v) -5 b(alue) 30
b(of) 94 4455 y(`) p Fl(10) p Fo(') h(will) f(cause) h(roughly) f(one) h
(in) f(ten) h(failures) f(and) g(a) h(v) -5 b(alue) 31
b(of) f(`) p Fl(1) p Fo(') h(will) f(cause) h(ev) m(ery) g(memory) g
(allo) s(cation) 94 4554 y(to) d(fail.) 40 b(The) 27
b(random) f(sequence) h(can) g(b) s(e) f(made) h(predictable) h(b) m(y)
e(using) h(the) g(`) p Fl(FAILSEED) p Fo(') e(option.) 40
b(If) 26 b(this) h(is) 94 4654 y(non-zero) j(then) f(the) g(same) h
(program) e(run) g(with) h(the) g(same) g(failure) h(frequency) e(and) h
(same) g(failure) g(seed) h(will) 94 4753 y(fail) e(on) f(exactly) i
(the) e(same) h(memory) e(allo) s(cations.) 42 b(If) 27
b(this) g(is) g(zero) h(then) e(the) h(failure) h(seed) f(will) g
(itself) h(b) s(e) e(set) 94 4853 y(randomly) -8 b(,) 31
b(but) f(y) m(ou) g(can) h(see) g(its) g(v) -5 b(alue) 31
b(when) e(the) i(summary) e(is) h(displa) m(y) m(ed) h(at) g(program) f
(termination.) 219 4977 y(When) 40 b(running) p Fi 39
w(b) -5 b(atch) 43 b(tests) p Fh 1270 4944 a(8) p Fo
1349 4977 a(it) e(is) f(sometimes) i(useful) e(to) h(b) s(e) f(able) h
(to) g(detect) h(if) e(there) h(ha) m(v) m(e) h(b) s(een) 94
5076 y(an) m(y) 29 b(memory) f(leaks.) 41 b(Suc) m(h) 28
b(leaks) h(should) e(normally) i(b) s(e) f(distinguished) f(from) h(co)
s(de) g(whic) m(h) g(has) g(purp) s(osely) 94 5176 y(not) 33
b(freed) f(the) h(memory) f(that) h(it) g(allo) s(cated,) i(so) e
(there) f(ma) m(y) h(b) s(e) f(a) h(certain) g(exp) s(ected) g(n) m(um)
m(b) s(er) e(of) h(unfreed) p 94 5268 1200 4 v Fh 143
5328 a(6) p Fg 219 5360 a(A) 25 b(sample) i(GDB) f(command) f(\014le) h
(for) h(use) e(with) h(mpatrol) h(can) e(b) r(e) h(found) f(in) h(`) p
Ff(extra/.gdbinit) p Fg('.) p Fh 143 5425 a(7) p Fg 219
5457 a(Actually) -6 b(,) 22 b(it's) h(not) f(really) h(the) e(mpatrol) i
(library) f(that) g(uses) g(the) g(memory) g(but) f(the) h(ob) t(ject) g
(\014le) g(access) i(libraries) f(since) g(they) 219
5548 y(call) p Ff 27 w(malloc\(\)) p Fg 27 w(to) j(allo) r(cate) i(an) n
(y) d(memory) h(that) f(they) g(require.) p Fh 143 5614
a(8) p Fg 219 5645 a(A) g(set) h(of) h(tests) f(that) f(run) g(without)
h(user) g(in) n(terv) n(en) n(tion.) p 90 rotate dyy
eop
%%Page: 37 43
37 42 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(37) 94 365 y(allo) s(cations) 35 b(at) f(program) e
(termination.) 49 b(It) 33 b(ma) m(y) g(b) s(e) g(that) g(y) m(ou) g(w)
m(ould) g(lik) m(e) h(to) f(highligh) m(t) h(an) m(y) f(additional) 94
465 y(unfreed) e(allo) s(cations) i(since) f(they) g(ma) m(y) g(b) s(e)
f(due) g(to) h(real) h(memory) e(leaks,) i(so) f(the) g(`) p
Fl(UNFREEDABORT) p Fo(') c(option) 94 565 y(can) d(b) s(e) e(set) i(to)
g(a) g(threshold) e(n) m(um) m(b) s(er) g(of) h(exp) s(ected) h
(unfreed) e(allo) s(cations.) 41 b(If) 23 b(the) i(library) e(detects) j
(a) e(n) m(um) m(b) s(er) 94 664 y(of) 32 b(unfreed) e(allo) s(cations)
k(higher) d(than) h(this) f(then) g(it) h(will) g(ab) s(ort) g(the) f
(program) h(at) g(termination) g(so) g(that) g(it) 94
764 y(fails.) 42 b(All) 31 b(tests) g(that) g(fail) g(in) f(this) g(w) m
(a) m(y) i(can) e(then) g(b) s(e) g(examined) h(after) f(the) h(test) g
(suite) g(\014nishes.) p Fn 94 1018 a(7.7) 69 b(Library) 45
b(functions) p Fo 219 1200 a(Along) 25 b(with) f(the) h(standard) e
(set) i(of) f(C) g(and) g(C) p Fl(++) p Fo 23 w(dynamic) g(memory) g
(allo) s(cation) j(functions,) e(the) g(mpatrol) 94 1299
y(library) g(also) g(comes) g(with) f(an) h(additional) g(set) g(of) g
(functions) f(whic) m(h) g(can) g(b) s(e) g(used) g(to) h(pro) m(vide) g
(additional) g(in-) 94 1399 y(formation) h(to) f(y) m(our) f(program,) i
(and) e(whic) m(h) g(can) h(b) s(e) f(called) i(at) f(v) -5
b(arious) 25 b(p) s(oin) m(ts) f(in) g(y) m(our) h(co) s(de) g(for) f
(debugging) 94 1499 y(purp) s(oses.) 42 b(Y) -8 b(ou) 31
b(m) m(ust) g(alw) m(a) m(ys) i(include) e(the) g(`) p
Fl(mpatrol.h) p Fo(') e(header) i(\014le) g(in) g(order) g(to) h(use) f
(these) g(functions,) 94 1598 y(but) 25 b(y) m(ou) h(can) g(c) m(hec) m
(k) g(for) g(a) f(sp) s(eci\014c) h(v) m(ersion) f(of) h(the) f
(mpatrol) h(library) f(b) m(y) g(c) m(hec) m(king) j(the) p
Fl 25 w(MPATROL_VERSION) p Fo 94 1698 a(prepro) s(cessor) d(macro.) 40
b(Y) -8 b(ou) 26 b(can) h(c) m(hec) m(k) g(the) f(v) m(ersion) g(of) g
(the) g(mpatrol) g(library) f(that) i(a) f(program) f(w) m(as) i(link) m
(ed) 94 1797 y(with) k(b) m(y) f(calling) i(the) p Fl
30 w(__mp_libversion\(\)) p Fo 26 w(function.) 219 1921
y(Certain) 41 b(mpatrol) g(library) f(options) h(can) g(b) s(e) f(set) h
(after) g(the) g(library) f(has) h(b) s(een) f(initialised) h(with) g
(the) p Fl 94 2021 a(__mp_setoption\(\)) p Fo 28 w(function.) k(This) 31
b(allo) m(ws) i(y) m(ou) f(to) g(o) m(v) m(erride) h(the) f(default) g
(options) h(or) e(those) i(sp) s(eci\014ed) 94 2120 y(in) i(the) p
Fl 36 w(MPATROL_OPTIONS) p Fo 31 w(en) m(vironmen) m(t) h(v) -5
b(ariable) 36 b(from) e(within) h(y) m(our) g(co) s(de.) 55
b(Not) 37 b(all) f(options) f(can) h(b) s(e) 94 2220
y(o) m(v) m(erridden,) i(ho) m(w) m(ev) m(er,) g(since) e(they) g(w) m
(ould) f(require) g(a) h(complete) h(reinitialisation) h(of) e(the) f
(library) g(|) h(the) p Fl 94 2319 a(__mp_setoption\(\)) p
Fo 26 w(function) 29 b(returns) g(a) h(failure) g(indicator) g(in) f
(these) i(cases.) 41 b(Y) -8 b(ou) 30 b(can) g(read) g(the) g(setting)
94 2419 y(of) h(an) m(y) g(mpatrol) f(library) g(option) h(with) f(the)
h(corresp) s(onding) e(function,) p Fl 31 w(__mp_getoption\(\)) p
Fo(.) 219 2543 y(On) f(systems) h(that) h(supp) s(ort) e(it,) i(global)
g(functions) f(\(with) g(C) g(link) -5 b(age\)) 31 b(in) d(an) i
(executable) g(\014le) g(or) f(shared) 94 2642 y(library) d(whose) f
(names) h(b) s(egin) f(with) g(`) p Fl(__mp_init_) p
Fo(') f(will) i(b) s(e) f(noted) h(when) e(the) i(mpatrol) g(library) g
(\014rst) f(starts) 94 2742 y(up) 43 b(and) h(is) f(reading) h(the) g
(sym) m(b) s(ols.) 81 b(Suc) m(h) 43 b(functions) h(will) g(then) g(b) s
(e) f(called) i(as) f(so) s(on) f(as) i(the) f(mpatrol) 94
2841 y(library) e(is) f(initialised,) 46 b(whic) m(h) c(can) g(b) s(e) f
(useful) g(if) g(the) h(initialisation) i(o) s(ccurs) e(b) s(efore) p
Fl 41 w(main\(\)) p Fo 40 w(is) f(called.) 94 2941 y(These) 32
b(functions) e(m) m(ust) i(accept) h(no) e(argumen) m(ts) g(and) g(m) m
(ust) g(return) g(no) g(v) -5 b(alue.) 44 b(Similar) 31
b(b) s(eha) m(viour) g(exists) 94 3041 y(for) k(global) h(functions) e
(whose) g(names) g(b) s(egin) g(with) h(`) p Fl(__mp_fini_) p
Fo(',) e(except) i(that) h(suc) m(h) e(functions) g(will) h(b) s(e) 94
3140 y(executed) e(when) e(the) i(mpatrol) f(library) f(terminates.) 47
b(Note) 33 b(that) g(this) f(feature) g(will) g(ha) m(v) m(e) h(no) f
(e\013ect) i(if) e(the) 94 3240 y(sym) m(b) s(ol) k(table) h(is) f
(stripp) s(ed) f(from) g(the) i(executable) g(\014le) f(or) g(shared) g
(library) f(b) s(efore) h(the) g(program) g(is) g(run,) 94
3340 y(and) e(the) g(order) g(in) g(whic) m(h) g(suc) m(h) g(functions)
f(will) i(b) s(e) e(called) j(if) e(there) g(are) h(more) f(than) g
(one) g(is) g(unsp) s(eci\014ed.) 94 3439 y(The) p Fl
31 w(__mp_atexit\(\)) p Fo 27 w(function) c(can) h(also) h(b) s(e) e
(used) g(to) h(register) h(functions) e(that) h(should) f(b) s(e) g
(called) i(when) 94 3539 y(the) f(mpatrol) g(library) f(terminates.) 219
3662 y(It) 35 b(is) f(p) s(ossible) g(to) h(obtain) g(a) g(great) h
(deal) f(of) f(information) h(ab) s(out) f(an) g(existing) i(memory) e
(allo) s(cation) j(or) 94 3762 y(free) e(blo) s(c) m(k) g(using) f(the)
p Fl 34 w(__mp_info\(\)) p Fo 32 w(function.) 52 b(This) 34
b(tak) m(es) i(an) e(address) f(as) i(an) f(argumen) m(t) h(and) f
(\014lls) g(in) 94 3862 y(an) m(y) i(details) h(ab) s(out) e(its) i
(corresp) s(onding) d(memory) i(allo) s(cation) i(in) d(a) h(supplied) e
(structure.) 56 b(The) 35 b(follo) m(wing) 94 3961 y(example) d
(illustrates) f(this) f(\(it) i(can) e(b) s(e) g(found) f(in) h(`) p
Fl(tests/pass/test4.c) p Fo('\).) p Fl 382 4089 a(23) 95
b(/*) 382 4193 y(24) 143 b(*) 47 b(Demonstrates) e(and) i(tests) f(the)
h(facility) e(for) i(obtaining) f(information) 382 4296
y(25) 143 b(*) 47 b(about) g(the) g(allocation) e(a) i(specific) f
(address) f(belongs) h(to.) 382 4400 y(26) 143 b(*/) 382
4711 y(29) 95 b(#include) 46 b("mpatrol.h") 382 4815
y(30) 95 b(#include) 46 b(<stdio.h>) 382 5127 y(33) 95
b(void) 47 b(display\(void) d(*p\)) 382 5230 y(34) 95
b({) 382 5334 y(35) 286 b(__mp_allocstack) 44 b(*s;) 382
5438 y(36) 286 b(__mp_allocinfo) 44 b(d;) 382 5542 y(37) 286
b(__mp_symbolinfo) 44 b(i;) p 90 rotate dyy eop
%%Page: 38 44
38 43 bop Fo 94 -116 a(38) 3377 b(mpatrol) p Fl 382 365
a(39) 286 b(if) 47 b(\(!__mp_info\(p,) d(&d\)) j(||) g(!d.allocated\))
382 469 y(40) 286 b({) 382 573 y(41) 477 b(fprintf\(stderr,) 44
b("nothing) h(known) h(about) h(address) f(0x\0450*lX\\n",) 382
677 y(42) 859 b(sizeof\(void) 44 b(*\)) k(*) f(2,) g(p\);) 382
780 y(43) 477 b(return;) 382 884 y(44) 286 b(}) 382 988
y(45) g(fprintf\(stderr,) 44 b("block:) 189 b(0x\0450*lX\\n",) 44
b(sizeof\(void) h(*\)) i(*) h(2,) f(d.block\);) 382 1092
y(46) 286 b(fprintf\(stderr,) 44 b("size:) 237 b(\045lu\\n",) 45
b(d.size\);) 382 1196 y(47) 286 b(fprintf\(stderr,) 44
b("type:) 237 b(\045s\\n",) 46 b(__mp_function\(d.type\)\);) 382
1299 y(48) 286 b(fprintf\(stderr,) 44 b("alloc:) 189
b(\045lu\\n",) 45 b(d.alloc\);) 382 1403 y(49) 286 b(fprintf\(stderr,)
44 b("realloc:) 93 b(\045lu\\n",) 45 b(d.realloc\);) 382
1507 y(50) 286 b(fprintf\(stderr,) 44 b("thread:) 141
b(\045lu\\n",) 45 b(d.thread\);) 382 1611 y(51) 286 b(fprintf\(stderr,)
44 b("event:) 189 b(\045lu\\n",) 45 b(d.event\);) 382
1714 y(52) 286 b(fprintf\(stderr,) 44 b("func:) 237 b(\045s\\n",) 46
b(d.func) g(?) h(d.func) f(:) i("<unknown>"\);) 382 1818
y(53) 286 b(fprintf\(stderr,) 44 b("file:) 237 b(\045s\\n",) 46
b(d.file) g(?) h(d.file) f(:) i("<unknown>"\);) 382 1922
y(54) 286 b(fprintf\(stderr,) 44 b("line:) 237 b(\045lu\\n",) 45
b(d.line\);) 382 2026 y(55) 286 b(for) 47 b(\(s) g(=) h(d.stack;) d(s) j
(!=) f(NULL;) f(s) i(=) f(s->next\)) 382 2130 y(56) 286
b({) 382 2233 y(57) 477 b(fprintf\(stderr,) 44 b("\\t0x\0450*lX",) g
(sizeof\(void) h(*\)) i(*) g(2,) h(s->addr\);) 382 2337
y(58) 477 b(if) 47 b(\(__mp_syminfo\(s->addr,) 42 b(&i\)\)) 382
2441 y(59) 477 b({) 382 2545 y(60) 668 b(if) 47 b(\(i.name) f(!=) h
(NULL\)) 382 2648 y(61) 859 b(fprintf\(stderr,) 43 b(") 48
b(\045s",) e(i.name\);) 382 2752 y(62) 668 b(if) 47 b(\(\(i.addr) f(!=)
h(NULL\)) f(&&) h(\(i.addr) f(!=) h(s->addr\)\)) 382
2856 y(63) 859 b(fprintf\(stderr,) 43 b("\045+ld",) 382
2960 y(64) 1241 b(\(char) 46 b(*\)) h(s->addr) f(-) h(\(char) g(*\)) g
(i.addr\);) 382 3064 y(65) 668 b(if) 47 b(\(i.object) e(!=) i(NULL\))
382 3167 y(66) 859 b(fprintf\(stderr,) 43 b(") 48 b([\045s]",) e
(i.object\);) 382 3271 y(67) 477 b(}) 382 3375 y(68) g(else) 47
b(if) g(\(s->name) e(!=) i(NULL\)) 382 3479 y(69) 668
b(fprintf\(stderr,) 43 b(") 48 b(\045s",) f(s->name\);) 382
3582 y(70) 477 b(fputc\('\\n',) 45 b(stderr\);) 382 3686
y(71) 286 b(}) 382 3790 y(72) g(fprintf\(stderr,) 44
b("typestr:) 93 b(\045s\\n",) 382 3894 y(73) 668 b(d.typestr) 45
b(?) j(d.typestr) d(:) i("<unknown>"\);) 382 3998 y(74) 286
b(fprintf\(stderr,) 44 b("typesize:) h(\045lu\\n",) g(d.typesize\);) 382
4101 y(75) 286 b(fprintf\(stderr,) 44 b("userdata:) h(0x\0450*lX\\n",) f
(sizeof\(void) h(*\)) i(*) h(2,) f(d.userdata\);) 382
4205 y(76) 286 b(fputs\("flags:) 140 b(",) 47 b(stderr\);) 382
4309 y(77) 286 b(if) 47 b(\(!d.freed) e(&&) j(!d.marked) d(&&) i
(!d.profiled) e(&&) i(!d.traced) e(&&) i(!d.internal\)) 382
4413 y(78) 477 b(fputs\(") 46 b(none\\n",) f(stderr\);) 382
4516 y(79) 286 b(else) 382 4620 y(80) g({) 382 4724 y(81) 477
b(if) 47 b(\(d.freed\)) 382 4828 y(82) 668 b(fputs\(") 46
b(freed",) f(stderr\);) 382 4932 y(83) 477 b(if) 47 b(\(d.marked\)) 382
5035 y(84) 668 b(fputs\(") 46 b(marked",) f(stderr\);) 382
5139 y(85) 477 b(if) 47 b(\(d.profiled\)) 382 5243 y(86) 668
b(fputs\(") 46 b(profiled",) f(stderr\);) 382 5347 y(87) 477
b(if) 47 b(\(d.traced\)) 382 5450 y(88) 668 b(fputs\(") 46
b(traced",) f(stderr\);) 382 5554 y(89) 477 b(if) 47
b(\(d.internal\)) p 90 rotate dyy eop
%%Page: 39 45
39 44 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(39) p Fl 382 365 a(90) 668 b(fputs\(") 46
b(internal",) f(stderr\);) 382 469 y(91) 477 b(fputc\('\\n',) 45
b(stderr\);) 382 573 y(92) 286 b(}) 382 677 y(93) 95
b(}) 382 988 y(96) g(void) 47 b(func2\(void\)) 382 1092
y(97) 95 b({) 382 1196 y(98) 286 b(void) 47 b(*p;) 334
1403 y(100) 286 b(if) 47 b(\(p) g(=) h(malloc\(16\)\)) 334
1507 y(101) 286 b({) 334 1611 y(102) 477 b(display\(p\);) 334
1714 y(103) g(free\(p\);) 334 1818 y(104) 286 b(}) 334
1922 y(105) g(display\(p\);) 334 2026 y(106) 95 b(}) 334
2337 y(109) g(void) 47 b(func1\(void\)) 334 2441 y(110) 95
b({) 334 2545 y(111) 286 b(func2\(\);) 334 2648 y(112) 95
b(}) 334 2960 y(115) g(int) 47 b(main\(void\)) 334 3064
y(116) 95 b({) 334 3167 y(117) 286 b(func1\(\);) 334
3271 y(118) g(return) 46 b(EXIT_SUCCESS;) 334 3375 y(119) 95
b(}) p Fo 219 3524 a(When) 36 b(this) g(is) g(compiled) h(and) f(run,) g
(it) h(should) e(giv) m(e) j(the) e(follo) m(wing) i(output,) f
(although) g(the) f(p) s(oin) m(ters) 94 3624 y(are) 31
b(lik) m(ely) h(to) f(b) s(e) f(di\013eren) m(t.) p Fl
334 3778 a(block:) 190 b(0x0806A0E8) 334 3881 y(size:) 238
b(16) 334 3985 y(type:) g(malloc) 334 4089 y(alloc:) 190
b(52) 334 4193 y(realloc:) 94 b(0) 334 4296 y(thread:) 142
b(0) 334 4400 y(event:) 190 b(97) 334 4504 y(func:) 238
b(func2) 334 4608 y(file:) g(test4.c) 334 4711 y(line:) g(100) 812
4815 y(0x0804A743) 45 b(func2+35) g([./a.out]) 812 4919
y(0x0804A790) g(func1+8) h([./a.out]) 812 5023 y(0x0804A79C) f(main+8) h
([./a.out]) 812 5127 y(0x4007C9CB) f(__libc_start_main+255) d
([/lib/libc.so.6]) 812 5230 y(0x0804A3E1) j(_start+33) g([./a.out]) 334
5334 y(typestr:) 94 b(<unknown>) 334 5438 y(typesize:) 46
b(0) 334 5542 y(userdata:) g(0x00000000) 334 5645 y(flags:) 190
b(none) p 90 rotate dyy eop
%%Page: 40 46
40 45 bop Fo 94 -116 a(40) 3377 b(mpatrol) p Fl 334 365
a(nothing) 46 b(known) h(about) f(address) g(0x0806A0E8) p
Fo 219 497 a(As) 32 b(y) m(ou) h(can) g(see,) h(an) m(ything) e(that) h
(the) g(mpatrol) g(library) f(kno) m(ws) g(ab) s(out) g(an) m(y) h
(memory) f(allo) s(cation) j(can) 94 597 y(b) s(e) g(obtained) h(for) f
(use) g(in) h(y) m(our) f(o) m(wn) g(co) s(de,) j(whic) m(h) d(can) g
(b) s(e) g(v) m(ery) h(useful) f(if) g(y) m(ou) h(need) f(to) h(write) g
(handlers) 94 696 y(to) 45 b(k) m(eep) f(trac) m(k) g(of) g(memory) f
(allo) s(cations,) 50 b(etc.) 44 b(for) g(debugging) f(purp) s(oses.) 78
b(It) 44 b(can) f(also) i(b) s(e) e(useful) f(to) 94
796 y(ha) m(v) m(e) 31 b(this) d(information) h(when) f(running) f(y) m
(our) i(program) g(within) f(a) h(debugger,) g(so) h(y) m(ou) f(can) g
(use) f(the) p Fl 29 w(__mp_) 94 895 y(printinfo\(\)) p
Fo 32 w(function) 35 b(to) h(displa) m(y) f(information) h(ab) s(out) e
(a) i(heap) f(address) f(if) h(y) m(our) g(debugger) g(supp) s(orts) 94
995 y(calling) f(functions) e(from) f(the) i(command) f(prompt.) 45
b(Note) 33 b(that) g(the) f(textual) h(represen) m(tation) h(of) e(the)
p Fl 32 w(type) p Fo 94 1095 a(\014eld) e(returned) g(b) m(y) g(the) p
Fl 30 w(__mp_info\(\)) p Fo 28 w(function) g(can) h(b) s(e) e(obtained)
i(b) m(y) f(calling) p Fl 32 w(__mp_function\(\)) p Fo(.) 219
1226 y(The) k(mpatrol) h(library) f(records) g(the) g(error) g(co) s
(de) h(from) f(the) g(most) h(recen) m(tly) h(encoun) m(tered) f(w) m
(arning) f(or) 94 1326 y(error) 41 b(in) h(the) p Fl
41 w(__mp_errno) p Fo 39 w(global) g(v) -5 b(ariable.) 75
b(This) 41 b(v) -5 b(ariable) 42 b(can) f(b) s(e) g(read) g(and) g
(compared) h(with) f(the) 94 1426 y(kno) m(wn) 31 b(error) h(co) s(des)
f(listed) h(in) f(`) p Fl(mpatrol.h) p Fo('.) 42 b(It) 32
b(can) f(also) i(b) s(e) e(reset) h(to) p Fl 32 w(MP_ET_NONE) p
Fo 29 w(b) s(efore) f(calling) i(an) m(y) 94 1525 y(mpatrol) h(library)
f(function) g(in) g(order) f(to) i(c) m(hec) m(k) h(to) f(see) g(if) f
(a) h(w) m(arning) f(or) g(error) g(w) m(as) h(encoun) m(tered) f
(during) 94 1625 y(the) g(call.) 46 b(A) 32 b(string) g(represen) m
(tation) h(of) f(the) g(error) f(message) i(corresp) s(onding) e(to) i
(an) m(y) f(mpatrol) g(error) g(co) s(de) 94 1724 y(can) f(b) s(e) f
(obtained) h(b) m(y) f(calling) i(the) p Fl 30 w(__mp_strerror\(\)) p
Fo 27 w(function) e(with) g(the) g(sp) s(eci\014c) g(co) s(de.) 219
1856 y(The) p Fl 24 w(userdata) p Fo 23 w(\014eld) 24
b(sho) m(wn) g(in) g(the) h(previous) f(example) i(can) f(b) s(e) f
(set) h(for) g(an) m(y) g(memory) f(allo) s(cation) j(with) 94
1956 y(the) p Fl 34 w(__mp_setuser\(\)) p Fo 30 w(function.) 49
b(This) 33 b(can) h(ha) m(v) m(e) g(an) m(y) g(v) -5
b(alue) 34 b(and) f(is) g(not) h(in) m(terpreted) g(b) m(y) f(the) h
(mpatrol) 94 2055 y(library) -8 b(.) 41 b(It) 31 b(w) m(as) f(added) g
(for) g(user) g(co) s(de) h(to) g(asso) s(ciate) h(its) f(o) m(wn) f
(data) h(with) f(memory) h(allo) s(cations.) 219 2187
y(The) p Fl 27 w(marked) p Fo 25 w(\014eld) c(that) h(is) f(also) h
(sho) m(wn) e(in) h(the) g(previous) g(example) h(indicates) g(if) f(a)
h(memory) f(allo) s(cation) 94 2287 y(has) 36 b(b) s(een) p
Fi 36 w(marke) -5 b(d) p Fo 47 w(to) 37 b(indicate) g(that) g(it) f
(should) g(nev) m(er) g(b) s(e) g(freed.) 57 b(This) 36
b(can) g(only) g(b) s(e) g(p) s(erformed) e(from) 94
2386 y(the) i(source) g(co) s(de) g(b) m(y) g(calling) p
Fl 37 w(__mp_setmark\(\)) p Fo 32 w(with) g(the) g(address) f(of) h
(the) g(memory) f(allo) s(cation.) 60 b(Suc) m(h) 94
2486 y(a) 36 b(memory) g(allo) s(cation) i(can) d(b) s(e) g(reallo) s
(cated) j(but) d(nev) m(er) g(freed,) i(and) e(will) h(not) f(con) m
(tribute) i(to) f(the) g(list) g(of) 94 2586 y(memory) f(leaks.) 56
b(It) 35 b(will) h(also) g(b) s(e) e(pro\014led) h(and) f(traced) i(as)
f(freed) g(b) m(y) g(the) g(end) g(of) g(program) g(execution) h(if) 94
2685 y(memory) 31 b(allo) s(cation) h(pro\014ling) e(or) h(tracing) g
(is) f(enabled.) 219 2817 y(Y) -8 b(ou) 31 b(ma) m(y) g(also) g(ha) m
(v) m(e) h(noticed) f(the) g(use) f(of) p Fl 30 w(__mp_syminfo\(\)) p
Fo 27 w(in) g(the) h(ab) s(o) m(v) m(e) g(example.) 42
b(This) 29 b(function) 94 2916 y(is) 40 b(v) m(ery) g(similar) g(to) g
(the) p Fl 39 w(__mp_info\(\)) p Fo 37 w(function) f(except) h(that) g
(instead) g(of) f(lo) s(oking) i(for) e(the) g(details) i(of) 94
3016 y(a) 34 b(memory) f(allo) s(cation) j(at) e(a) g(sp) s(eci\014c) f
(address,) g(it) h(lo) s(oks) g(for) f(the) h(details) g(of) f(a) h
(function) f(sym) m(b) s(ol) g(at) h(that) 94 3116 y(address.) j(This)
22 b(pro) m(vides) f(user) g(access) j(to) e(the) g(data) h(obtained) f
(b) m(y) g(the) g(mpatrol) g(sym) m(b) s(ol) f(handler,) i(including) 94
3215 y(line) 31 b(n) m(um) m(b) s(er) e(information) i(if) f(the) h(`) p
Fl(USEDEBUG) p Fo(') d(option) j(is) g(supp) s(orted) d(and) i(used.)
219 3347 y(It) k(is) f(also) i(p) s(ossible) e(for) g(y) m(ou) h(to) g
(b) s(e) f(able) h(to) g(in) m(tercept) h(calls) f(to) h(allo) s(cate,)
i(reallo) s(cate) f(and) d(deallo) s(cate) 94 3447 y(memory) 23
b(for) f(y) m(our) h(o) m(wn) f(purp) s(oses.) 36 b(Y) -8
b(ou) 23 b(can) g(install) g(prologue) g(and) f(epilogue) i(functions) e
(that) h(the) g(mpatrol) 94 3546 y(library) 30 b(will) g(call) h(b) s
(efore) f(and) f(after) h(ev) m(ery) h(time) f(one) g(of) g(its) g
(functions) g(is) g(called.) 41 b(These) 30 b(can) g(b) s(e) f(used) g
(for) 94 3646 y(additional) f(tracing) g(or) f(simply) g(to) h(add) e
(extra) i(c) m(hec) m(ks) g(to) g(y) m(our) f(co) s(de.) 40
b(The) 27 b(follo) m(wing) h(co) s(de) f(is) g(an) g(example) 94
3745 y(of) k(this) f(and) g(can) h(b) s(e) e(found) h(in) g(`) p
Fl(tests/pass/test2.c) p Fo('.) p Fl 334 3881 a(23) 95
b(/*) 334 3985 y(24) 143 b(*) 48 b(Demonstrates) c(and) j(tests) f(the)
h(facility) f(for) h(specifying) e(user-defined) 334
4089 y(25) 143 b(*) 48 b(prologue) d(and) i(epilogue) f(functions.) 334
4193 y(26) 143 b(*/) 334 4504 y(29) 95 b(#include) 46
b("mpatrol.h") 334 4608 y(30) 95 b(#include) 46 b(<stdio.h>) 334
4919 y(33) 95 b(__mp_prologuehandler) 43 b(old_prologue;) 334
5023 y(34) 95 b(__mp_epiloguehandler) 43 b(old_epilogue;) 334
5334 y(37) 95 b(void) 47 b(prologue\(MP_CONST) c(void) k(*p,) g(size_t)
f(l,) h(size_t) f(m,) h(MP_CONST) f(char) g(*s,) 334
5438 y(38) 764 b(MP_CONST) 45 b(char) i(*t,) g(unsigned) e(long) i(u,) g
(MP_CONST) f(void) g(*a\)) 334 5542 y(39) 95 b({) 334
5645 y(40) 286 b(if) 47 b(\(old_prologue) e(!=) i(NULL\)) p
90 rotate dyy eop
%%Page: 41 47
41 46 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(41) p Fl 334 365 a(41) 477 b(old_prologue\(p,) 44
b(l,) j(m,) g(s,) g(t,) h(u,) f(a\);) 334 469 y(42) 286
b(if) 47 b(\(p) h(==) f(\(void) f(*\)) h(-1\)) 334 573
y(43) 477 b(fprintf\(stderr,) 44 b("allocating) h(\045lu) h(bytes\\n",)
g(l\);) 334 677 y(44) 286 b(else) 47 b(if) g(\(l) g(==) g(\(size_t\)) f
(-1\)) 334 780 y(45) 477 b(fprintf\(stderr,) 44 b("freeing) h
(allocation) g(0x\0450*lX\\n",) g(sizeof\(void) g(*\)) i(*) g(2,) h
(p\);) 334 884 y(46) 286 b(else) 47 b(if) g(\(l) g(==) g(\(size_t\)) f
(-2\)) 334 988 y(47) 477 b(fprintf\(stderr,) 44 b("duplicating) g
(string) i(`\045s'\\n",) g(p\);) 334 1092 y(48) 286 b(else) 334
1196 y(49) 477 b(fprintf\(stderr,) 44 b("reallocating) g(allocation) h
(0x\0450*lX) h(to) h(\045lu) g(bytes\\n",) 334 1299 y(50) 859
b(sizeof\(void) 45 b(*\)) i(*) g(2,) h(p,) f(l\);) 334
1403 y(51) 95 b(}) 334 1714 y(54) g(void) 47 b(epilogue\(MP_CONST) c
(void) k(*p,) g(MP_CONST) e(char) i(*s,) g(MP_CONST) e(char) i(*t,) 334
1818 y(55) 764 b(unsigned) 45 b(long) i(u,) g(MP_CONST) e(void) i(*a\))
334 1922 y(56) 95 b({) 334 2026 y(57) 286 b(if) 47 b(\(p) h(!=) f
(\(void) f(*\)) h(-1\)) 334 2130 y(58) 477 b(fprintf\(stderr,) 44
b("allocation) h(returns) g(0x\0450*lX\\n",) g(sizeof\(void) g(*\)) i
(*) g(2,) h(p\);) 334 2233 y(59) 286 b(if) 47 b(\(old_epilogue) e(!=) i
(NULL\)) 334 2337 y(60) 477 b(old_epilogue\(p,) 44 b(s,) j(t,) g(u,) g
(a\);) 334 2441 y(61) 95 b(}) 334 2752 y(64) g(int) 47
b(main\(void\)) 334 2856 y(65) 95 b({) 334 2960 y(66) 286
b(void) 47 b(*p,) g(*q;) 334 3167 y(68) 286 b(old_prologue) 45
b(=) i(__mp_prologue\(prologue\);) 334 3271 y(69) 286
b(old_epilogue) 45 b(=) i(__mp_epilogue\(epilogue\);) 334
3375 y(70) 286 b(if) 47 b(\(p) h(=) f(malloc\(16\)\)) 334
3479 y(71) 477 b(if) 47 b(\(q) h(=) f(realloc\(p,) e(32\)\)) 334
3582 y(72) 668 b(free\(q\);) 334 3686 y(73) 477 b(else) 334
3790 y(74) 668 b(free\(p\);) 334 3894 y(75) 286 b(if) 47
b(\(p) h(=) f(\(char) f(*\)) i(strdup\("test"\)\)) 334
3998 y(76) 477 b(free\(p\);) 334 4101 y(77) 286 b
(__mp_prologue\(old_prologu) o(e\);) 334 4205 y(78) g
(__mp_epilogue\(old_epilogu) o(e\);) 334 4309 y(79) g(return) 46
b(EXIT_SUCCESS;) 334 4413 y(80) 95 b(}) p Fo 219 4547
a(Once) 30 b(again,) i(if) e(y) m(ou) h(compile) g(and) f(run) f(the) i
(ab) s(o) m(v) m(e) g(co) s(de,) g(y) m(ou) g(should) e(see) i(the) g
(follo) m(wing) h(output.) p Fl 334 4685 a(allocating) 45
b(16) j(bytes) 334 4789 y(allocation) d(returns) h(0x0806A0E8) 334
4893 y(reallocating) f(allocation) g(0x0806A0E8) g(to) i(32) g(bytes)
334 4997 y(allocation) e(returns) h(0x0806A0E8) 334 5100
y(freeing) g(allocation) f(0x0806A0E8) 334 5204 y(duplicating) g
(string) h(`test') 334 5308 y(allocation) f(returns) h(0x0806A0E5) 334
5412 y(freeing) g(allocation) f(0x0806A0E5) p Fo 219
5546 a(Note) 28 b(that) f(in) f(the) h(ab) s(o) m(v) m(e) h(co) s(de,) g
(the) f(previous) f(prologue) h(and) f(epilogue) i(functions) e(w) m
(ere) h(recorded) g(and) 94 5645 y(called.) 42 b(If) 28
b(this) g(is) g(not) h(done) f(then) g(y) m(our) h(prologue) g(and) e
(epilogue) j(functions) e(will) h(completely) h(o) m(v) m(erride) f
(all) p 90 rotate dyy eop
%%Page: 42 48
42 47 bop Fo 94 -116 a(42) 3377 b(mpatrol) 94 365 y(others,) 27
b(whic) m(h) f(is) f(not) h(usually) f(the) h(exp) s(ected) g(b) s(eha)
m(viour.) 39 b(In) 25 b(case) h(y) m(ou're) h(w) m(ondering) e(what) g
(the) h(last) h(four) 94 465 y(argumen) m(ts) g(of) g(the) g(prologue) g
(and) f(epilogue) h(handlers) f(are,) i(they) e(are) h(the) g(function)
f(name,) h(\014le) g(name,) h(line) 94 565 y(n) m(um) m(b) s(er) j(and)
f(call) j(address) d(of) i(the) f(function) g(that) h(called) p
Fl 33 w(malloc\(\)) p Fo 29 w(or) f(a) h(related) g(function.) 44
b(These) 31 b(can) 94 664 y(b) s(e) f(used) g(in) g(the) g(handlers) g
(to) h(see) g(where) f(they) g(w) m(ere) h(called) h(from.) 219
787 y(Along) g(with) f(b) s(eing) f(able) i(to) g(install) g(prologue) g
(and) e(epilogue) i(functions,) f(y) m(ou) h(can) f(also) h(install) g
(a) g(lo) m(w-) 94 886 y(memory) 23 b(handler) f(with) h(the) p
Fl 23 w(__mp_nomemory\(\)) p Fo 18 w(function,) i(whic) m(h) d(will) h
(b) s(e) f(called) j(b) m(y) d(the) h(mpatrol) g(library) 94
986 y(if) 34 b(it) h(ev) m(er) f(runs) e(out) i(of) g(memory) g(during)
e(the) i(call) h(to) g(a) f(memory) g(allo) s(cation) i(function.) 50
b(This) 33 b(giv) m(es) j(y) m(ou) 94 1086 y(the) 29
b(opp) s(ortunit) m(y) f(to) i(use) e(that) h(handler) f(to) h(either) g
(free) g(up) e(an) m(y) i(unneeded) e(memory) i(or) f(simply) h(to) g
(ab) s(ort,) 94 1185 y(th) m(us) j(remo) m(ving) g(the) g(need) f(to) i
(c) m(hec) m(k) g(for) e(failed) h(allo) s(cations.) 47
b(Note) 33 b(that) f(the) g(lo) m(w-memory) g(handler) f(also) 94
1285 y(accepts) h(the) f(same) g(four) e(common) i(argumen) m(ts) f
(that) h(the) g(prologue) g(and) f(epilogue) h(handlers) f(do.) 219
1407 y(It) k(is) f(also) i(p) s(ossible) e(to) h(iterate) h(o) m(v) m
(er) g(all) f(of) g(the) g(allo) s(cated) h(and) e(freed) g(memory) h
(allo) s(cations) h(that) g(are) 94 1507 y(curren) m(tly) 29
b(in) g(the) g(heap) g(at) h(an) m(y) f(p) s(oin) m(t) g(in) f(a) i
(program.) 40 b(This) 28 b(is) h(done) g(b) m(y) g(in) m(v) m(oking) h
(the) p Fl 29 w(__mp_iterate\(\)) p Fo 94 1606 a(function) 25
b(with) f(a) h(callbac) m(k) i(function) d(whic) m(h) h(is) f(called) i
(once) f(p) s(er) f(allo) s(cation) j(with) d(the) h(start) g(address) f
(of) h(the) 94 1706 y(memory) 31 b(blo) s(c) m(k) h(b) s(eing) e
(passed) h(as) g(the) g(argumen) m(t) h(to) f(the) h(callbac) m(k) h
(function.) 42 b(An) m(y) 31 b(further) f(information) 94
1806 y(ab) s(out) 36 b(the) g(memory) g(allo) s(cation) j(can) d(then) g
(b) s(e) f(obtained) i(via) f(the) p Fl 37 w(__mp_info\(\)) p
Fo 33 w(function.) 57 b(Note) 37 b(that) 94 1905 y(the) p
Fl 29 w(__mp_iterateall\(\)) p Fo 23 w(function) 27 b(do) s(es) h(the) g
(same) g(as) g(the) p Fl 28 w(__mp_iterate\(\)) p Fo
24 w(function) g(except) h(that) f(it) 94 2005 y(also) 37
b(includes) e(all) i(free) f(memory) f(blo) s(c) m(ks) h(and) f(memory)
h(allo) s(cations) i(that) e(are) g(in) m(ternal) g(to) h(the) f
(mpatrol) 94 2105 y(library) -8 b(.) 219 2227 y(Di\013erences) 45
b(in) e(the) h(heap) g(allo) s(cations) h(\(their) f(details,) 49
b(not) 44 b(their) f(con) m(ten) m(ts\)) j(b) s(et) m(w) m(een) e(a) g
(previous) 94 2327 y(p) s(oin) m(t) 30 b(in) f(a) g(program's) g
(execution) i(and) d(the) i(curren) m(t) f(p) s(oin) m(t) g(of) g
(execution) h(can) g(b) s(e) f(determined) f(b) m(y) h(calling) 94
2426 y(the) p Fl 40 w(__mp_snapshot\(\)) p Fo 35 w(function) 38
b(and) h(then) f(in) m(v) m(oking) p Fl 41 w(__mp_iterate\(\)) p
Fo 35 w(with) g(that) i(snapshot) e(v) -5 b(alue) 94
2526 y(as) 39 b(its) f(second) g(argumen) m(t) g(at) g(a) h(later) f(p)
s(oin) m(t) g(in) g(execution.) 64 b(The) 37 b(callbac) m(k) j
(function) e(passed) f(to) p Fl 38 w(__mp_) 94 2626 y(iterate\(\)) p
Fo 29 w(will) 31 b(then) g(only) g(b) s(e) f(in) m(v) m(ok) m(ed) j
(with) d(the) i(start) f(address) f(of) h(an) m(y) h(memory) e(allo) s
(cation) k(that) d(has) 94 2725 y(b) s(een) h(allo) s(cated) j(or) e
(reallo) s(cated) i(\(or) e(freed) f(if) h(the) g(`) p
Fl(NOFREE) p Fo(') e(option) i(is) g(b) s(eing) f(used\)) h(since) g
(the) g(snapshot) 94 2825 y(p) s(oin) m(t.) 74 b(This) 40
b(mak) m(es) i(it) g(p) s(ossible) f(to) h(detect) g(lo) s(calised) h
(memory) e(leaks) h(v) m(ery) g(easily) -8 b(,) 46 b(as) 41
b(the) g(follo) m(wing) 94 2924 y(example) 32 b(\(found) d(in) h(`) p
Fl(tests/pass/test10.c) p Fo('\)) c(sho) m(ws.) p Fl
382 3051 a(23) 95 b(/*) 382 3155 y(24) 143 b(*) 47 b(Demonstrates) e
(and) i(tests) f(the) h(facility) e(for) i(obtaining) f(information) e
(on) 382 3259 y(25) 143 b(*) 47 b(local) g(memory) f(leaks.) 94
b(Will) 46 b(also) h(edit) f(or) i(list) e(the) h(location) f(of) h
(each) 382 3362 y(26) 143 b(*) 47 b(leak) g(if) g(the) g(EDIT) g(or) g
(LIST) f(option) h(is) g(in) g(effect.) 382 3466 y(27) 143
b(*/) 382 3778 y(30) 95 b(#include) 46 b("mpatrol.h") 382
3881 y(31) 95 b(#include) 46 b(<stdio.h>) 382 4193 y(34) 95
b(int) 47 b(callback\(MP_CONST) c(void) k(*p,) g(void) f(*t\)) 382
4296 y(35) 95 b({) 382 4400 y(36) 286 b(__mp_allocstack) 44
b(*s;) 382 4504 y(37) 286 b(__mp_allocinfo) 44 b(d;) 382
4711 y(39) 286 b(if) 47 b(\(!__mp_info\(p,) d(&d\)) j(||) g
(!d.allocated\)) 382 4815 y(40) 286 b({) 382 4919 y(41) 477
b(fprintf\(stderr,) 44 b("nothing) h(known) h(about) h(address) f
(0x\0450*lX\\n",) 382 5023 y(42) 859 b(sizeof\(void) 44
b(*\)) k(*) f(2,) g(p\);) 382 5127 y(43) 477 b(return) 46
b(-1;) 382 5230 y(44) 286 b(}) 382 5334 y(45) g(if) 47
b(\(!d.freed\)) 382 5438 y(46) 286 b({) 382 5542 y(47) 477
b(fprintf\(stderr,) 44 b("0x\0450*lX",) h(sizeof\(void) f(*\)) j(*) h
(2,) f(d.block\);) 382 5645 y(48) 477 b(fprintf\(stderr,) 44
b(") j(\045s",) g(d.func) f(?) h(d.func) f(:) i("<unknown>"\);) p
90 rotate dyy eop
%%Page: 43 49
43 48 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(43) p Fl 382 365 a(49) 477 b(fprintf\(stderr,) 44
b(") j(\045s",) g(d.file) f(?) h(d.file) f(:) i("<unknown>"\);) 382
469 y(50) 477 b(fprintf\(stderr,) 44 b(") j(\045lu",) f(d.line\);) 382
573 y(51) 477 b(for) 47 b(\(s) g(=) g(d.stack;) f(s) h(!=) h(NULL;) e
(s) h(=) h(s->next\)) 382 677 y(52) 477 b({) 382 780
y(53) 668 b(if) 47 b(\(s) g(==) g(d.stack\)) 382 884
y(54) 859 b(fputs\(") 46 b(\(",) g(stderr\);) 382 988
y(55) 668 b(else) 382 1092 y(56) 859 b(fputs\("->",) 44
b(stderr\);) 382 1196 y(57) 668 b(if) 47 b(\(s->name) f(!=) h(NULL\))
382 1299 y(58) 859 b(fprintf\(stderr,) 43 b("\045s",) k(s->name\);) 382
1403 y(59) 668 b(else) 382 1507 y(60) 859 b(fprintf\(stderr,) 43
b("0x\0450*lX",) i(sizeof\(void) g(*\)) i(*) h(2,) f(s->addr\);) 382
1611 y(61) 668 b(if) 47 b(\(s->next) f(==) h(NULL\)) 382
1714 y(62) 859 b(fputc\('\)',) 45 b(stderr\);) 382 1818
y(63) 477 b(}) 382 1922 y(64) g(fputc\('\\n',) 45 b(stderr\);) 382
2026 y(65) 477 b(if) 47 b(\(\(d.file) f(!=) h(NULL\)) f(&&) h(\(d.line)
f(!=) h(0\)\)) 382 2130 y(66) 668 b(__mp_view\(d.file,) 43
b(d.line\);) 382 2233 y(67) 477 b(*\(\(unsigned) 45 b(long) h(*\)) h
(t\)) h(=) f(*\(\(unsigned) e(long) h(*\)) i(t\)) f(+) g(d.size;) 382
2337 y(68) 477 b(return) 46 b(1;) 382 2441 y(69) 286
b(}) 382 2545 y(70) g(return) 46 b(0;) 382 2648 y(71) 95
b(}) 382 2960 y(74) g(void) 47 b(func2\(unsigned) d(long) i(n\)) 382
3064 y(75) 95 b({) 382 3167 y(76) 286 b(void) 47 b(*p;) 382
3375 y(78) 286 b(p) 47 b(=) h(malloc\(\(n) d(*) j(10\)) f(+) g(1\);) 382
3479 y(79) 286 b(if) 47 b(\(n) g(\045) h(13\)) 382 3582
y(80) 477 b(free\(p\);) 382 3686 y(81) 95 b(}) 382 3998
y(84) g(void) 47 b(func1\(void\)) 382 4101 y(85) 95 b({) 382
4205 y(86) 286 b(void) 47 b(*p;) 382 4309 y(87) 286 b(size_t) 46
b(i,) h(n;) 382 4413 y(88) 286 b(unsigned) 46 b(long) g(s,) h(t;) 382
4620 y(90) 286 b(p) 47 b(=) h(malloc\(16\);) 382 4724
y(91) 286 b(s) 47 b(=) h(__mp_snapshot\(\);) 382 4828
y(92) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g(<) h(128;) e(i++\)) 382
4932 y(93) 477 b(func2\(i\);) 382 5035 y(94) 286 b(free\(p\);) 382
5139 y(95) g(t) 47 b(=) h(0;) 382 5243 y(96) 286 b(if) 47
b(\(n) g(=) h(__mp_iterate\(callback,) 42 b(&t,) k(s\)\)) 382
5347 y(97) 477 b(fprintf\(stderr,) 44 b("Detected) h(\045lu) i(memory) f
(leaks) g(\(\045lu) h(bytes\)\\n",) e(n,) i(t\);) 382
5450 y(98) 286 b(if) 47 b(\(\(n) g(!=) g(10\)) g(||) g(\(t) h(!=) f
(5860\)\)) 382 5554 y(99) 477 b(fputs\("Expected) 44
b(10) j(memory) f(leaks) g(\(5860) h(bytes\)\\n",) e(stderr\);) p
90 rotate dyy eop
%%Page: 44 50
44 49 bop Fo 94 -116 a(44) 3377 b(mpatrol) p Fl 334 365
a(100) 95 b(}) 334 677 y(103) g(int) 47 b(main\(void\)) 334
780 y(104) 95 b({) 334 884 y(105) 286 b(void) 47 b(*p;) 334
1092 y(107) 286 b(p) 47 b(=) h(malloc\(16\);) 334 1196
y(108) 286 b(func1\(\);) 334 1299 y(109) g(free\(p\);) 334
1403 y(110) g(return) 46 b(EXIT_SUCCESS;) 334 1507 y(111) 95
b(}) p Fo 219 1645 a(Compiling) 41 b(this) g(example) h(with) e
(mpatrol) i(and) e(then) h(running) e(it) i(will) h(pro) s(duce) e(the)
h(follo) m(wing) h(list) 94 1744 y(of) 34 b(memory) g(leaks) h(that) f
(w) m(ere) g(lo) s(cated) h(b) s(et) m(w) m(een) f(the) g(p) s(oin) m
(ts) g(of) g(calling) p Fl 35 w(__mp_snapshot\(\)) p
Fo 29 w(and) p Fl 33 w(__mp_) 94 1844 y(iterate\(\)) p
Fo(.) p Fl 334 1986 a(0x0806A108) 45 b(func2) i(test10.c) e(78) j
(\(func2->func1->main->_s) o(tar) o(t\)) 334 2090 y(0x0806A674) d
(func2) i(test10.c) e(78) j(\(func2->func1->main->_s) o(tar) o(t\)) 334
2194 y(0x0806A6F8) d(func2) i(test10.c) e(78) j
(\(func2->func1->main->_s) o(tar) o(t\)) 334 2298 y(0x0806A800) d
(func2) i(test10.c) e(78) j(\(func2->func1->main->_s) o(tar) o(t\)) 334
2401 y(0x0806A988) d(func2) i(test10.c) e(78) j
(\(func2->func1->main->_s) o(tar) o(t\)) 334 2505 y(0x0806AB94) d
(func2) i(test10.c) e(78) j(\(func2->func1->main->_s) o(tar) o(t\)) 334
2609 y(0x0806AE20) d(func2) i(test10.c) e(78) j
(\(func2->func1->main->_s) o(tar) o(t\)) 334 2713 y(0x0806B130) d
(func2) i(test10.c) e(78) j(\(func2->func1->main->_s) o(tar) o(t\)) 334
2817 y(0x0806B4C0) d(func2) i(test10.c) e(78) j
(\(func2->func1->main->_s) o(tar) o(t\)) 334 2920 y(0x0806B8D4) d
(func2) i(test10.c) e(78) j(\(func2->func1->main->_s) o(tar) o(t\)) 334
3024 y(Detected) e(10) h(memory) f(leaks) h(\(5860) f(bytes\)) p
Fo 219 3162 a(The) 29 b(`) p Fl(tools) p Fo(') f(directory) i(in) f
(the) g(mpatrol) h(distribution) f(con) m(tains) h(t) m(w) m(o) h
(\014les) e(called) i(`) p Fl(heapdiff.c) p Fo(') c(and) 94
3262 y(`) p Fl(heapdiff.h) p Fo(') 42 b(whic) m(h) i(demonstrate) h
(the) g(use) f(of) p Fl 44 w(__mp_snapshot\(\)) p Fo
40 w(and) p Fl 44 w(__mp_iterate\(\)) p Fo 40 w(to) h(\014nd) 94
3361 y(lo) s(calised) g(memory) f(leaks.) 80 b(Ha) m(v) m(e) 46
b(a) d(lo) s(ok) h(at) h(these) e(\014les) h(to) g(see) g(a) g(further)
e(example) i(of) g(using) e(these) 94 3461 y(functions,) 28
b(or) e(p) s(erhaps) f(ev) m(en) i(add) f(these) h(\014les) g(to) g(y) m
(our) f(application) i(for) e(debugging) h(purp) s(oses.) 37
b(Note) 28 b(that) 94 3561 y(it) 36 b(is) g(p) s(erfectly) f(safe) h
(to) g(allo) s(cate) i(memory) d(in) h(the) f(callbac) m(k) j(function)
d(used) f(b) m(y) p Fl 36 w(__mp_iterate\(\)) p Fo(,) f(and) 94
3660 y(suc) m(h) g(allo) s(cations) i(can) f(b) s(e) e(freed) h(as) g
(w) m(ell.) 50 b(The) 33 b(only) g(restriction) h(is) f(that) h(the) f
(callbac) m(k) i(function) e(should) 94 3760 y(nev) m(er) e(free) g(a) f
(memory) h(allo) s(cation) h(that) f(it) g(has) f(not) h(allo) s(cated)
h(itself.) 219 3898 y(An) 43 b(alternativ) m(e) k(w) m(a) m(y) d(to) h
(detect) g(di\013erences) f(in) g(the) g(heap) f(b) s(et) m(w) m(een) i
(t) m(w) m(o) g(p) s(oin) m(ts) e(in) h(a) g(program's) 94
3997 y(execution) c(is) e(to) h(mak) m(e) h(use) e(of) g(the) h(leak) g
(table.) 66 b(This) 37 b(is) i(a) f(hash) g(table) h(that) g(stores) g
(the) g(n) m(um) m(b) s(er) e(and) 94 4097 y(size) 46
b(of) g(memory) e(allo) s(cations) k(and) c(deallo) s(cations) j
(referenced) e(b) m(y) g(the) g(source) g(\014le) g(and) g(line) g(n) m
(um) m(b) s(er) 94 4197 y(where) 34 b(they) f(o) s(ccur) p
Fh 783 4164 a(9) p Fo 821 4197 a(.) 50 b(The) 33 b(leak) i(table) f
(can) g(b) s(e) f(cleared) i(with) e(a) h(call) h(to) p
Fl 35 w(__mp_clearleaktable\(\)) p Fo 28 w(and) 94 4296
y(can) 42 b(b) s(e) e(displa) m(y) m(ed) i(with) f(a) g(call) h(to) p
Fl 42 w(__mp_leaktable\(\)) p Fo(,) e(whic) m(h) h(will) g(displa) m(y)
g(a) h(sorted) f(summary) f(of) 94 4396 y(the) i(allo) s(cated,) 47
b(freed) 42 b(or) f(unfreed) g(memory) g(en) m(tries) i(stored) f(in) f
(the) h(leak) h(table.) 75 b(Memory) 43 b(allo) s(cation) 94
4496 y(ev) m(en) m(ts) d(can) f(b) s(e) e(automatically) 42
b(logged) d(in) f(the) h(leak) g(table) g(b) m(y) f(calling) p
Fl 40 w(__mp_startleaktable\(\)) p Fo 33 w(but) 94 4595
y(this) g(b) s(eha) m(viour) g(can) g(b) s(e) f(disabled) h(b) m(y) g
(calling) p Fl 39 w(__mp_stopleaktable\(\)) p Fo(.) 58
b(Additional) 39 b(en) m(tries) f(can) h(b) s(e) 94 4695
y(man) m(ually) 31 b(added) f(to) h(the) g(leak) g(table) g(with) p
Fl 31 w(__mp_addallocentry\(\)) p Fo 24 w(and) p Fl 30
w(__mp_addfreeentry\(\)) p Fo(.) 219 4833 y(If) 38 b(y) m(ou) g(wish) f
(to) i(write) f(y) m(our) g(o) m(wn) g(diagnostics) h(to) g(the) f
(mpatrol) g(log) h(\014le) f(from) f(within) h(y) m(our) g(source) 94
4933 y(co) s(de) g(then) g(y) m(ou) g(can) g(do) g(so) g(with) f(the) p
Fl 38 w(__mp_printf\(\)) p Fo 35 w(and) p Fl 37 w(__mp_vprintf\(\)) p
Fo 34 w(functions,) i(whic) m(h) f(are) 94 5032 y(the) f(functional) f
(equiv) -5 b(alen) m(ts) 37 b(of) p Fl 36 w(printf\(\)) p
Fo 34 w(and) p Fl 35 w(vprintf\(\)) p Fo(.) 55 b(They) 35
b(pre\014x) g(ev) m(ery) i(line) f(written) g(to) h(the) 94
5132 y(log) k(\014le) f(with) g(`) p Fl(>) p Fo(',) i(partly) e(for) g
(making) g(it) g(clear) h(where) e(user) g(diagnostics) i(o) s(ccur) f
(and) f(partly) h(to) g(a) m(v) m(oid) 94 5231 y(problems) e(with) g
(external) h(utilities) h(that) f(parse) f(the) h(mpatrol) g(log) g
(\014le.) 65 b(The) p Fl 38 w(__mp_locprintf\(\)) p Fo
34 w(and) p Fl 94 5331 a(__mp_vlocprintf\(\)) p Fo 25
w(functions) 28 b(are) i(equiv) -5 b(alen) m(t) 30 b(functions) e(that)
i(also) g(displa) m(y) f(the) g(source) g(\014le) g(and) g(line) 94
5431 y(n) m(um) m(b) s(er) h(from) f(where) h(they) h(w) m(ere) g
(called) g(along) h(with) e(a) h(stac) m(k) g(trace,) h(if) e(a) m(v) -5
b(ailable.) p 94 5553 1200 4 v Fh 143 5614 a(9) p Fg
219 5645 a(If) 26 b(that) f(information) i(is) g(not) e(a) n(v) l
(ailable) i(then) e(the) g(function) h(name) g(or) g(return) f(address)
h(will) h(b) r(e) e(used) h(instead.) p 90 rotate dyy
eop
%%Page: 45 51
45 50 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(45) 219 365 y(It) 32 b(is) h(also) g(p) s(ossible) f
(to) h(write) f(out) h(a) f(memory) h(dump) d(in) i(hexadecimal) i
(format,) f(a) g(stac) m(k) g(trace) h(at) f(the) 94
465 y(curren) m(t) d(p) s(oin) m(t) g(in) f(execution) i(and) e
(details) i(of) f(a) g(memory) f(allo) s(cation) j(to) f(the) f(log) h
(\014le) e(in) h(standard) f(format) 94 565 y(using) h(the) p
Fl 31 w(__mp_logmemory\(\)) p Fo(,) p Fl 26 w(__mp_logstack\(\)) p
Fo 26 w(and) p Fl 30 w(__mp_logaddr\(\)) p Fo 27 w(functions) f(resp) s
(ectiv) m(ely) -8 b(.) 219 695 y(Y) g(ou) 33 b(can) g(also) h(tak) m(e)
g(adv) -5 b(an) m(tage) 34 b(of) f(the) p Fl 33 w(mpedit) p
Fo 31 w(command) f(from) g(within) g(the) h(mpatrol) g(library) f(with)
94 795 y(the) p Fl 26 w(__mp_edit\(\)) p Fo(,) p Fl 23
w(__mp_list\(\)) p Fo 22 w(and) p Fl 25 w(__mp_view\(\)) p
Fo 22 w(functions.) 39 b(The) 24 b(\014rst) h(in) m(v) m(ok) m(es) i(a)
f(text) g(editor) f(on) h(a) 94 894 y(sp) s(eci\014ed) i(\014le) h(and)
f(line) g(n) m(um) m(b) s(er,) g(while) h(the) f(second) h(displa) m
(ys) f(a) h(con) m(text) i(listing) e(of) g(a) g(\014le) f(at) h(a) g
(giv) m(en) h(line) 94 994 y(n) m(um) m(b) s(er.) 52
b(The) 34 b(third) g(function) g(p) s(erforms) f(either) i(or) f
(neither) h(dep) s(ending) e(on) h(the) h(setting) g(of) g(the) g(`) p
Fl(EDIT) p Fo(') 94 1093 y(or) c(`) p Fl(LIST) p Fo(') f(options.) 219
1224 y(Finally) -8 b(,) 36 b(there) e(are) h(four) e(functions) g(whic)
m(h) h(a\013ect) h(the) f(mpatrol) g(library) g(globally) -8
b(.) 53 b(The) 33 b(\014rst,) p Fl 34 w(__mp_) 94 1323
y(check\(\)) p Fo(,) h(allo) m(ws) i(y) m(ou) f(to) g(force) g(an) g
(in) m(ternal) g(c) m(hec) m(k) h(of) f(the) f(mpatrol) h(library's) f
(data) h(structures) f(at) i(an) m(y) 94 1423 y(p) s(oin) m(t) 31
b(during) f(program) h(execution) h(and) e(also) i(to) g(free) f(up) f
(an) m(y) h(out) h(of) f(scop) s(e) g(memory) g(allo) s(cations) i
(made) 94 1523 y(b) m(y) g(the) p Fl 34 w(alloca\(\)) p
Fo 30 w(family) h(of) f(functions.) 48 b(The) p Fl 33
w(__mp_memorymap\(\)) p Fo 28 w(function) 33 b(allo) m(ws) h(y) m(ou) f
(to) h(force) g(the) 94 1622 y(generation) g(of) d(a) i(memory) e(map) h
(at) g(an) m(y) g(p) s(oin) m(t) g(in) f(y) m(our) h(program,) g(in) f
(m) m(uc) m(h) h(the) g(same) g(w) m(a) m(y) h(as) f(it) g(w) m(ould) 94
1722 y(normally) 26 b(b) s(e) f(displa) m(y) m(ed) h(at) h(the) e(end) g
(of) h(program) f(execution) i(if) e(the) h(`) p Fl(SHOWMAP) p
Fo(') e(option) i(w) m(as) g(used.) 39 b(The) p Fl 25
w(__) 94 1822 y(mp_summary\(\)) p Fo 26 w(function) 28
b(writes) h(library) f(statistics) j(to) e(the) g(mpatrol) g(log) g
(\014le,) h(while) e(the) p Fl 29 w(__mp_stats\(\)) p
Fo 94 1921 a(function) j(\014lls) f(in) g(a) h(data) g(structure) f
(with) g(selected) h(statistics) i(for) d(examination) i(in) e(user) f
(co) s(de.) p Fn 94 2193 a(7.8) 69 b(Leak) 45 b(table) p
Fo 219 2382 a(The) 40 b(mpatrol) h(library) f(pro) m(vides) h(a) g
(hash) f(table) i(called) g(a) p Fi 41 w(le) -5 b(ak) 42
b(table) p Fo 48 w(that) g(can) f(b) s(e) f(used) g(to) h(record) 94
2481 y(memory) g(allo) s(cations) h(and) e(deallo) s(cations) j(for) d
(the) g(purp) s(ose) f(of) i(detecting) g(memory) g(leaks.) 71
b(It) 41 b(can) g(b) s(e) 94 2581 y(fully) 36 b(con) m(trolled) i(from)
d(the) h(source) g(co) s(de) g(of) g(a) g(program) g(b) m(y) g(calling)
h(the) f(appropriate) g(mpatrol) g(library) 94 2681 y(functions,) g
(but) e(the) i(mpatrol) f(library) f(can) h(also) h(b) s(e) e
(instructed) h(to) h(automatically) h(en) m(ter) f(the) f(details) h
(of) 94 2780 y(eac) m(h) c(memory) e(ev) m(en) m(t) i(in) m(to) g(the) e
(leak) h(table) h(b) m(y) e(using) g(the) g(`) p Fl(LEAKTABLE) p
Fo(') f(option.) 219 2911 y(The) 34 b(leak) h(table) h(records) e(a) h
(\015at) f(pro\014le) g(of) h(memory) f(allo) s(cation) j(b) s(eha) m
(viour) d(b) s(et) m(w) m(een) h(t) m(w) m(o) h(p) s(oin) m(ts) e(in) 94
3010 y(a) j(program) g(and) f(is) g(k) m(ey) m(ed) i(b) m(y) f(source) f
(\014le) h(lo) s(cation.) 61 b(What) 37 b(that) g(means) g(is,) h(it) f
(con) m(tains) h(an) e(en) m(try) h(for) 94 3110 y(eac) m(h) 26
b(source) f(\014le) g(and) f(line) h(n) m(um) m(b) s(er) e(that) i
(allo) s(cated) h(memory) -8 b(,) 27 b(and) d(if) g(more) h(than) f
(one) h(memory) g(allo) s(cation) 94 3210 y(ev) m(en) m(t) h(o) s
(ccurred) e(at) h(that) g(p) s(oin) m(t) f(then) g(the) h(en) m(try) f
(will) h(summarise) f(the) g(total) i(ev) m(en) m(ts) g(that) f(o) s
(ccurred) e(at) i(that) 94 3309 y(p) s(oin) m(t.) 50
b(In) 32 b(man) m(y) i(cases,) h(the) e(source) g(\014le) h(and) e
(line) i(n) m(um) m(b) s(er) e(is) h(not) g(a) m(v) -5
b(ailable) 36 b(for) d(a) h(memory) f(allo) s(cation) 94
3409 y(ev) m(en) m(t,) g(in) d(whic) m(h) g(case) h(either) g(the) g
(function) f(name) g(or) g(the) h(return) e(address) h(can) g(b) s(e) g
(used) g(instead.) 219 3539 y(The) g(follo) m(wing) i(example) f(sho) m
(ws) f(the) g(use) h(of) f(the) h(leak) g(table) g(manipulation) g
(functions.) p Fl 382 3674 a(1) 95 b(/*) 382 3778 y(2) 143
b(*) 48 b(Illustrates) c(the) j(explicit) f(and) h(implicit) e
(manipulation) g(of) i(the) 382 3881 y(3) 143 b(*) 48
b(leak) e(table.) 382 3985 y(4) 143 b(*/) 382 4296 y(7) 95
b(#include) 46 b("mpatrol.h") 334 4608 y(10) 95 b(int) 47
b(main\(void\)) 334 4711 y(11) 95 b({) 334 4815 y(12) 286
b(void) 47 b(*p,) g(*q;) 334 4919 y(13) 286 b(int) 47
b(r;) 334 5127 y(15) 286 b(__mp_clearleaktable\(\);) 334
5230 y(16) g(__mp_addallocentry\("file.) o(c",) 41 b(1,) 48
b(1\);) 334 5334 y(17) 286 b(__mp_addfreeentry\("file.c) o(",) 42
b(1,) 47 b(1\);) 334 5438 y(18) 286 b(__mp_addallocentry\("file.) o
(c",) 41 b(1,) 48 b(2\);) 334 5542 y(19) 286 b
(__mp_addfreeentry\("file.c) o(",) 42 b(1,) 47 b(2\);) 334
5645 y(20) 286 b(__mp_addallocentry\("file.) o(c",) 41
b(1,) 48 b(3\);) p 90 rotate dyy eop
%%Page: 46 52
46 51 bop Fo 94 -116 a(46) 3377 b(mpatrol) p Fl 334 365
a(21) 286 b(__mp_addfreeentry\("file.c) o(",) 42 b(1,) 47
b(3\);) 334 469 y(22) 286 b(__mp_addallocentry\("funct) o(ion") o(,) 42
b(0,) 47 b(8\);) 334 573 y(23) 286 b(__mp_addfreeentry\("functi) o
(on",) 41 b(0,) 47 b(4\);) 334 677 y(24) 286 b
(__mp_addallocentry\("funct) o(ion") o(,) 42 b(0,) 47
b(16\);) 334 780 y(25) 286 b(__mp_addfreeentry\("functi) o(on",) 41
b(0,) 47 b(12\);) 334 884 y(26) 286 b(__mp_addallocentry\(NULL,) 41
b(0x40000000,) k(8\);) 334 988 y(27) 286 b(r) 48 b(=) f
(__mp_startleaktable\(\);) 334 1092 y(28) 286 b(if) 47
b(\(p) h(=) f(malloc\(16\)\)) 334 1196 y(29) 477 b(if) 47
b(\(q) h(=) f(realloc\(p,) e(32\)\)) 334 1299 y(30) 668
b(free\(q\);) 334 1403 y(31) 477 b(else) 334 1507 y(32) 668
b(free\(p\);) 334 1611 y(33) 286 b(if) 47 b(\(r) h(==) f(0\)) 334
1714 y(34) 477 b(__mp_stopleaktable\(\);) 334 1818 y(35) 286
b(__mp_leaktable\(0,) 43 b(MP_LT_ALLOCATED,) h(MP_LT_BOTTOM\);) 334
1922 y(36) 286 b(__mp_printf\("\\n"\);) 334 2026 y(37) g
(__mp_leaktable\(0,) 43 b(MP_LT_FREED,) i(MP_LT_COUNTS\);) 334
2130 y(38) 286 b(__mp_printf\("\\n"\);) 334 2233 y(39) g
(__mp_leaktable\(0,) 43 b(MP_LT_UNFREED,) h(0\);) 334
2337 y(40) 286 b(__mp_printf\("\\n"\);) 334 2441 y(41) g(return) 46
b(EXIT_SUCCESS;) 334 2545 y(42) 95 b(}) p Fo 219 2692
a(The) 30 b(output) g(that) h(app) s(ears) e(in) i(`) p
Fl(mpatrol.log) p Fo(') c(should) j(lo) s(ok) h(similar) f(to) i(this.)
p Fl 334 2844 a(bottom) 47 b(5) g(allocated) e(memory) h(entries) g(in)
h(leak) g(table:) 669 3051 y(bytes) 141 b(count) 94 b(location) 525
3155 y(--------) g(------) f(--------) 859 3259 y(6) 334
b(3) 95 b(file.c) 47 b(line) f(1) 859 3362 y(8) 334 b(1) 95
b(0x40000000) 812 3466 y(16) 333 b(1) 95 b(test.c) 47
b(line) f(28) 812 3570 y(24) 333 b(2) 95 b(function) 812
3674 y(32) 333 b(1) 95 b(test.c) 47 b(line) f(29) 812
3778 y(86) 333 b(8) 95 b(total) 334 3985 y(top) 47 b(4) h(freed) e
(memory) g(entries) g(in) h(leak) g(table:) 573 4193
y(count) 237 b(bytes) 94 b(location) 525 4296 y(------) g(--------) f
(--------) 764 4400 y(3) 429 b(6) 95 b(file.c) 47 b(line) f(1) 764
4504 y(2) 382 b(16) 94 b(function) 764 4608 y(1) 382
b(32) 94 b(test.c) 47 b(line) f(29) 764 4711 y(1) 382
b(16) 94 b(test.c) 47 b(line) f(28) 764 4815 y(7) 382
b(70) 94 b(total) 334 5023 y(top) 47 b(2) h(unfreed) e(memory) g
(entries) g(in) h(leak) f(table:) 669 5230 y(bytes) 141
b(count) 94 b(location) 525 5334 y(--------) g(------) f(--------) 859
5438 y(8) 334 b(1) 95 b(0x40000000) 859 5542 y(8) 334
b(0) 95 b(function) 812 5645 y(16) 333 b(1) 95 b(total) p
90 rotate dyy eop
%%Page: 47 53
47 52 bop Fo 94 -116 a(Chapter) 30 b(7:) 41 b(Using) 31
b(mpatrol) 2655 b(47) 219 365 y(Line) 40 b(15) h(of) g(the) f(ab) s(o) m
(v) m(e) i(program) e(clears) h(the) f(leak) i(table.) 71
b(This) 40 b(can) g(b) s(e) g(done) g(as) g(man) m(y) h(times) g(as) 94
465 y(necessary) e(during) d(the) j(execution) g(of) f(the) g(program,)
i(but) d(note) h(that) h(there) f(is) g(only) g(one) g(leak) h(table) g
(so) 94 565 y(this) 31 b(will) g(a\013ect) h(the) f(`) p
Fl(LEAKTABLE) p Fo(') d(option.) 42 b(The) 30 b(follo) m(wing) i(6) f
(lines) g(then) f(add) g(matc) m(hing) i(allo) s(cation) h(and) 94
664 y(deallo) s(cation) g(en) m(tries) e(to) f(the) h(leak) g(table) g
(corresp) s(onding) e(to) h(a) h(source) f(lo) s(cation) i(of) e(line) g
(1) g(in) g(a) h(\014le) f(called) 94 764 y(`) p Fl(file.c) p
Fo('.) 39 b(An) m(y) 27 b(deallo) s(cation) i(en) m(tries) e(m) m(ust) g
(matc) m(h) g(the) g(source) g(p) s(osition) g(of) g(the) g(original) h
(allo) s(cation) h(due) 94 863 y(to) 36 b(the) f(nature) f(of) h(the) g
(leak) g(table.) 55 b(Note) 36 b(that) f(these) g(6) g(lines) g
(corresp) s(ond) e(to) j(an) e(allo) s(cation) j(of) e(1) g(b) m(yte,)
94 963 y(follo) m(w) m(ed) d(b) m(y) f(t) m(w) m(o) g(reallo) s
(cations) i(of) e(2) f(and) g(3) h(b) m(ytes) g(resp) s(ectiv) m(ely) -8
b(,) 32 b(follo) m(w) m(ed) g(b) m(y) e(a) h(\014nal) f(deallo) s
(cation.) 219 1088 y(Lines) 23 b(22-23) h(allo) s(cate) i(8) d(b) m
(ytes) g(from) g(a) g(function) f(called) p Fl 24 w(function\(\)) p
Fo 20 w(but) h(only) g(free) g(4) g(b) m(ytes,) i(resulting) 94
1187 y(in) 34 b(a) h(memory) f(leak) h(of) f(4) h(b) m(ytes.) 52
b(Lines) 34 b(24-25) i(do) e(the) h(same) f(but) g(allo) s(cate) i(16) f
(b) m(ytes) g(and) e(free) i(12.) 52 b(The) 94 1287 y(next) 28
b(line) h(allo) s(cates) h(8) e(b) m(ytes) g(from) g(a) g(co) s(de) g
(address) f(of) h(`) p Fl(0x40000000) p Fo(') e(but) h(do) s(es) g(not)
h(free) g(it,) h(resulting) f(in) 94 1386 y(a) j(memory) e(leak) i(of) f
(8) g(b) m(ytes.) 41 b(Note) 31 b(that) g(if) f(the) g(line) g(n) m(um)
m(b) s(er) e(is) i(sp) s(eci\014ed) f(as) h(`) p Fl(0) p
Fo(') g(then) g(the) g(\014lename) g(will) 94 1486 y(b) s(e) f(tak) m
(en) h(as) f(a) g(function) f(name,) i(and) e(if) h(the) g(\014lename) g
(is) g(sp) s(eci\014ed) f(as) h(`) p Fl(NULL) p Fo(') f(then) h(the) g
(line) g(n) m(um) m(b) s(er) f(will) 94 1586 y(b) s(e) h(tak) m(en) i
(as) f(a) g(return) e(address.) 40 b(If) 29 b(neither) g(are) h(sp) s
(eci\014ed) f(then) g(the) h(n) m(um) m(b) s(er) e(of) h(b) m(ytes) h
(will) g(b) s(e) f(added) g(or) 94 1685 y(subtracted) i(from) f(the) g
(`) p Fl(unknown) p Fo(') f(lo) s(cation.) 219 1810 y(Line) h(27) h
(instructs) f(mpatrol) h(to) g(automatically) i(record) d(an) m(y) g
(subsequen) m(t) g(memory) g(allo) s(cation) j(ev) m(en) m(ts) 94
1910 y(in) 25 b(the) f(leak) h(table,) i(while) d(line) h(34) g(do) s
(es) f(the) h(opp) s(osite.) 39 b(The) p Fl 24 w
(__mp_startleaktable\(\)) p Fo 18 w(function) 24 b(returns) 94
2009 y(`) p Fl(1) p Fo(') g(if) g(automatic) i(leak) f(table) f
(recording) g(w) m(as) g(turned) f(on) g(and) h(`) p
Fl(0) p Fo(') f(otherwise,) j(so) e(w) m(e) g(c) m(hec) m(k) i(in) d
(line) h(33) h(to) f(see) 94 2109 y(if) k(w) m(e) g(should) f(turn) f
(o\013) i(automatic) h(recording) f(b) m(y) f(examining) h(the) g
(previous) f(state.) 41 b(Lines) 28 b(28-32) h(allo) s(cate,) 94
2208 y(reallo) s(cate) k(and) d(free) h(some) f(memory) h(just) e(to) j
(demonstrate) f(this.) 219 2333 y(Finally) -8 b(,) 38
b(lines) d(35-40) i(displa) m(y) e(the) g(con) m(ten) m(ts) i(of) e
(the) g(memory) g(leak) h(table) g(that) g(ha) m(v) m(e) g(b) s(een) e
(recorded) 94 2433 y(since) j(the) f(call) i(to) p Fl
37 w(__mp_clearleaktable\(\)) p Fo(.) 52 b(Three) 35
b(di\013eren) m(t) i(t) m(yp) s(es) f(of) g(displa) m(y) h(can) f(b) s
(e) g(generated:) 94 2532 y(allo) s(cated) c(memory) d(allo) s
(cations,) i(freed) e(memory) g(allo) s(cations) j(and) c(unfreed) g
(memory) h(allo) s(cations.) 42 b(They) 94 2632 y(can) c(also) g(b) s
(e) e(sorted) h(b) m(y) g(the) g(total) h(n) m(um) m(b) s(er) e(of) h
(calls) h(instead) f(of) g(the) h(total) g(n) m(um) m(b) s(er) e(of) h
(b) m(ytes) g(\() p Fl(MP_LT_) 94 2731 y(COUNTS) p Fo(\)) 29
b(or) g(in) g(rev) m(erse) h(order) f(with) g(the) h(smallest) g
(\014rst) f(\() p Fl(MP_LT_BOTTOM) p Fo(\).) 37 b(The) 29
b(coun) m(t) h(of) g(`) p Fl(0) p Fo(') f(in) h(the) f(last) 94
2831 y(table) k(indicates) g(that) f(there) h(w) m(ere) f(a) g(matc) m
(hing) h(n) m(um) m(b) s(er) e(of) h(calls) h(to) f(allo) s(cate) j
(and) c(free) h(memory) f(within) p Fl 94 2931 a(function\(\)) p
Fo 22 w(but) 23 b(the) h(n) m(um) m(b) s(er) f(of) h(b) m(ytes) g
(freed) g(w) m(as) g(less) h(than) e(the) i(n) m(um) m(b) s(er) d(of) i
(b) m(ytes) h(allo) s(cated.) 40 b(This) 24 b(can) 94
3030 y(only) 37 b(happ) s(en) d(if) i(the) g(en) m(tries) h(w) m(ere) f
(added) g(b) m(y) p Fl 35 w(__mp_addallocentry\(\)) p
Fo 31 w(and) p Fl 35 w(__mp_addfreeentry\(\)) p Fo 94
3130 a(and) 30 b(is) h(usually) f(an) g(indication) h(that) g
(something) g(is) g(wrong) f(when) f(making) i(these) f(calls.) 219
3254 y(The) 43 b(leak) h(table) g(is) f(a) h(useful) e(to) s(ol) i(to) g
(manipulate) g(when) e(debugging) h(y) m(our) g(application) h(to) g(c)
m(hec) m(k) 94 3354 y(for) c(memory) g(leaks,) k(but) 39
b(it) i(is) f(not) g(as) g(detailed) i(as) e(full) g(memory) g(allo) s
(cation) i(pro\014ling) d(whic) m(h) h(is) g(con-) 94
3454 y(trolled) 33 b(b) m(y) e(the) h(`) p Fl(PROF) p
Fo(') e(option.) 45 b(It) 31 b(is) h(probably) f(b) s(etter) g(at) h
(summarising) f(unfreed) f(allo) s(cations) k(than) d(the) 94
3553 y(`) p Fl(SHOWUNFREED) p Fo(') d(option) j(but) f(do) s(es) g(not)
g(sho) m(w) h(the) f(call) i(stac) m(k) g(for) e(eac) m(h) h(allo) s
(cation.) 219 3678 y(In) 38 b(addition,) j(the) p Fl
39 w(__mp_iterate\(\)) p Fo 35 w(function) e(can) g(b) s(e) f(used) g
(within) g(user) g(co) s(de) h(to) h(obtain) f(details) 94
3778 y(ab) s(out) 30 b(c) m(hanges) i(in) d(the) i(heap) f(since) g(a) h
(certain) g(p) s(oin) m(t) f(in) g(a) g(program's) g(execution.) 42
b(Ho) m(w) m(ev) m(er,) 33 b(it) d(can) h(only) 94 3877
y(pro) m(vide) 36 b(details) h(ab) s(out) e(freed) g(memory) g(allo) s
(cations) j(if) d(the) h(`) p Fl(NOFREE) p Fo(') e(option) i(is) f
(used.) 56 b(The) 35 b(leak) h(table) 94 3977 y(will) 27
b(pro) m(vide) f(less) g(details) h(on) f(freed) f(memory) h(allo) s
(cations) i(but) d(its) i(adv) -5 b(an) m(tage) 28 b(is) e(that) g(it) g
(do) s(es) g(not) g(require) 94 4076 y(the) 31 b(use) f(of) h(the) f(`)
p Fl(NOFREE) p Fo(') f(option.) p 90 rotate dyy eop
%%Page: 48 54
48 53 bop Fo 94 -116 a(48) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 49 55
49 54 bop Fo 94 -116 a(Chapter) 30 b(8:) 41 b(T) -8 b(o) s(ols) 3012
b(49) p Fk 94 365 a(8) 81 b(T) -13 b(o) t(ols) p Fo 219
581 a(The) 29 b(`) p Fl(tools) p Fo(') f(directory) h(that) h(comes) g
(with) f(the) g(mpatrol) h(distribution) e(con) m(tains) i(the) g
(source) f(co) s(de) g(for) 94 681 y(to) s(ols) 34 b(that) g(are) f
(built) f(on) h(top) g(of) g(the) g(mpatrol) g(library) -8
b(.) 48 b(The) 33 b(functions) f(that) h(are) h(de\014ned) d(in) i
(these) g(\014les) 94 781 y(are) 38 b(in) m(tended) f(to) h(b) s(e) f
(useful) f(for) h(sp) s(eci\014c) g(applications) i(as) e(w) m(ell) h
(as) g(pro) m(viding) f(real-w) m(orld) h(examples) g(of) 94
880 y(ho) m(w) 33 b(to) f(extend) g(mpatrol.) 46 b(If) 32
b(y) m(ou) g(wish) f(to) i(use) f(one) g(of) g(the) h(source) f
(\014les) g(in) f(the) i(`) p Fl(tools) p Fo(') e(directory) h(then) 94
980 y(y) m(ou) f(should) f(\014rst) f(compile) j(it) e(and) g(then) g
(link) h(it) g(in) m(to) g(y) m(our) f(program) g(along) i(with) e(the)
g(mpatrol) h(library) -8 b(.) 219 1103 y(Alternativ) m(ely) g(,) 44
b(if) 38 b(y) m(ou'v) m(e) i(already) f(installed) h(mpatrol) f(on) f
(y) m(our) h(system) f(then) h(there) g(should) e(b) s(e) h(an) 94
1202 y(`) p Fl(mpatrol) p Fo(') 25 b(sub) s(directory) f(within) h(the)
h(include) f(directory) h(where) f(`) p Fl(mpatrol.h) p
Fo(') f(is) h(installed) i(that) f(con) m(tains) 94 1302
y(all) 31 b(of) f(the) g(header) g(\014les) g(in) f(the) h(`) p
Fl(tools) p Fo(') f(directory) -8 b(.) 42 b(There) 29
b(should) g(also) i(b) s(e) e(a) h(libmpto) s(ols) g(library) f(within)
94 1402 y(the) 38 b(library) f(directory) g(where) g(libmpatrol) g(is) h
(installed) g(that) f(con) m(tains) i(an) e(ob) 5 b(ject) 38
b(\014le) f(for) g(eac) m(h) h(of) g(the) 94 1501 y(source) 29
b(\014les) f(in) g(the) h(`) p Fl(tools) p Fo(') e(directory) -8
b(.) 41 b(Y) -8 b(ou) 29 b(can) g(then) f(mak) m(e) h(use) f(of) h(a) f
(particular) h(to) s(ol) g(b) m(y) g(including) f(its) 94
1601 y(header) e(\014le) f(from) g(the) h(`) p Fl(mpatrol) p
Fo(') e(include) h(sub) s(directory) f(and) h(then) g(linking) g(with) h
(the) f(libmpto) s(ols) h(library) -8 b(.) 219 1724 y(If) 26
b(y) m(ou'v) m(e) h(written) f(a) g(useful) g(extension) g(to) h
(mpatrol) f(then) g(y) m(ou) g(migh) m(t) h(wish) e(to) i(submit) e(it)
h(for) g(inclusion) 94 1823 y(in) 33 b(the) g(next) f(release) i(of) f
(mpatrol.) 48 b(Ev) m(en) 32 b(if) h(it's) g(just) f(for) h(a) g(sp) s
(eci\014c) f(application,) j(there) d(migh) m(t) i(b) s(e) e(other) 94
1923 y(users) d(out) h(there) g(that) h(ma) m(y) f(b) s(ene\014t) f
(from) g(it.) 41 b(Y) -8 b(ou'll) 31 b(ev) m(en) g(get) g(a) f(credit) g
(in) f(the) h(man) m(ual!) 41 b(Note) 31 b(that) g(an) m(y) 94
2023 y(do) s(cumen) m(tation) h(should) d(also) i(b) s(e) f(written) h
(in) f(the) g(asso) s(ciated) i(header) e(\014le.) p
Fn 94 2275 a(8.1) 69 b(Dbmallo) t(c-compatible) 46 b(functions) p
Fo 219 2456 a(This) c(\014le) h(pro) m(vides) f(Dbmallo) s(c) p
Fh 1348 2423 a(1) p Fo 1386 2456 a(-compatible) j(functions) d(whic) m
(h) g(are) h(built) g(on) f(top) h(of) g(the) g(mpatrol) 94
2556 y(library) -8 b(.) 52 b(They) 33 b(are) i(compatible) g(with) e
(the) h(last) h(kno) m(wn) f(public) f(release) i(of) f(Dbmallo) s(c) h
(\(patc) m(h) g(lev) m(el) h(14\),) 94 2655 y(but) j(only) g(the) g
(Dbmallo) s(c-sp) s(eci\014c) h(functions) f(are) g(de\014ned) f(here,)
k(lea) m(ving) e(the) g(o) m(v) m(erriding) g(of) f(standard) 94
2755 y(functions) 34 b(up) f(to) i(the) g(mpatrol) f(library) -8
b(.) 53 b(As) 34 b(the) g(mpatrol) h(library) f(do) s(es) g(not) g
(curren) m(tly) h(o) m(v) m(erride) g(the) f(C) 94 2855
y(library) c(string) h(functions) f(and) f(the) i(X) g(to) s(olkit) g
(heap) g(allo) s(cation) h(functions,) e(neither) h(do) s(es) f(this) g
(\014le.) 219 2978 y(The) p Fl 34 w(dbmallopt\(\)) p
Fo 31 w(function) k(do) s(es) g(not) g(supp) s(ort) e(the) j(setting) g
(of) f(all) h(of) g(the) f(Dbmallo) s(c) h(options.) 53
b(In) 94 3077 y(fact,) 33 b(most) e(of) g(them) g(do) f(not) i(mak) m
(e) f(sense) g(when) f(applied) h(to) g(the) h(mpatrol) f(library) -8
b(.) 42 b(Some) 31 b(of) g(them) g(ha) m(v) m(e) 94 3177
y(sligh) m(tly) 24 b(c) m(hanged) f(b) s(eha) m(viour) f(due) g(to) h
(the) g(mapping) e(pro) s(cess) h(and) g(some) h(of) f(them) h(cannot) g
(b) s(e) e(implemen) m(ted) 94 3276 y(due) 30 b(to) h(the) g(mpatrol) g
(library) f(ha) m(ving) g(b) s(een) g(initialised) i(b) s(eforehand.)
219 3399 y(The) p Fl 34 w(malloc_dump\(\)) p Fo 30 w(function) i(do) s
(es) g(not) g(supp) s(ort) f(the) h(full) g(recognition) h(of) g(the) f
(`) p Fl(MALLOC_DETAIL) p Fo(') 94 3499 y(option) 44
b(in) f(that) h(it) g(do) s(es) f(not) g(displa) m(y) h(the) f
(additional) h(columns) f(and) g(summary) f(that) i(the) f(Dbmallo) s
(c) 94 3599 y(library) 27 b(do) s(es.) 40 b(This) 26
b(is) h(b) s(ecause) g(this) g(w) m(ould) g(mak) m(e) h(no) g(sense) f
(when) f(applied) h(to) h(the) f(mpatrol) h(library) -8
b(,) 28 b(but) 94 3698 y(it) 38 b(do) s(es) f(still) h(a\013ect) h
(whether) e(freed) g(allo) s(cations) i(are) f(sho) m(wn) f(in) g(the) g
(listing) h(\(although) g(the) g(details) g(for) 94 3798
y(suc) m(h) 25 b(allo) s(cations) i(are) e(sligh) m(tly) h(di\013eren) m
(t,) g(and) e(there) h(are) g(no) g(en) m(tries) g(displa) m(y) m(ed) g
(for) g(free) f(memory) h(blo) s(c) m(ks\).) 219 3921
y(The) j(output) g(for) g(the) p Fl 28 w(malloc_dump\(\)) p
Fo 25 w(and) p Fl 28 w(malloc_list\(\)) p Fo 25 w(functions) f(is) i
(almost) g(iden) m(tical) h(to) f(that) 94 4020 y(of) 38
b(the) f(Dbmallo) s(c) h(library) f(except) h(for) f(a) h(sligh) m(t) g
(c) m(hange) g(in) f(the) g(p) s(oin) m(ter) h(format) f(when) f
(displa) m(ying) i(the) 94 4120 y(address) 31 b(of) h(eac) m(h) h
(memory) f(allo) s(cation.) 47 b(The) 31 b(stac) m(k) i(information) f
(is) g(obtained) g(di\013eren) m(tly) g(as) g(w) m(ell,) i(since) 94
4220 y(the) e(mpatrol) f(library) g(records) f(sym) m(b) s(olic) i
(stac) m(k) g(tracebac) m(ks) h(for) e(eac) m(h) h(memory) f(allo) s
(cation.) 44 b(As) 31 b(a) h(result,) p Fl 94 4319 a(malloc_enter\(\)) p
Fo 33 w(and) p Fl 36 w(malloc_leave\(\)) p Fo 32 w(do) 37
b(nothing) f(and) g(the) h(return) e(address) h(in) g(a) h(stac) m(k) h
(frame) e(is) 94 4419 y(displa) m(y) m(ed) 31 b(if) e(no) h(asso) s
(ciated) h(sym) m(b) s(ol) f(name,) g(\014le) f(and) h(line) g(n) m(um)
m(b) s(er) e(could) i(b) s(e) f(determined.) 40 b(P) m(aren) m(theses)
94 4518 y(are) c(not) f(prin) m(ted) f(at) i(the) e(end) h(of) g(sym) m
(b) s(ol) f(names) h(so) g(that) g(they) g(can) g(b) s(e) f(pro) s
(cessed) h(prop) s(erly) e(b) m(y) i(a) g(C) p Fl(++) p
Fo 94 4618 a(demangler) 40 b(if) f(necessary) -8 b(.) 69
b(P) m(assing) 40 b(a) f(\014le) h(descriptor) f(of) g(`) p
Fl(0) p Fo(') h(to) p Fl 40 w(malloc_dump\(\)) p Fo 35
w(or) p Fl 40 w(malloc_list\(\)) p Fo 94 4718 a(results) 31
b(in) f(the) g(output) g(b) s(eing) g(sen) m(t) h(to) g(the) g(mpatrol)
f(log) i(\014le.) 219 4841 y(The) p Fl 22 w(malloc_size\(\)) p
Fo 19 w(and) p Fl 23 w(malloc_mark\(\)) p Fo 19 w(functions) 22
b(do) h(not) g(giv) m(e) h(an) f(error) f(message) i(if) f(the) g(p) s
(oin) m(ter) 94 4940 y(passed) 37 b(in) g(do) s(es) g(not) g(corresp) s
(ond) f(to) i(a) f(heap) g(allo) s(cation.) 64 b(Neither) 38
b(of) f(these) g(functions) g(automatically) 94 5040
y(p) s(erform) i(an) g(in) m(tegrit) m(y) j(c) m(hec) m(k) f(of) f(the)
g(heap.) 68 b(Note) 41 b(that) f(the) p Fl 40 w(malloc_chain_check\(\))
p Fo 34 w(function) g(will) 94 5139 y(nev) m(er) 31 b(return) e(a) i
(non-zero) g(v) -5 b(alue) 30 b(|) g(it) h(alw) m(a) m(ys) h
(terminates) f(with) f(an) g(error) g(message) h(in) f(the) g(mpatrol) h
(log) 94 5239 y(\014le) f(whenev) m(er) e(it) i(detects) g(heap) f
(corruption.) 40 b(As) 29 b(a) g(result,) g(the) p Fl
30 w(malloc_abort\(\)) p Fo 25 w(function) f(is) h(not) g(used.) 219
5362 y(This) g(\014le) i(is) f(initialised) h(via) g(the) f(mpatrol) h
(library's) e(initialiser) j(function) e(feature,) g(whic) m(h) g
(means) g(that) 94 5462 y(if) g(the) p Fl 29 w(__mp_init_dbmalloc\(\)) p
Fo 24 w(function) f(is) g(noted) h(b) m(y) f(the) h(mpatrol) f(sym) m
(b) s(ol) g(manager) h(then) f(it) h(will) g(b) s(e) p
94 5553 1200 4 v Fh 143 5614 a(1) p Fg 219 5645 a(Dbmallo) r(c) d(is) f
(cop) n(yrigh) n(t) 1004 5643 y(c) p Fc 982 5645 a(\015) p
Fg 26 w(1990-1992) i(Conor) f(P) -6 b(.) 25 b(Cahill.) p
90 rotate dyy eop
%%Page: 50 56
50 55 bop Fo 94 -116 a(50) 3377 b(mpatrol) 94 365 y(called) 39
b(when) d(the) h(mpatrol) h(library) e(is) h(b) s(eing) g(initialised.)
62 b(If) 37 b(this) g(feature) g(is) g(not) h(supp) s(orted) d(then) i
(the) p Fl 94 465 a(dbmallinit\(\)) p Fo 35 w(function) h(m) m(ust) g
(b) s(e) f(called) i(as) g(early) f(on) g(as) h(p) s(ossible,) g
(otherwise) g(this) f(\014le) g(will) g(not) h(b) s(e) 94
565 y(initialised) 32 b(un) m(til) f(one) f(of) h(its) g(functions) f
(are) g(called.) p Fn 94 884 a(8.2) 69 b(Dmallo) t(c-compatible) 47
b(functions) p Fo 219 1092 a(This) 21 b(\014le) g(pro) m(vides) h
(Dmallo) s(c) p Fh 1234 1059 a(2) p Fo 1272 1092 a(-compatible) h
(functions) e(whic) m(h) h(are) f(built) h(on) f(top) h(of) f(the) h
(mpatrol) g(library) -8 b(.) 94 1191 y(They) 31 b(are) g(compatible) h
(with) e(the) h(4.8.2) i(release) f(of) f(Dmallo) s(c,) h(but) e(only) h
(the) g(Dmallo) s(c-sp) s(eci\014c) h(functions) 94 1291
y(are) f(de\014ned) e(here,) i(lea) m(ving) g(the) g(o) m(v) m
(erriding) g(of) f(standard) g(functions) g(up) f(to) i(the) f(mpatrol)
h(library) -8 b(.) 41 b(As) 30 b(the) 94 1391 y(mpatrol) g(library) e
(do) s(es) h(not) g(curren) m(tly) g(o) m(v) m(erride) i(the) e(C) f
(library) h(string) g(functions,) g(neither) g(do) s(es) g(this) g
(\014le.) 94 1490 y(In) k(addition,) h(the) f(Dmallo) s(c) h
(distribution) e(comes) i(with) e(de\014nitions) h(for) p
Fl 33 w(xmemalign\(\)) p Fo(,) p Fl 30 w(xvalloc\(\)) p
Fo 31 w(and) p Fl 94 1590 a(xrecalloc\(\)) p Fo(,) 28
b(neither) i(of) h(whic) m(h) f(are) h(de\014ned) e(b) m(y) h(this) g
(\014le) h(or) f(b) m(y) h(the) f(mpatrol) h(library) -8
b(.) 219 1739 y(This) 34 b(mo) s(dule) h(is) g(in) m(tended) f(to) i(w)
m(ork) f(with) g(the) g(existing) p Fl 36 w(dmalloc) p
Fo 33 w(command,) h(whic) m(h) f(sets) g(the) g(con-) 94
1839 y(ten) m(ts) j(of) f(the) p Fl 37 w(DMALLOC_OPTIONS) p
Fo 32 w(en) m(vironmen) m(t) h(v) -5 b(ariable) 37 b(according) h(to) f
(an) m(y) g(sp) s(eci\014ed) f(command) h(line) 94 1939
y(options.) 47 b(The) 32 b(four) f(do) s(cumen) m(ted) h(Dmallo) s(c) i
(global) g(v) -5 b(ariables) 33 b(are) f(also) h(de\014ned,) f
(although) h(the) f(t) m(w) m(o) i(ad-) 94 2038 y(dress) j(v) -5
b(ariables) 38 b(are) f(not) h(acted) g(up) s(on) d(and) i(c) m
(hanging) h(the) p Fl 37 w(dmalloc_logpath) p Fo 33 w(v) -5
b(ariable) 38 b(has) f(no) g(e\013ect) 94 2138 y(y) m(et.) k(The) p
Fl 25 w(dmalloc_errno) p Fo 22 w(v) -5 b(ariable) 26
b(is) f(mapp) s(ed) g(on) m(to) h(the) p Fl 26 w(__mp_errno) p
Fo 23 w(v) -5 b(ariable) 26 b(and) f(so) h(the) p Fl
25 w(dmalloc_) 94 2237 y(strerror\(\)) p Fo 30 w(function) 32
b(alw) m(a) m(ys) i(returns) d(strings) h(that) h(are) g(sp) s
(eci\014c) f(to) i(the) e(mpatrol) h(library) -8 b(.) 47
b(Note) 33 b(that) 94 2337 y(unlik) m(e) 39 b(the) g(actual) h(Dmallo) s
(c) g(library) -8 b(,) 41 b(this) e(\014le) g(is) f(not) h(threadsafe,)
i(and) d(the) h(`) p Fl(lockon) p Fo(') f(option) h(has) f(no) 94
2437 y(e\013ect.) k(In) 28 b(addition,) h(the) p Fl 29
w(start) p Fo 27 w(option) g(ignores) g(the) g(`) p Fl(file:line) p
Fo(') d(syn) m(tax) j(and) f(uses) g(allo) s(cation) j(indices) 94
2536 y(rather) g(than) f(ev) m(en) m(ts.) 219 2686 y(The) p
Fl 42 w(dmalloc_debug\(\)) p Fo 38 w(function) 42 b(do) s(es) g(not) h
(supp) s(ort) d(the) j(setting) g(of) g(all) g(of) f(the) h(Dmallo) s
(c) g(\015ags,) 94 2785 y(although) 26 b(this) g(\014le) g(de\014nes) e
(prepro) s(cessor) h(macros) h(for) f(eac) m(h) i(of) f(them,) g
(something) g(whic) m(h) g(is) f(not) h(curren) m(tly) 94
2885 y(done) 36 b(in) f(the) h(`) p Fl(dmalloc.h) p Fo(') d(\014le) j
(in) f(the) g(Dmallo) s(c) i(distribution.) 56 b(In) 34
b(fact,) k(man) m(y) e(of) f(them) h(do) f(not) h(mak) m(e) 94
2985 y(sense) d(when) f(applied) g(to) h(the) g(mpatrol) g(library) -8
b(.) 47 b(Some) 33 b(of) f(them) h(ha) m(v) m(e) g(sligh) m(tly) h(c) m
(hanged) f(b) s(eha) m(viour) g(due) 94 3084 y(to) j(the) g(mapping) e
(pro) s(cess) h(and) g(some) g(of) h(them) f(cannot) h(b) s(e) e
(implemen) m(ted) i(due) f(to) g(the) h(mpatrol) f(library) 94
3184 y(ha) m(ving) c(b) s(een) f(initialised) i(b) s(eforehand.) 219
3333 y(The) p Fl 33 w(dmalloc_verify\(\)) p Fo 30 w(and) p
Fl 33 w(dmalloc_examine\(\)) p Fo 29 w(functions) h(do) h(not) g(giv) m
(e) h(an) f(error) f(message) i(if) 94 3433 y(the) 29
b(p) s(oin) m(ter) f(passed) g(in) g(do) s(es) f(not) i(corresp) s(ond)
e(to) i(a) f(heap) g(allo) s(cation,) j(and) d(the) g(latter) i
(function) e(do) s(es) g(not) 94 3533 y(automatically) 36
b(p) s(erform) 31 b(an) h(in) m(tegrit) m(y) j(c) m(hec) m(k) f(of) e
(the) h(heap.) 47 b(The) p Fl 32 w(malloc_verify\(\)) p
Fo 28 w(function) 32 b(has) h(not) 94 3632 y(b) s(een) 39
b(included) g(in) f(this) i(implemen) m(tation) h(since) e(it) h(is) f
(functionally) h(iden) m(tical) h(to) p Fl 40 w(dmalloc_verify\(\)) p
Fo(.) 94 3732 y(Note) 34 b(that) f(the) p Fl 32 w(dmalloc_verify\(\)) p
Fo 28 w(function) f(will) g(only) h(ev) m(er) g(return) p
Fl 31 w(DMALLOC_VERIFY_ERROR) p Fo 27 w(if) f(the) 94
3831 y(p) s(oin) m(ter) j(to) h(b) s(e) e(c) m(hec) m(k) m(ed) j(is) e
(not) g(n) m(ull) g(and) f(is) h(in) m(v) -5 b(alid) 35
b(|) g(it) g(alw) m(a) m(ys) h(terminates) g(with) f(an) f(error) h
(message) 94 3931 y(in) 42 b(the) g(mpatrol) g(log) g(\014le) g(whenev)
m(er) g(the) g(p) s(oin) m(ter) f(to) i(b) s(e) e(c) m(hec) m(k) m(ed) i
(is) f(n) m(ull) g(and) f(it) h(has) f(detected) i(heap) 94
4031 y(corruption.) 219 4180 y(The) p Fl 35 w(dmalloc_log_heap_map\(\))
p Fo 30 w(and) p Fl 35 w(dmalloc_log_stats\(\)) p Fo
30 w(functions) 35 b(map) h(on) f(to) i(the) p Fl 35
w(__mp_) 94 4280 y(memorymap\(\)) p Fo 22 w(and) p Fl
24 w(__mp_summary\(\)) p Fo 21 w(functions) 24 b(and) g(so) g(ha) m(v) m
(e) i(en) m(tirely) g(di\013eren) m(t) f(displa) m(y) f(formats.) 39
b(The) p Fl 94 4379 a(dmalloc_log_unfreed\(\)) p Fo 29
w(and) p Fl 34 w(dmalloc_log_changed\(\)) p Fo 28 w(functions) 34
b(ha) m(v) m(e) i(similar) e(displa) m(y) h(formats) 94
4479 y(to) g(the) g(original) g(Dmallo) s(c) h(library) -8
b(,) 35 b(but) f(the) g(summary) g(tables) g(are) h(displa) m(y) m(ed) g
(di\013eren) m(tly) g(and) f(will) g(dis-) 94 4579 y(pla) m(y) i(sym) m
(b) s(ol) f(names) g(if) h(they) f(are) h(a) m(v) -5
b(ailable) 37 b(and) e(\014lename) g(and) g(line) h(n) m(um) m(b) s(er)
d(information) j(isn't.) 55 b(The) p Fl 94 4678 a(dmalloc_message\(\)) p
Fo 33 w(and) p Fl 36 w(dmalloc_vmessage\(\)) p Fo 32
w(functions) 36 b(write) h(tracing) h(to) g(the) f(mpatrol) g(log) h
(\014le) 94 4778 y(pre\014xed) 31 b(b) m(y) g(three) g(\014elds) g(of) h
(optional) g(information,) g(whic) m(h) f(can) h(b) s(e) e(con) m
(trolled) j(b) m(y) f(the) f(`) p Fl(LOG_*) p Fo(') f(macros) 94
4878 y(when) g(building) f(this) i(mo) s(dule.) 219 5027
y(This) e(\014le) i(is) f(initialised) h(via) g(the) f(mpatrol) h
(library's) e(initialiser) j(function) e(feature,) g(whic) m(h) g
(means) g(that) 94 5127 y(if) j(the) p Fl 33 w(__mp_init_dmalloc\(\)) p
Fo 28 w(function) f(is) h(noted) g(b) m(y) f(the) h(mpatrol) g(sym) m
(b) s(ol) g(manager) g(then) f(it) i(will) f(b) s(e) 94
5226 y(called) 39 b(when) d(the) h(mpatrol) h(library) e(is) h(b) s
(eing) g(initialised.) 62 b(If) 37 b(this) g(feature) g(is) g(not) h
(supp) s(orted) d(then) i(the) p Fl 94 5326 a(dmalloc_init\(\)) p
Fo 28 w(function) 32 b(m) m(ust) f(b) s(e) h(called) h(as) f(early) g
(on) g(as) g(p) s(ossible,) g(otherwise) g(this) g(\014le) f(will) i
(not) f(b) s(e) 94 5425 y(initialised) g(un) m(til) f(one) f(of) h(its)
g(functions) f(are) g(called.) p 94 5553 1200 4 v Fh
143 5614 a(2) p Fg 219 5645 a(Dmallo) r(c) d(is) f(cop) n(yrigh) n(t)
961 5643 y(c) p Fc 940 5645 a(\015) p Fg 25 w(1992-2001) i(Gra) n(y) e
(W) -6 b(atson.) p 90 rotate dyy eop
%%Page: 51 57
51 56 bop Fo 94 -116 a(Chapter) 30 b(8:) 41 b(T) -8 b(o) s(ols) 3012
b(51) p Fn 94 365 a(8.3) 69 b(Determining) 46 b(heap) f(di\013erences) p
Fo 219 548 a(This) 35 b(\014le) i(de\014nes) p Fl 35
w(heapdiffstart\(\)) p Fo 32 w(and) p Fl 35 w(heapdiffend\(\)) p
Fo(,) d(whic) m(h) i(m) m(ust) g(b) s(e) g(called) h(in) f(matc) m
(hing) 94 648 y(pairs.) 45 b(They) 32 b(b) s(oth) f(tak) m(e) i(a) p
Fl 32 w(heapdiff) p Fo 30 w(ob) 5 b(ject) 33 b(as) f(their) g(\014rst) f
(parameter,) i(whic) m(h) f(m) m(ust) f(still) i(b) s(e) e(in) h(scop) s
(e) 94 747 y(when) 23 b(the) h(matc) m(hing) h(call) h(to) p
Fl 24 w(heapdiffend\(\)) p Fo 21 w(is) d(made.) 39 b(The) p
Fl 23 w(heapdiff) p Fo 22 w(ob) 5 b(ject) 25 b(is) f(initialised) h(at)
g(the) f(call) 94 847 y(to) p Fl 37 w(heapdiffstart\(\)) p
Fo 31 w(and) 35 b(is) h(\014nalised) f(when) p Fl 34
w(heapdiffend\(\)) p Fo 32 w(is) h(called.) 57 b(It) 36
b(m) m(ust) f(not) h(b) s(e) f(mo) s(di\014ed) 94 946
y(in) f(b) s(et) m(w) m(een) g(and) f(should) g(b) s(e) g(treated) i
(as) f(an) f(opaque) h(t) m(yp) s(e.) p Fl 51 w(heapdiffend\(\)) p
Fo 30 w(can) g(only) g(b) s(e) f(called) i(once) 94 1046
y(p) s(er) p Fl 35 w(heapdiff) p Fo 32 w(ob) 5 b(ject) 36
b(b) s(efore) f(requiring) g(that) h(the) p Fl 35 w(heapdiff) p
Fo 33 w(ob) 5 b(ject) 36 b(b) s(e) e(reinitialised) j(through) d(a) i
(call) 94 1146 y(to) p Fl 32 w(heapdiffstart\(\)) p Fo(.) 219
1270 y(The) 25 b(second) g(parameter) g(to) p Fl 26 w
(heapdiffstart\(\)) p Fo 21 w(sp) s(eci\014es) g(a) g(set) h(of) f
(\015ags) g(that) h(can) f(b) s(e) f(used) h(to) h(con) m(trol) 94
1370 y(what) k(is) g(written) g(to) g(the) g(mpatrol) g(log.) 42
b(A) 29 b(list) i(of) f(all) g(unfreed) f(memory) g(allo) s(cations) j
(can) e(b) s(e) f(logged) i(with) 94 1469 y(the) p Fl
29 w(HD_UNFREED) p Fo 25 w(\015ag) d(and) g(a) g(list) h(of) f(all) h
(freed) e(memory) h(allo) s(cations) i(can) f(b) s(e) e(logged) i(with)
f(the) p Fl 28 w(HD_FREED) p Fo 94 1569 a(\015ag,) 39
b(although) e(the) g(latter) h(mak) m(es) f(use) g(of) f(the) h(`) p
Fl(NOFREE) p Fo(') e(option) i(and) f(can) h(incur) f(a) h(large) h(p) s
(erformance) 94 1669 y(and) 29 b(space) h(p) s(enalt) m(y) -8
b(,) 30 b(and) f(also) h(relies) g(on) f(the) h(`) p
Fl(NOFREE) p Fo(') e(option) i(b) s(eing) e(unmo) s(di\014ed) f(b) s
(et) m(w) m(een) j(the) g(calls) g(to) p Fl 94 1768 a
(heapdiffstart\(\)) p Fo 29 w(and) p Fl 33 w(heapdiffend\(\)) p
Fo(.) 44 b(Note) 34 b(that) g(mark) m(ed) f(allo) s(cations) i(are) e
(not) g(normally) g(logged) 94 1868 y(but) d(this) g(can) h(b) s(e) f
(c) m(hanged) h(b) m(y) f(adding) g(the) p Fl 31 w(HD_MARKED) p
Fo 27 w(\015ag.) 219 1993 y(By) 37 b(default,) h(only) f(a) g(minimal) g
(amoun) m(t) g(of) f(detail) i(is) f(logged) h(for) e(eac) m(h) i(allo)
s(cation,) i(but) c(this) h(can) g(b) s(e) 94 2092 y(c) m(hanged) g
(with) f(the) p Fl 36 w(HD_FULL) p Fo 35 w(\015ag) g(to) h(log) g(full)
f(details) h(for) f(eac) m(h) h(allo) s(cation.) 61 b(If) 35
b(the) i(\014lename) f(and) g(line) 94 2192 y(n) m(um) m(b) s(er) j
(for) h(an) g(allo) s(cation) j(is) d(kno) m(wn) g(and) g(the) g(`) p
Fl(EDIT) p Fo(') g(or) g(`) p Fl(LIST) p Fo(') f(option) i(is) f(b) s
(eing) g(used) g(then) f(using) p Fl 94 2291 a(HD_VIEW) p
Fo 25 w(will) 26 b(edit) h(or) f(list) h(the) g(relev) -5
b(an) m(t) 27 b(source) f(\014le) h(at) g(the) f(correct) i(line) e(n) m
(um) m(b) s(er,) g(but) g(only) g(if) g(the) h(`) p Fl(EDIT) p
Fo(') 94 2391 y(or) k(`) p Fl(LIST) p Fo(') f(options) g(are) h(supp) s
(orted.) 219 2516 y(If) g(the) p Fl 31 w(HD_CONTENTS) p
Fo 28 w(\015ag) g(is) g(sp) s(eci\014ed) f(then) h(the) g(con) m(ten) m
(ts) i(of) e(all) h(curren) m(t) f(memory) f(allo) s(cations) k(will) 94
2615 y(b) s(e) g(written) g(to) h(\014les) f(and) f(then) h(compared) g
(with) f(their) i(subsequen) m(t) e(con) m(ten) m(ts) j(when) p
Fl 33 w(heapdiffend\(\)) p Fo 30 w(is) 94 2715 y(called.) 41
b(If) 24 b(the) h(heap) f(is) h(large) g(then) g(this) f(option) h(can)
g(require) g(a) g(substan) m(tial) g(amoun) m(t) g(of) g(disk) f
(space.) 40 b(All) 25 b(of) 94 2814 y(the) 31 b(allo) s(cation) i(con) m
(ten) m(ts) f(\014les) e(will) h(b) s(e) f(deleted) h(when) e(the) i
(matc) m(hing) g(call) h(to) p Fl 31 w(heapdiffend\(\)) p
Fo 27 w(is) e(made.) p Fn 94 3072 a(8.4) 69 b(Memory) 45
b(allo) t(cation) h(gauge) p Fo 219 3254 a(This) 21 b(\014le) i
(de\014nes) p Fl 21 w(mgaugestart\(\)) p Fo(,) p Fl 21
w(mgaugeend\(\)) p Fo(,) p Fl 21 w(mgaugeon\(\)) p Fo
19 w(and) p Fl 22 w(mgaugeoff\(\)) p Fo 19 w(whic) m(h) f(pro) s(duce)
94 3354 y(and) 36 b(con) m(trol) i(a) f(simple) g(memory) f(allo) s
(cation) j(gauge) f(in) e(a) h(terminal) g(windo) m(w.) 58
b(The) 36 b(gauge) i(is) e(displa) m(y) m(ed) 94 3454
y(in) i(textual) g(form) f(using) g(the) g(standard) g(I/O) g(library) g
(rather) g(than) g(using) g(a) h(graphics) f(library) -8
b(.) 62 b(Since) 37 b(it) 94 3553 y(is) d(up) s(dated) f(in) g
(real-time,) k(it) d(mak) m(es) h(no) e(sense) h(to) h(send) e(the) h
(output) f(of) h(the) g(gauge) h(to) f(a) g(\014le.) 52
b(Only) 33 b(one) 94 3653 y(gauge) f(can) f(b) s(e) e(in) i(use) f(at) h
(an) m(y) f(one) h(time.) 219 3778 y(The) k(\014rst) g(argumen) m(t) g
(to) p Fl 37 w(mgaugestart\(\)) p Fo 31 w(is) h(the) f(\014lename) h
(of) f(the) h(\014le) g(to) g(write) f(the) h(gauge) g(to.) 57
b(As) 94 3877 y(men) m(tioned) 43 b(b) s(efore,) h(this) e(should) f(b)
s(e) g(a) h(terminal) h(\014le) f(that) g(can) g(b) s(e) g(displa) m(y)
m(ed) g(in) g(real-time,) k(suc) m(h) c(as) 94 3977 y(`) p
Fl(/dev/pts*) p Fo(') 25 b(on) i(UNIX) g(systems) g(or) f(`) p
Fl(CON:#?) p Fo(') g(on) g(AmigaOS.) i(If) e(it) h(is) g(a) g(n) m(ull)
g(p) s(oin) m(ter) f(then) h(the) g(standard) 94 4076
y(error) j(\014le) h(stream) g(will) f(b) s(e) g(used.) 219
4201 y(The) 24 b(second) h(argumen) m(t) g(to) p Fl 26
w(mgaugestart\(\)) p Fo 21 w(sp) s(eci\014es) f(the) h(c) m(haracter) i
(that) e(will) g(b) s(e) f(used) g(to) i(represen) m(t) 94
4301 y(allo) s(cated) 38 b(memory) -8 b(.) 56 b(If) 35
b(this) g(is) h(giv) m(en) g(as) g(whitespace,) i(`) p
Fl(|) p Fo(') d(or) h(`) p Fl(+) p Fo(') f(then) g(`) p
Fl(#) p Fo(') h(will) g(b) s(e) f(used) f(instead.) 56
b(The) 94 4400 y(third) 34 b(argumen) m(t) h(sp) s(eci\014es) g(the) g
(n) m(um) m(b) s(er) e(of) i(b) m(ytes) g(that) g(the) g(gauge) h
(represen) m(ts.) 53 b(If) 35 b(the) f(total) j(allo) s(cated) 94
4500 y(memory) d(exceeds) g(this) f(then) g(`) p Fl(+) p
Fo(') g(will) g(b) s(e) g(app) s(ended) e(to) j(the) g(gauge.) 50
b(The) 33 b(\014nal) f(argumen) m(t) i(sp) s(eci\014es) f(the) 94
4599 y(frequency) f(of) f(memory) h(allo) s(cation) i(ev) m(en) m(ts) f
(at) f(whic) m(h) g(the) g(gauge) h(should) d(b) s(e) h(up) s(dated.) 44
b(If) 31 b(it) h(is) g(sp) s(eci\014ed) 94 4699 y(as) f(zero) g(then) f
(all) i(ev) m(en) m(ts) f(will) g(cause) g(the) g(gauge) g(to) g(b) s
(e) f(up) s(dated.) p Fn 94 4956 a(8.5) 69 b(Memory) 45
b(allo) t(cation) h(tracing) p Fo 219 5139 a(This) 27
b(\014le) h(de\014nes) p Fl 28 w(mtrace\(\)) p Fo 25
w(and) p Fl 28 w(muntrace\(\)) p Fo(,) e(t) m(w) m(o) j(functions) f
(whic) m(h) g(enable) g(and) g(disable) g(memory) 94
5239 y(allo) s(cation) k(tracing) f(resp) s(ectiv) m(ely) -8
b(.) 42 b(These) 29 b(should) g(b) s(e) g(called) i(in) e(matc) m(hing)
h(pairs) g(but) e(will) i(ha) m(v) m(e) h(no) e(e\013ect) 94
5338 y(unless) d(the) p Fl 26 w(MALLOC_TRACE) p Fo 23
w(en) m(vironmen) m(t) g(v) -5 b(ariable) 27 b(is) f(set) h(to) g(the) f
(\014lename) g(of) g(the) g(trace) i(\014le) e(to) g(use.) 39
b(The) 94 5438 y(resulting) f(trace) h(\014les) f(can) g(b) s(e) f(pro)
s(cessed) g(b) m(y) g(the) p Fl 38 w(mtrace) p Fo 36
w(p) s(erl) g(script) h(whic) m(h) f(is) h(distributed) e(with) i(the)
94 5538 y(GNU) 31 b(C) f(library) -8 b(.) p 90 rotate
dyy eop
%%Page: 52 58
52 57 bop Fo 94 -116 a(52) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 53 59
53 58 bop Fo 94 -116 a(Chapter) 30 b(9:) 41 b(Utilities) 2910
b(53) p Fk 94 365 a(9) 81 b(Utilities) p Fo 219 603 a(Sev) m(eral) 22
b(external) g(programs) e(are) h(supplied) f(with) g(the) h(mpatrol) g
(distribution) g(in) f(the) h(form) f(of) h(commands) 94
702 y(that) 26 b(can) f(b) s(e) g(used) f(to) i(enhance) f(the) g
(functionalit) m(y) h(of) g(the) f(mpatrol) g(library) -8
b(.) 39 b(Eac) m(h) 26 b(command) e(comes) i(with) 94
802 y(its) j(o) m(wn) e(UNIX) h(man) m(ual) g(page) h(\(although) f
(they) g(also) h(supp) s(ort) d(the) i(`) p Fl(--help) p
Fo(') e(and) h(`) p Fl(--version) p Fo(') f(options\),) 94
902 y(but) 40 b(a) g(few) f(of) h(the) g(commands) g(are) g(written) g
(as) g(UNIX) g(shell) g(scripts) f(and) g(so) i(will) f(not) g(w) m
(ork) g(on) f(non-) 94 1001 y(UNIX) g(platforms.) 63
b(Note) 39 b(that) f(the) p Fl 38 w(mprof) p Fo 37 w(command) f(is) h
(do) s(cumen) m(ted) g(in) f(the) h(pro\014ling) g(c) m(hapter) g
(\(see) 94 1101 y(Chapter) 24 b(10) g([Pro\014ling],) i(page) f(59\)) g
(and) e(the) p Fl 24 w(mptrace) p Fo 22 w(command) h(is) f(do) s(cumen)
m(ted) h(in) f(the) i(tracing) f(c) m(hapter) 94 1200
y(\(see) 32 b(Chapter) e(11) h([T) -8 b(racing],) 32
b(page) f(73\).) p Fn 94 1469 a(9.1) 69 b(The) p Fb 44
w(mpatrol) p Fn 42 w(command) p Fo 219 1656 a(A) 23 b(command) f(is) g
(pro) m(vided) g(with) h(the) f(mpatrol) h(distribution) f(whic) m(h) g
(can) h(run) e(programs) h(that) h(ha) m(v) m(e) h(b) s(een) 94
1756 y(link) m(ed) 30 b(with) g(the) g(mpatrol) g(library) -8
b(,) 30 b(using) f(a) h(com) m(bination) h(of) f(mpatrol) g(options) g
(that) g(can) g(b) s(e) f(set) h(via) h(the) 94 1855
y(command) j(line.) 53 b(Most) 35 b(of) f(these) g(options) h(map) f
(directly) g(on) m(to) i(their) e(equiv) -5 b(alen) m(t) 35
b(en) m(vironmen) m(t) g(v) -5 b(ariable) 94 1955 y(settings) 43
b(and) f(exist) h(mainly) f(so) g(that) h(the) f(user) f(do) s(es) h
(not) g(ha) m(v) m(e) h(to) g(man) m(ually) g(c) m(hange) g(the) p
Fl 42 w(MPATROL_) 94 2055 y(OPTIONS) p Fo 29 w(en) m(vironmen) m(t) 31
b(v) -5 b(ariable.) 219 2183 y(The) 25 b(main) g(option) g(that) h(is) f
(the) h(exception) g(to) g(this) f(is) g(the) h(`) p
Fl(--dynamic) p Fo(') d(option,) k(whic) m(h) e(can) g(b) s(e) g(used) f
(to) 94 2283 y(run) 31 b(a) h(program) f(under) f(the) i(con) m(trol) i
(of) d(the) h(mpatrol) g(library) -8 b(,) 33 b(ev) m(en) f(if) g(it) g
(w) m(asn't) g(originally) h(link) m(ed) f(with) 94 2383
y(the) d(mpatrol) f(library) -8 b(.) 40 b(This) 28 b(can) g(only) g(b) s
(e) g(done) g(on) g(systems) g(that) g(supp) s(ort) f(dynamic) h
(linking) g(and) f(where) 94 2482 y(the) i(dynamic) f(link) m(er) g
(recognises) i(the) p Fl 28 w(LD_PRELOAD) p Fo 25 w(or) p
Fl 29 w(_RLD_LIST) p Fo 25 w(en) m(vironmen) m(t) f(v) -5
b(ariables.) 41 b(Ev) m(en) 28 b(then,) 94 2582 y(it) 34
b(can) f(only) g(b) s(e) g(used) f(when) g(the) h(program) g(that) h
(is) f(b) s(eing) f(run) g(has) h(b) s(een) f(dynamically) i(link) m
(ed) f(with) g(the) 94 2682 y(system) e(C) f(library) -8
b(,) 31 b(rather) f(than) g(statically) j(link) m(ed.) 219
2811 y(The) 38 b(reason) h(for) f(all) i(of) f(these) g(limitations) h
(is) f(that) g(some) g(SVR4) g(UNIX) g(platforms) f(ha) m(v) m(e) i(a) f
(sp) s(ecial) 94 2910 y(feature) 29 b(in) e(the) h(dynamic) g(link) m
(er) g(whic) m(h) f(can) h(b) s(e) f(told) i(to) f(o) m(v) m(erride) h
(the) f(sym) m(b) s(ols) f(from) g(one) h(shared) f(library) 94
3010 y(using) 36 b(the) f(sym) m(b) s(ols) h(from) f(another) g(shared)
g(library) h(at) g(run-time.) 56 b(In) 35 b(this) g(case,) j(it) f(in) m
(v) m(olv) m(es) g(replacing) 94 3109 y(the) d(sym) m(b) s(ols) f(for) p
Fl 33 w(malloc\(\)) p Fo(,) f(etc.,) k(in) d(the) h(system) f(C) g
(library) g(with) g(the) h(mpatrol) f(v) m(ersions,) i(but) e(only) g
(if) 94 3209 y(they) f(w) m(ere) f(mark) m(ed) g(as) g(unde\014ned) e
(in) h(the) h(original) h(executable) h(\014le) e(and) f(w) m(ould) h
(therefore) g(ha) m(v) m(e) h(to) g(ha) m(v) m(e) 94
3309 y(b) s(een) e(loaded) h(from) f(`) p Fl(libc.so) p
Fo('.) 219 3438 y(Ho) m(w) m(ev) m(er,) 36 b(if) c(a) h(program) g
(quali\014es) g(for) f(use) h(with) f(the) h(`) p Fl(--dynamic) p
Fo(') d(option,) k(it) g(means) e(that) i(y) m(ou) f(can) 94
3537 y(trace) 25 b(all) f(of) f(its) h(dynamic) f(memory) g(allo) s
(cations) j(as) d(w) m(ell) h(as) g(running) d(it) j(with) f(an) m(y) h
(of) f(the) h(mpatrol) f(library's) 94 3637 y(debugging) 34
b(options.) 50 b(This) 32 b(is) h(mainly) h(a) p Fi 34
w(toy) p Fo 42 w(feature) f(whic) m(h) g(allo) m(ws) i(y) m(ou) f(to) g
(view) f(and) g(manipulate) h(the) 94 3737 y(dynamic) h(memory) g(allo)
s(cations) j(of) d(programs) g(that) g(y) m(ou) h(don't) f(ha) m(v) m
(e) h(the) f(source) h(for,) g(but) e(in) h(theory) g(it) 94
3836 y(could) g(b) s(e) g(quite) g(useful) f(if) h(y) m(ou) g(need) g
(to) h(debug) e(a) h(previously) g(released) h(executable) g(and) e
(are) i(unable) e(to) 94 3936 y(recompile) f(or) e(relink) g(it.) 43
b(Note) 33 b(that) f(if) f(the) g(program) g(b) s(eing) g(run) f(is) h
(m) m(ultithreaded) g(then) g(y) m(ou) h(m) m(ust) f(add) 94
4035 y(the) g(`) p Fl(--threads) p Fo(') d(option) j(as) g(w) m(ell.)
219 4164 y(Note) h(that) e(the) p Fl 31 w(mpatrol) p
Fo 28 w(command) g(m) m(ust) g(b) s(e) f(set) i(up) e(to) i(use) f(the)
g(correct) i(ob) 5 b(ject) 31 b(\014le) f(format) h(access) 94
4264 y(libraries) 39 b(that) g(are) g(required) e(for) h(y) m(our) h
(system) f(if) g(y) m(ou) h(wish) f(to) h(use) f(the) g(`) p
Fl(--dynamic) p Fo(') f(option.) 65 b(If) 38 b(the) 94
4364 y(mpatrol) 31 b(library) f(w) m(as) h(built) f(with) p
Fl 29 w(FORMAT=FORMAT_COFF) p Fo 26 w(or) p Fl 30 w
(FORMAT=FORMAT_XCOFF) p Fo 25 w(supp) s(ort) e(then) i(it) 94
4463 y(m) m(ust) 37 b(b) s(e) e(told) i(to) g(preload) g(the) f(COFF) h
(access) g(library) f(\(normally) h(`) p Fl(libld.so) p
Fo('\).) 58 b(If) 35 b(it) i(w) m(as) g(built) f(with) p
Fl 94 4563 a(FORMAT=FORMAT_ELF32) p Fo 31 w(or) p Fl
36 w(FORMAT=FORMAT_ELF64) p Fo 31 w(supp) s(ort) e(then) i(it) h(m) m
(ust) f(b) s(e) f(told) i(to) g(preload) f(the) 94 4662
y(ELF) e(access) h(library) e(\(normally) h(`) p Fl(libelf.so) p
Fo('\)) p Fh 1814 4629 a(1) p Fo 1850 4662 a(.) 51 b(If) 33
b(it) h(w) m(as) g(built) f(with) p Fl 34 w(FORMAT=FORMAT_BFD) p
Fo 29 w(supp) s(ort) 94 4762 y(then) 45 b(it) g(m) m(ust) g(b) s(e) f
(told) h(to) h(preload) e(the) h(GNU) h(BFD) g(access) g(libraries) f
(\(normally) g(`) p Fl(libbfd.so) p Fo(') e(and) 94 4862
y(`) p Fl(libiberty.so) p Fo('\)) p Fh 755 4829 a(2) p
Fo 790 4862 a(.) 61 b(Ho) m(w) m(ev) m(er,) 41 b(if) c(these) h
(libraries) f(only) g(exist) h(on) f(y) m(our) g(system) g(in) g(arc) m
(hiv) m(e) i(form) d(then) 94 4961 y(y) m(ou) 28 b(m) m(ust) f(build) f
(`) p Fl(libmpatrol.so) p Fo(') e(with) i(these) i(extra) g(libraries) f
(incorp) s(orated) g(in) m(to) h(it) f(so) h(that) f(there) h(are) 94
5061 y(no) 38 b(dep) s(endencies) f(on) h(them) g(at) h(run-time.) 63
b(Ho) m(w) m(ev) m(er,) 42 b(there) c(ma) m(y) g(w) m(ell) h(b) s(e) f
(problems) f(if) h(the) g(resulting) 94 5161 y(shared) j(library) g
(con) m(tains) i(p) s(osition-dep) s(enden) m(t) e(co) s(de) h(from) f
(the) g(arc) m(hiv) m(e) i(libraries) f(y) m(ou) g(incorp) s(orated.) 94
5260 y(The) 30 b(only) h(w) m(a) m(y) g(to) g(\014nd) e(out) i(is) f
(for) g(y) m(ou) h(to) g(try) f(it) h(and) f(see.) p
94 5365 1200 4 v Fh 143 5425 a(1) p Fg 219 5457 a(A) 89
b(freely) h(a) n(v) l(ailable) h(v) n(ersion) f(of) g(the) g(ELF) f
(access) i(library) -6 b(,) 106 b(lib) r(elf,) i(can) 89
b(b) r(e) h(do) n(wnloaded) g(from) p Ff 219 5548 a
(ftp://sunsite.unc.edu/pub/Lin) q(ux/l) q(ibs/) p Fg(.) p
Fh 143 5614 a(2) p Fg 219 5645 a(The) 26 b(GNU) f(BFD) h(access) h
(library) f(can) f(b) r(e) h(do) n(wnloaded) g(from) p
Ff 27 w(ftp://ftp.gnu.org/) p Fg(.) p 90 rotate dyy eop
%%Page: 54 60
54 59 bop Fo 94 -116 a(54) 3377 b(mpatrol) 219 365 y(If) 35
b(y) m(ou) i(ha) m(v) m(e) g(access) g(to) f(the) g(GNU) h(link) m(er) f
(on) g(y) m(our) g(system) g(then) f(there) h(ma) m(y) h(b) s(e) e(a) h
(w) m(a) m(y) h(to) f(con) m(v) m(ert) 94 465 y(arc) m(hiv) m(e) 30
b(libraries) e(in) m(to) h(shared) e(libraries) h(if) g(p) s
(osition-indep) s(enden) m(t) f(co) s(de) h(is) g(not) g(necessarily) h
(required) e(for) 94 565 y(building) 40 b(shared) f(libraries) h(on) g
(y) m(our) g(system.) 70 b(If) 40 b(y) m(ou) g(use) g(the) g(`) p
Fl(--whole-archive) p Fo(') c(and) k(`) p Fl(--shared) p
Fo(') 94 664 y(link) m(er) 29 b(options) g(then) f(the) h(GNU) g(link) m
(er) g(will) g(read) f(the) h(en) m(tire) g(con) m(ten) m(ts) h(of) f
(one) g(or) f(more) h(arc) m(hiv) m(e) h(libraries) 94
764 y(b) s(efore) 35 b(writing) h(out) g(a) f(shared) g(library) -8
b(.) 56 b(All) 36 b(going) g(w) m(ell,) i(y) m(ou) e(should) e(b) s(e) h
(able) h(to) g(use) f(the) h(new) f(shared) 94 863 y(library) 30
b(in) h(conjunction) f(with) g(the) h(`) p Fl(--dynamic) p
Fo(') p Fl 28 w(mpatrol) p Fo 28 w(option.) 219 989 y(In) j(order) g
(to) h(build) f(a) h(shared) f(v) m(ersion) h(of) g(the) f(mpatrol) h
(library) g(with) f(em) m(b) s(edded) f(ob) 5 b(ject) 36
b(\014le) f(format) 94 1089 y(access) 45 b(libraries,) i(y) m(ou) c(m) m
(ust) g(\014rst) f(mo) s(dify) h(the) g(`) p Fl(Makefile) p
Fo(') e(y) m(ou) j(w) m(ould) f(normally) g(use) g(to) h(build) e(the)
94 1188 y(mpatrol) 34 b(library) -8 b(.) 50 b(A) m(t) 34
b(the) f(lines) h(where) f(the) g(link) m(er) h(is) f(in) m(v) m(ok) m
(ed) i(to) f(build) e(the) i(shared) e(library) -8 b(,) 34
b(y) m(ou) g(m) m(ust) 94 1288 y(explicitly) 28 b(add) d(an) m(y) i(ob)
5 b(ject) 26 b(\014le) h(format) f(access) h(libraries) f(that) h(y) m
(ou) f(w) m(an) m(t) h(to) f(use) g(at) h(the) f(end) f(of) h(the) h
(link) m(er) 94 1388 y(command) 37 b(line.) 61 b(This) 36
b(ensures) h(that) g(all) h(references) f(to) h(suc) m(h) f(libraries) g
(will) g(b) s(e) g(resolv) m(ed) h(at) f(link) g(time) 94
1487 y(rather) 26 b(than) g(run) f(time.) 40 b(Y) -8
b(ou) 26 b(m) m(ust) g(then) g(edit) h(the) f(\014le) g(`) p
Fl(src/config.h) p Fo(') d(and) j(remo) m(v) m(e) h(all) g(of) g(the) f
(libraries) 94 1587 y(that) 44 b(y) m(ou) f(em) m(b) s(edded) f(from) g
(the) i(de\014nitions) e(of) h(the) p Fl 43 w(MP_PRELOAD_LIBS) p
Fo 39 w(and) f(`) p Fl(MP_PRELOADMT_LIBS) p Fo(') 94
1686 y(prepro) s(cessor) 26 b(macros.) 40 b(Finally) -8
b(,) 29 b(rebuild) d(the) h(shared) e(v) m(ersion) i(of) g(the) g
(mpatrol) g(library) f(and) g(the) p Fl 27 w(mpatrol) p
Fo 94 1786 a(command) 31 b(and) e(see) i(if) g(y) m(our) f(e\013orts) h
(w) m(ere) g(w) m(orth) f(it.) 219 1912 y(Because) j(the) p
Fl 31 w(mpatrol) p Fo 30 w(command) e(sets) g(the) p
Fl 32 w(MPATROL_OPTIONS) p Fo 27 w(en) m(vironmen) m(t) h(v) -5
b(ariable) 32 b(for) f(eac) m(h) i(of) 94 2011 y(the) k(programs) g(it)
g(runs,) g(it) h(do) s(es) e(not) h(a\013ect) h(the) f(v) -5
b(alue) 38 b(of) f(the) g(en) m(vironmen) m(t) g(v) -5
b(ariable) 38 b(for) e(the) h(curren) m(t) 94 2111 y(pro) s(cess) j
(\(except) h(on) f(AmigaOS) g(and) f(Net) m(w) m(are) i(where) f(all) g
(pro) s(cesses) g(share) g(the) g(same) g(en) m(vironmen) m(t\).) 94
2210 y(Ho) m(w) m(ev) m(er,) 48 b(if) 43 b(y) m(ou) g(wish) f(to) h
(use) f(the) p Fl 43 w(mpatrol) p Fo 41 w(command) g(to) h(set) p
Fl 44 w(MPATROL_OPTIONS) p Fo 38 w(in) f(the) h(curren) m(t) 94
2310 y(pro) s(cess) 23 b(en) m(vironmen) m(t) g(then) g(y) m(ou) g(can)
g(use) g(its) g(`) p Fl(--show-env) p Fo(') e(option) i(to) g(help) g
(y) m(ou) g(do) g(so.) 38 b(This) 22 b(option) i(will) 94
2410 y(apply) 33 b(all) g(of) g(the) p Fl 33 w(mpatrol) p
Fo 30 w(command) g(line) g(options) f(to) i(the) p Fl
33 w(MPATROL_OPTIONS) p Fo 28 w(en) m(vironmen) m(t) f(v) -5
b(ariable) 94 2509 y(and) 29 b(then) f(displa) m(y) h(its) g(v) -5
b(alue) 29 b(on) g(the) g(standard) f(output) g(without) h(actually) i
(running) c(an) m(y) i(programs.) 39 b(Y) -8 b(ou) 94
2609 y(can) 31 b(then) f(man) m(ually) h(set) g(the) g(en) m(vironmen) m
(t) g(v) -5 b(ariable) 31 b(with) f(the) g(output) g(from) g(the) p
Fl 31 w(mpatrol) p Fo 28 w(command.) 219 2735 y(If) e(y) m(ou) g(wish) f
(the) p Fl 29 w(MPATROL_OPTIONS) p Fo 24 w(en) m(vironmen) m(t) h(v) -5
b(ariable) 29 b(to) g(b) s(e) e(set) i(in) f(the) g(curren) m(t) g
(shell) g(pro) s(cess) 94 2834 y(automatically) j(with) c(the) p
Fl 28 w(mpatrol) p Fo 26 w(command) g(then) g(y) m(ou) h(m) m(ust) g
(use) f(some) h(shell) g(tric) m(k) m(ery) -8 b(.) 41
b(The) 27 b(follo) m(wing) 94 2934 y(script) 33 b(excerpts) f(can) h(b)
s(e) e(found) g(in) h(`) p Fl(extra/.profile) p Fo(',) d(`) p
Fl(extra/.cshrc) p Fo(') g(and) j(`) p Fl(extra/.gdbinit) p
Fo(') d(and) 94 3033 y(can) 22 b(b) s(e) f(inserted) g(in) m(to) i(y) m
(our) p Fl 21 w(ksh) p Fo(/) p Fl(bash) p Fo(,) p Fl
22 w(csh) p Fo(/) p Fl(tcsh) p Fo 20 w(and) p Fl 21 w(gdb) p
Fo 21 w(con\014guration) f(\014les) f(resp) s(ectiv) m(ely) -8
b(.) 40 b(They) 21 b(eac) m(h) 94 3133 y(pro) m(vide) 32
b(the) p Fl 32 w(mallopt) p Fo 29 w(command,) g(whic) m(h) f(tak) m(es)
p Fl 33 w(mpatrol) p Fo 29 w(command) g(options) h(and) f(sets) h(the) p
Fl 31 w(MPATROL_) 94 3233 y(OPTIONS) p Fo 29 w(en) m(vironmen) m(t) f
(v) -5 b(ariable) 31 b(in) f(the) h(curren) m(t) f(shell) g(or) h
(debugger) f(pro) s(cess.) p Fl 334 3362 a(#) 48 b(mallopt) e(for) h
(ksh/bash) 334 3570 y(function) f(mallopt\(\)) 334 3674
y({) 525 3778 y(export) g(MPATROL_OPTIONS=`mpatrol) c(--show-env) j
("$@"`) 525 3881 y(echo) i("$MPATROL_OPTIONS") 334 3985
y(}) 334 4193 y(#) h(mallopt) e(for) h(csh/tcsh) 334
4400 y(alias) g(mallopt) f('setenv) f(MPATROL_OPTIONS) f("`mpatrol) h
(--show-env) g(\\!*`";) 1050 4504 y(echo) i("$MPATROL_OPTIONS"') 334
4711 y(#) h(mallopt) e(for) h(gdb) 334 4919 y(define) g(mallopt) 334
5023 y(printf) g("Enter) f(mpatrol) f(library) h(options:) g(") 334
5127 y(shell) h(read) f(arg;) h(echo) g(set) g(environment) d
(MPATROL_OPTIONS) 1098 5230 y(`mpatrol) i(--show-env) f($arg`) h
(>/tmp/mpatrol.gdb) 334 5334 y(source) h(/tmp/mpatrol.gdb) 334
5438 y(shell) g(rm) g(-f) g(/tmp/mpatrol.gdb) 334 5542
y(show) g(environment) e(MPATROL_OPTIONS) 334 5645 y(end) p
90 rotate dyy eop
%%Page: 55 61
55 60 bop Fo 94 -116 a(Chapter) 30 b(9:) 41 b(Utilities) 2910
b(55) p Fl 334 365 a(document) 46 b(mallopt) 334 469
y(Sets) h(mpatrol) f(library) g(options) g(in) h(the) g(current) e
(process) h(environment.) 334 573 y(end) p Fn 94 841
a(9.2) 69 b(The) p Fb 44 w(mleak) p Fn 42 w(command) p
Fo 219 1029 a(Another) 30 b(utilit) m(y) i(program) e(that) h(is) f
(pro) m(vided) g(is) g(called) p Fl 32 w(mleak) p Fo
29 w(and) f(is) i(useful) e(for) h(detecting) i(memory) 94
1128 y(leaks) h(in) f(log) h(\014les) f(pro) s(duced) e(b) m(y) i(the) g
(mpatrol) g(library) -8 b(.) 46 b(This) 31 b(program) g(should) g(b) s
(e) h(used) f(if) h(the) g(mpatrol) 94 1228 y(library) e(could) g(not) h
(\014nish) e(writing) h(the) g(log) h(\014le) g(due) e(to) i(abnormal) f
(program) g(termination) h(\(whic) m(h) f(w) m(ould) 94
1327 y(prev) m(en) m(t) h(the) e(`) p Fl(SHOWUNFREED) p
Fo(') e(option) j(from) f(w) m(orking\),) h(but) f(note) h(that) g
(some) g(of) f(the) h(unfreed) e(allo) s(cations) 94
1427 y(migh) m(t) k(ha) m(v) m(e) f(b) s(een) f(freed) g(if) g(the) h
(program) f(had) g(terminated) h(successfully) -8 b(.) 219
1556 y(The) p Fl 44 w(mleak) p Fo 43 w(command) 44 b(scans) g(through) g
(an) g(mpatrol) h(log) g(\014le) g(lo) s(oking) g(for) f(lines) h(b) s
(eginning) e(with) 94 1656 y(`) p Fl(ALLOC:) p Fo(') 29
b(and) h(`) p Fl(FREE:) p Fo(') f(but) h(ignores) g(lines) h(b) s
(eginning) e(with) h(`) p Fl(REALLOC:) p Fo(',) e(so) j(only) f(the) g
(`) p Fl(LOGALLOCS) p Fo(') f(and) 94 1755 y(`) p Fl(LOGFREES) p
Fo(') 24 b(options) i(are) g(necessary) g(when) e(running) g(a) i
(program) f(link) m(ed) h(with) f(the) h(mpatrol) g(library) -8
b(.) 39 b(Note) 94 1855 y(that) c(as) f(a) g(result) g(of) g(this,) g
(no) g(attempt) h(is) f(made) f(to) i(accoun) m(t) g(for) f(resizing) g
(of) g(memory) g(allo) s(cations) i(and) 94 1955 y(so) h(the) f(total) i
(amoun) m(t) e(of) g(memory) g(used) f(b) m(y) h(the) h(resulting) f
(unfreed) e(allo) s(cations) 39 b(ma) m(y) d(not) g(b) s(e) g(en) m
(tirely) 94 2054 y(accurate.) 219 2183 y(This) f(command) g(will) g
(also) i(read) e(the) g(unfreed) f(allo) s(cations) k(table) e(pro) s
(duced) e(b) m(y) h(the) h(`) p Fl(SHOWUNFREED) p Fo(') 94
2283 y(option) 43 b(in) f(the) g(log) i(\014le) e(if) g(one) h(is) f
(presen) m(t.) 76 b(The) 42 b(en) m(tries) h(in) f(the) g(table) h
(will) g(b) s(e) f(compared) g(with) g(the) 94 2382 y(curren) m(tly) 37
b(allo) s(cated) i(en) m(tries) e(and) f(will) h(b) s(e) f(added) g(if)
g(not) h(already) g(presen) m(t.) 59 b(Ho) m(w) m(ev) m(er,) 41
b(this) 36 b(b) s(eha) m(viour) 94 2482 y(can) 31 b(b) s(e) f(disabled)
g(b) m(y) g(supplying) f(the) i(`) p Fl(--ignore) p Fo(') e(option) h
(to) h(the) p Fl 31 w(mleak) p Fo 29 w(command.) 219
2611 y(The) p Fl 39 w(mleak) p Fo 39 w(command) 39 b(can) h(also) h(b) s
(e) e(instructed) g(to) i(limit) g(the) e(n) m(um) m(b) s(er) g(of) h
(lines) g(of) g(stac) m(k) h(tracing) 94 2711 y(information) 36
b(that) f(it) h(will) f(displa) m(y) g(for) g(eac) m(h) h(unfreed) d
(memory) i(allo) s(cation.) 56 b(This) 35 b(is) f(con) m(trolled) j(b) m
(y) e(the) 94 2810 y(`) p Fl(--max-stack) p Fo(') g(option) i(whic) m
(h) f(tak) m(es) i(the) f(maxim) m(um) f(n) m(um) m(b) s(er) g(of) g
(stac) m(k) i(trace) g(lines) f(to) g(displa) m(y) g(as) g(an) 94
2910 y(argumen) m(t.) 46 b(If) 31 b(the) h(n) m(um) m(b) s(er) f(of) h
(lines) g(is) g(giv) m(en) g(as) g(`) p Fl(0) p Fo(') g(\(the) h
(default\)) f(then) g(there) g(will) g(b) s(e) f(no) h(limit) g(to) h
(the) 94 3010 y(length) e(of) g(eac) m(h) g(stac) m(k) h(trace.) 219
3139 y(The) p Fl 23 w(mleak) p Fo 22 w(command) 23 b(tak) m(es) i(one) f
(optional) g(argumen) m(t) g(whic) m(h) f(m) m(ust) g(b) s(e) g(a) h(v)
-5 b(alid) 24 b(mpatrol) f(log) i(\014lename) 94 3238
y(but) k(if) h(it) g(is) f(omitted) i(then) e(it) h(will) g(use) f(`) p
Fl(mpatrol.log) p Fo(') e(as) j(the) g(name) f(of) h(the) g(log) g
(\014le) g(to) g(use.) 40 b(The) p Fl 29 w(mleak) p Fo
94 3338 a(command) h(mak) m(es) g(t) m(w) m(o) g(passes) g(o) m(v) m
(er) g(the) g(log) g(\014le) g(so) f(the) h(\014le) f(m) m(ust) g(b) s
(e) g(randomly-accessible.) 72 b(If) 40 b(the) 94 3437
y(\014lename) 29 b(argumen) m(t) f(is) g(giv) m(en) h(as) f(`) p
Fl(-) p Fo(') g(then) g(the) g(standard) f(input) g(\014le) h(stream) g
(will) g(b) s(e) f(used) g(as) i(the) f(log) h(\014le.) 94
3537 y(Note) j(also) f(that) g(the) p Fl 31 w(mleak) p
Fo 29 w(command) f(supp) s(orts) e(the) j(`) p Fl(--help) p
Fo(') e(and) h(`) p Fl(--version) p Fo(') e(options) j(in) f(common) 94
3637 y(with) h(the) f(other) h(mpatrol) f(command) h(line) f(to) s
(ols.) 219 3766 y(Note) 176 b(that) g(mpatrol) f(patc) m(h) h(5) f
(\(whic) m(h) g(can) g(b) s(e) f(do) m(wnloaded) h(from) p
Fl 94 3865 a(http://www.cbmamiga.demon.) o(co.u) o(k/m) o(patr) o(ol/p)
o(atc) o(hes/) o(mpat) o(rol) o(_pat) o(ch5.) o(tar) o(.gz) p
Fo(\)) 94 3965 y(con) m(tains) 44 b(the) f(source) g(co) s(de) f(to) i
(a) e(F) m(OR) -8 b(TRAN) 44 b(90) f(program) f(called) p
Fl 44 w(condenseleaklog) p Fo 38 w(whic) m(h) h(o\013ers) 94
4065 y(similar) 31 b(facilities) i(to) e(the) p Fl 30
w(mleak) p Fo 29 w(command,) g(as) f(w) m(ell) i(as) e(the) h(abilit) m
(y) h(to) f(trim) f(and) g(\014lter) g(stac) m(k) i(traces.) p
Fn 94 4333 a(9.3) 69 b(The) p Fb 44 w(mpsym) p Fn 42
w(command) p Fo 219 4520 a(Another) 37 b(utilit) m(y) i(program) d
(that) i(is) f(pro) m(vided) g(is) g(called) p Fl 38
w(mpsym) p Fo(,) h(whic) m(h) f(is) g(used) f(to) i(parse) f(a) h(log) g
(\014le) 94 4620 y(pro) s(duced) 27 b(b) m(y) i(the) g(mpatrol) f
(library) g(and) g(uses) h(a) f(debugger) h(to) g(app) s(end) e(sym) m
(b) s(ol) h(names) h(and) f(source) g(lev) m(el) 94 4719
y(information) g(to) h(co) s(de) f(addresses) f(in) g(stac) m(k) i
(tracebac) m(ks.) 42 b(This) 27 b(should) f(b) s(e) h(used) g(if) h
(the) g(`) p Fl(USEDEBUG) p Fo(') d(option) 94 4819 y(is) k(not) g
(supp) s(orted) e(on) i(a) g(particular) g(platform) g(or) f(do) s(es) h
(not) g(w) m(ork) f(prop) s(erly) g(with) g(a) h(sp) s(eci\014c) g
(program.) 40 b(It) 94 4919 y(will) 23 b(replace) g(all) g(existing) g
(sym) m(b) s(ols) e(and) g(source) i(lev) m(el) g(information) f(asso) s
(ciated) i(with) e(the) g(stac) m(k) h(tracebac) m(ks) 94
5018 y(in) 30 b(the) h(mpatrol) g(log) g(\014le) f(and) g(will) h
(displa) m(y) f(the) h(resulting) f(log) h(\014le) g(on) f(the) h
(standard) e(output) h(\014le) g(stream.) 219 5147 y(The) k(\014rst) f
(argumen) m(t) i(to) p Fl 34 w(mpsym) p Fo 33 w(m) m(ust) f(b) s(e) g
(the) g(\014lename) g(of) g(the) h(executable) g(\014le) g(that) f(pro)
s(duced) f(the) 94 5247 y(mpatrol) i(log) f(\014le) g(but) f(if) h(it) g
(is) g(omitted) h(then) p Fl 33 w(mpsym) p Fo 32 w(will) g(use) e(`) p
Fl(a.out) p Fo(') g(as) h(the) g(name) g(of) f(the) h(executable) 94
5347 y(\014le) 27 b(to) f(use.) 39 b(The) p Fl 26 w(mpsym) p
Fo 24 w(command) 26 b(will) g(read) g(the) g(sym) m(b) s(ol) g(table) g
(and) g(debugging) g(sections) h(from) e(this) h(\014le) 94
5446 y(in) 33 b(order) f(to) h(map) g(the) f(co) s(de) h(addresses) f
(that) i(app) s(ear) e(in) g(the) h(mpatrol) g(log) g(\014le) g(in) m
(to) h(sym) m(b) s(ol) e(names) h(and) 94 5546 y(source) f(lev) m(el) g
(information.) 43 b(If) 30 b(the) h(executable) i(\014le) e(do) s(es) g
(not) g(con) m(tain) h(a) f(sym) m(b) s(ol) g(table) h(then) e(no) h
(sym) m(b) s(ol) 94 5645 y(names) k(will) h(b) s(e) e(a) m(v) -5
b(ailable) 38 b(and) c(if) h(it) h(do) s(es) e(not) i(con) m(tain) g
(the) f(appropriate) g(debugging) g(sections) h(then) f(no) p
90 rotate dyy eop
%%Page: 56 62
56 61 bop Fo 94 -116 a(56) 3377 b(mpatrol) 94 365 y(source) 28
b(lev) m(el) h(information) e(will) g(b) s(e) g(a) m(v) -5
b(ailable) 29 b(either.) 40 b(Ob) m(viously) -8 b(,) 29
b(if) e(the) g(executable) i(\014le) e(is) g(not) g(the) h(same) 94
465 y(as) j(the) g(one) f(that) h(created) h(the) e(mpatrol) h(log) g
(\014le) g(then) f(the) h(\014nal) f(output) g(will) g(b) s(e) g
(wrong.) 219 588 y(The) d(second) g(argumen) m(t) h(to) p
Fl 28 w(mpsym) p Fo 26 w(m) m(ust) f(b) s(e) f(a) i(v) -5
b(alid) 28 b(mpatrol) f(log) i(\014lename) e(but) g(if) g(it) h(is) f
(omitted) h(then) p Fl 94 688 a(mpsym) p Fo 34 w(will) 36
b(use) f(`) p Fl(mpatrol.log) p Fo(') d(as) k(the) f(name) g(of) h(the)
f(log) h(\014le) f(to) h(use,) h(or) e(`) p Fl(progfile.log) p
Fo(') d(if) j(it) h(can't) 94 787 y(\014nd) 27 b(that.) 40
b(The) p Fl 28 w(mpsym) p Fo 27 w(command) 27 b(mak) m(es) i(t) m(w) m
(o) h(passes) e(o) m(v) m(er) h(the) f(log) h(\014le) f(so) h(the) f
(\014le) g(m) m(ust) g(b) s(e) f(randomly-) 94 887 y(accessable.) 44
b(Note) 32 b(also) f(that) h(the) p Fl 30 w(mpsym) p
Fo 30 w(command) e(supp) s(orts) f(the) i(`) p Fl(--help) p
Fo(') e(and) h(`) p Fl(--version) p Fo(') f(options) 94
986 y(in) i(common) f(with) g(the) h(other) f(mpatrol) h(command) f
(line) h(to) s(ols.) 219 1109 y(If) e(the) g(mpatrol) g(library) f
(cannot) i(determine) f(the) g(name) g(of) g(a) h(sym) m(b) s(ol) e
(for) h(displa) m(y) g(in) g(the) g(log) h(\014le) f(then) 94
1209 y(it) g(will) g(mark) f(the) h(sym) m(b) s(ol) f(as) h(`) p
Fl(???) p Fo('.) 40 b(If) 28 b(the) g(debugger) h(that) g(is) f(b) s
(eing) g(used) g(b) m(y) p Fl 28 w(mpsym) p Fo 27 w(also) h(has) g
(problems) 94 1309 y(determining) f(the) g(name) f(of) h(the) g(sym) m
(b) s(ol) f(then) g(y) m(ou) h(can) g(pass) f(the) g(`) p
Fl(--skip) p Fo(') g(option) h(to) p Fl 28 w(mpsym) p
Fo 26 w(to) g(instruct) 94 1408 y(it) j(to) h(skip) d(an) m(y) i(sym) m
(b) s(ols) f(mark) m(ed) h(as) f(`) p Fl(???) p Fo(') g(in) g(the) h
(log) g(\014le.) 219 1531 y(The) p Fl 27 w(mpsym) p Fo
25 w(command) c(curren) m(tly) h(uses) p Fl 26 w(gdb) p
Fo 27 w(as) f(the) g(debugger) g(with) g(whic) m(h) g(to) h(obtain) g
(the) f(additional) 94 1631 y(information) j(ab) s(out) e(the) h(co) s
(de) g(addresses) f(in) g(the) h(mpatrol) g(log) h(\014le.) 40
b(It) 29 b(also) h(mak) m(es) f(use) g(of) g(sev) m(eral) h(UNIX) 94
1731 y(text) f(pro) s(cessing) f(commands,) g(including) p
Fl 27 w(perl) p Fo 26 w(if) g(it) g(is) g(installed,) h(in) f(order) f
(to) h(extract) h(information) f(from) 94 1830 y(the) 34
b(debugger's) f(output) g(and) g(from) g(the) h(log) g(\014le.) 50
b(As) 33 b(a) h(result,) h(the) p Fl 33 w(mpsym) p Fo
32 w(command) e(is) h(only) f(lik) m(ely) i(to) 94 1930
y(w) m(ork) c(on) f(UNIX) h(platforms) f(or) h(on) f(systems) g(whic) m
(h) g(ha) m(v) m(e) i(the) e(necessary) h(commands) f(installed.) p
Fn 94 2183 a(9.4) 69 b(The) p Fb 44 w(mpedit) p Fn 42
w(command) p Fo 219 2364 a(Y) -8 b(et) 30 b(another) g(utilit) m(y) g
(program) f(that) h(is) f(pro) m(vided) f(is) h(called) p
Fl 31 w(mpedit) p Fo(,) f(whic) m(h) g(is) h(used) g(to) g(in) m(v) m
(ok) m(e) i(a) f(text) 94 2463 y(editor) 25 b(on) f(a) g(giv) m(en) h
(source) f(\014le) g(and) f(optionally) j(jump) c(to) j(a) f(sp) s
(eci\014c) g(line) g(n) m(um) m(b) s(er.) 37 b(It) 24
b(is) g(used) f(as) h(a) h(supp) s(ort) 94 2563 y(command) 36
b(b) m(y) g(the) h(mpatrol) f(library) g(when) f(the) h(`) p
Fl(EDIT) p Fo(') g(or) g(`) p Fl(LIST) p Fo(') g(options) g(are) h
(used) e(but) g(it) i(can) g(quite) 94 2663 y(easily) 32
b(b) s(e) d(used) g(as) i(a) f(command) g(in) g(its) g(o) m(wn) h(righ)
m(t) f(if) g(prop) s(erly) f(con\014gured.) 40 b(Because) 31
b(it) g(is) f(a) h(shell) f(script) 94 2762 y(it) 37
b(can) g(b) s(e) f(easily) h(con\014gured) f(to) h(supp) s(ort) e
(other) h(editors,) j(but) c(this) i(unfortunately) f(limits) h(it) g
(to) g(UNIX) 94 2862 y(platforms) 31 b(at) g(the) f(momen) m(t.) 219
2985 y(The) c(\014rst) g(argumen) m(t) i(to) p Fl 27
w(mpedit) p Fo 25 w(m) m(ust) f(b) s(e) f(the) h(\014lename) g(of) g
(the) h(source) f(\014le) f(to) i(b) s(e) e(edited) h(or) g(listed.) 40
b(If) 94 3085 y(the) 24 b(source) g(\014le) f(do) s(es) g(not) h(exist)
g(then) g(the) f(con) m(ten) m(ts) i(of) f(the) p Fl
24 w(MPATROL_SOURCEPATH) p Fo 18 w(en) m(vironmen) m(t) g(v) -5
b(ariable) 94 3184 y(will) 31 b(b) s(e) e(used) g(to) h(help) f(lo) s
(cate) j(the) e(source) g(\014le,) g(ev) m(en) g(if) g(the) g
(\014lename) g(con) m(tained) h(an) f(absolute) g(or) g(relativ) m(e) 94
3284 y(path) e(comp) s(onen) m(t.) 40 b(This) 27 b(en) m(vironmen) m(t)
h(v) -5 b(ariable) 29 b(should) d(consist) j(of) f(a) g
(colon-separated) h(list) g(of) e(directory) 94 3384
y(names) 21 b(whic) m(h) g(ma) m(y) g(con) m(tain) i(absolute) e(paths)
g(or) g(b) s(e) f(relativ) m(e) j(to) f(the) f(curren) m(t) f
(directory;) 25 b(the) c(\014rst) f(directory) 94 3483
y(in) k(the) g(list) h(will) f(b) s(e) f(searc) m(hed) h(\014rst.) 38
b(If) 24 b(the) p Fl 24 w(MPATROL_SOURCEPATH) p Fo 19
w(en) m(vironmen) m(t) g(v) -5 b(ariable) 25 b(is) f(not) g(set) g
(then) 94 3583 y(only) 30 b(the) f(curren) m(t) f(directory) i(will) f
(b) s(e) f(searc) m(hed.) 41 b(Y) -8 b(ou) 30 b(can) f(also) h(use) e
(the) h(`) p Fl(--source-dir) p Fo(') e(option) i(to) h(add) 94
3682 y(directories) 37 b(to) f(the) f(searc) m(h) h(path) g(used) e(to)
i(lo) s(cate) h(the) f(source) f(\014le.) 56 b(Multiple) 36
b(`) p Fl(--source-dir) p Fo(') d(options) 94 3782 y(ma) m(y) d(b) s(e)
e(giv) m(en,) j(and) d(eac) m(h) i(will) f(b) s(e) f(prep) s(ended) f
(to) i(the) p Fl 29 w(MPATROL_SOURCEPATH) p Fo 24 w(en) m(vironmen) m
(t) h(v) -5 b(ariable) 29 b(in) 94 3882 y(the) i(order) f(giv) m(en) h
(on) g(the) f(command) g(line.) 219 4005 y(If) 35 b(the) h(second) g
(argumen) m(t) g(sp) s(ecifying) f(the) h(line) g(n) m(um) m(b) s(er) e
(is) i(omitted) g(then) g(it) g(is) f(assumed) g(to) i(b) s(e) e(`) p
Fl(1) p Fo('.) 94 4104 y(The) 27 b(text) i(editor) e(will) h(attempt) g
(to) g(jump) e(to) i(the) g(sp) s(eci\014ed) e(line) i(after) g(op) s
(ening) e(the) i(source) f(\014le.) 40 b(The) 27 b(text) 94
4204 y(editor) 33 b(that) p Fl 33 w(mpedit) p Fo 31 w(uses) f(is) g
(con) m(trolled) i(b) m(y) e(setting) i(the) p Fl 32
w(EDITOR) p Fo 31 w(en) m(vironmen) m(t) f(v) -5 b(ariable.) 47
b(This) 32 b(can) h(b) s(e) 94 4304 y(set) h(to) g(the) g(full) f
(pathname) g(of) g(the) h(text) g(editor) g(to) g(use) f(or) g(it) h
(can) f(b) s(e) g(set) h(to) g(the) f(command) g(that) h(w) m(ould) 94
4403 y(normally) j(b) s(e) e(used) g(to) h(in) m(v) m(ok) m(e) i(the) e
(text) h(editor,) h(but) d(it) h(cannot) h(also) f(con) m(tain) i
(command) d(line) h(options.) 94 4503 y(Y) -8 b(ou) 32
b(can) f(also) i(use) d(the) i(`) p Fl(--editor) p Fo(') d(option) j
(to) f(sp) s(ecify) g(the) g(text) h(editor) g(on) f(the) g(command) g
(line) h(instead) 94 4602 y(of) f(using) f(the) g(v) -5
b(alue) 31 b(in) f(the) p Fl 31 w(EDITOR) p Fo 29 w(en) m(vironmen) m
(t) h(v) -5 b(ariable.) 219 4725 y(The) 33 b(curren) m(tly) g(supp) s
(orted) f(editors) i(are) p Fl 33 w(vi) p Fo(,) p Fl
34 w(vim) p Fo(,) p Fl 34 w(elvis) p Fo(,) p Fl 32 w(emacs) p
Fo(,) p Fl 33 w(xemacs) p Fo(,) p Fl 33 w(pico) p Fo
32 w(and) p Fl 33 w(nano) p Fo(,) f(and) g(if) 94 4825
y(the) p Fl 25 w(EDITOR) p Fo 23 w(en) m(vironmen) m(t) 25
b(v) -5 b(ariable) 25 b(is) f(not) h(set) f(then) g(the) h(default) f
(will) h(b) s(e) p Fl 24 w(vi) p Fo(.) 38 b(Selecting) 26
b(an) e(unsupp) s(orted) 94 4925 y(text) k(editor) g(will) f(result) g
(in) f(an) h(error.) 39 b(Ho) m(w) m(ev) m(er,) 30 b(y) m(ou) d(can) g
(edit) g(the) p Fl 27 w(mpedit) p Fo 26 w(\014le) g(to) g(add) f(supp) s
(ort) f(for) i(y) m(our) 94 5024 y(o) m(wn) 37 b(fa) m(v) m(ourite) i
(text) e(editor) g(as) g(long) h(as) e(it) i(supp) s(orts) c(a) k(w) m
(a) m(y) f(to) h(immediately) g(jump) d(to) i(a) g(sp) s(eci\014c) g
(line) 94 5124 y(n) m(um) m(b) s(er) 31 b(when) h(it) h(is) f(\014rst) g
(started) g(up.) 46 b(Note) 33 b(that) g(the) g(text) g(editor) g(m) m
(ust) f(also) h(op) s(en) f(a) h(new) e(windo) m(w) h(to) 94
5224 y(edit) i(the) e(source) h(\014le) g(so) g(that) g(it) g(do) s(es)
g(not) g(obscure) f(an) m(y) h(mpatrol) g(diagnostic) h(messages,) g
(and) e(if) h(it) g(do) s(es) 94 5323 y(not) e(supp) s(ort) e(this) h
(then) g(a) h(new) f(terminal) h(windo) m(w) e(m) m(ust) i(b) s(e) e
(op) s(ened) h(for) g(it) h(to) g(use.) 219 5446 y(If) 21
b(the) h(`) p Fl(--listing) p Fo(') e(option) j(is) f(giv) m(en) g(on) g
(the) g(command) g(line) g(then) g(the) p Fl 22 w(mpedit) p
Fo 20 w(command) g(will) g(displa) m(y) 94 5546 y(a) g(con) m(text) i
(listing) e(of) g(the) f(source) h(\014le) f(at) i(the) e(sp) s
(eci\014ed) g(line) h(n) m(um) m(b) s(er) e(to) i(the) g(standard) e
(error) i(output) f(stream) 94 5645 y(instead) 37 b(of) g(in) m(v) m
(oking) h(the) f(text) g(editor.) 60 b(The) 36 b(listing) i(will) f(b) s
(e) f(annotated) h(with) g(line) f(n) m(um) m(b) s(ers) g(and) g(will) p
90 rotate dyy eop
%%Page: 57 63
57 62 bop Fo 94 -116 a(Chapter) 30 b(9:) 41 b(Utilities) 2910
b(57) 94 365 y(also) 33 b(sho) m(w) f(the) g(con) m(ten) m(ts) i(of) e
(the) g(\014v) m(e) h(lines) f(b) s(efore) f(and) h(after) g(the) g(sp)
s(eci\014ed) f(line) i(if) f(p) s(ossible.) 45 b(Note) 33
b(also) 94 465 y(that) e(the) p Fl 30 w(mpedit) p Fo
27 w(command) f(supp) s(orts) e(the) h(`) p Fl(--help) p
Fo(') g(and) g(`) p Fl(--version) p Fo(') e(options) j(in) g(common) f
(with) h(the) 94 565 y(other) h(mpatrol) g(command) f(line) h(to) s
(ols.) p Fn 94 832 a(9.5) 69 b(The) p Fb 44 w(hexwords) p
Fn 41 w(command) p Fo 219 1018 a(The) 42 b(\014nal) h(utilit) m(y) h
(program) e(that) i(is) f(pro) m(vided) f(is) h(called) p
Fl 44 w(hexwords) p Fo(,) h(whic) m(h) e(is) h(used) f(to) h(generate)
94 1118 y(hexadecimal) 27 b(constan) m(ts) g(from) f(a) g(dictionary) g
(of) g(kno) m(wn) f(w) m(ords.) 39 b(Suc) m(h) 25 b(n) m(umerical) h
(constan) m(ts) h(can) f(b) s(e) f(used) 94 1217 y(in) i(source) h
(\014les) f(for) g(a) h(v) -5 b(ariet) m(y) 28 b(of) g(debugging) f
(problems,) g(and) g(problems) f(with) h(uninitialised) h(v) -5
b(ariables) 28 b(are) 94 1317 y(esp) s(ecially) 38 b(relev) -5
b(an) m(t) 38 b(since) f(these) h(sp) s(ecial) f(n) m(um) m(b) s(ers) e
(will) i(stand) f(out) h(if) g(seen) g(from) f(within) g(a) h
(debugger.) 94 1417 y(F) -8 b(or) 34 b(example,) h(here) e(are) g(some)
h(common) f(\(and) g(some) g(not-so-common\)) i(32-bit) f(hexadecimal) h
(constan) m(ts) 94 1516 y(that) c(can) g(b) s(e) f(used) f(as) i
(debugging) f(aids:) p Fi 94 1645 a(wor) -5 b(d) 671
b(hex) 33 b(c) -5 b(onstant) p Fo 94 1744 a(addedbad) p
Fl 471 w(0xaddedbad) p Fo 94 1844 a(allo) s(cate) p Fl
553 w(0xa110ca7e) p Fo 94 1944 a(badlab) s(el) p Fl 520
w(0xbad1abe1) p Fo 94 2043 a(baseball) p Fl 538 w(0xba5eba11) p
Fo 94 2143 a(co) s(debab) s(e) p Fl 487 w(0xc0debabe) p
Fo 94 2243 a(co) s(dedbad) p Fl 479 w(0xc0dedbad) p Fo
94 2342 a(deadb) s(eef) p Fl 507 w(0xdeadbeef) p Fo 94
2442 a(deadco) s(de) p Fl 490 w(0xdeadc0de) p Fo 94 2541
a(failsafe) p Fl 584 w(0xfa115afe) p Fo 94 2641 a(feedface) p
Fl 544 w(0xfeedface) p Fo 94 2741 a(freedata) p Fl 536
w(0xf4eeda7a) p Fo 94 2840 a(go) s(o) s(dco) s(de) p
Fl 485 w(0x600dc0de) p Fo 219 2969 a(As) 37 b(can) h(b) s(e) f(seen) g
(ab) s(o) m(v) m(e,) k(man) m(y) c(decimal) h(digits) g(can) g(b) s(e) f
(used) f(to) i(represen) m(t) g(the) f(letters) i(that) f(they) 94
3068 y(most) 32 b(closely) g(resem) m(ble,) g(along) f(with) g(the) g
(hexadecimal) h(digits) f(`) p Fl(A) p Fo(') g(through) f(`) p
Fl(F) p Fo('.) 42 b(This) 30 b(pro) m(vides) h(a) g(m) m(uc) m(h) 94
3168 y(larger) c(selection) g(of) f(w) m(ords) f(that) i(can) f(b) s(e)
f(matc) m(hed,) i(although) f(the) g(digits) h(`) p Fl(3) p
Fo(') e(and) h(`) p Fl(8) p Fo(') f(cannot) i(b) s(e) e(used) g(due) 94
3268 y(to) k(the) f(lac) m(k) h(of) f(an) m(y) g(similar-lo) s(oking) h
(letters.) 41 b(The) 28 b(digits) g(and) f(their) h(corresp) s(onding) f
(letters) h(are) h(giv) m(en) f(in) 94 3367 y(the) j(follo) m(wing) h
(table.) p Fi 94 3496 a(digit) 682 b(letter) p Fo 94
3595 a(`) p Fl(0) p Fo(') 758 b(O,) 30 b(o) h(or) f(Q) 94
3695 y(`) p Fl(1) p Fo(') 758 b(I,) 30 b(i) h(or) f(l) 94
3795 y(`) p Fl(2) p Fo(') 758 b(Z) 30 b(or) g(z) 94 3894
y(`) p Fl(3) p Fo(') 758 b(-) 94 3994 y(`) p Fl(4) p
Fo(') g(q) 30 b(or) h(R) 94 4093 y(`) p Fl(5) p Fo(') 758
b(S) 30 b(or) g(s) 94 4193 y(`) p Fl(6) p Fo(') 758 b(G) 94
4293 y(`) p Fl(7) p Fo(') g(J) 30 b(or) g(T) 94 4392
y(`) p Fl(8) p Fo(') 758 b(-) 94 4492 y(`) p Fl(9) p
Fo(') g(g) 94 4592 y(`) p Fl(A-F) p Fo(') 662 b(A-F) 94
4691 y(`) p Fl(a-f) p Fo(') g(a-f) 219 4820 y(The) 40
b(argumen) m(t) h(to) p Fl 42 w(hexwords) p Fo 38 w(m) m(ust) g(b) s(e)
f(a) h(v) -5 b(alid) 41 b(dictionary) h(\014lename) f(but) f(if) g(it) i
(is) e(omitted) i(then) p Fl 94 4919 a(hexwords) p Fo
31 w(will) 32 b(use) g(`) p Fl(/usr/dict/words) p Fo(') d(as) k(the) f
(name) h(of) f(the) h(dictionary) g(\014le) f(to) h(use.) 47
b(If) 31 b(that) i(cannot) 94 5019 y(b) s(e) g(found) f(then) i(hexw) m
(ords) e(will) i(try) f(`) p Fl(/usr/lib/dict/words) p
Fo(') c(and) k(`) p Fl(/usr/share/dict/words) p Fo('.) 44
b(The) 94 5119 y(dictionary) 39 b(\014le) g(m) m(ust) f(b) s(e) f(a) i
(plain) f(text) h(\014le) g(that) g(con) m(tains) g(one) g(w) m(ord) e
(p) s(er) h(line,) i(otherwise) f(few) f(to) h(no) 94
5218 y(w) m(ords) 30 b(will) h(b) s(e) f(matc) m(hed.) 219
5347 y(The) 25 b(w) m(ords) g(that) h(are) f(matc) m(hed) i(from) d
(the) i(dictionary) g(\014le) f(can) h(b) s(e) f(con) m(trolled) i(b) m
(y) e(using) g(the) g(`) p Fl(--match) p Fo(') 94 5446
y(option,) 44 b(whic) m(h) c(sets) h(the) f(t) m(yp) s(e) h(of) f
(case-sensitivit) m(y) k(to) d(use.) 70 b(A) 41 b(setting) g(of) g(`) p
Fl(exact) p Fo(') e(p) s(erforms) g(a) i(case-) 94 5546
y(sensitiv) m(e) 26 b(comparison) e(of) g(all) h(of) f(the) g(w) m
(ords) f(in) h(the) g(dictionary) g(\014le) g(and) g(the) g
(hexadecimal) h(digits,) h(whereas) 94 5645 y(a) h(setting) g(of) g(`) p
Fl(any) p Fo(') f(do) s(es) f(not.) 40 b(The) 26 b(`) p
Fl(lower) p Fo(') f(and) h(`) p Fl(upper) p Fo(') f(settings) i(con) m
(v) m(ert) h(the) e(w) m(ords) g(in) g(the) g(dictionary) p
90 rotate dyy eop
%%Page: 58 64
58 63 bop Fo 94 -116 a(58) 3377 b(mpatrol) 94 365 y(\014le) 39
b(to) h(lo) m(w) m(er) f(and) f(upp) s(er) f(case) j(resp) s(ectiv) m
(ely) g(b) s(efore) e(p) s(erforming) f(a) i(case-sensitiv) m(e) j
(comparison.) 65 b(The) 94 465 y(default) 31 b(case-sensitivit) m(y) i
(is) e(`) p Fl(exact) p Fo('.) 219 589 y(The) 46 b(minim) m(um) f(and) h
(maxim) m(um) g(n) m(um) m(b) s(er) f(of) h(letters) i(that) e(are) h
(matc) m(hed) g(are) g(con) m(trolled) h(b) m(y) e(the) 94
689 y(`) p Fl(--minimum) p Fo(') 37 b(and) g(`) p Fl(--maximum) p
Fo(') f(options.) 64 b(None) 39 b(of) f(the) h(hexadecimal) g(n) m(um) m
(b) s(ers) e(displa) m(y) m(ed) h(will) h(ha) m(v) m(e) 94
789 y(an) m(y) i(less) g(or) f(more) h(digits) g(that) f(those) h(sp) s
(eci\014ed) f(with) g(these) h(options.) 71 b(The) 39
b(default) i(minim) m(um) e(is) i(`) p Fl(4) p Fo(') 94
888 y(digits) 34 b(and) e(the) i(default) f(maxim) m(um) f(is) h(`) p
Fl(8) p Fo(') h(digits.) 49 b(Note) 34 b(also) g(that) f(the) p
Fl 33 w(hexwords) p Fo 31 w(command) g(supp) s(orts) 94
988 y(the) e(`) p Fl(--help) p Fo(') e(and) h(`) p Fl(--version) p
Fo(') e(options) j(in) f(common) h(with) f(the) g(other) h(mpatrol) g
(command) f(line) h(to) s(ols.) 219 1112 y(The) p Fl
39 w(hexwords) p Fo 38 w(command) 40 b(curren) m(tly) g(mak) m(es) h
(use) e(of) h(sev) m(eral) h(UNIX) g(text) g(pro) s(cessing) e
(commands) 94 1212 y(in) h(order) f(to) i(extract) g(the) f(w) m(ords) g
(and) f(their) h(hexadecimal) h(equiv) -5 b(alen) m(ts.) 71
b(As) 39 b(a) i(result,) h(the) p Fl 40 w(hexwords) p
Fo 94 1312 a(command) d(is) g(only) g(lik) m(ely) h(to) g(w) m(ork) e
(on) h(UNIX) g(platforms) g(or) g(on) f(systems) h(whic) m(h) g(ha) m
(v) m(e) h(the) f(necessary) 94 1411 y(commands) 30 b(installed.) p
90 rotate dyy eop
%%Page: 59 65
59 64 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(59) p Fk 94 365 a(10) 81 b(Pro\014ling) p Fo 219 589
a(The) 32 b(mpatrol) i(library) e(has) h(the) g(capabilit) m(y) i(to) f
(summarise) e(the) h(information) g(it) h(accum) m(ulated) g(ab) s(out)
94 689 y(the) 25 b(b) s(eha) m(viour) f(of) g(dynamic) g(memory) h
(allo) s(cations) h(and) e(deallo) s(cations) i(o) m(v) m(er) g(the) e
(lifetime) i(of) f(an) m(y) f(program) 94 789 y(that) 30
b(it) g(w) m(as) g(link) m(ed) f(and) g(run) f(with.) 40
b(This) 28 b(summary) g(sho) m(ws) h(a) h(rough) e(pro\014le) h(of) h
(all) g(memory) f(allo) s(cations) 94 888 y(that) f(w) m(ere) g(made,) g
(and) f(is) h(hence) f(called) p Fi 29 w(pr) -5 b(o\014ling) p
Fo(.) 41 b(There) 27 b(are) h(sev) m(eral) g(other) g(di\013eren) m(t) g
(kinds) e(of) h(pro\014ling) 94 988 y(pro) m(vided) 32
b(with) g(most) g(compilation) i(to) s(ols,) f(but) e(they) h
(generally) i(pro\014le) d(function) h(calls) h(or) f(line) g(n) m(um) m
(b) s(ers) 94 1088 y(in) f(com) m(bination) g(with) f(the) h(time) g
(it) g(tak) m(es) h(to) f(execute) h(them.) 219 1212
y(Memory) 40 b(allo) s(cation) h(pro\014ling) d(is) h(useful) g(since) g
(it) h(allo) m(ws) g(a) g(programmer) e(to) i(see) g(whic) m(h) e
(functions) 94 1312 y(directly) 29 b(allo) s(cate) h(memory) e(from) g
(the) g(heap,) g(with) g(a) g(view) g(to) h(optimising) f(the) h
(memory) e(usage) i(or) f(p) s(erfor-) 94 1411 y(mance) 34
b(of) f(a) h(program.) 49 b(It) 33 b(also) h(summarises) f(an) m(y) g
(unfreed) f(memory) h(allo) s(cations) j(that) d(w) m(ere) h(presen) m
(t) f(at) 94 1511 y(the) c(end) f(of) h(program) f(execution,) j(some) e
(of) f(whic) m(h) h(could) f(b) s(e) g(as) h(a) g(result) f(of) h
(memory) g(leaks.) 41 b(In) 27 b(addition,) 94 1611 y(a) h(summary) e
(of) h(the) g(sizes) h(and) e(distribution) g(of) h(all) h(memory) f
(allo) s(cations) i(and) d(deallo) s(cations) j(is) e(a) m(v) -5
b(ailable.) 219 1735 y(A) 36 b(memory) g(allo) s(cation) j(call) f
(graph) d(is) i(also) g(a) m(v) -5 b(ailable) 38 b(for) e(the) h
(programmer) f(to) h(b) s(e) e(able) i(to) g(see) g(the) 94
1835 y(caller) i(and) d(callee) k(relationships) d(for) g(all) h
(functions) f(that) g(allo) s(cated) i(memory) -8 b(,) 40
b(either) d(directly) h(or) f(indi-) 94 1934 y(rectly) -8
b(.) 79 b(This) 41 b(graph) h(is) h(sho) m(wn) f(in) g(a) g(tabular) h
(form) f(similar) h(to) g(that) g(of) p Fl 43 w(gprof) p
Fo(,) h(but) e(it) g(can) h(also) h(b) s(e) 94 2034 y(written) g(to) h
(a) f(graph) g(sp) s(eci\014cation) g(\014le) g(for) g(later) h(pro) s
(cessing) e(b) m(y) p Fl 44 w(dot) p Fo(.) 80 b(The) p
Fl 43 w(dot) p Fo 43 w(and) p Fl 44 w(dotty) p Fo 42
w(com-) 94 2134 y(mands) 38 b(are) g(part) g(of) g(GraphViz,) i(an) e
(excellen) m(t) j(graph) c(visualisation) j(pac) m(k) -5
b(age) 40 b(that) e(w) m(as) h(dev) m(elop) s(ed) f(at) 94
2233 y(A) -8 b(T&T) 41 b(Bell) h(Labs) f(and) g(is) g(a) m(v) -5
b(ailable) 43 b(for) e(free) g(do) m(wnload) h(for) e(UNIX) i(and) e
(Windo) m(ws) h(platforms) g(from) p Fl 94 2333 a
(http://www.research.att.co) o(m/sw) o(/to) o(ols/) o(grap) o(hvi) o
(z/) p Fo(.) 219 2457 y(Only) c(allo) s(cations) j(and) d(deallo) s
(cations) j(are) f(recorded,) g(with) f(eac) m(h) h(reallo) s(cation) h
(b) s(eing) e(treated) g(as) h(a) 94 2557 y(deallo) s(cation) 25
b(immediately) f(follo) m(w) m(ed) g(b) m(y) e(an) h(allo) s(cation.) 40
b(F) -8 b(or) 23 b(full) f(memory) h(allo) s(cation) i(pro\014ling) c
(supp) s(ort,) 94 2657 y(call) 34 b(stac) m(k) f(tra) m(v) m(ersal) h
(m) m(ust) e(b) s(e) f(supp) s(orted) f(in) i(the) g(mpatrol) g
(library) g(and) f(all) i(of) f(the) g(program's) g(sym) m(b) s(ols) 94
2756 y(m) m(ust) 23 b(ha) m(v) m(e) i(b) s(een) d(successfully) h(read)
g(b) m(y) g(the) h(mpatrol) f(library) g(b) s(efore) f(the) i(program) e
(w) m(as) i(run.) 37 b(The) 22 b(library) 94 2856 y(will) 29
b(attempt) g(to) f(comp) s(ensate) h(if) f(either) g(of) g(these) g
(requiremen) m(ts) g(are) g(not) g(met,) i(but) d(the) h(displa) m(y) m
(ed) g(tables) 94 2956 y(ma) m(y) 37 b(con) m(tain) h(less) f
(meaningful) f(information.) 59 b(Cycles) 37 b(that) g(app) s(ear) f
(in) g(the) g(allo) s(cation) j(call) f(graph) e(are) 94
3055 y(due) h(to) g(recursion) g(and) f(are) i(curren) m(tly) f(dealt) g
(with) g(b) m(y) g(only) g(recording) g(the) g(memory) g(allo) s
(cations) i(once) 94 3155 y(along) 32 b(the) e(call) i(stac) m(k.) 219
3279 y(Memory) 22 b(allo) s(cation) j(pro\014ling) c(is) h(disabled) g
(b) m(y) g(default,) i(but) d(can) h(b) s(e) f(enabled) h(using) g(the)
g(`) p Fl(PROF) p Fo(') f(option.) 94 3379 y(This) 37
b(writes) g(all) h(of) f(the) h(pro\014ling) e(data) i(to) g(a) f
(\014le) h(called) g(`) p Fl(mpatrol.out) p Fo(') d(in) h(the) i
(curren) m(t) f(directory) g(at) 94 3479 y(the) g(end) e(of) h(program)
g(execution,) j(but) c(the) h(name) g(of) g(this) g(\014le) g(can) g(b)
s(e) g(c) m(hanged) g(using) g(the) g(`) p Fl(PROFFILE) p
Fo(') 94 3578 y(option) 41 b(and) e(the) h(default) h(directory) f(in) g
(whic) m(h) g(to) g(place) h(these) g(\014les) f(can) g(b) s(e) f(c) m
(hanged) i(b) m(y) f(setting) h(the) p Fl 94 3678 a(PROFDIR) p
Fo 36 w(en) m(vironmen) m(t) c(v) -5 b(ariable.) 62 b(Sometimes) 38
b(it) g(can) f(also) h(b) s(e) f(desirable) g(for) g(the) g(mpatrol) g
(library) g(to) 94 3778 y(write) 28 b(out) f(the) h(accum) m(ulated) h
(pro\014ling) d(information) i(in) f(the) g(middle) g(of) h(program) f
(execution) h(rather) f(than) 94 3877 y(just) 32 b(at) g(the) g(end,) f
(ev) m(en) i(if) e(it) h(is) g(only) g(partially) h(complete,) g(and) e
(this) h(b) s(eha) m(viour) f(can) h(b) s(e) f(con) m(trolled) i(with)
94 3977 y(the) g(`) p Fl(AUTOSAVE) p Fo(') d(option.) 47
b(This) 31 b(can) h(b) s(e) g(particularly) h(useful) e(when) g
(running) g(the) h(program) g(from) f(within) 94 4076
y(a) j(debugger,) g(when) e(it) h(is) h(necessary) f(to) h(analyse) g
(the) f(pro\014ling) f(information) i(at) g(a) f(certain) h(p) s(oin) m
(t) f(during) 94 4176 y(program) e(execution.) 219 4301
y(When) 38 b(pro\014ling) f(memory) h(allo) s(cations,) k(it) d(is) f
(necessary) g(to) h(distinguish) e(b) s(et) m(w) m(een) i(small,) i
(medium,) 94 4400 y(large) 32 b(and) d(extra) i(large) g(memory) f
(allo) s(cations) j(that) d(w) m(ere) h(made) f(b) m(y) g(a) h
(function.) 40 b(The) 30 b(b) s(oundaries) e(whic) m(h) 94
4500 y(distinguish) c(b) s(et) m(w) m(een) h(these) f(allo) s(cation) j
(sizes) e(can) f(b) s(e) g(con) m(trolled) i(via) f(the) f(`) p
Fl(SMALLBOUND) p Fo(',) g(`) p Fl(MEDIUMBOUND) p Fo(') 94
4599 y(and) i(`) p Fl(LARGEBOUND) p Fo(') e(options,) j(but) e(they) h
(default) h(to) f(32,) i(256) g(and) d(2048) j(b) m(ytes) e(resp) s
(ectiv) m(ely) -8 b(,) 29 b(whic) m(h) d(should) 94 4699
y(su\016ce) 31 b(for) f(most) h(circumstances.) 219 4824
y(The) p Fl 29 w(mprof) p Fo 29 w(command) e(is) h(a) g(to) s(ol) h
(designed) e(to) i(read) f(a) g(pro\014ling) f(output) g(\014le) h(pro)
s(duced) e(b) m(y) i(the) g(mpa-) 94 4923 y(trol) k(library) e(and) f
(displa) m(y) i(the) g(pro\014ling) f(information) g(that) i(w) m(as) e
(obtained.) 48 b(The) 32 b(pro\014ling) g(information) 94
5023 y(includes) 24 b(summaries) f(of) h(all) h(of) f(the) g(memory) g
(allo) s(cations) i(listed) e(b) m(y) g(size) h(and) e(the) h(function)
g(that) g(allo) s(cated) 94 5122 y(them) k(and) g(a) g(list) g(of) g
(memory) g(leaks) h(with) e(the) h(call) h(stac) m(k) h(of) e(the) g
(allo) s(cating) i(function.) 39 b(It) 28 b(also) h(includes) f(a) 94
5222 y(graph) 33 b(of) f(all) i(memory) e(allo) s(cations) j(listed) e
(in) g(tabular) f(form,) h(and) f(an) h(optional) g(graph) f(sp) s
(eci\014cation) i(\014le) 94 5322 y(for) d(later) g(pro) s(cessing) f
(b) m(y) g(the) p Fl 31 w(dot) p Fo 29 w(graph) g(visualisation) i(pac)
m(k) -5 b(age.) 219 5446 y(The) p Fl 22 w(mprof) p Fo
21 w(command) 22 b(also) h(attempts) g(to) g(calculate) i(the) d
(endianness) g(of) g(the) h(pro) s(cessor) f(that) h(pro) s(duced) 94
5546 y(the) h(pro\014ling) e(output) g(\014le) h(and) g(reads) f(the) h
(\014le) g(accordingly) -8 b(.) 40 b(This) 22 b(means) h(that) g(it) h
(is) f(p) s(ossible) f(to) i(use) p Fl 22 w(mprof) p
Fo 94 5645 a(on) e(a) g(SP) -8 b(AR) m(C) 22 b(mac) m(hine) g(to) g
(read) g(a) g(pro\014ling) f(output) g(\014le) h(that) g(w) m(as) g
(pro) s(duced) e(on) i(an) f(In) m(tel) i(80x86) g(mac) m(hine,) p
90 rotate dyy eop
%%Page: 60 66
60 65 bop Fo 94 -116 a(60) 3377 b(mpatrol) 94 365 y(for) 35
b(example.) 55 b(Ho) m(w) m(ev) m(er,) 38 b(this) d(will) g(only) g(w) m
(ork) f(if) h(the) g(pro) s(cessor) g(that) g(pro) s(duced) e(the) i
(pro\014ling) f(output) 94 465 y(\014le) d(has) g(the) g(same) g(w) m
(ord) f(size) i(as) f(the) g(pro) s(cessor) f(that) i(is) e(running) g
(the) p Fl 30 w(mprof) p Fo 30 w(command.) 41 b(F) -8
b(or) 32 b(example,) 94 565 y(reading) f(a) g(64-bit) g(pro\014ling) f
(output) g(\014le) h(on) f(a) h(32-bit) g(mac) m(hine) g(will) g(not) g
(w) m(ork.) 219 696 y(In) e(addition,) i(the) f(pro\014ling) f(output) g
(\014le) h(also) h(con) m(tains) g(the) f(v) m(ersion) h(n) m(um) m(b) s
(er) d(of) i(the) g(mpatrol) g(library) 94 796 y(whic) m(h) 36
b(pro) s(duced) e(it.) 57 b(If) 35 b(the) h(ma) 5 b(jor) 36
b(v) m(ersion) g(n) m(um) m(b) s(er) f(that) h(is) g(em) m(b) s(edded) e
(in) i(the) f(pro\014ling) h(output) f(\014le) 94 895
y(is) g(new) m(er) f(that) h(the) f(v) m(ersion) h(of) f(mpatrol) g
(that) p Fl 35 w(mprof) p Fo 33 w(came) h(with) f(then) p
Fl 34 w(mprof) p Fo 33 w(will) g(refuse) g(to) h(read) f(the) 94
995 y(\014le.) 41 b(Y) -8 b(ou) 30 b(should) e(do) m(wnload) i(the) f
(latest) i(v) m(ersion) f(of) f(mpatrol) h(in) f(that) h(case.) 42
b(The) 28 b(reason) i(for) f(storing) h(the) 94 1094
y(v) m(ersion) i(n) m(um) m(b) s(er) d(is) h(so) h(that) g(the) g
(format) g(of) g(the) f(pro\014ling) g(output) h(\014le) f(can) h(c) m
(hange) h(b) s(et) m(w) m(een) f(releases) h(of) 94 1194
y(mpatrol,) f(but) f(also) h(allo) m(w) p Fl 32 w(mprof) p
Fo 29 w(to) g(cop) s(e) g(with) f(older) h(v) m(ersions.) 219
1325 y(Along) 49 b(with) e(the) h(options) g(listed) g(b) s(elo) m(w,)
53 b(the) p Fl 48 w(mprof) p Fo 46 w(command) 47 b(tak) m(es) j(one) e
(optional) g(argumen) m(t) 94 1425 y(whic) m(h) 39 b(m) m(ust) g(b) s
(e) g(a) g(v) -5 b(alid) 40 b(mpatrol) f(pro\014ling) g(output) g
(\014lename) g(but) f(if) h(it) h(is) f(omitted) h(then) f(it) h(will) f
(use) 94 1525 y(`) p Fl(mpatrol.out) p Fo(') 30 b(as) j(the) f(name) g
(of) h(the) f(\014le) h(to) g(use.) 46 b(If) 32 b(the) g(\014lename) h
(argumen) m(t) f(is) h(giv) m(en) g(as) f(`) p Fl(-) p
Fo(') h(then) f(the) 94 1624 y(standard) k(input) f(\014le) i(stream) g
(will) f(b) s(e) g(used) g(as) g(the) h(pro\014ling) f(output) g
(\014le.) 59 b(Note) 37 b(also) h(that) f(the) p Fl 36
w(mprof) p Fo 94 1724 a(command) g(supp) s(orts) e(the) i(`) p
Fl(--help) p Fo(') f(and) h(`) p Fl(--version) p Fo(') d(options) k(in)
e(common) i(with) e(the) h(other) h(mpatrol) 94 1823
y(command) 31 b(line) f(to) s(ols.) 94 1983 y(`) p Fl(--addresses) p
Fo(') 574 2083 y(Sp) s(eci\014es) 35 b(that) g(di\013eren) m(t) g(call)
h(sites) f(from) g(within) f(the) h(same) g(function) f(are) h(to) h(b)
s(e) e(di\013eren-) 574 2182 y(tiated) j(and) e(that) h(the) f(names) h
(of) f(all) h(functions) f(should) f(b) s(e) h(displa) m(y) m(ed) h
(with) f(their) h(call) g(site) 574 2282 y(o\013set) 30
b(in) e(b) m(ytes.) 41 b(This) 28 b(a\013ects) i(the) f(direct) g(allo)
s(cation) i(and) d(memory) h(leak) g(tables,) h(as) f(w) m(ell) h(as)
574 2382 y(the) h(allo) s(cation) i(call) e(graph) f(and) g(the) h
(graph) e(sp) s(eci\014cation) j(\014le.) 94 2538 y(`) p
Fl(--call-graph) p Fo(') 574 2637 y(Sp) s(eci\014es) j(that) h(the) f
(allo) s(cation) i(call) g(graph) d(should) g(b) s(e) h(displa) m(y) m
(ed.) 56 b(This) 34 b(is) h(not) g(displa) m(y) m(ed) 574
2737 y(b) m(y) c(default) f(as) h(it) g(can) g(get) g(v) m(ery) g
(large) g(for) f(ev) m(en) h(a) g(mo) s(derately) g(sized) g
(pro\014ling) f(output) g(\014le.) 94 2893 y(`) p Fl(--counts) p
Fo(') 574 2993 y(Sp) s(eci\014es) c(that) g(certain) h(tables) f
(should) f(b) s(e) g(sorted) h(b) m(y) f(the) h(n) m(um) m(b) s(er) f
(of) h(allo) s(cations) i(or) d(deallo-) 574 3093 y(cations) 31
b(rather) f(than) f(the) h(total) h(n) m(um) m(b) s(er) d(of) i(b) m
(ytes) g(allo) s(cated) i(or) d(deallo) s(cated.) 43
b(This) 29 b(a\013ects) 574 3192 y(the) 38 b(direct) f(allo) s(cation) i
(and) e(memory) g(leak) h(tables,) h(as) f(w) m(ell) g(as) f(the) g
(allo) s(cation) i(call) f(graph) 574 3292 y(and) 30
b(the) h(graph) f(sp) s(eci\014cation) h(\014le.) 94
3448 y(`) p Fl(--graph-file) p Fo(') p Fl 28 w(<) p Fe(\014le) p
Fl 5 w(>) p Fo 574 3548 a(Sp) s(eci\014es) 22 b(that) h(the) f(allo) s
(cation) i(call) g(graph) d(should) g(also) j(b) s(e) d(written) h(to) h
(a) g(graph) e(sp) s(eci\014cation) 574 3647 y(\014le) 31
b(for) f(later) h(visualisation) h(with) p Fl 30 w(dot) p
Fo(.) 40 b(If) p Fe 30 w(\014le) p Fo 36 w(is) 30 b(giv) m(en) h(as) g
(`) p Fl(stdout) p Fo(') e(or) i(`) p Fl(stderr) p Fo(') e(then) h(the)
574 3747 y(corresp) s(onding) g(\014le) g(stream) h(will) g(b) s(e) e
(used) h(as) h(the) f(target) i(for) e(the) h(graph) f(sp) s
(eci\014cation) h(\014le.) 94 3903 y(`) p Fl(--leaks) p
Fo(') 94 b(Sp) s(eci\014es) 25 b(that) g(memory) g(leaks) g(rather) g
(than) g(memory) f(allo) s(cations) j(are) f(to) f(b) s(e) f(written) h
(to) h(the) 574 4003 y(graph) d(sp) s(eci\014cation) g(\014le.) 39
b(This) 22 b(option) h(only) g(a\013ects) h(the) f(output) f(from) h
(the) g(`) p Fl(--graph-file) p Fo(') 574 4102 y(option.) 94
4259 y(`) p Fl(--stack-depth) p Fo(') p Fl 28 w(<) p
Fe(depth) p Fl(>) p Fo 574 4358 a(Sp) s(eci\014es) 32
b(the) g(maxim) m(um) g(stac) m(k) i(depth) d(to) i(use) f(when) f
(calculating) j(if) e(one) h(call) g(site) g(has) f(the) 574
4458 y(same) 40 b(call) g(stac) m(k) h(as) e(another) h(call) g(site.)
68 b(This) 38 b(also) i(sp) s(eci\014es) f(the) g(maxim) m(um) g(n) m
(um) m(b) s(er) f(of) 574 4558 y(functions) 31 b(to) h(displa) m(y) g
(in) f(a) g(call) i(stac) m(k.) 45 b(If) p Fe 31 w(depth) p
Fo 30 w(is) 31 b(`) p Fl(0) p Fo(') h(then) f(the) g(call) i(stac) m(k)
g(depth) d(will) i(b) s(e) 574 4657 y(unlimited) g(in) e(size.) 45
b(The) 31 b(default) g(call) i(stac) m(k) f(depth) f(is) g(`) p
Fl(1) p Fo('.) 44 b(This) 31 b(a\013ects) h(the) g(memory) f(leak) 574
4757 y(table.) 219 4916 y(W) -8 b(e'll) 37 b(no) m(w) e(lo) s(ok) h(at)
g(an) f(example) h(of) f(using) g(the) h(mpatrol) f(library) g(to) h
(pro\014le) f(the) g(dynamic) g(memory) 94 5016 y(allo) s(cations) k
(in) d(a) g(program.) 58 b(Ho) m(w) m(ev) m(er,) 40 b(remem) m(b) s(er)
c(that) h(this) f(example) h(will) f(only) h(fully) f(w) m(ork) g(on) g
(y) m(our) 94 5116 y(mac) m(hine) 25 b(if) g(the) f(mpatrol) h(library)
f(supp) s(orts) e(call) k(stac) m(k) f(tra) m(v) m(ersal) i(and) c
(reading) i(sym) m(b) s(ols) f(from) f(executable) 94
5215 y(\014les) 31 b(on) f(that) h(platform.) 41 b(If) 30
b(that) h(is) f(not) h(the) f(case) i(then) e(only) g(some) h(of) g
(the) f(features) h(will) g(b) s(e) e(a) m(v) -5 b(ailable.) 219
5347 y(The) 43 b(follo) m(wing) i(example) f(program) f(p) s(erforms) f
(some) h(simple) h(calculations) h(and) e(displa) m(ys) g(a) h(list) g
(of) 94 5446 y(n) m(um) m(b) s(ers) 25 b(on) i(its) g(standard) e
(output) h(\014le) h(stream,) h(but) d(it) i(serv) m(es) g(to) h
(illustrate) f(all) h(of) e(the) h(di\013eren) m(t) g(features) 94
5546 y(of) 35 b(memory) f(allo) s(cation) i(pro\014ling) e(that) h
(mpatrol) f(is) g(capable) i(of.) 52 b(The) 34 b(source) g(for) g(the) g
(program) g(can) h(b) s(e) 94 5645 y(found) 30 b(in) g(`) p
Fl(tests/profile/test1.c) p Fo('.) p 90 rotate dyy eop
%%Page: 61 67
61 66 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(61) p Fl 334 365 a(23) 95 b(/*) 334 469 y(24) 143 b(*) 48
b(Associates) d(an) i(integer) f(value) g(with) h(its) f(negative) g
(string) g(equivalent) f(in) i(a) 334 573 y(25) 143 b(*) 48
b(structure,) d(and) h(then) h(allocates) e(256) i(such) g(pairs) f
(randomly,) g(displays) f(them) 334 677 y(26) 143 b(*) 48
b(then) e(frees) h(them.) 334 780 y(27) 143 b(*/) 334
1092 y(30) 95 b(#include) 46 b(<stdio.h>) 334 1196 y(31) 95
b(#include) 46 b(<stdlib.h>) 334 1299 y(32) 95 b(#include) 46
b(<string.h>) 334 1611 y(35) 95 b(typedef) 46 b(struct) g(pair) 334
1714 y(36) 95 b({) 334 1818 y(37) 286 b(int) 47 b(value;) 334
1922 y(38) 286 b(char) 47 b(*string;) 334 2026 y(39) 95
b(}) 334 2130 y(40) g(pair;) 334 2441 y(43) g(pair) 47
b(*new_pair\(int) d(n\)) 334 2545 y(44) 95 b({) 334 2648
y(45) 286 b(static) 46 b(char) h(s[16];) 334 2752 y(46) 286
b(pair) 47 b(*p;) 334 2960 y(48) 286 b(if) 47 b(\(\(p) g(=) h(\(pair) e
(*\)) h(malloc\(sizeof\(pair\)\)\)) 42 b(==) 48 b(NULL\)) 334
3064 y(49) 286 b({) 334 3167 y(50) 477 b(fputs\("Out) 45
b(of) i(memory\\n",) e(stderr\);) 334 3271 y(51) 477
b(exit\(EXIT_FAILURE\);) 334 3375 y(52) 286 b(}) 334
3479 y(53) g(p->value) 46 b(=) h(n;) 334 3582 y(54) 286
b(sprintf\(s,) 45 b("\045d",) i(-n\);) 334 3686 y(55) 286
b(if) 47 b(\(\(p->string) e(=) j(strdup\(s\)\)) d(==) i(NULL\)) 334
3790 y(56) 286 b({) 334 3894 y(57) 477 b(fputs\("Out) 45
b(of) i(memory\\n",) e(stderr\);) 334 3998 y(58) 477
b(exit\(EXIT_FAILURE\);) 334 4101 y(59) 286 b(}) 334
4205 y(60) g(return) 46 b(p;) 334 4309 y(61) 95 b(}) 334
4620 y(64) g(int) 47 b(main\(void\)) 334 4724 y(65) 95
b({) 334 4828 y(66) 286 b(pair) 47 b(*a[256];) 334 4932
y(67) 286 b(int) 47 b(i,) g(n;) 334 5139 y(69) 286 b(for) 47
b(\(i) g(=) h(0;) f(i) g(<) h(256;) f(i++\)) 334 5243
y(70) 286 b({) 334 5347 y(71) 477 b(n) 48 b(=) f(\(int\)) f
(\(\(rand\(\)) g(*) h(256.0\)) g(/) g(\(RAND_MAX) e(+) j(1.0\)\)) e(-) i
(128;) 334 5450 y(72) 477 b(a[i]) 47 b(=) g(new_pair\(n\);) 334
5554 y(73) 286 b(}) p 90 rotate dyy eop
%%Page: 62 68
62 67 bop Fo 94 -116 a(62) 3377 b(mpatrol) p Fl 334 365
a(74) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g(<) h(256;) f(i++\)) 334
469 y(75) 477 b(printf\("\0453d:) 45 b(\0454d) i(->) g
(\\"\045s\\"\\n",) e(i,) i(a[i]->value,) d(a[i]->string\);) 334
573 y(76) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g(<) h(256;) f(i++\)) 334
677 y(77) 477 b(free\(a[i]\);) 334 780 y(78) 286 b(return) 46
b(EXIT_SUCCESS;) 334 884 y(79) 95 b(}) p Fo 219 1014
a(After) 35 b(the) g(ab) s(o) m(v) m(e) h(program) f(has) g(b) s(een) f
(compiled) h(and) f(link) m(ed) h(with) g(the) g(mpatrol) g(library) -8
b(,) 37 b(it) e(should) 94 1113 y(b) s(e) k(run) f(with) h(the) h(`) p
Fl(PROF) p Fo(') e(option) i(set) g(in) f(the) p Fl 39
w(MPATROL_OPTIONS) p Fo 35 w(en) m(vironmen) m(t) h(v) -5
b(ariable.) 69 b(Note) 40 b(that) 94 1213 y(`) p Fl(mpatrol.h) p
Fo(') 29 b(w) m(as) i(not) f(included) g(as) g(it) h(is) g(not) f
(necessary) h(for) f(pro\014ling) g(purp) s(oses.) 219
1342 y(If) 49 b(all) g(w) m(en) m(t) h(w) m(ell,) 55
b(a) 49 b(list) h(of) f(n) m(um) m(b) s(ers) f(should) g(b) s(e) g
(displa) m(y) m(ed) i(on) f(the) g(screen) g(and) f(a) i(\014le) f
(called) 94 1442 y(`) p Fl(mpatrol.out) p Fo(') 34 b(should) i(ha) m(v)
m(e) i(b) s(een) d(pro) s(duced) g(in) h(the) h(curren) m(t) f
(directory) -8 b(.) 60 b(This) 36 b(is) g(a) h(binary) f(\014le) g
(con-) 94 1541 y(taining) i(the) f(total) h(amoun) m(t) f(of) g
(pro\014ling) f(information) h(that) g(the) g(mpatrol) g(library) f
(gathered) h(while) g(the) 94 1641 y(program) 29 b(w) m(as) g(running,)
e(but) h(it) h(con) m(tains) h(concise) f(n) m(umerical) h(data) f
(rather) f(than) g(h) m(uman-readable) h(data.) 94 1741
y(T) -8 b(o) 25 b(mak) m(e) h(use) e(of) g(this) g(\014le,) i(the) p
Fl 25 w(mprof) p Fo 22 w(command) e(m) m(ust) h(b) s(e) e(run.) 38
b(An) 23 b(excerpt) i(from) f(the) h(output) f(pro) s(duced) 94
1840 y(when) 30 b(running) p Fl 28 w(mprof) p Fo 29 w(with) h(the) f(`)
p Fl(--call-graph) p Fo(') e(option) i(is) h(sho) m(wn) f(b) s(elo) m
(w) p Fh 2835 1807 a(1) p Fo 2872 1840 a(.) p Fl 1719
1974 a(ALLOCATION) 45 b(BINS) 1575 2181 y(\(number) h(of) h(bins:) g
(1024\)) 1194 2389 y(allocated) 1238 b(unfreed) 669 2493
y(-----------------------) o(---) o(----) o(--) 89 b
(-------------------------) o(----) o(---) 382 2596 y(size) 142
b(count) 333 b(\045) 238 b(bytes) 333 b(\045) 143 b(count) 333
b(\045) 238 b(bytes) 333 b(\045) 525 2804 y(2) h(9) 191
b(1.76) 381 b(18) 190 b(0.61) 333 b(9) 191 b(3.52) 380
b(18) 191 b(1.95) 525 2908 y(3) 239 b(105) 142 b(20.51) 333
b(315) 142 b(10.61) 237 b(105) 143 b(41.02) 333 b(315) 142
b(34.16) 525 3012 y(4) 239 b(121) 142 b(23.63) 333 b(484) 142
b(16.30) 237 b(121) 143 b(47.27) 333 b(484) 142 b(52.49) 525
3115 y(5) 286 b(21) 191 b(4.10) 333 b(105) 190 b(3.54) 285
b(21) 191 b(8.20) 333 b(105) 142 b(11.39) 525 3219 y(8) 239
b(256) 142 b(50.00) 285 b(2048) 142 b(68.96) 333 b(0) 191
b(0.00) 428 b(0) 191 b(0.00) 334 3427 y(total) 238 b(512) 667
b(2970) 619 b(256) 716 b(922) 1671 3560 y(DIRECT) 46
b(ALLOCATIONS) 1146 3768 y(\(0) h(<) g(s) h(<=) f(32) g(<) h(m) f(<=) g
(256) g(<) h(l) f(<=) g(2048) g(<) g(x\)) 669 3975 y(allocated) 1095
b(unfreed) 334 4079 y(--------------------------) 89
b(------------------------) o(--) 334 4183 y(bytes) 333
b(\045) 143 b(s) 95 b(m) g(l) h(x) f(bytes) 333 b(\045) 142
b(s) 96 b(m) f(l) g(x) g(count) f(function) 382 4390
y(2970) h(100.00) e(\045\045) 620 b(922) 95 b(100.00) f(\045\045) 620
b(512) 94 b(new_pair) 382 4598 y(2970) 476 b(\045\045) 620
b(922) 477 b(\045\045) 620 b(512) 94 b(total) 1814 4731
y(MEMORY) 46 b(LEAKS) 1528 4939 y(\(maximum) f(stack) i(depth:) f(1\))
1098 5147 y(unfreed) 1048 b(allocated) 334 5250 y
(--------------------------) o(----) o(---) o(----) o(---) 89
b(----------------) 573 5354 y(\045) 238 b(bytes) 333
b(\045) 143 b(count) 333 b(\045) 238 b(bytes) 142 b(count) 94
b(function) p 94 5462 1200 4 v Fh 143 5522 a(1) p Fg
219 5554 a(The) 31 b(`) p Ff(--call-graph) p Fg(') i(option) e(is) g
(only) f(needed) g(to) g(displa) n(y) h(the) f(allo) r(cation) j(call) e
(graph) f(table,) j(whic) n(h) d(is) h(not) f(normally) 219
5645 y(displa) n(y) n(ed) 25 b(b) n(y) g(default.) p
90 rotate dyy eop
%%Page: 63 69
63 68 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(63) p Fl 334 469 a(100.00) 333 b(922) 142 b(31.04) 238
b(256) 142 b(50.00) 285 b(2970) 237 b(512) 95 b(new_pair) 955
677 y(922) 142 b(31.04) 238 b(256) 142 b(50.00) 285 b(2970) 237
b(512) 95 b(total) 1575 800 y(ALLOCATION) 45 b(CALL) i(GRAPH) 1528
1007 y(\(number) e(of) j(vertices:) d(3\)) 859 1215 y(allocated) 714
b(unfreed) 573 1319 y(---------------------) 90 b
(---------------------) 334 1422 y(index) 142 b(bytes) g(s) 95
b(m) g(l) h(x) 238 b(bytes) 142 b(s) 95 b(m) g(l) g(x) h(function) 334
1526 y(--------------------------) o(----) o(---) o(----) o(----) o
(---) o(----) o(-) 334 1630 y([1]) 2291 b(_start) 46
b([1]) 764 1734 y(2970) 94 b(\045\045) 763 b(922) 95
b(\045\045) 715 b(main) 47 b([3]) 334 1838 y
(--------------------------) o(----) o(---) o(----) o(----) o(---) o
(----) o(-) 764 1941 y(2970) 94 b(\045\045) 763 b(922) 95
b(\045\045) 715 b(main) 47 b([3]) 334 2045 y([2]) 2291
b(new_pair) 45 b([2]) 334 2149 y(--------------------------) o(----) o
(---) o(----) o(----) o(---) o(----) o(-) 764 2253 y(2970) 94
b(\045\045) 763 b(922) 95 b(\045\045) 715 b(_start) 47
b([1]) 334 2356 y([3]) 2291 b(main) 46 b([3]) 764 2460
y(2970) 94 b(\045\045) 763 b(922) 95 b(\045\045) 715
b(new_pair) 46 b([2]) p Fo 219 2579 a(The) 37 b(\014rst) g(table) h
(sho) m(wn) f(is) h(the) f(allo) s(cation) j(bin) d(table) h(whic) m(h)
f(summarises) g(the) h(sizes) g(of) g(all) g(ob) 5 b(jects) 94
2679 y(that) 44 b(w) m(ere) g(dynamically) g(allo) s(cated) h
(throughout) e(the) g(lifetime) i(of) e(the) g(program.) 79
b(In) 43 b(this) g(particular) 94 2778 y(case,) c(coun) m(ts) e(of) f
(all) h(allo) s(cations) i(and) c(deallo) s(cations) j(of) f(sizes) f
(1) h(to) g(1023) h(b) m(ytes) e(w) m(ere) h(recorded) f(b) m(y) g(the)
94 2878 y(mpatrol) 26 b(library) e(in) h(their) g(o) m(wn) g(sp) s
(eci\014c) p Fi 25 w(bin) p Fo 31 w(and) g(this) f(information) i(w) m
(as) f(written) g(to) h(the) f(pro\014ling) f(output) 94
2978 y(\014le.) 65 b(Allo) s(cations) 40 b(and) e(deallo) s(cations) i
(of) f(sizes) f(larger) h(than) f(or) h(equal) f(to) h(1024) h(b) m
(ytes) f(are) g(coun) m(ted) g(as) 94 3077 y(w) m(ell) j(and) f(the) g
(total) i(n) m(um) m(b) s(er) c(of) j(b) m(ytes) f(that) h(they) f
(represen) m(t) g(are) g(also) h(recorded.) 72 b(This) 41
b(information) 94 3177 y(can) j(b) s(e) f(extremely) i(useful) e(in) g
(understanding) f(whic) m(h) h(sizes) h(of) g(data) g(structures) f
(are) h(allo) s(cated) i(most) 94 3277 y(during) 29 b(program) h
(execution,) i(and) d(where) g(c) m(hanges) i(migh) m(t) g(b) s(e) e
(made) i(to) f(mak) m(e) h(more) f(e\016cien) m(t) i(use) e(of) g(the)
94 3376 y(dynamically) i(allo) s(cated) g(memory) -8
b(.) 219 3495 y(As) 36 b(can) g(b) s(e) f(seen) h(from) g(the) g(allo) s
(cation) i(bin) d(table,) k(9) d(allo) s(cations) i(of) e(2) g(b) m
(ytes,) i(105) f(allo) s(cations) i(of) d(3) 94 3595
y(b) m(ytes,) h(121) e(allo) s(cations) i(of) e(4) f(b) m(ytes,) j(21) e
(allo) s(cations) i(of) d(5) h(b) m(ytes) g(and) f(256) h(allo) s
(cations) i(of) e(8) g(b) m(ytes) f(w) m(ere) 94 3694
y(made) 28 b(during) d(the) j(execution) g(of) f(the) g(program.) 40
b(Ho) m(w) m(ev) m(er,) 30 b(all) e(of) f(these) h(memory) e(allo) s
(cations) k(except) e(the) 94 3794 y(8) 33 b(b) m(yte) g(allo) s
(cations) i(w) m(ere) d(still) i(not) e(freed) g(b) m(y) g(the) h(time)
g(the) f(program) g(terminated,) i(resulting) e(in) g(a) h(total) 94
3894 y(memory) e(leak) g(of) g(922) g(b) m(ytes.) 219
4013 y(The) 44 b(next) h(table) h(sho) m(wn) f(is) g(the) g(direct) g
(allo) s(cation) i(table) f(whic) m(h) f(lists) g(all) h(of) f(the) g
(functions) f(that) 94 4112 y(allo) s(cated) j(memory) e(and) g(ho) m
(w) g(m) m(uc) m(h) g(memory) g(they) g(allo) s(cated.) 86
b(The) 45 b(`) p Fl(s) 30 b(m) g(l) g(x) p Fo(') 45 b(columns) g
(represen) m(t) p Fi 94 4212 a(smal) 5 b(l) p Fo(,) p
Fi 35 w(me) -5 b(dium) p Fo(,) p Fi 35 w(lar) g(ge) p
Fo 40 w(and) p Fi 32 w(extr) g(a) 36 b(lar) -5 b(ge) p
Fo 41 w(memory) 32 b(allo) s(cations,) k(whic) m(h) d(in) f(this) h
(case) g(are) h(0) f(b) m(ytes) g(is) g(less) 94 4312
y(than) j(a) h(small) g(allo) s(cation,) j(whic) m(h) c(is) g(less) h
(than) f(or) g(equal) h(to) g(32) g(b) m(ytes,) h(whic) m(h) e(is) h
(less) f(than) g(a) h(medium) 94 4411 y(allo) s(cation,) d(whic) m(h) d
(is) g(less) h(than) f(or) g(equal) g(to) h(256) g(b) m(ytes,) g(whic) m
(h) f(is) g(less) h(than) f(a) g(large) h(allo) s(cation,) i(whic) m(h)
94 4511 y(is) h(less) g(than) f(or) h(equal) g(to) g(2048) h(b) m
(ytes,) h(whic) m(h) d(is) g(less) h(than) g(an) f(extra) h(large) h
(allo) s(cation.) 55 b(The) 34 b(n) m(um) m(b) s(ers) 94
4610 y(listed) j(under) d(these) j(columns) e(represen) m(t) h(a) h(p) s
(ercen) m(tage) g(of) f(the) g(o) m(v) m(erall) i(total) g(and) d(are) i
(listed) f(as) g(`) p Fl(\045\045) p Fo(') g(if) 94 4710
y(the) g(p) s(ercen) m(tage) g(is) g(100\045) g(or) f(as) g(`) p
Fl(.) p Fo(') g(if) h(the) f(p) s(ercen) m(tage) h(is) g(less) f(than) g
(1\045.) 55 b(P) m(ercen) m(tages) 38 b(of) d(0\045) g(are) h(not) 94
4810 y(displa) m(y) m(ed.) 219 4929 y(The) i(information) i(displa) m
(y) m(ed) f(in) g(the) g(direct) h(allo) s(cation) h(table) f(is) f
(useful) f(for) h(seeing) g(exactly) i(whic) m(h) 94
5028 y(functions) e(in) f(a) h(program) g(directly) g(p) s(erform) f
(memory) g(allo) s(cation,) 44 b(and) 38 b(can) h(quic) m(kly) h
(highligh) m(t) f(where) 94 5128 y(optimisations) 31
b(can) e(b) s(e) f(made) h(or) g(where) g(functions) f(migh) m(t) i(b) s
(e) e(making) i(unnecessary) e(allo) s(cations.) 43 b(In) 28
b(the) 94 5228 y(example,) 34 b(this) e(table) h(sho) m(ws) f(us) g
(that) h(2970) h(b) m(ytes) f(w) m(ere) f(allo) s(cated) i(o) m(v) m
(er) g(512) g(calls) f(b) m(y) p Fl 32 w(new_pair\(\)) p
Fo 30 w(and) 94 5327 y(that) e(922) h(b) m(ytes) e(w) m(ere) h(left) g
(unfreed) e(at) h(program) g(termination.) 42 b(All) 31
b(of) f(the) g(allo) s(cations) j(that) d(w) m(ere) h(made) 94
5427 y(b) m(y) p Fl 31 w(new_pair\(\)) p Fo 27 w(w) m(ere) g(b) s(et) m
(w) m(een) g(1) g(and) f(32) h(b) m(ytes) g(in) f(size.) 219
5546 y(W) -8 b(e) 37 b(could) f(no) m(w) g(c) m(ho) s(ose) h(to) g
(sort) f(the) g(direct) h(allo) s(cation) h(table) f(b) m(y) f(the) g
(n) m(um) m(b) s(er) e(of) j(calls) g(to) f(allo) s(cate) 94
5645 y(memory) -8 b(,) 34 b(rather) f(than) f(the) h(n) m(um) m(b) s
(er) e(of) i(b) m(ytes) g(allo) s(cated,) j(with) c(the) h(`) p
Fl(--counts) p Fo(') e(option) i(to) p Fl 34 w(mprof) p
Fo(,) f(but) p 90 rotate dyy eop
%%Page: 64 70
64 69 bop Fo 94 -116 a(64) 3377 b(mpatrol) 94 365 y(that) 41
b(is) f(not) g(relev) -5 b(an) m(t) 42 b(in) d(this) h(example.) 71
b(Ho) m(w) m(ev) m(er,) 44 b(w) m(e) d(kno) m(w) f(that) h(there) f
(are) g(t) m(w) m(o) i(calls) f(to) f(allo) s(cate) 94
465 y(memory) c(from) p Fl 36 w(new_pair\(\)) p Fo(,) f(so) h(w) m(e) h
(can) f(use) g(the) g(`) p Fl(--addresses) p Fo(') e(option) i(to) p
Fl 37 w(mprof) p Fo 35 w(to) h(sho) m(w) f(all) h(call) 94
565 y(sites) 25 b(within) e(functions) h(rather) f(than) h(just) f(the)
h(total) i(for) d(eac) m(h) i(function.) 39 b(This) 23
b(option) h(do) s(es) f(not) h(a\013ect) i(the) 94 664
y(allo) s(cation) 31 b(bin) d(table) h(so) f(the) h(new) e(output) h
(from) p Fl 28 w(mprof) p Fo 27 w(with) g(the) g(`) p
Fl(--call-graph) p Fo(') e(and) i(`) p Fl(--addresses) p
Fo(') 94 764 y(options) j(lo) s(oks) g(lik) m(e:) p Fl
1671 973 a(DIRECT) 46 b(ALLOCATIONS) 1146 1180 y(\(0) h(<) g(s) h(<=) f
(32) g(<) h(m) f(<=) g(256) g(<) h(l) f(<=) g(2048) g(<) g(x\)) 669
1388 y(allocated) 1095 b(unfreed) 334 1492 y
(--------------------------) 89 b(------------------------) o(--) 334
1595 y(bytes) 333 b(\045) 143 b(s) 95 b(m) g(l) h(x) f(bytes) 333
b(\045) 142 b(s) 96 b(m) f(l) g(x) g(count) f(function) 382
1803 y(2048) 142 b(68.96) 94 b(69) 716 b(0) 190 b(0.00) 811
b(256) 94 b(new_pair+20) 430 1907 y(922) 142 b(31.04) 94
b(31) 620 b(922) 95 b(100.00) f(\045\045) 620 b(256) 94
b(new_pair+140) 382 2114 y(2970) 476 b(\045\045) 620
b(922) 477 b(\045\045) 620 b(512) 94 b(total) 1814 2323
y(MEMORY) 46 b(LEAKS) 1528 2531 y(\(maximum) f(stack) i(depth:) f(1\))
1098 2738 y(unfreed) 1048 b(allocated) 334 2842 y
(--------------------------) o(----) o(---) o(----) o(---) 89
b(----------------) 573 2946 y(\045) 238 b(bytes) 333
b(\045) 143 b(count) 333 b(\045) 238 b(bytes) 142 b(count) 94
b(function) 334 3153 y(100.00) 333 b(922) 95 b(100.00) 237
b(256) 94 b(100.00) 333 b(922) 237 b(256) 95 b(new_pair+140) 955
3361 y(922) 142 b(31.04) 238 b(256) 142 b(50.00) 285
b(2970) 237 b(512) 95 b(total) 1575 3570 y(ALLOCATION) 45
b(CALL) i(GRAPH) 1528 3778 y(\(number) e(of) j(vertices:) d(4\)) 859
3985 y(allocated) 714 b(unfreed) 573 4089 y(---------------------) 90
b(---------------------) 334 4193 y(index) 142 b(bytes) g(s) 95
b(m) g(l) h(x) 238 b(bytes) 142 b(s) 95 b(m) g(l) g(x) h(function) 334
4296 y(--------------------------) o(----) o(---) o(----) o(----) o
(---) o(----) o(-) 334 4400 y([1]) 2291 b(_start+100) 45
b([1]) 764 4504 y(2970) 94 b(\045\045) 763 b(922) 95
b(\045\045) 715 b(main+120) 46 b([4]) 334 4608 y
(--------------------------) o(----) o(---) o(----) o(----) o(---) o
(----) o(-) 764 4711 y(2048) 94 b(\045\045) 859 b(0) 906
b(main+120) 46 b([4]) 334 4815 y([2]) 2291 b(new_pair+20) 44
b([2]) 334 4919 y(--------------------------) o(----) o(---) o(----) o
(----) o(---) o(----) o(-) 812 5023 y(922) 94 b(\045\045) 763
b(922) 95 b(\045\045) 715 b(main+120) 46 b([4]) 334 5127
y([3]) 2291 b(new_pair+140) 44 b([3]) 334 5230 y
(--------------------------) o(----) o(---) o(----) o(----) o(---) o
(----) o(-) 764 5334 y(2970) 94 b(\045\045) 763 b(922) 95
b(\045\045) 715 b(_start+100) 45 b([1]) 334 5438 y([4]) 2291
b(main+120) 45 b([4]) 764 5542 y(2048) 94 b(\045\045) 859
b(0) 906 b(new_pair+20) 45 b([2]) 812 5645 y(922) 94
b(\045\045) 763 b(922) 95 b(\045\045) 715 b(new_pair+140) 45
b([3]) p 90 rotate dyy eop
%%Page: 65 71
65 70 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(65) 219 365 y(The) 34 b(names) g(of) h(the) f(functions) g(displa) m
(y) m(ed) h(in) f(the) g(ab) s(o) m(v) m(e) i(tables) f(no) m(w) f(ha) m
(v) m(e) i(a) e(b) m(yte) h(o\013set) h(app) s(ended) 94
465 y(to) d(them) e(to) h(indicate) g(at) g(what) f(p) s(osition) h(in)
f(the) g(function) g(a) h(call) g(to) g(allo) s(cate) i(memory) d(o) s
(ccurred) p Fh 3592 432 a(2) p Fo 3629 465 a(.) 43 b(No) m(w) 94
565 y(it) 34 b(is) g(p) s(ossible) f(to) h(see) g(that) g(the) f
(\014rst) g(call) i(to) f(allo) s(cate) i(memory) d(from) g(within) p
Fl 33 w(new_pair\(\)) p Fo 30 w(has) g(had) g(all) 94
664 y(of) e(its) g(memory) f(freed,) g(but) g(the) h(second) f(call) i
(\(from) p Fl 30 w(strdup\(\)) p Fo(\)) c(has) i(had) g(none) g(of) h
(its) g(memory) f(freed.) 219 803 y(This) 39 b(is) h(also) h(visible) g
(in) f(the) g(next) g(table,) k(whic) m(h) 39 b(is) h(the) h(memory) f
(leak) h(table) g(and) e(lists) i(all) g(of) f(the) 94
902 y(functions) 30 b(that) h(allo) s(cated) h(memory) e(but) f(did) g
(not) i(free) f(all) h(of) f(their) g(memory) g(during) f(the) h
(lifetime) i(of) e(the) 94 1002 y(program.) 39 b(The) 24
b(default) g(b) s(eha) m(viour) g(of) p Fl 24 w(mprof) p
Fo 23 w(is) h(to) g(sho) m(w) f(only) g(the) h(function) f(that) h
(directly) f(allo) s(cated) j(the) 94 1102 y(memory) 34
b(in) f(the) h(memory) f(leak) i(table,) g(but) e(this) g(can) h(b) s
(e) f(c) m(hanged) h(with) f(the) h(`) p Fl(--stack-depth) p
Fo(') c(option.) 94 1201 y(This) k(accepts) j(an) d(argumen) m(t) i(sp)
s(ecifying) e(the) h(maxim) m(um) g(n) m(um) m(b) s(er) e(of) i
(functions) g(to) g(displa) m(y) g(in) g(one) g(call) 94
1301 y(stac) m(k,) 48 b(with) 42 b(zero) i(indicating) g(that) f(all) h
(functions) e(in) g(a) h(call) h(stac) m(k) h(should) c(b) s(e) h
(displa) m(y) m(ed.) 79 b(This) 42 b(can) 94 1401 y(b) s(e) 34
b(useful) e(for) i(tracing) g(do) m(wn) g(the) f(functions) h(that) g
(w) m(ere) g(indirectly) g(resp) s(onsible) f(for) g(the) h(memory) g
(leak.) 94 1500 y(The) h(new) f(memory) h(leak) h(table) g(displa) m(y)
m(ed) f(b) m(y) p Fl 35 w(mprof) p Fo 33 w(with) g(the) g(`) p
Fl(--addresses) p Fo(') d(and) i(`) p Fl(--stack-depth) 94
1600 y(0) p Fo(') d(options) f(lo) s(oks) h(lik) m(e:) p
Fl 1814 1743 a(MEMORY) 46 b(LEAKS) 1528 1950 y(\(maximum) f(stack) i
(depth:) f(0\)) 1098 2158 y(unfreed) 1048 b(allocated) 334
2261 y(--------------------------) o(----) o(---) o(----) o(---) 89
b(----------------) 573 2365 y(\045) 238 b(bytes) 333
b(\045) 143 b(count) 333 b(\045) 238 b(bytes) 142 b(count) 94
b(function) 334 2573 y(100.00) 333 b(922) 95 b(100.00) 237
b(256) 94 b(100.00) 333 b(922) 237 b(256) 95 b(new_pair+140) 3198
2677 y(main+120) 3198 2780 y(_start+100) 955 2988 y(922) 142
b(31.04) 238 b(256) 142 b(50.00) 285 b(2970) 237 b(512) 95
b(total) p Fo 219 3127 a(No) m(w) 28 b(that) g(w) m(e) g(kno) m(w) g
(where) f(the) g(memory) h(leak) g(is) g(coming) g(from,) g(w) m(e) g
(can) f(\014x) g(it) h(b) m(y) g(freeing) f(the) h(string) 94
3226 y(as) 35 b(w) m(ell) h(as) f(the) g(structure) f(at) i(line) f
(77.) 54 b(A) 35 b(v) m(ersion) g(of) g(the) g(ab) s(o) m(v) m(e) h
(program) e(that) h(do) s(es) g(not) g(con) m(tain) h(the) 94
3326 y(memory) 31 b(leak) g(can) g(b) s(e) f(found) f(in) h(`) p
Fl(tests/profile/test2.c) p Fo('.) 219 3464 y(The) 37
b(\014nal) f(table) i(that) g(is) f(displa) m(y) m(ed) h(is) f(the) g
(allo) s(cation) j(call) e(graph,) h(whic) m(h) d(sho) m(ws) h(the) h
(relationship) 94 3564 y(b) s(et) m(w) m(een) d(a) f(particular) g
(function) f(in) g(the) h(call) h(graph,) f(the) g(functions) f(that) h
(called) h(it) f(\(paren) m(ts\),) i(and) d(the) 94 3664
y(functions) i(that) h(it) f(called) h(\(c) m(hildren\).) 55
b(Ev) m(ery) 36 b(function) e(that) i(app) s(ears) e(in) h(the) g(allo)
s(cation) i(call) f(graph) f(is) 94 3763 y(displa) m(y) m(ed) i(with) f
(a) g(particular) g(index) g(that) g(can) g(b) s(e) g(used) f(to) i
(cross-reference) f(it.) 58 b(The) 36 b(functions) f(whic) m(h) 94
3863 y(called) 29 b(a) e(particular) g(function) g(are) g(displa) m(y) m
(ed) g(directly) h(ab) s(o) m(v) m(e) g(it,) g(while) f(the) g
(functions) g(that) g(the) g(function) 94 3963 y(called) 39
b(are) f(displa) m(y) m(ed) g(directly) g(b) s(elo) m(w) f(it.) 62
b(In) 37 b(the) g(ab) s(o) m(v) m(e) i(example,) p Fl
40 w(_start\(\)) p Fo 35 w(called) p Fl 39 w(main\(\)) p
Fo(,) e(whic) m(h) 94 4062 y(then) 31 b(called) p Fl
31 w(new_pair\(\)) p Fo 28 w(whic) m(h) f(allo) s(cated) i(the) f
(memory) -8 b(.) 219 4201 y(The) 31 b(memory) g(that) h(has) g(b) s
(een) e(allo) s(cated) k(b) m(y) d(a) h(function) f(\(either) h
(directly) -8 b(,) 33 b(or) f(indirectly) g(b) m(y) f(its) h(c) m(hil-)
94 4300 y(dren\)) c(for) g(its) h(paren) m(ts) f(is) g(sho) m(wn) g(in)
g(the) g(details) i(for) e(the) g(paren) m(t) h(functions,) f(sho) m
(wing) g(b) s(oth) g(a) g(breakdo) m(wn) 94 4400 y(of) g(the) f(allo) s
(cated) i(memory) e(and) f(a) h(breakdo) m(wn) g(of) g(the) g(unfreed) f
(memory) -8 b(.) 40 b(This) 26 b(also) i(o) s(ccurs) f(for) f(the) i(c)
m(hild) 94 4500 y(functions.) 44 b(If) 31 b(a) h(function) f(do) s(es) g
(not) h(directly) g(allo) s(cate) i(memory) d(then) g(the) h(total) h
(memory) f(allo) s(cated) h(for) 94 4599 y(its) g(paren) m(ts) g(will) f
(equal) h(the) g(total) h(memory) e(allo) s(cated) j(b) m(y) d(its) h
(c) m(hildren.) 46 b(Ho) m(w) m(ev) m(er,) 36 b(if) c(a) h(paren) m(t) f
(or) h(c) m(hild) 94 4699 y(function) 26 b(is) f(part) h(of) f(a) h
(cycle) h(in) e(the) h(call) h(graph) d(then) i(a) g(`) p
Fl(\(*\)) p Fo(') f(will) g(app) s(ear) g(in) h(the) f(leftmost) i
(column) e(of) h(the) 94 4798 y(call) i(graph.) 38 b(In) 25
b(that) i(case) f(the) g(total) i(incoming) e(memory) g(ma) m(y) g(not)
g(necessarily) h(equal) f(the) g(total) i(outgoing) 94
4898 y(memory) j(for) f(the) g(main) h(function.) 219
5037 y(In) i(the) i(example) f(ab) s(o) m(v) m(e) i(when) d(the) h(`) p
Fl(--addresses) p Fo(') d(option) k(is) f(used,) g(it) h(should) e(b) s
(e) g(clear) i(that) p Fl 35 w(new_) 94 5136 y(pair\(\)+20) p
Fo 46 w(allo) s(cates) 50 b(2048) f(b) m(ytes) g(for) p
Fl 47 w(main\(\)) p Fo(,) i(while) p Fl 48 w(new_pair\(\)+140) p
Fo 44 w(allo) s(cates) f(922) f(b) m(ytes) f(for) p Fl
94 5236 a(main\(\)) p Fo(.) 77 b(The) p Fl 42 w(main\(\)) p
Fo 42 w(function) 42 b(itself) i(allo) s(cates) h(2970) g(b) m(ytes) e
(for) p Fl 43 w(_start\(\)) p Fo 40 w(o) m(v) m(erall) j(via) d(the) p
Fl 43 w(new_) 94 5336 y(pair\(\)) p Fo 29 w(function.) p
94 5462 1200 4 v Fh 143 5522 a(2) p Fg 219 5554 a(If) 27
b(no) h(sym) n(b) r(ols) f(could) h(b) r(e) f(read) g(from) h(the) f
(program's) i(executable) e(\014le,) h(or) g(if) g(the) f(corresp) r
(onding) h(sym) n(b) r(ol) g(could) f(not) g(b) r(e) 219
5645 y(determined,) f(then) f(the) g(function) h(names) g(will) h(b) r
(e) e(replaced) i(with) e(the) h(co) r(de) g(addresses) g(at) g(whic) n
(h) g(the) f(calls) i(to) r(ok) f(place.) p 90 rotate
dyy eop
%%Page: 66 72
66 71 bop Fo 94 -116 a(66) 3377 b(mpatrol) 219 365 y(It) 40
b(is) g(also) h(p) s(ossible) f(to) h(view) f(this) g(information) g
(graphically) i(if) e(y) m(ou) g(ha) m(v) m(e) h(the) g(GraphViz) f
(pac) m(k) -5 b(age) 94 465 y(men) m(tioned) 34 b(ab) s(o) m(v) m(e) f
(installed) h(on) e(y) m(our) h(system.) 47 b(The) 32
b(`) p Fl(--graph-file) p Fo(') e(option) j(can) g(b) s(e) f(used) f
(to) j(write) f(a) p Fl 94 565 a(dot) p Fo 23 w(graph) 24
b(sp) s(eci\014cation) g(\014le) g(that) h(can) f(b) s(e) f(pro) s
(cessed) g(b) m(y) h(the) p Fl 24 w(dot) p Fo 23 w(or) p
Fl 24 w(dotty) p Fo 23 w(commands) f(that) h(come) h(with) 94
664 y(GraphViz.) 48 b(The) 32 b(resulting) h(graphs) f(will) h(sho) m
(w) f(the) h(relationships) g(b) s(et) m(w) m(een) g(eac) m(h) h
(function,) f(its) g(paren) m(ts) 94 764 y(and) e(its) g(c) m(hildren,)
h(and) e(will) h(also) h(sho) m(w) f(the) g(n) m(um) m(b) s(er) f(of) h
(b) m(ytes) h(that) f(w) m(ere) h(allo) s(cated) h(along) f(the) f
(edges) h(of) 94 863 y(the) d(call) h(graph,) f(but) e(this) i(can) g
(b) s(e) e(c) m(hanged) i(to) h(the) e(n) m(um) m(b) s(er) g(of) g
(calls) i(if) e(the) h(`) p Fl(--counts) p Fo(') e(option) i(is) f
(used) p Fh 3812 830 a(3) p Fo 3849 863 a(.) 94 963 y(A) h(call) i
(graph) d(sho) m(wing) h(unfreed) f(memory) g(instead) h(of) h(allo) s
(cated) g(memory) f(can) g(b) s(e) g(generated) h(b) m(y) e(adding) 94
1063 y(the) 36 b(`) p Fl(--leaks) p Fo(') e(option.) 57
b(The) 34 b(follo) m(wing) j(graph) e(illustrates) i(the) e(use) h(of) f
(these) h(options) g(with) f(the) h(ab) s(o) m(v) m(e) 94
1162 y(example.) 42 b(It) 30 b(w) m(as) h(generated) h(using) d(the) i
(`) p Fl(--addresses) p Fo(') d(and) i(`) p Fl(--graph-file) p
Fo(') d(options.) 1030 3713 y @beginspecial 35 @llx 36
@lly 264 @urx 325 @ury 2290 @rwi @setspecial
%%BeginDocument: images/test.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: allocation call graph
%%Creator: dot version gviz1.5.1 (09-29-99)
%%BoundingBox: 35 36 264 325
%%Pages: 1
%%DocumentFonts: Times-Roman

save
countdictstack
mark
newpath
/showpage {} def

%%EndProlog

%%Page 1 1

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 229 290 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.7423 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	START
gsave 10 dict begin
150 370 32 18 ellipse_path
stroke
gsave 10 dict begin
150 371 moveto (START) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start+100
gsave 10 dict begin
150 282 40 18 ellipse_path
stroke
gsave 10 dict begin
150 283 moveto (_start+100) 59 14.00 -0.50 alignedtext
end grestore
end grestore

%	START -> _start+100
newpath 150 352 moveto
150 340 150 323 150 309 curveto
stroke
newpath 148 310 moveto
150 300 lineto
153 310 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
171 327 moveto (2970) 28 14.00 -0.50 alignedtext
end grestore

%	main+120
gsave 10 dict begin
150 194 38 18 ellipse_path
stroke
gsave 10 dict begin
150 195 moveto (main+120) 56 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start+100 -> main+120
newpath 150 264 moveto
150 252 150 235 150 221 curveto
stroke
newpath 148 222 moveto
150 212 lineto
153 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
171 239 moveto (2970) 28 14.00 -0.50 alignedtext
end grestore

%	new_pair+20
gsave 10 dict begin
47 106 47 18 ellipse_path
stroke
gsave 10 dict begin
47 107 moveto (new_pair+20) 73 14.00 -0.50 alignedtext
end grestore
end grestore

%	main+120 -> new_pair+20
newpath 131 178 moveto
114 164 91 144 73 129 curveto
stroke
newpath 72 131 moveto
66 123 lineto
75 128 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
128 151 moveto (2048) 28 14.00 -0.50 alignedtext
end grestore

%	new_pair+140
gsave 10 dict begin
257 106 50 18 ellipse_path
stroke
gsave 10 dict begin
257 107 moveto (new_pair+140) 80 14.00 -0.50 alignedtext
end grestore
end grestore

%	main+120 -> new_pair+140
newpath 169 178 moveto
186 165 210 144 230 129 curveto
stroke
newpath 228 128 moveto
237 123 lineto
231 131 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
231 151 moveto (922) 21 14.00 -0.50 alignedtext
end grestore

%	ALLOC
gsave 10 dict begin
158 18 33 18 ellipse_path
stroke
gsave 10 dict begin
158 19 moveto (ALLOC) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	new_pair+20 -> ALLOC
newpath 68 90 moveto
86 75 112 54 132 39 curveto
stroke
newpath 130 38 moveto
139 33 lineto
133 41 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
133 63 moveto (2048) 28 14.00 -0.50 alignedtext
end grestore

%	new_pair+140 -> ALLOC
newpath 238 89 moveto
222 75 199 55 182 39 curveto
stroke
newpath 181 41 moveto
175 33 lineto
184 38 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
234 63 moveto (922) 21 14.00 -0.50 alignedtext
end grestore

endpage
grestore
end
restore

%%Trailer

cleartomark
countdictstack exch sub { end } repeat
restore

%%EOF

%%EndDocument
@endspecial 219 3926 a(As) 42 b(a) h(\014nal) f(demonstration) h(of) f
(mpatrol's) h(pro\014ling) e(features) i(w) m(e) g(will) f(attempt) i
(to) f(pro\014le) f(a) g(real) 94 4026 y(application) 34
b(in) d(order) g(to) i(see) f(where) g(the) g(memory) g(allo) s
(cations) i(come) e(from.) 45 b(Since) 32 b(all) g(of) g(the) g(follo) m
(wing) 94 4126 y(steps) k(w) m(ere) g(p) s(erformed) f(on) g(a) h
(Solaris) h(mac) m(hine,) h(the) e(`) p Fl(--dynamic) p
Fo(') d(option) k(of) e(the) p Fl 36 w(mpatrol) p Fo
34 w(command) 94 4225 y(w) m(as) d(used) e(to) i(allo) m(w) g(us) f(to)
g(replace) h(the) g(system) f(memory) g(allo) s(cation) i(routines) e
(with) g(mpatrol's) g(routines) 94 4325 y(without) e(requiring) g(a) g
(relink.) 41 b(It) 29 b(also) h(means) f(that) g(w) m(e) h(can) f
(pro\014le) g(all) g(of) h(the) f(c) m(hild) g(pro) s(cesses) g(that) g
(w) m(ere) 94 4424 y(created) j(b) m(y) e(the) h(application) g(as) g
(w) m(ell.) 219 4547 y(The) 36 b(application) i(that) g(w) m(e) f(are) g
(going) h(to) f(pro\014le) g(is) g(the) g(GNU) g(C) f(compiler,) p
Fl 40 w(gcc) p Fo 35 w(\(v) m(ersion) i(2.95.2\),) 94
4646 y(whic) m(h) 26 b(is) g(quite) g(a) g(complicated) i(and) d(large)
i(program.) 39 b(The) 25 b(actual) p Fl 27 w(gcc) p Fo
25 w(command) h(is) g(really) g(the) g(compiler) 94 4746
y(driv) m(er) 33 b(whic) m(h) g(in) m(v) m(ok) m(es) i(the) e(C) f
(prepro) s(cessor) g(follo) m(w) m(ed) j(b) m(y) e(the) g(compiler,) h
(the) g(assem) m(bler,) g(the) f(prelink) m(er) 94 4846
y(and) g(\014nally) g(the) g(link) m(er) h(\(w) m(ell,) h(it) f(do) s
(es) f(in) g(this) g(example\).) 50 b(On) 32 b(Solaris,) j(the) p
Fl 33 w(gcc) p Fo 33 w(distribution) d(uses) h(the) 94
4945 y(system) j(assem) m(bler) f(and) f(link) m(er) h(whic) m(h) g
(come) h(with) e(no) h(sym) m(b) s(ol) g(tables) h(in) e(their) h
(executable) i(\014les) d(so) h(w) m(e) 94 5045 y(will) c(not) g(b) s
(e) f(pro\014ling) f(them.) 219 5167 y(F) -8 b(or) 29
b(the) f(purp) s(ose) f(of) h(this) g(demonstration) g(w) m(e) h(will) f
(only) h(b) s(e) e(lo) s(oking) i(at) g(the) f(graph) g(\014les) g(pro)
s(duced) e(b) m(y) 94 5267 y(the) 37 b(`) p Fl(--graph-file) p
Fo(') d(option) j(of) f(the) p Fl 37 w(mprof) p Fo 35
w(command,) i(but) e(ordinarily) g(y) m(ou) h(w) m(ould) f(w) m(an) m
(t) h(to) g(lo) s(ok) g(at) 94 5367 y(the) f(tables) f(that) p
Fl 36 w(mprof) p Fo 33 w(pro) s(duces) f(as) h(w) m(ell.) 55
b(All) 36 b(of) f(the) g(command) g(line) g(examples) g(use) g(the) p
Fl 35 w(bash) p Fo 34 w(shell) 94 5466 y(but) 30 b(in) g(most) h(cases)
g(these) g(will) g(w) m(ork) f(in) g(other) h(shells) f(with) g(a) h
(minimal) g(amoun) m(t) g(of) f(c) m(hanges.) p 94 5553
1200 4 v Fh 143 5614 a(3) p Fg 219 5645 a(Cycles) d(in) e(the) g(graph)
h(are) g(mark) n(ed) g(b) n(y) e(dashed) i(lines) g(along) h(the) e
(relev) l(an) n(t) h(edges) g(instead) g(of) g(solid) h(lines.) p
90 rotate dyy eop
%%Page: 67 73
67 72 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(67) 219 365 y(W) -8 b(e) 32 b(will) g(use) f(`) p Fl
(tests/profile/test2.c) p Fo(') 25 b(as) 32 b(the) f(source) g(\014le) g
(to) h(compile) g(with) p Fl 31 w(gcc) p Fo 30 w(and) f(w) m(e'll) h
(turn) 94 465 y(on) k(optimisation) g(in) f(order) f(to) i(cause) p
Fl 36 w(gcc) p Fo 34 w(to) g(allo) s(cate) i(a) d(bit) g(more) h
(memory) f(than) g(it) g(w) m(ould) g(normally) -8 b(.) 94
565 y(Note) 32 b(that) f(use) f(is) g(also) i(made) e(of) h(the) f
(format) h(string) f(feature) h(of) f(the) h(`) p Fl(--log-file) p
Fo(') d(and) i(`) p Fl(--prof-file) p Fo(') 94 664 y(options) d(so) g
(that) g(it) g(is) f(clear) i(whic) m(h) e(mpatrol) h(log) g(and) f
(pro\014ling) g(output) g(\014les) g(b) s(elong) h(to) g(whic) m(h) f
(pro) s(cesses.) p Fl 334 1108 a(bash$) 47 b(mpatrol) f(--dynamic) f
(--log-file=\045p.log) e(--prof-file=\045p.out) 1003
1212 y(--prof) j(gcc) h(-O) g(-o) g(test2) f(test2.c) 334
1316 y(bash$) h(ls) g(*.log) f(*.out) 334 1420 y(as.log) 428
b(cc1.out) 380 b(cpp.log) g(gcc.out) 334 1523 y(as.out) 428
b(collect2.log) 140 b(cpp.out) 380 b(ld.log) 334 1627
y(cc1.log) g(collect2.out) 140 b(gcc.log) 380 b(ld.out) p
Fo 219 2067 a(As) 29 b(men) m(tioned) g(ab) s(o) m(v) m(e,) i(w) m
(e're) f(not) f(in) m(terested) h(in) e(the) i(mpatrol) f(log) h(and) e
(pro\014ling) g(output) h(\014les) g(for) p Fl 29 w(as) p
Fo 94 2167 a(and) p Fl 26 w(ld) p Fo 26 w(so) e(w) m(e'll) h(delete) f
(them.) 40 b(W) -8 b(e) 27 b(can) g(no) m(w) g(use) p
Fl 26 w(mprof) p Fo 25 w(to) g(create) h(graph) e(sp) s(eci\014cation) h
(\014les) g(for) f(eac) m(h) i(of) 94 2267 y(the) g(pro\014ling) f
(output) h(\014les) f(pro) s(duced.) 38 b(Y) -8 b(ou) 28
b(can) g(\014nd) e(these) j(graph) e(sp) s(eci\014cation) h(\014les) g
(and) f(the) g(pro\014ling) 94 2366 y(output) j(\014les) h(used) e(to) i
(generate) h(them) f(in) f(the) g(`) p Fl(extra) p Fo(') g(directory) h
(in) f(the) g(mpatrol) h(distribution.) p Fl 334 2810
a(bash$) 47 b(rm) g(as.log) f(as.out) g(ld.log) g(ld.out) 334
2914 y(bash$) h(ls) g(*.out) 334 3018 y(cc1.out) 380
b(collect2.out) 140 b(cpp.out) 380 b(gcc.out) 334 3122
y(bash$) 47 b(for) g(file) f(in) i(*.out) 334 3225 y(>) g(do) 334
3329 y(>) 239 b(mprof) 46 b(--graph-file=`basename) c($file) k
(.out`.dot) g($file) 334 3433 y(>) i(done) f(>/dev/null) 334
3537 y(bash$) g(ls) g(*.dot) 334 3641 y(cc1.dot) 380
b(collect2.dot) 140 b(cpp.dot) 380 b(gcc.dot) p Fo 219
4081 a(The) 33 b(graph) g(sp) s(eci\014cation) i(\014les) e(that) h(ha)
m(v) m(e) h(no) m(w) f(b) s(een) f(pro) s(duced) f(can) i(b) s(e) f
(view) m(ed) h(and) f(manipulated) 94 4180 y(with) 41
b(the) p Fl 42 w(dotty) p Fo 40 w(command,) j(or) d(they) g(can) h(b) s
(e) f(con) m(v) m(erted) h(to) g(v) -5 b(arious) 41 b(image) i(formats)
e(with) g(the) p Fl 42 w(dot) p Fo 94 4280 a(command.) 73
b(Ho) m(w) m(ev) m(er,) 46 b(this) 41 b(presumes) f(that) h(y) m(ou) h
(already) f(ha) m(v) m(e) i(the) e(GraphViz) g(graph) g(visualisation)
94 4379 y(pac) m(k) -5 b(age) 41 b(installed.) 66 b(If) 37
b(y) m(ou) i(ha) m(v) m(e) h(then) e(y) m(ou) h(can) f(con) m(v) m(ert)
i(the) f(graph) f(sp) s(eci\014cation) h(\014les) g(to) g(GIF) g(and) 94
4479 y(p) s(ostscript) 29 b(images) g(using) f(the) h(follo) m(wing) h
(commands.) 39 b(If) 28 b(not,) i(y) m(ou) e(can) h(still) h(view) e
(the) h(graphs) f(pro) s(duced) 94 4579 y(in) j(the) f(follo) m(wing) i
(\014gures.) p Fl 334 5023 a(bash$) 47 b(dot) g(-Tgif) f(-Gsize="6,3") f
(-Gratio=fill) f(-o) j(gcc.gif) f(gcc.dot) 334 5127 y(bash$) h(dot) g
(-Tgif) f(-Gsize="6,3") f(-Gratio=fill) f(-o) j(cpp.gif) f(cpp.dot) 334
5230 y(bash$) h(dot) g(-Tgif) f(-Gsize="7,4") f(-Gratio=fill) f(-o) j
(cc1.gif) f(cc1.dot) 334 5334 y(bash$) h(dot) g(-Tgif) f(-Gsize="4,3") f
(-Gratio=fill) f(-o) j(collect2.gif) e(collect2.dot) 334
5438 y(bash$) i(dot) g(-Tps) f(-Gsize="6,3") f(-Gratio=fill) f(-o) j
(gcc.ps) g(gcc.dot) 334 5542 y(bash$) g(dot) g(-Tps) f(-Gsize="6,3") f
(-Gratio=fill) f(-o) j(cpp.ps) g(cpp.dot) 334 5645 y(bash$) g(dot) g
(-Tps) f(-Gsize="9,6") f(-Gratio=fill) f(-Grotate=90) h(-o) i(cc1.ps) f
(cc1.dot) p 90 rotate dyy eop
%%Page: 68 74
68 73 bop Fo 94 -116 a(68) 3377 b(mpatrol) p Fl 334 365
a(bash$) 47 b(dot) g(-Tps) f(-Gsize="4,3") f(-Gratio=fill) f(-o) j
(collect2.ps) e(collect2.dot) 197 2402 y @beginspecial
39 @llx 36 @lly 468 @urx 253 @ury 4290 @rwi @setspecial
%%BeginDocument: images/gcc.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: allocation call graph
%%Creator: dot version gviz1.5.1 (09-29-99)
%%BoundingBox: 39 36 468 253
%%Pages: 1
%%DocumentFonts: Times-Roman

save
countdictstack
mark
newpath
/showpage {} def

%%EndProlog

%%Page 1 1

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 433 217 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.2379 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	START
gsave 10 dict begin
1381 890 32 18 ellipse_path
stroke
gsave 10 dict begin
1381 891 moveto (START) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start
gsave 10 dict begin
1381 802 27 18 ellipse_path
stroke
gsave 10 dict begin
1381 803 moveto (_start) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	START -> _start
newpath 1381 872 moveto
1381 860 1381 843 1381 829 curveto
stroke
newpath 1379 830 moveto
1381 820 lineto
1384 830 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1406 847 moveto (34793) 35 14.00 -0.50 alignedtext
end grestore

%	main
gsave 10 dict begin
1381 714 27 18 ellipse_path
stroke
gsave 10 dict begin
1381 715 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start -> main
newpath 1381 784 moveto
1381 772 1381 755 1381 741 curveto
stroke
newpath 1379 742 moveto
1381 732 lineto
1384 742 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1406 759 moveto (34793) 35 14.00 -0.50 alignedtext
end grestore

%	xmalloc
gsave 10 dict begin
1071 194 33 18 ellipse_path
stroke
gsave 10 dict begin
1071 195 moveto (xmalloc) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> xmalloc
newpath 1394 698 moveto
1441 638 1597 427 1525 338 curveto
1483 286 1422 245 1358 230 curveto
1319 220 1185 204 1111 197 curveto
stroke
newpath 1114 200 moveto
1104 196 lineto
1114 195 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1557 465 moveto (2766) 28 14.00 -0.50 alignedtext
end grestore

%	_obstack_begin
gsave 10 dict begin
1607 572 54 18 ellipse_path
stroke
gsave 10 dict begin
1607 573 moveto (_obstack_begin) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> _obstack_begin
newpath 1408 712 moveto
1444 708 1509 698 1541 678 curveto
1564 664 1584 625 1596 598 curveto
stroke
newpath 1593 598 moveto
1600 590 lineto
1598 600 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1583 671 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	process_command
gsave 10 dict begin
502 626 62 18 ellipse_path
stroke
gsave 10 dict begin
502 627 moveto (process_command) 104 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> process_command
newpath 1354 711 moveto
1286 705 1106 688 1005 678 curveto
883 665 673 644 567 633 curveto
stroke
newpath 570 636 moveto
561 632 lineto
571 631 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1023 671 moveto (695) 21 14.00 -0.50 alignedtext
end grestore

%	add_prefix
gsave 10 dict begin
407 518 40 18 ellipse_path
stroke
gsave 10 dict begin
407 519 moveto (add_prefix) 60 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> add_prefix
newpath 1354 713 moveto
1226 709 680 688 393 644 curveto
364 639 383 578 396 543 curveto
stroke
newpath 393 544 moveto
399 536 lineto
397 546 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
411 627 moveto (170) 21 14.00 -0.50 alignedtext
end grestore

%	concat
gsave 10 dict begin
243 106 28 18 ellipse_path
stroke
gsave 10 dict begin
243 107 moveto (concat) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> concat
newpath 1354 714 moveto
1100 713 846 695 592 678 curveto
518 672 438 677 371 644 curveto
301 608 250 541 198 482 curveto
139 413 222 301 233 212 curveto
236 191 239 156 241 132 curveto
stroke
newpath 238 134 moveto
242 124 lineto
243 134 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
194 411 moveto (51) 14 14.00 -0.50 alignedtext
end grestore

%	find_a_file
gsave 10 dict begin
1250 302 41 18 ellipse_path
stroke
gsave 10 dict begin
1250 303 moveto (find_a_file) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> find_a_file
newpath 1382 696 moveto
1384 676 1386 645 1387 626 curveto
1387 626 1387 626 1387 464 curveto
1386 439 1381 413 1370 392 curveto
1364 381 1347 382 1339 374 curveto
1328 363 1323 347 1312 338 curveto
1305 333 1295 326 1286 321 curveto
stroke
newpath 1285 323 moveto
1277 316 lineto
1287 319 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1405 519 moveto (143) 21 14.00 -0.50 alignedtext
end grestore

%	read_specs
gsave 10 dict begin
912 518 41 18 ellipse_path
stroke
gsave 10 dict begin
912 519 moveto (read_specs) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> read_specs
newpath 1357 706 moveto
1314 693 1225 664 1175 644 curveto
1111 616 1002 563 946 536 curveto
stroke
newpath 946 539 moveto
939 532 lineto
949 535 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1200 627 moveto (10866) 35 14.00 -0.50 alignedtext
end grestore

%	lookup_compiler
gsave 10 dict begin
1694 356 58 18 ellipse_path
stroke
gsave 10 dict begin
1694 357 moveto (lookup_compiler) 95 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> lookup_compiler
newpath 1408 713 moveto
1521 712 1697 726 1698 626 curveto
1698 626 1698 626 1698 464 curveto
1697 442 1696 407 1695 383 curveto
stroke
newpath 1693 384 moveto
1695 374 lineto
1698 384 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1712 573 moveto (20) 14 14.00 -0.50 alignedtext
end grestore

%	do_spec
gsave 10 dict begin
1269 626 33 18 ellipse_path
stroke
gsave 10 dict begin
1269 627 moveto (do_spec) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> do_spec
newpath 1361 701 moveto
1350 694 1336 685 1328 678 curveto
1318 670 1305 658 1293 648 curveto
stroke
newpath 1292 650 moveto
1286 642 lineto
1295 647 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1349 671 moveto (6946) 28 14.00 -0.50 alignedtext
end grestore

%	_putenv
gsave 10 dict begin
1780 572 33 18 ellipse_path
stroke
gsave 10 dict begin
1780 573 moveto (_putenv) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> _putenv
newpath 1408 714 moveto
1472 713 1631 707 1715 678 curveto
1740 669 1760 628 1771 599 curveto
stroke
newpath 1768 599 moveto
1774 590 lineto
1773 600 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1754 671 moveto (920) 21 14.00 -0.50 alignedtext
end grestore

%	ALLOC
gsave 10 dict begin
1071 18 33 18 ellipse_path
stroke
gsave 10 dict begin
1071 19 moveto (ALLOC) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	xmalloc -> ALLOC
newpath 1071 176 moveto
1071 144 1071 79 1071 43 curveto
stroke
newpath 1069 46 moveto
1071 36 lineto
1074 46 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1096 107 moveto (33575) 35 14.00 -0.50 alignedtext
end grestore

%	_obstack_begin -> xmalloc
newpath 1607 554 moveto
1607 530 1606 488 1607 464 curveto
1607 464 1607 464 1607 302 curveto
1606 276 1603 235 1578 230 curveto
1577 229 1230 205 1111 196 curveto
stroke
newpath 1114 199 moveto
1104 196 lineto
1114 194 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1632 411 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	process_command -> xmalloc
newpath 465 611 moveto
445 603 423 594 416 590 curveto
393 575 371 558 355 536 curveto
328 495 356 430 385 392 curveto
440 321 510 244 597 230 curveto
740 206 885 195 1029 194 curveto
stroke
newpath 1028 192 moveto
1038 194 lineto
1028 197 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
399 411 moveto (48) 14 14.00 -0.50 alignedtext
end grestore

%	save_string
gsave 10 dict begin
770 302 42 18 ellipse_path
stroke
gsave 10 dict begin
770 303 moveto (save_string) 63 14.00 -0.50 alignedtext
end grestore
end grestore

%	process_command -> save_string
newpath 547 613 moveto
566 607 587 599 599 590 curveto
637 561 668 522 691 482 curveto
717 437 726 385 746 338 curveto
746 338 749 334 753 328 curveto
stroke
newpath 751 327 moveto
758 320 lineto
755 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
720 465 moveto (26) 14 14.00 -0.50 alignedtext
end grestore

%	set_std_prefix
gsave 10 dict begin
629 464 50 18 ellipse_path
stroke
gsave 10 dict begin
629 465 moveto (set_std_prefix) 79 14.00 -0.50 alignedtext
end grestore
end grestore

%	process_command -> set_std_prefix
newpath 520 609 moveto
526 602 533 595 537 590 curveto
559 564 590 519 611 491 curveto
stroke
newpath 609 489 moveto
617 482 lineto
614 492 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
578 573 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	process_command -> add_prefix
newpath 471 610 moveto
460 604 448 597 442 590 curveto
434 579 425 561 418 545 curveto
stroke
newpath 416 546 moveto
414 536 lineto
420 544 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
460 573 moveto (458) 21 14.00 -0.50 alignedtext
end grestore

%	process_command -> concat
newpath 456 614 moveto
444 611 435 608 435 608 curveto
412 601 385 604 365 590 curveto
349 577 342 555 337 536 curveto
307 405 289 272 260 142 curveto
260 141 258 137 255 131 curveto
stroke
newpath 253 133 moveto
251 123 lineto
258 131 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
323 357 moveto (107) 21 14.00 -0.50 alignedtext
end grestore

%	translate_options
gsave 10 dict begin
502 464 58 18 ellipse_path
stroke
gsave 10 dict begin
502 465 moveto (translate_options) 95 14.00 -0.50 alignedtext
end grestore
end grestore

%	process_command -> translate_options
newpath 502 608 moveto
502 579 502 526 502 492 curveto
stroke
newpath 500 492 moveto
502 482 lineto
505 492 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
516 573 moveto (40) 14 14.00 -0.50 alignedtext
end grestore

%	save_string -> xmalloc
newpath 798 288 moveto
812 282 828 273 837 266 curveto
850 256 853 234 867 230 curveto
868 229 972 211 1031 200 curveto
stroke
newpath 1029 198 moveto
1039 199 lineto
1029 203 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
881 249 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	save_string -> xmalloc
newpath 768 284 moveto
766 264 767 235 781 230 curveto
847 206 966 198 1029 195 curveto
stroke
newpath 1028 193 moveto
1038 195 lineto
1028 198 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
806 249 moveto (12346) 35 14.00 -0.50 alignedtext
end grestore

%	set_std_prefix -> save_string
newpath 635 446 moveto
645 416 668 360 693 338 curveto
702 331 715 324 729 318 curveto
stroke
newpath 728 316 moveto
738 314 lineto
730 320 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
671 411 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	add_prefix -> xmalloc
newpath 406 500 moveto
406 483 406 459 410 446 curveto
417 425 432 407 447 392 curveto
518 325 594 254 687 230 curveto
798 201 914 195 1028 194 curveto
stroke
newpath 1028 192 moveto
1038 194 lineto
1028 197 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
524 357 moveto (224) 21 14.00 -0.50 alignedtext
end grestore

%	add_prefix -> save_string
newpath 411 500 moveto
415 483 422 458 432 446 curveto
453 421 483 405 511 392 curveto
568 364 670 332 727 314 curveto
stroke
newpath 725 312 moveto
735 312 lineto
726 317 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
529 411 moveto (282) 21 14.00 -0.50 alignedtext
end grestore

%	update_path
gsave 10 dict begin
103 410 44 18 ellipse_path
stroke
gsave 10 dict begin
103 411 moveto (update_path) 68 14.00 -0.50 alignedtext
end grestore
end grestore

%	add_prefix -> update_path
newpath 375 507 moveto
320 487 206 447 144 425 curveto
stroke
newpath 144 428 moveto
136 422 lineto
146 423 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
324 465 moveto (122) 21 14.00 -0.50 alignedtext
end grestore

%	update_path -> concat
newpath 88 393 moveto
72 374 47 342 39 320 curveto
24 274 0 206 36 176 curveto
74 143 158 123 206 113 curveto
stroke
newpath 206 111 moveto
216 111 lineto
207 115 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
37 249 moveto (46) 14 14.00 -0.50 alignedtext
end grestore

%	translate_name
gsave 10 dict begin
103 302 52 18 ellipse_path
stroke
gsave 10 dict begin
103 303 moveto (translate_name) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	update_path -> translate_name
newpath 103 392 moveto
103 375 103 349 103 329 curveto
stroke
newpath 101 330 moveto
103 320 lineto
106 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
117 357 moveto (76) 14 14.00 -0.50 alignedtext
end grestore

%	concat -> ALLOC
newpath 271 103 moveto
394 90 884 38 1030 23 curveto
stroke
newpath 1028 21 moveto
1038 22 lineto
1028 26 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
751 63 moveto (298) 21 14.00 -0.50 alignedtext
end grestore

%	translate_name -> concat
newpath 121 285 moveto
127 278 133 271 137 266 curveto
164 229 205 164 227 130 curveto
stroke
newpath 224 130 moveto
232 123 lineto
228 133 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
212 195 moveto (58) 14 14.00 -0.50 alignedtext
end grestore

%	get_key_value
gsave 10 dict begin
99 194 51 18 ellipse_path
stroke
gsave 10 dict begin
99 195 moveto (get_key_value) 81 14.00 -0.50 alignedtext
end grestore
end grestore

%	translate_name -> get_key_value
newpath 102 284 moveto
101 267 100 241 100 221 curveto
stroke
newpath 98 222 moveto
100 212 lineto
103 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
116 249 moveto (18) 14 14.00 -0.50 alignedtext
end grestore

%	get_key_value -> concat
newpath 110 176 moveto
119 164 131 148 142 142 curveto
159 131 186 122 208 116 curveto
stroke
newpath 207 114 moveto
217 113 lineto
208 119 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
156 151 moveto (18) 14 14.00 -0.50 alignedtext
end grestore

%	translate_options -> xmalloc
newpath 511 446 moveto
519 429 533 403 546 392 curveto
613 331 677 261 760 230 curveto
831 203 962 197 1029 194 curveto
stroke
newpath 1028 192 moveto
1038 194 lineto
1028 197 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
619 357 moveto (40) 14 14.00 -0.50 alignedtext
end grestore

%	find_a_file -> xmalloc
newpath 1230 286 moveto
1207 270 1172 244 1149 230 curveto
1138 223 1120 214 1104 208 curveto
stroke
newpath 1106 212 moveto
1098 205 lineto
1108 207 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1220 249 moveto (856) 21 14.00 -0.50 alignedtext
end grestore

%	read_specs -> xmalloc
newpath 922 500 moveto
937 473 967 420 988 392 curveto
996 382 1015 385 1019 374 curveto
1037 333 1055 259 1065 220 curveto
stroke
newpath 1062 221 moveto
1067 212 lineto
1067 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1052 357 moveto (3740) 28 14.00 -0.50 alignedtext
end grestore

%	read_specs -> save_string
newpath 884 505 moveto
849 487 791 456 763 428 curveto
744 407 753 360 761 329 curveto
stroke
newpath 758 329 moveto
764 320 lineto
763 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
784 411 moveto (3669) 28 14.00 -0.50 alignedtext
end grestore

%	set_spec
gsave 10 dict begin
851 410 34 18 ellipse_path
stroke
gsave 10 dict begin
851 411 moveto (set_spec) 47 14.00 -0.50 alignedtext
end grestore
end grestore

%	read_specs -> set_spec
newpath 890 503 moveto
882 496 873 489 869 482 curveto
863 471 859 453 856 438 curveto
stroke
newpath 854 438 moveto
854 428 lineto
858 437 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
890 465 moveto (3457) 28 14.00 -0.50 alignedtext
end grestore

%	set_spec -> xmalloc
newpath 866 394 moveto
898 358 975 274 1020 230 curveto
1021 229 1032 222 1044 213 curveto
stroke
newpath 1041 212 moveto
1051 208 lineto
1044 216 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
987 303 moveto (336) 21 14.00 -0.50 alignedtext
end grestore

%	set_spec -> save_string
newpath 834 394 moveto
827 387 820 380 815 374 curveto
807 362 795 343 786 328 curveto
stroke
newpath 784 330 moveto
781 320 lineto
788 327 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
836 357 moveto (3121) 28 14.00 -0.50 alignedtext
end grestore

%	lookup_compiler -> xmalloc
newpath 1690 338 moveto
1681 305 1659 239 1624 230 curveto
1550 210 1225 198 1111 195 curveto
stroke
newpath 1114 198 moveto
1104 195 lineto
1114 193 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1698 303 moveto (20) 14 14.00 -0.50 alignedtext
end grestore

%	do_spec_1
gsave 10 dict begin
1191 518 40 18 ellipse_path
stroke
gsave 10 dict begin
1191 519 moveto (do_spec_1) 59 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec -> do_spec_1
newpath 1257 609 moveto
1244 591 1223 562 1208 542 curveto
stroke
newpath 1207 545 moveto
1203 535 lineto
1211 542 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1264 573 moveto (6946) 28 14.00 -0.50 alignedtext
end grestore

%	do_spec_1 -> xmalloc
newpath 1231 518 moveto
1292 516 1353 509 1406 482 curveto
1453 457 1506 379 1473 338 curveto
1392 237 1245 207 1112 197 curveto
stroke
newpath 1114 200 moveto
1104 196 lineto
1114 195 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1501 357 moveto (772) 21 14.00 -0.50 alignedtext
end grestore

%	do_spec_1 -> save_string
newpath 1151 516 moveto
1106 512 1061 501 1020 482 curveto
968 457 927 413 884 374 curveto
874 364 876 345 864 338 curveto
864 338 836 327 810 317 curveto
stroke
newpath 810 320 moveto
802 314 lineto
812 315 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
954 411 moveto (9) 7 14.00 -0.50 alignedtext
end grestore

%	do_spec_1 -> do_spec_1
gsave 10 dict begin
dotted
newpath 1219 505 moveto
1235 503 1249 507 1249 518 curveto
1249 527 1239 532 1226 531 curveto
stroke
newpath 1229 534 moveto
1219 531 lineto
1229 529 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1260 519 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_braces
gsave 10 dict begin
1050 410 50 18 ellipse_path
stroke
gsave 10 dict begin
1050 411 moveto (handle_braces) 79 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> handle_braces
gsave 10 dict begin
dotted
newpath 1162 506 moveto
1146 499 1129 490 1118 482 curveto
1104 471 1085 450 1071 434 curveto
stroke
newpath 1070 436 moveto
1065 427 lineto
1073 433 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1139 465 moveto (5239) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_temp_file
gsave 10 dict begin
1406 356 55 18 ellipse_path
stroke
gsave 10 dict begin
1406 357 moveto (make_temp_file) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> make_temp_file
newpath 1230 515 moveto
1267 510 1318 501 1344 482 curveto
1368 463 1387 415 1398 384 curveto
stroke
newpath 1396 383 moveto
1401 374 lineto
1401 384 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1385 465 moveto (63) 14 14.00 -0.50 alignedtext
end grestore

%	store_arg
gsave 10 dict begin
1155 410 36 18 ellipse_path
stroke
gsave 10 dict begin
1155 411 moveto (store_arg) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> store_arg
newpath 1185 500 moveto
1180 483 1171 456 1164 436 curveto
stroke
newpath 1162 438 moveto
1161 428 lineto
1167 436 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1197 465 moveto (132) 21 14.00 -0.50 alignedtext
end grestore

%	execute
gsave 10 dict begin
1241 410 31 18 ellipse_path
stroke
gsave 10 dict begin
1241 411 moveto (execute) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> execute
newpath 1207 501 moveto
1213 495 1219 488 1221 482 curveto
1227 470 1232 452 1235 437 curveto
stroke
newpath 1232 437 moveto
1237 428 lineto
1237 438 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1251 465 moveto (276) 21 14.00 -0.50 alignedtext
end grestore

%	find_file
gsave 10 dict begin
1324 410 34 18 ellipse_path
stroke
gsave 10 dict begin
1324 411 moveto (find_file) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> find_file
newpath 1224 507 moveto
1242 501 1263 492 1275 482 curveto
1287 472 1300 452 1310 435 curveto
stroke
newpath 1307 435 moveto
1314 427 lineto
1312 437 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1320 465 moveto (437) 21 14.00 -0.50 alignedtext
end grestore

%	is_directory
gsave 10 dict begin
356 248 43 18 ellipse_path
stroke
gsave 10 dict begin
356 249 moveto (is_directory) 66 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_spec_1 -> is_directory
newpath 1151 517 moveto
1089 514 1027 504 965 500 curveto
887 493 807 497 729 482 curveto
712 478 707 453 691 446 curveto
665 434 630 445 607 428 curveto
580 406 583 358 554 338 curveto
516 309 441 279 395 262 curveto
stroke
newpath 398 266 moveto
389 260 lineto
399 261 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
621 411 moveto (18) 14 14.00 -0.50 alignedtext
end grestore

%	handle_braces -> save_string
newpath 1019 396 moveto
1002 388 983 380 970 374 curveto
944 362 919 347 891 338 curveto
871 330 838 320 812 314 curveto
stroke
newpath 815 318 moveto
806 312 lineto
816 313 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
991 357 moveto (5239) 28 14.00 -0.50 alignedtext
end grestore

%	handle_braces -> do_spec_1
gsave 10 dict begin
dotted
newpath 1146 511 moveto
1110 505 1062 495 1033 482 curveto
1019 475 1030 447 1040 428 curveto
stroke
newpath 1143 508 moveto
1153 512 lineto
1143 513 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1054 465 moveto (1611) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_temp_file -> xmalloc
newpath 1388 339 moveto
1356 310 1289 251 1244 230 curveto
1210 214 1152 203 1111 198 curveto
stroke
newpath 1113 201 moveto
1103 197 lineto
1113 196 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1379 303 moveto (63) 14 14.00 -0.50 alignedtext
end grestore

%	record_temp_file
gsave 10 dict begin
1124 302 58 18 ellipse_path
stroke
gsave 10 dict begin
1124 303 moveto (record_temp_file) 96 14.00 -0.50 alignedtext
end grestore
end grestore

%	store_arg -> record_temp_file
newpath 1150 392 moveto
1145 375 1137 348 1132 329 curveto
stroke
newpath 1130 330 moveto
1129 320 lineto
1135 329 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1163 357 moveto (132) 21 14.00 -0.50 alignedtext
end grestore

%	record_temp_file -> xmalloc
newpath 1115 284 moveto
1106 266 1093 240 1084 220 curveto
stroke
newpath 1082 222 moveto
1080 212 lineto
1087 220 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1125 249 moveto (132) 21 14.00 -0.50 alignedtext
end grestore

%	execute -> find_a_file
newpath 1222 396 moveto
1213 389 1204 381 1199 374 curveto
1193 363 1193 347 1199 338 curveto
1203 333 1209 328 1216 322 curveto
stroke
newpath 1215 319 moveto
1225 316 lineto
1218 324 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1217 357 moveto (276) 21 14.00 -0.50 alignedtext
end grestore

%	find_file -> find_a_file
newpath 1300 397 moveto
1288 391 1276 382 1270 374 curveto
1263 363 1258 345 1255 329 curveto
stroke
newpath 1253 330 moveto
1253 320 lineto
1258 329 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1288 357 moveto (437) 21 14.00 -0.50 alignedtext
end grestore

%	is_directory -> concat
newpath 349 230 moveto
338 206 319 163 302 142 curveto
297 134 286 127 275 121 curveto
stroke
newpath 274 123 moveto
266 116 lineto
276 119 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
355 195 moveto (18) 14 14.00 -0.50 alignedtext
end grestore

%	_putenv -> ALLOC
newpath 1780 554 moveto
1780 530 1780 489 1781 464 curveto
1781 464 1781 464 1781 106 curveto
1780 55 1265 27 1113 19 curveto
stroke
newpath 1114 22 moveto
1104 19 lineto
1114 17 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1799 303 moveto (920) 21 14.00 -0.50 alignedtext
end grestore

endpage
grestore
end
restore

%%Trailer

cleartomark
countdictstack exch sub { end } repeat
restore

%%EOF

%%EndDocument
@endspecial Fo 219 2702 a(The) 26 b(\014gure) f(ab) s(o) m(v) m(e) j
(sho) m(ws) d(the) i(allo) s(cation) h(call) g(graph) d(for) h(the) p
Fl 26 w(gcc) p Fo 26 w(compiler) g(driv) m(er.) 40 b(F) -8
b(rom) 26 b(the) g(graph) 94 2801 y(y) m(ou) 31 b(can) f(see) g(that) h
(the) f(v) -5 b(ast) 30 b(ma) 5 b(jorit) m(y) 31 b(of) f(memory) f
(allo) s(cations) j(app) s(ear) e(to) g(b) s(e) f(required) g(for) h
(reading) g(the) 94 2901 y(driv) m(er) h(sp) s(eci\014cation) g
(\014le,) g(whic) m(h) f(details) h(default) g(options) f(and) g
(platform-sp) s(eci\014c) h(features.) 41 b(Almost) 31
b(all) 94 3001 y(of) 23 b(the) g(memory) g(allo) s(cations) i(go) f
(through) e(the) p Fl 23 w(xmalloc\(\)) p Fo 20 w(routine,) j(whic) m
(h) d(is) h(an) g(error-c) m(hec) m(king) h(function) 94
3100 y(built) 30 b(on) g(top) h(of) p Fl 30 w(malloc\(\)) p
Fh 1086 3067 a(4) p Fo 1121 3100 a(.) 40 b(A) 31 b(large) g(amoun) m(t)
f(of) g(memory) g(is) h(also) g(allo) s(cated) h(b) m(y) e(the) p
Fi 30 w(obstack) p Fo 40 w(mo) s(dule,) 94 3200 y(whic) m(h) 37
b(pro) m(vides) h(a) f(functionalit) m(y) i(similar) f(to) p
Fi 38 w(ar) -5 b(enas) p Fo 46 w(for) 37 b(v) -5 b(ariable-sized) 39
b(data) f(structures.) 61 b(Y) -8 b(ou'll) 38 b(see) 94
3299 y(extensiv) m(e) 32 b(use) e(of) h(b) s(oth) f(of) g(these) h(t) m
(yp) s(es) f(of) h(routines) f(throughout) g(the) h(follo) m(wing) h
(graphs.) 201 5334 y @beginspecial 35 @llx 36 @lly 463
@urx 253 @ury 4280 @rwi @setspecial
%%BeginDocument: images/cpp.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: allocation call graph
%%Creator: dot version gviz1.5.1 (09-29-99)
%%BoundingBox: 35 36 463 253
%%Pages: 1
%%DocumentFonts: Times-Roman

save
countdictstack
mark
newpath
/showpage {} def

%%EndProlog

%%Page 1 1

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 428 218 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.2126 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	START
gsave 10 dict begin
1396 998 32 18 ellipse_path
stroke
gsave 10 dict begin
1396 999 moveto (START) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start
gsave 10 dict begin
1396 910 27 18 ellipse_path
stroke
gsave 10 dict begin
1396 911 moveto (_start) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	START -> _start
newpath 1396 980 moveto
1396 968 1396 951 1396 937 curveto
stroke
newpath 1394 938 moveto
1396 928 lineto
1399 938 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1424 955 moveto (114042) 42 14.00 -0.50 alignedtext
end grestore

%	main
gsave 10 dict begin
1396 822 27 18 ellipse_path
stroke
gsave 10 dict begin
1396 823 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start -> main
newpath 1396 892 moveto
1396 880 1396 863 1396 849 curveto
stroke
newpath 1394 850 moveto
1396 840 lineto
1399 850 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1424 867 moveto (114042) 42 14.00 -0.50 alignedtext
end grestore

%	xmalloc
gsave 10 dict begin
945 106 33 18 ellipse_path
stroke
gsave 10 dict begin
945 107 moveto (xmalloc) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> xmalloc
newpath 1418 812 moveto
1448 796 1499 766 1500 734 curveto
1500 734 1500 734 1500 194 curveto
1499 143 1408 149 1359 142 curveto
1359 142 1093 118 987 110 curveto
stroke
newpath 988 113 moveto
978 109 lineto
988 108 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1525 465 moveto (30365) 35 14.00 -0.50 alignedtext
end grestore

%	initialize_builtins
gsave 10 dict begin
1329 680 59 18 ellipse_path
stroke
gsave 10 dict begin
1329 681 moveto (initialize_builtins) 98 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> initialize_builtins
newpath 1388 805 moveto
1376 781 1356 736 1342 707 curveto
stroke
newpath 1340 708 moveto
1338 698 lineto
1344 706 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1397 779 moveto (687) 21 14.00 -0.50 alignedtext
end grestore

%	make_definition
gsave 10 dict begin
1014 680 56 18 ellipse_path
stroke
gsave 10 dict begin
1014 681 moveto (make_definition) 91 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> make_definition
newpath 1370 817 moveto
1319 809 1214 790 1203 786 curveto
1157 768 1086 725 1045 699 curveto
stroke
newpath 1047 703 moveto
1039 696 lineto
1049 698 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1224 779 moveto (1305) 28 14.00 -0.50 alignedtext
end grestore

%	make_assertion
gsave 10 dict begin
54 572 54 18 ellipse_path
stroke
gsave 10 dict begin
54 573 moveto (make_assertion) 86 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> make_assertion
newpath 1369 818 moveto
1315 810 1196 791 1166 786 curveto
855 728 284 617 108 582 curveto
stroke
newpath 111 585 moveto
101 581 lineto
111 580 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1007 735 moveto (225) 21 14.00 -0.50 alignedtext
end grestore

%	xstrdup
gsave 10 dict begin
1427 356 31 18 ellipse_path
stroke
gsave 10 dict begin
1427 357 moveto (xstrdup) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> xstrdup
newpath 1410 806 moveto
1416 800 1421 792 1421 786 curveto
1429 669 1428 460 1427 384 curveto
stroke
newpath 1425 384 moveto
1427 374 lineto
1430 384 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1439 627 moveto (59) 14 14.00 -0.50 alignedtext
end grestore

%	new_include_prefix
gsave 10 dict begin
1710 518 66 18 ellipse_path
stroke
gsave 10 dict begin
1710 519 moveto (new_include_prefix) 111 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> new_include_prefix
newpath 1423 821 moveto
1487 818 1556 800 1594 752 curveto
1634 699 1681 591 1700 542 curveto
stroke
newpath 1696 544 moveto
1703 536 lineto
1701 546 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1664 681 moveto (1619) 28 14.00 -0.50 alignedtext
end grestore

%	rescan
gsave 10 dict begin
1223 734 28 18 ellipse_path
stroke
gsave 10 dict begin
1223 735 moveto (rescan) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> rescan
newpath 1370 817 moveto
1341 810 1295 798 1269 786 curveto
1259 781 1248 769 1240 759 curveto
stroke
newpath 1238 761 moveto
1234 751 lineto
1242 758 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1294 779 moveto (79702) 35 14.00 -0.50 alignedtext
end grestore

%	write_output
gsave 10 dict begin
1592 626 46 18 ellipse_path
stroke
gsave 10 dict begin
1592 627 moveto (write_output) 71 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> write_output
newpath 1423 819 moveto
1452 814 1497 805 1517 786 curveto
1546 756 1571 689 1584 652 curveto
stroke
newpath 1581 653 moveto
1586 644 lineto
1586 654 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1573 735 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

%	ALLOC
gsave 10 dict begin
945 18 33 18 ellipse_path
stroke
gsave 10 dict begin
945 19 moveto (ALLOC) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	xmalloc -> ALLOC
newpath 945 88 moveto
945 76 945 59 945 45 curveto
stroke
newpath 943 46 moveto
945 36 lineto
948 46 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
973 63 moveto (104615) 42 14.00 -0.50 alignedtext
end grestore

%	install
gsave 10 dict begin
1043 302 27 18 ellipse_path
stroke
gsave 10 dict begin
1043 303 moveto (install) 34 14.00 -0.50 alignedtext
end grestore
end grestore

%	initialize_builtins -> install
newpath 1329 662 moveto
1329 616 1324 496 1286 446 curveto
1243 390 1129 337 1073 314 curveto
stroke
newpath 1074 317 moveto
1066 311 lineto
1076 313 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1336 519 moveto (687) 21 14.00 -0.50 alignedtext
end grestore

%	install -> xmalloc
newpath 1034 285 moveto
1016 250 978 172 958 131 curveto
stroke
newpath 956 133 moveto
954 123 lineto
961 131 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1019 195 moveto (6618) 28 14.00 -0.50 alignedtext
end grestore

%	do_define
gsave 10 dict begin
1000 518 38 18 ellipse_path
stroke
gsave 10 dict begin
1000 519 moveto (do_define) 55 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_definition -> do_define
newpath 1012 662 moveto
1010 632 1005 576 1002 543 curveto
stroke
newpath 1000 546 moveto
1002 536 lineto
1005 546 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1032 627 moveto (1305) 28 14.00 -0.50 alignedtext
end grestore

%	do_define -> install
newpath 1004 500 moveto
1011 462 1029 374 1037 329 curveto
stroke
newpath 1034 329 moveto
1039 320 lineto
1039 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1047 411 moveto (3627) 28 14.00 -0.50 alignedtext
end grestore

%	create_definition
gsave 10 dict begin
593 410 57 18 ellipse_path
stroke
gsave 10 dict begin
593 411 moveto (create_definition) 94 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_define -> create_definition
newpath 970 507 moveto
926 490 844 460 795 446 curveto
761 435 724 434 688 428 curveto
678 426 664 423 649 420 curveto
stroke
newpath 652 423 moveto
642 419 lineto
652 418 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
923 465 moveto (4866) 28 14.00 -0.50 alignedtext
end grestore

%	create_definition -> xmalloc
newpath 598 392 moveto
611 347 648 228 690 176 curveto
705 157 730 148 752 142 curveto
752 142 850 124 906 113 curveto
stroke
newpath 904 111 moveto
914 112 lineto
904 116 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
673 249 moveto (28) 14 14.00 -0.50 alignedtext
end grestore

%	collect_expansion
gsave 10 dict begin
491 302 61 18 ellipse_path
stroke
gsave 10 dict begin
491 303 moveto (collect_expansion) 100 14.00 -0.50 alignedtext
end grestore
end grestore

%	create_definition -> collect_expansion
newpath 567 394 moveto
558 387 548 380 542 374 curveto
532 363 518 343 507 328 curveto
stroke
newpath 505 330 moveto
502 320 lineto
509 327 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
563 357 moveto (4838) 28 14.00 -0.50 alignedtext
end grestore

%	collect_expansion -> xmalloc
newpath 501 284 moveto
523 244 579 153 634 142 curveto
636 141 821 120 905 111 curveto
stroke
newpath 902 109 moveto
912 110 lineto
902 114 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
597 195 moveto (336) 21 14.00 -0.50 alignedtext
end grestore

%	xcalloc
gsave 10 dict begin
101 194 30 18 ellipse_path
stroke
gsave 10 dict begin
101 195 moveto (xcalloc) 40 14.00 -0.50 alignedtext
end grestore
end grestore

%	collect_expansion -> xcalloc
newpath 438 293 moveto
402 287 356 277 328 266 curveto
316 261 323 234 310 230 curveto
263 214 210 220 160 212 curveto
153 210 144 208 134 205 curveto
stroke
newpath 136 208 moveto
127 203 lineto
137 203 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
349 249 moveto (4502) 28 14.00 -0.50 alignedtext
end grestore

%	xcalloc -> ALLOC
newpath 128 185 moveto
139 182 152 178 160 176 curveto
213 163 265 152 317 142 curveto
487 107 794 48 904 26 curveto
stroke
newpath 904 24 moveto
914 24 lineto
905 28 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
611 107 moveto (9094) 28 14.00 -0.50 alignedtext
end grestore

%	do_assert
gsave 10 dict begin
349 302 36 18 ellipse_path
stroke
gsave 10 dict begin
349 303 moveto (do_assert) 52 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_assertion -> do_assert
newpath 69 554 moveto
95 524 148 463 177 428 curveto
202 398 217 360 247 338 curveto
262 328 286 319 307 313 curveto
stroke
newpath 306 311 moveto
316 310 lineto
307 316 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
180 465 moveto (225) 21 14.00 -0.50 alignedtext
end grestore

%	do_assert -> xmalloc
newpath 375 289 moveto
390 282 406 273 416 266 curveto
451 239 477 201 513 176 curveto
538 159 566 146 594 142 curveto
596 141 813 119 904 110 curveto
stroke
newpath 902 108 moveto
912 109 lineto
902 113 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
527 195 moveto (32) 14 14.00 -0.50 alignedtext
end grestore

%	read_token_list
gsave 10 dict begin
225 194 53 18 ellipse_path
stroke
gsave 10 dict begin
225 195 moveto (read_token_list) 86 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_assert -> read_token_list
newpath 319 292 moveto
301 285 280 276 268 266 curveto
257 256 246 236 237 220 curveto
stroke
newpath 235 222 moveto
233 212 lineto
240 220 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
286 249 moveto (102) 21 14.00 -0.50 alignedtext
end grestore

%	assertion_install
gsave 10 dict begin
381 194 56 18 ellipse_path
stroke
gsave 10 dict begin
381 195 moveto (assertion_install) 91 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_assert -> assertion_install
newpath 365 286 moveto
370 279 375 272 377 266 curveto
380 255 382 236 382 221 curveto
stroke
newpath 380 222 moveto
382 212 lineto
385 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
395 249 moveto (91) 14 14.00 -0.50 alignedtext
end grestore

%	read_token_list -> xmalloc
newpath 258 180 moveto
292 166 344 146 378 142 curveto
552 120 727 108 901 106 curveto
stroke
newpath 902 104 moveto
912 106 lineto
902 109 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
396 151 moveto (102) 21 14.00 -0.50 alignedtext
end grestore

%	assertion_install -> xmalloc
newpath 397 177 moveto
412 162 433 144 450 142 curveto
578 122 810 111 904 107 curveto
stroke
newpath 902 105 moveto
912 107 lineto
902 110 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
464 151 moveto (91) 14 14.00 -0.50 alignedtext
end grestore

%	xstrdup -> xmalloc
newpath 1427 338 moveto
1426 300 1421 214 1394 176 curveto
1358 127 1091 111 987 107 curveto
stroke
newpath 988 110 moveto
978 107 lineto
988 105 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1435 249 moveto (59) 14 14.00 -0.50 alignedtext
end grestore

%	new_include_prefix -> xmalloc
newpath 1699 500 moveto
1685 477 1663 437 1664 410 curveto
1664 410 1664 410 1664 194 curveto
1663 169 1636 144 1612 142 curveto
1430 119 1098 109 985 107 curveto
stroke
newpath 988 110 moveto
978 107 lineto
988 105 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1685 303 moveto (1286) 28 14.00 -0.50 alignedtext
end grestore

%	update_path
gsave 10 dict begin
1752 410 44 18 ellipse_path
stroke
gsave 10 dict begin
1752 411 moveto (update_path) 68 14.00 -0.50 alignedtext
end grestore
end grestore

%	new_include_prefix -> update_path
newpath 1717 500 moveto
1724 483 1734 456 1742 436 curveto
stroke
newpath 1739 436 moveto
1745 428 lineto
1744 438 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1756 465 moveto (333) 21 14.00 -0.50 alignedtext
end grestore

%	concat
gsave 10 dict begin
1788 106 28 18 ellipse_path
stroke
gsave 10 dict begin
1788 107 moveto (concat) 36 14.00 -0.50 alignedtext
end grestore
end grestore

%	update_path -> concat
newpath 1754 392 moveto
1761 339 1778 192 1785 132 curveto
stroke
newpath 1782 134 moveto
1786 124 lineto
1787 134 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1791 249 moveto (159) 21 14.00 -0.50 alignedtext
end grestore

%	translate_name
gsave 10 dict begin
1848 302 52 18 ellipse_path
stroke
gsave 10 dict begin
1848 303 moveto (translate_name) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	update_path -> translate_name
newpath 1767 393 moveto
1783 375 1809 346 1827 325 curveto
stroke
newpath 1824 324 moveto
1833 319 lineto
1828 328 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1834 357 moveto (174) 21 14.00 -0.50 alignedtext
end grestore

%	concat -> ALLOC
newpath 1760 103 moveto
1636 90 1133 38 986 22 curveto
stroke
newpath 988 25 moveto
978 21 lineto
988 20 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1461 63 moveto (333) 21 14.00 -0.50 alignedtext
end grestore

%	translate_name -> concat
newpath 1842 284 moveto
1832 249 1808 172 1796 132 curveto
stroke
newpath 1794 134 moveto
1793 124 lineto
1799 132 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1838 195 moveto (151) 21 14.00 -0.50 alignedtext
end grestore

%	get_key_value
gsave 10 dict begin
1956 194 51 18 ellipse_path
stroke
gsave 10 dict begin
1956 195 moveto (get_key_value) 81 14.00 -0.50 alignedtext
end grestore
end grestore

%	translate_name -> get_key_value
newpath 1865 285 moveto
1883 267 1912 238 1933 217 curveto
stroke
newpath 1930 216 moveto
1939 211 lineto
1934 220 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1934 249 moveto (23) 14 14.00 -0.50 alignedtext
end grestore

%	get_key_value -> concat
newpath 1928 179 moveto
1897 163 1847 137 1816 120 curveto
stroke
newpath 1818 124 moveto
1810 117 lineto
1820 119 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1901 151 moveto (23) 14 14.00 -0.50 alignedtext
end grestore

%	handle_directive
gsave 10 dict begin
832 626 57 18 ellipse_path
stroke
gsave 10 dict begin
832 627 moveto (handle_directive) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	rescan -> handle_directive
gsave 10 dict begin
dotted
newpath 1202 722 moveto
1167 703 1101 667 1082 662 curveto
1033 648 951 638 895 632 curveto
stroke
newpath 897 635 moveto
887 631 lineto
897 630 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1182 681 moveto (79702) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_define
newpath 857 610 moveto
888 590 939 558 970 537 curveto
stroke
newpath 967 536 moveto
977 533 lineto
970 540 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
965 573 moveto (7188) 28 14.00 -0.50 alignedtext
end grestore

%	do_include
gsave 10 dict begin
1154 302 41 18 ellipse_path
stroke
gsave 10 dict begin
1154 303 moveto (do_include) 62 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_include
gsave 10 dict begin
dotted
newpath 882 618 moveto
918 611 965 601 993 590 curveto
1074 557 1128 393 1147 328 curveto
stroke
newpath 1144 329 moveto
1149 320 lineto
1149 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1130 465 moveto (51254) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_xifdef
gsave 10 dict begin
836 518 37 18 ellipse_path
stroke
gsave 10 dict begin
836 519 moveto (do_xifdef) 54 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_xifdef
newpath 833 608 moveto
834 591 835 565 835 545 curveto
stroke
newpath 833 546 moveto
835 536 lineto
838 546 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
856 573 moveto (1816) 28 14.00 -0.50 alignedtext
end grestore

%	do_if
gsave 10 dict begin
404 518 27 18 ellipse_path
stroke
gsave 10 dict begin
404 519 moveto (do_if) 29 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_if
newpath 787 615 moveto
701 593 512 545 436 526 curveto
stroke
newpath 438 529 moveto
429 524 lineto
439 524 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
715 573 moveto (18566) 35 14.00 -0.50 alignedtext
end grestore

%	do_elif
gsave 10 dict begin
731 518 30 18 ellipse_path
stroke
gsave 10 dict begin
731 519 moveto (do_elif) 39 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_elif
newpath 812 609 moveto
805 602 797 595 792 590 curveto
781 578 764 558 751 541 curveto
stroke
newpath 750 543 moveto
745 534 lineto
753 540 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
810 573 moveto (234) 21 14.00 -0.50 alignedtext
end grestore

%	do_else
gsave 10 dict begin
64 464 31 18 ellipse_path
stroke
gsave 10 dict begin
64 465 moveto (do_else) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	handle_directive -> do_else
newpath 776 622 moveto
704 616 579 605 505 590 curveto
388 565 180 501 98 475 curveto
stroke
newpath 100 478 moveto
91 473 lineto
101 473 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
523 573 moveto (644) 21 14.00 -0.50 alignedtext
end grestore

%	do_include -> xmalloc
newpath 1141 285 moveto
1120 257 1077 203 1047 176 curveto
1030 159 998 139 975 124 curveto
stroke
newpath 975 127 moveto
968 119 lineto
978 123 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1101 195 moveto (1318) 28 14.00 -0.50 alignedtext
end grestore

%	open_include_file
gsave 10 dict begin
1321 194 61 18 ellipse_path
stroke
gsave 10 dict begin
1321 195 moveto (open_include_file) 100 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_include -> open_include_file
newpath 1177 287 moveto
1206 268 1256 236 1288 214 curveto
stroke
newpath 1285 213 moveto
1295 210 lineto
1288 217 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1286 249 moveto (1248) 28 14.00 -0.50 alignedtext
end grestore

%	finclude
gsave 10 dict begin
1184 194 33 18 ellipse_path
stroke
gsave 10 dict begin
1184 195 moveto (finclude) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_include -> finclude
gsave 10 dict begin
dotted
newpath 1153 284 moveto
1152 267 1152 244 1156 230 curveto
1157 226 1159 223 1162 219 curveto
stroke
newpath 1161 216 moveto
1169 210 lineto
1165 219 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1181 249 moveto (77136) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	open_include_file -> xmalloc
newpath 1285 179 moveto
1253 166 1206 149 1175 142 curveto
1123 130 1035 117 984 111 curveto
stroke
newpath 987 114 moveto
977 110 lineto
987 109 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1245 151 moveto (1248) 28 14.00 -0.50 alignedtext
end grestore

%	finclude -> xmalloc
newpath 1162 180 moveto
1141 168 1109 149 1087 142 curveto
1060 132 1015 121 983 113 curveto
stroke
newpath 986 116 moveto
976 112 lineto
986 111 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1144 151 moveto (48688) 35 14.00 -0.50 alignedtext
end grestore

%	finclude -> rescan
gsave 10 dict begin
dotted
newpath 1232 708 moveto
1264 610 1371 266 1309 230 curveto
1302 226 1249 211 1214 202 curveto
stroke
newpath 1235 708 moveto
1229 716 lineto
1230 706 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1331 465 moveto (30193) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_xifdef -> xmalloc
newpath 843 500 moveto
859 455 902 334 920 266 curveto
929 229 938 166 942 131 curveto
stroke
newpath 939 134 moveto
943 124 lineto
944 134 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
933 303 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	conditional_skip
gsave 10 dict begin
316 410 57 18 ellipse_path
stroke
gsave 10 dict begin
316 411 moveto (conditional_skip) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_xifdef -> conditional_skip
newpath 805 508 moveto
794 505 782 502 773 500 curveto
747 493 719 490 693 482 curveto
667 472 645 451 617 446 curveto
559 433 498 435 438 428 curveto
421 426 397 423 374 419 curveto
stroke
newpath 377 422 moveto
367 418 lineto
377 417 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
714 465 moveto (1708) 28 14.00 -0.50 alignedtext
end grestore

%	conditional_skip -> xcalloc
newpath 275 397 moveto
228 382 154 353 120 320 curveto
101 299 98 252 100 221 curveto
stroke
newpath 98 222 moveto
100 212 lineto
103 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
141 303 moveto (3332) 28 14.00 -0.50 alignedtext
end grestore

%	skip_if_group
gsave 10 dict begin
223 302 49 18 ellipse_path
stroke
gsave 10 dict begin
223 303 moveto (skip_if_group) 78 14.00 -0.50 alignedtext
end grestore
end grestore

%	conditional_skip -> skip_if_group
newpath 301 392 moveto
285 374 261 346 244 326 curveto
stroke
newpath 243 328 moveto
238 319 lineto
246 325 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
303 357 moveto (588) 21 14.00 -0.50 alignedtext
end grestore

%	skip_if_group -> xcalloc
newpath 200 286 moveto
191 279 181 272 174 266 curveto
160 253 139 232 123 216 curveto
stroke
newpath 122 218 moveto
116 210 lineto
125 215 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
195 249 moveto (1260) 28 14.00 -0.50 alignedtext
end grestore

%	do_if -> conditional_skip
newpath 381 509 moveto
365 502 346 492 337 482 curveto
330 472 324 453 321 437 curveto
stroke
newpath 319 438 moveto
319 428 lineto
324 437 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
358 465 moveto (2212) 28 14.00 -0.50 alignedtext
end grestore

%	eval_if_expression
gsave 10 dict begin
763 410 63 18 ellipse_path
stroke
gsave 10 dict begin
763 411 moveto (eval_if_expression) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_if -> eval_if_expression
newpath 425 507 moveto
458 489 522 457 561 446 curveto
569 443 645 430 701 420 curveto
stroke
newpath 699 418 moveto
709 419 lineto
699 423 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
586 465 moveto (16354) 35 14.00 -0.50 alignedtext
end grestore

%	eval_if_expression -> install
newpath 810 398 moveto
836 391 866 382 886 374 curveto
921 360 980 333 1014 316 curveto
stroke
newpath 1011 315 moveto
1021 313 lineto
1013 319 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
989 357 moveto (2304) 28 14.00 -0.50 alignedtext
end grestore

%	expand_to_temp_buffer
gsave 10 dict begin
831 248 77 18 ellipse_path
stroke
gsave 10 dict begin
831 249 moveto (expand_to_temp_buffer) 134 14.00 -0.50 alignedtext
end grestore
end grestore

%	eval_if_expression -> expand_to_temp_buffer
newpath 773 392 moveto
776 386 780 379 782 374 curveto
794 347 810 303 821 275 curveto
stroke
newpath 818 275 moveto
824 266 lineto
823 276 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
822 357 moveto (14240) 35 14.00 -0.50 alignedtext
end grestore

%	parse_c_expression
gsave 10 dict begin
715 302 65 18 ellipse_path
stroke
gsave 10 dict begin
715 303 moveto (parse_c_expression) 109 14.00 -0.50 alignedtext
end grestore
end grestore

%	eval_if_expression -> parse_c_expression
newpath 755 392 moveto
747 375 735 348 727 328 curveto
stroke
newpath 725 330 moveto
723 320 lineto
730 328 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
761 357 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	expand_to_temp_buffer -> xmalloc
newpath 833 230 moveto
836 213 842 188 851 176 curveto
865 158 893 139 915 124 curveto
stroke
newpath 913 122 moveto
923 119 lineto
916 126 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
876 195 moveto (14240) 35 14.00 -0.50 alignedtext
end grestore

%	yyparse
gsave 10 dict begin
734 194 32 18 ellipse_path
stroke
gsave 10 dict begin
734 195 moveto (yyparse) 43 14.00 -0.50 alignedtext
end grestore
end grestore

%	parse_c_expression -> yyparse
newpath 713 284 moveto
712 267 710 244 714 230 curveto
715 227 716 223 718 220 curveto
stroke
newpath 716 219 moveto
723 211 lineto
720 221 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
728 249 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	yyparse -> xmalloc
newpath 744 177 moveto
753 164 765 147 777 142 curveto
810 128 867 117 905 111 curveto
stroke
newpath 903 109 moveto
913 110 lineto
903 114 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
791 151 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	do_elif -> skip_if_group
newpath 704 511 moveto
676 503 635 491 610 482 curveto
571 466 534 447 496 428 curveto
440 399 385 364 327 338 curveto
312 331 288 323 267 316 curveto
stroke
newpath 270 320 moveto
261 314 lineto
271 315 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
510 411 moveto (28) 14 14.00 -0.50 alignedtext
end grestore

%	do_elif -> eval_if_expression
newpath 736 500 moveto
741 483 749 456 754 437 curveto
stroke
newpath 751 437 moveto
757 428 lineto
756 438 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
771 465 moveto (206) 21 14.00 -0.50 alignedtext
end grestore

%	do_else -> skip_if_group
newpath 80 448 moveto
108 419 166 360 199 326 curveto
stroke
newpath 197 324 moveto
206 319 lineto
201 328 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
153 411 moveto (644) 21 14.00 -0.50 alignedtext
end grestore

%	write_output -> xmalloc
newpath 1593 608 moveto
1593 584 1594 543 1595 518 curveto
1595 518 1595 518 1595 194 curveto
1594 162 1547 146 1517 142 curveto
1517 142 1115 117 986 108 curveto
stroke
newpath 988 111 moveto
978 108 lineto
988 106 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1609 357 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

endpage
grestore
end
restore

%%Trailer

cleartomark
countdictstack exch sub { end } repeat
restore

%%EOF

%%EndDocument
@endspecial 94 5462 1200 4 v Fh 143 5522 a(4) p Fg 219
5554 a(The) 24 b(mpatrol) f(v) n(ersion) h(of) p Ff 24
w(xmalloc\(\)) p Fg 25 w(w) n(as) h(not) e(used) g(in) g(this) h(case) g
(since) g(another) f(v) n(ersion) h(of) p Ff 24 w(xmalloc\(\)) p
Fg 25 w(w) n(as) g(originally) 219 5645 y(statically) j(link) n(ed) e
(in) n(to) h(the) f(program) i(b) r(eing) f(run,) f(and) g(so) i(could)
e(not) h(b) r(e) f(o) n(v) n(erridden.) p 90 rotate dyy
eop
%%Page: 69 75
69 74 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(69) 219 365 y(As) 38 b(w) m(ould) h(b) s(e) e(exp) s(ected,) 42
b(in) c(the) g(ab) s(o) m(v) m(e) i(allo) s(cation) h(call) f(graph) d
(for) i(the) p Fl 38 w(cpp) p Fo 38 w(C) f(prepro) s(cessor,) i(the) 94
465 y(ma) 5 b(jorit) m(y) 33 b(of) e(memory) f(allo) s(cations) j(are) f
(used) e(for) h(macro) g(pro) s(cessing,) g(with) g(a) g(sizable) h(c) m
(h) m(unk) f(b) s(eing) f(allo-) 94 565 y(cated) f(for) f(reading) g
(include) g(\014les.) 39 b(Y) -8 b(ou) 29 b(ma) m(y) f(also) h(notice) g
(the) f(dotted) h(lines) f(that) g(connect) h(the) p
Fl 28 w(rescan\(\)) p Fo(,) p Fl 94 664 a(handle_directive\(\)) p
Fo(,) p Fl 20 w(do_include\(\)) p Fo 20 w(and) p Fl 22
w(finclude\(\)) p Fo 20 w(functions) p Fh 2630 631 a(5) p
Fo 2667 664 a(.) 38 b(These) 23 b(sho) m(w) g(a) g(cycle) i(in) d(the) i
(call) 94 764 y(graph) k(where) f(eac) m(h) i(of) g(these) f(functions)
f(ma) m(y) i(ha) m(v) m(e) g(b) s(een) e(in) m(v) m(olv) m(ed) j(in) e
(one) g(or) g(more) g(recursiv) m(e) g(calls.) 41 b(The) 94
863 y(lab) s(els) 31 b(for) g(suc) m(h) f(dotted) i(edges) f(ma) m(y) g
(not) g(b) s(e) f(en) m(tirely) i(accurate) g(since) p
Fl 31 w(mprof) p Fo 30 w(will) f(only) g(coun) m(t) g(allo) s(cated) 94
963 y(memory) g(once) g(for) f(eac) m(h) i(recursiv) m(e) e(call) i(c) m
(hain.) 219 1088 y(The) 26 b(follo) m(wing) h(\014gure) f(sho) m(ws) f
(the) i(allo) s(cation) h(call) f(graph) f(for) g(the) p
Fl 26 w(cc1) p Fo 25 w(compiler) h(itself.) 40 b(As) 26
b(y) m(ou) g(w) m(ould) 94 1187 y(exp) s(ect,) j(it's) g(a) f(bit) g
(of) f(a) h(b) s(east) g(compared) g(to) g(the) g(previous) f(t) m(w) m
(o) i(graphs,) f(and) f(lo) s(oks) h(v) m(ery) g(hard) f(to) h(follo) m
(w.) 94 1287 y(Ho) m(w) m(ev) m(er,) 39 b(if) c(y) m(ou) g(lo) s(ok) h
(closer) g(y) m(ou) f(will) h(notice) g(that) g(the) f(v) -5
b(arious) 35 b(groups) f(of) i(functions) e(that) i(comprise) 94
1386 y(the) 29 b(compiler) g(stand) g(out) f(due) g(to) i(their) e
(close) i(asso) s(ciation) h(with) d(one) h(another.) 40
b(F) -8 b(or) 29 b(example,) h(y) m(ou) f(migh) m(t) 94
1486 y(notice) 44 b(that) e(the) g(functions) g(b) s(et) m(w) m(een) p
Fl 42 w(cse_insn\(\)) p Fo 39 w(and) p Fl 41 w(get_cse_reg_info\(\)) p
Fo 37 w(form) g(a) g(group) f(that) 94 1586 y(allo) s(cates) d(9140) g
(b) m(ytes) d(o) m(v) m(erall.) 59 b(Y) -8 b(ou) 36 b(can) f(also) i
(see) f(the) g(parser) e(mo) s(dule) h(at) h(the) g(top) g(left) g(of) g
(the) f(graph,) 94 1685 y(initiated) 27 b(with) p Fl
26 w(yyparse\(\)) p Fo(,) d(and) h(the) h(co) s(de) g(generator) h(mo) s
(dule) e(in) g(the) h(rest) g(of) g(the) g(graph,) g(initiated) h(with)
p Fl 94 1785 a(rest_of_compilation\(\)) p Fo(.) p 94
5462 1200 4 v Fh 143 5522 a(5) p Fg 219 5554 a(Y) -6
b(ou) 26 b(migh) n(t) h(also) i(ha) n(v) n(e) d(noticed) i(the) e
(dotted) h(lines) h(connecting) p Ff 27 w(do_spec_1\(\)) p
Fg 30 w(and) p Ff 27 w(handle_braces\(\)) p Fg 30 w(in) f(the) g
(previous) 219 5645 y(graph.) p 90 rotate dyy eop
%%Page: 70 76
70 75 bop Fo 94 -116 a(70) 3377 b(mpatrol) 188 5383 y
@beginspecial 35 @llx 38 @lly 466 @urx 684 @ury 4310
@rwi @setspecial
%%BeginDocument: images/cc1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: allocation call graph
%%Creator: dot version gviz1.5.1 (09-29-99)
%%BoundingBox: 35 38 466 684
%%Pages: 1
%%DocumentFonts: Times-Roman

save
countdictstack
mark
newpath
/showpage {} def

%%EndProlog

%%Page 1 1

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 431 650 boxprim clip newpath
36 36 translate
gsave 429 0 translate 90 rotate
0 0 1 beginpage
grestore
0.1398 set_scale
3073 0 translate 90 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	START
gsave 10 dict begin
3417 3055 32 18 ellipse_path
stroke
gsave 10 dict begin
3417 3056 moveto (START) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start
gsave 10 dict begin
3417 2925 27 18 ellipse_path
stroke
gsave 10 dict begin
3417 2926 moveto (_start) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	START -> _start
newpath 3417 3037 moveto
3417 3015 3417 2977 3417 2952 curveto
stroke
newpath 3415 2953 moveto
3417 2943 lineto
3420 2953 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3445 2991 moveto (540776) 42 14.00 -0.50 alignedtext
end grestore

%	main
gsave 10 dict begin
3417 2795 27 18 ellipse_path
stroke
gsave 10 dict begin
3417 2796 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start -> main
newpath 3417 2907 moveto
3417 2885 3417 2847 3417 2822 curveto
stroke
newpath 3415 2823 moveto
3417 2813 lineto
3420 2823 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3445 2861 moveto (540776) 42 14.00 -0.50 alignedtext
end grestore

%	compile_file
gsave 10 dict begin
3417 2666 45 18 ellipse_path
stroke
gsave 10 dict begin
3417 2667 moveto (compile_file) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> compile_file
newpath 3417 2777 moveto
3417 2755 3417 2718 3417 2693 curveto
stroke
newpath 3415 2694 moveto
3417 2684 lineto
3420 2694 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3445 2732 moveto (540776) 42 14.00 -0.50 alignedtext
end grestore

%	init_obstacks
gsave 10 dict begin
3373 2456 47 18 ellipse_path
stroke
gsave 10 dict begin
3373 2457 moveto (init_obstacks) 73 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_obstacks
newpath 3407 2648 moveto
3400 2636 3392 2620 3390 2609 curveto
3383 2575 3377 2519 3375 2485 curveto
stroke
newpath 3372 2484 moveto
3374 2474 lineto
3377 2484 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3415 2602 moveto (24432) 35 14.00 -0.50 alignedtext
end grestore

%	xmalloc
gsave 10 dict begin
2579 148 33 18 ellipse_path
stroke
gsave 10 dict begin
2579 149 moveto (xmalloc) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> xmalloc
newpath 3459 2660 moveto
3566 2643 3838 2595 3839 2536 curveto
3839 2536 3839 2536 3839 2218 curveto
3838 1972 3828 1727 3808 1483 curveto
3774 1084 3763 680 3679 289 curveto
3667 235 3588 216 3534 209 curveto
3397 191 2789 158 2622 150 curveto
stroke
newpath 2622 153 moveto
2612 150 lineto
2622 148 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3818 1423 moveto (29) 14 14.00 -0.50 alignedtext
end grestore

%	init_parse
gsave 10 dict begin
3848 1183 38 18 ellipse_path
stroke
gsave 10 dict begin
3848 1184 moveto (init_parse) 55 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_parse
newpath 3461 2663 moveto
3550 2657 3748 2639 3856 2609 curveto
3880 2602 3876 2561 3877 2536 curveto
3877 2536 3877 2536 3877 1342 curveto
3876 1305 3863 1242 3855 1208 curveto
stroke
newpath 3853 1211 moveto
3853 1201 lineto
3858 1210 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3891 1980 moveto (42) 14 14.00 -0.50 alignedtext
end grestore

%	init_rtl
gsave 10 dict begin
3896 1023 29 18 ellipse_path
stroke
gsave 10 dict begin
3896 1024 moveto (init_rtl) 38 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_rtl
newpath 3462 2664 moveto
3602 2656 3744 2643 3881 2609 curveto
3909 2601 3932 2565 3933 2536 curveto
3933 2536 3933 2536 3933 2058 curveto
3932 1925 3914 1792 3915 1660 curveto
3915 1660 3915 1660 3915 1183 curveto
3914 1146 3905 1082 3900 1048 curveto
stroke
newpath 3898 1051 moveto
3899 1041 lineto
3903 1051 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3937 1900 moveto (8) 7 14.00 -0.50 alignedtext
end grestore

%	init_decl_processing
gsave 10 dict begin
442 2058 68 18 ellipse_path
stroke
gsave 10 dict begin
442 2059 moveto (init_decl_processing) 115 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_decl_processing
newpath 3372 2666 moveto
2990 2665 308 2656 308 2536 curveto
308 2536 308 2536 308 2218 curveto
308 2183 322 2146 344 2120 curveto
356 2105 380 2090 401 2079 curveto
stroke
newpath 399 2077 moveto
409 2074 lineto
402 2081 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
333 2378 moveto (32904) 35 14.00 -0.50 alignedtext
end grestore

%	init_optabs
gsave 10 dict begin
283 1740 41 18 ellipse_path
stroke
gsave 10 dict begin
283 1741 moveto (init_optabs) 62 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_optabs
newpath 3372 2665 moveto
3008 2658 555 2609 555 2609 curveto
475 2605 76 2616 76 2536 curveto
76 2536 76 2536 76 2058 curveto
76 1996 98 1934 128 1881 curveto
143 1855 183 1857 204 1838 curveto
224 1820 249 1787 266 1764 curveto
stroke
newpath 263 1764 moveto
271 1757 lineto
267 1767 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
101 2219 moveto (17376) 35 14.00 -0.50 alignedtext
end grestore

%	init_stmt
gsave 10 dict begin
3519 2536 35 18 ellipse_path
stroke
gsave 10 dict begin
3519 2537 moveto (init_stmt) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_stmt
newpath 3434 2649 moveto
3447 2637 3463 2620 3473 2609 curveto
3482 2597 3495 2577 3504 2561 curveto
stroke
newpath 3502 2560 moveto
3509 2553 lineto
3506 2563 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3504 2602 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_expr_once
gsave 10 dict begin
1909 2456 52 18 ellipse_path
stroke
gsave 10 dict begin
1909 2457 moveto (init_expr_once) 83 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_expr_once
newpath 3374 2660 moveto
3182 2636 2389 2533 1966 2474 curveto
1962 2473 1957 2472 1953 2471 curveto
stroke
newpath 1955 2474 moveto
1946 2469 lineto
1956 2469 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3004 2602 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	init_loop
gsave 10 dict begin
3626 2536 35 18 ellipse_path
stroke
gsave 10 dict begin
3626 2537 moveto (init_loop) 50 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_loop
newpath 3447 2652 moveto
3473 2640 3510 2622 3532 2609 curveto
3552 2596 3580 2573 3601 2557 curveto
stroke
newpath 3599 2556 moveto
3608 2551 lineto
3602 2559 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3574 2602 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_reload
gsave 10 dict begin
3171 1899 40 18 ellipse_path
stroke
gsave 10 dict begin
3171 1900 moveto (init_reload) 60 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_reload
newpath 3393 2650 moveto
3358 2626 3297 2577 3298 2536 curveto
3298 2536 3298 2536 3298 2138 curveto
3297 2069 3225 1968 3190 1922 curveto
stroke
newpath 3189 1925 moveto
3185 1916 lineto
3193 1922 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3319 2298 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	init_alias_once
gsave 10 dict begin
3565 2138 52 18 ellipse_path
stroke
gsave 10 dict begin
3565 2139 moveto (init_alias_once) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_alias_once
newpath 3427 2648 moveto
3434 2636 3443 2620 3446 2609 curveto
3482 2480 3540 2241 3559 2163 curveto
stroke
newpath 3556 2165 moveto
3561 2156 lineto
3561 2166 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3504 2457 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	init_final
gsave 10 dict begin
77 864 36 18 ellipse_path
stroke
gsave 10 dict begin
77 865 moveto (init_final) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> init_final
newpath 3372 2666 moveto
3058 2663 1176 2646 194 2609 curveto
131 2606 18 2599 18 2536 curveto
18 2536 18 2536 18 1023 curveto
18 984 46 923 63 889 curveto
stroke
newpath 60 889 moveto
67 882 lineto
64 892 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
32 1821 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

%	yyparse
gsave 10 dict begin
1134 2536 32 18 ellipse_path
stroke
gsave 10 dict begin
1134 2537 moveto (yyparse) 43 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> yyparse
newpath 3372 2663 moveto
3081 2646 1446 2554 1173 2538 curveto
stroke
newpath 1176 2541 moveto
1166 2538 lineto
1176 2536 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2444 2602 moveto (416913) 42 14.00 -0.50 alignedtext
end grestore

%	wrapup_global_declarations
gsave 10 dict begin
620 2456 89 18 ellipse_path
stroke
gsave 10 dict begin
620 2457 moveto (wrapup_global_declarations) 158 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> wrapup_global_declarations
newpath 3372 2665 moveto
3111 2659 1785 2626 1090 2554 curveto
976 2541 785 2497 685 2472 curveto
stroke
newpath 685 2475 moveto
676 2470 lineto
686 2470 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2039 2602 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	lang_init
gsave 10 dict begin
3720 2456 35 18 ellipse_path
stroke
gsave 10 dict begin
3720 2457 moveto (lang_init) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> lang_init
newpath 3455 2656 moveto
3496 2644 3563 2625 3602 2609 curveto
3629 2597 3654 2577 3673 2554 curveto
3686 2536 3700 2505 3710 2482 curveto
stroke
newpath 3707 2482 moveto
3713 2474 lineto
3712 2484 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3649 2602 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	output_file_directive
gsave 10 dict begin
4096 2456 69 18 ellipse_path
stroke
gsave 10 dict begin
4096 2457 moveto (output_file_directive) 117 14.00 -0.50 alignedtext
end grestore
end grestore

%	compile_file -> output_file_directive
newpath 3462 2665 moveto
3564 2662 3816 2650 3950 2609 curveto
3999 2594 4053 2522 4080 2482 curveto
stroke
newpath 4078 2481 moveto
4085 2474 lineto
4082 2484 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4001 2602 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	gcc_obstack_init
gsave 10 dict begin
3375 1740 57 18 ellipse_path
stroke
gsave 10 dict begin
3375 1741 moveto (gcc_obstack_init) 94 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_obstacks -> gcc_obstack_init
newpath 3372 2438 moveto
3370 2382 3366 2211 3379 2120 curveto
3388 2049 3430 1986 3448 1917 curveto
3454 1891 3450 1864 3451 1838 curveto
3451 1826 3458 1811 3451 1802 curveto
3441 1789 3422 1774 3407 1763 curveto
stroke
newpath 3406 1765 moveto
3399 1757 lineto
3409 1761 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3404 2139 moveto (24432) 35 14.00 -0.50 alignedtext
end grestore

%	_obstack_begin
gsave 10 dict begin
3049 1422 54 18 ellipse_path
stroke
gsave 10 dict begin
3049 1423 moveto (_obstack_begin) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	gcc_obstack_init -> _obstack_begin
newpath 3357 1722 moveto
3302 1669 3133 1504 3072 1444 curveto
stroke
newpath 3072 1448 moveto
3067 1439 lineto
3076 1444 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3255 1582 moveto (61080) 35 14.00 -0.50 alignedtext
end grestore

%	_obstack_begin -> xmalloc
newpath 3049 1404 moveto
3049 1371 3049 1302 3049 1262 curveto
3049 1262 3049 1262 3049 307 curveto
3049 253 2974 226 2923 209 curveto
2880 194 2699 166 2618 154 curveto
stroke
newpath 2621 157 moveto
2611 153 lineto
2621 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3074 786 moveto (77296) 35 14.00 -0.50 alignedtext
end grestore

%	ALLOC
gsave 10 dict begin
4242 18 33 18 ellipse_path
stroke
gsave 10 dict begin
4242 19 moveto (ALLOC) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	xmalloc -> ALLOC
newpath 2612 145 moveto
2821 129 3966 39 4200 22 curveto
stroke
newpath 4199 20 moveto
4209 21 lineto
4199 25 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3540 84 moveto (506021) 42 14.00 -0.50 alignedtext
end grestore

%	init_lex
gsave 10 dict begin
3839 387 31 18 ellipse_path
stroke
gsave 10 dict begin
3839 388 moveto (init_lex) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_parse -> init_lex
newpath 3846 1165 moveto
3844 1132 3838 1063 3839 1023 curveto
3839 1023 3839 1023 3839 546 curveto
3838 510 3839 447 3839 412 curveto
stroke
newpath 3837 415 moveto
3839 405 lineto
3842 415 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3853 786 moveto (42) 14 14.00 -0.50 alignedtext
end grestore

%	init_lex -> xmalloc
newpath 3840 369 moveto
3843 325 3844 218 3797 209 curveto
3621 175 2811 154 2619 149 curveto
stroke
newpath 2622 152 moveto
2612 149 lineto
2622 147 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3855 308 moveto (42) 14 14.00 -0.50 alignedtext
end grestore

%	init_rtl -> xmalloc
newpath 3896 1005 moveto
3897 972 3897 903 3898 864 curveto
3898 864 3898 864 3898 307 curveto
3897 267 3869 213 3830 209 curveto
3469 166 2789 151 2619 149 curveto
stroke
newpath 2622 152 moveto
2612 149 lineto
2622 147 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3909 626 moveto (8) 7 14.00 -0.50 alignedtext
end grestore

%	pushlevel
gsave 10 dict begin
177 1899 37 18 ellipse_path
stroke
gsave 10 dict begin
177 1900 moveto (pushlevel) 53 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> pushlevel
newpath 407 2043 moveto
378 2030 338 2011 314 1997 curveto
282 1978 233 1941 203 1919 curveto
stroke
newpath 203 1922 moveto
197 1914 lineto
206 1918 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
328 1980 moveto (40) 14 14.00 -0.50 alignedtext
end grestore

%	make_signed_type
gsave 10 dict begin
592 1820 62 18 ellipse_path
stroke
gsave 10 dict begin
592 1821 moveto (make_signed_type) 104 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> make_signed_type
newpath 457 2040 moveto
468 2027 483 2009 491 1997 curveto
499 1986 553 1890 579 1844 curveto
stroke
newpath 575 1846 moveto
582 1838 lineto
580 1848 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
533 1980 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	build_array_type
gsave 10 dict begin
454 1820 58 18 ellipse_path
stroke
gsave 10 dict begin
454 1821 moveto (build_array_type) 95 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> build_array_type
newpath 442 2040 moveto
442 2018 441 1982 442 1961 curveto
444 1930 449 1879 451 1848 curveto
stroke
newpath 449 1848 moveto
452 1838 lineto
453 1848 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
463 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	builtin_function
gsave 10 dict begin
690 1899 55 18 ellipse_path
stroke
gsave 10 dict begin
690 1900 moveto (builtin_function) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> builtin_function
newpath 475 2042 moveto
501 2029 537 2010 558 1997 curveto
572 1988 578 1970 590 1961 curveto
607 1949 633 1932 654 1920 curveto
stroke
newpath 652 1918 moveto
662 1915 lineto
655 1922 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
615 1980 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	init_function_format_info
gsave 10 dict begin
363 466 83 18 ellipse_path
stroke
gsave 10 dict begin
363 467 moveto (init_function_format_info) 146 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> init_function_format_info
newpath 396 2045 moveto
353 2032 292 2013 255 1997 curveto
210 1976 153 1960 128 1917 curveto
88 1846 89 1758 72 1678 curveto
12 1381 244 1096 316 803 curveto
338 715 354 555 360 492 curveto
stroke
newpath 357 494 moveto
361 484 lineto
362 494 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
161 1263 moveto (288) 21 14.00 -0.50 alignedtext
end grestore

%	init_iterators
gsave 10 dict begin
3275 1899 46 18 ellipse_path
stroke
gsave 10 dict begin
3275 1900 moveto (init_iterators) 71 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_decl_processing -> init_iterators
newpath 496 2047 moveto
516 2043 535 2040 542 2040 curveto
1060 2020 1578 2019 2095 1997 curveto
2192 1992 2286 1967 2382 1961 curveto
2663 1941 2943 1936 3223 1917 curveto
3227 1916 3232 1915 3236 1914 curveto
stroke
newpath 3233 1912 moveto
3243 1912 lineto
3234 1917 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2403 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	make_binding_level
gsave 10 dict begin
151 1660 67 18 ellipse_path
stroke
gsave 10 dict begin
151 1661 moveto (make_binding_level) 114 14.00 -0.50 alignedtext
end grestore
end grestore

%	pushlevel -> make_binding_level
newpath 172 1881 moveto
168 1867 164 1849 162 1838 curveto
157 1796 154 1724 152 1686 curveto
stroke
newpath 150 1688 moveto
152 1678 lineto
155 1688 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
180 1821 moveto (160) 21 14.00 -0.50 alignedtext
end grestore

%	make_binding_level -> xmalloc
newpath 156 1642 moveto
169 1595 205 1471 229 1404 curveto
361 1042 503 685 636 325 curveto
651 286 633 212 673 209 curveto
673 209 2251 158 2535 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
427 945 moveto (160) 21 14.00 -0.50 alignedtext
end grestore

%	make_node
gsave 10 dict begin
942 1581 42 18 ellipse_path
stroke
gsave 10 dict begin
942 1582 moveto (make_node) 64 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_signed_type -> make_node
newpath 593 1802 moveto
594 1778 599 1738 614 1722 curveto
673 1659 820 1613 895 1593 curveto
stroke
newpath 895 1590 moveto
905 1590 lineto
896 1595 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
635 1741 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	_obstack_newchunk
gsave 10 dict begin
1611 307 67 18 ellipse_path
stroke
gsave 10 dict begin
1611 308 moveto (_obstack_newchunk) 114 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_node -> _obstack_newchunk
newpath 939 1563 moveto
928 1496 896 1265 958 1165 curveto
1008 1086 1146 1155 1231 1121 curveto
1245 1115 1330 799 1330 785 curveto
1330 785 1330 785 1330 466 curveto
1330 432 1323 385 1351 369 curveto
1377 355 1478 333 1547 319 curveto
stroke
newpath 1546 317 moveto
1556 317 lineto
1547 322 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1323 945 moveto (126232) 42 14.00 -0.50 alignedtext
end grestore

%	_obstack_newchunk -> xmalloc
newpath 1663 296 moveto
1761 274 1973 229 2095 209 curveto
2221 188 2447 163 2539 152 curveto
stroke
newpath 2537 150 moveto
2547 151 lineto
2537 155 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2123 228 moveto (366608) 42 14.00 -0.50 alignedtext
end grestore

%	build_array_type -> make_node
newpath 470 1803 moveto
490 1780 526 1741 550 1722 curveto
575 1702 608 1695 633 1678 curveto
647 1668 652 1646 667 1642 curveto
728 1622 834 1601 895 1590 curveto
stroke
newpath 893 1588 moveto
903 1588 lineto
894 1593 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
571 1741 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	get_identifier
gsave 10 dict begin
814 1740 48 18 ellipse_path
stroke
gsave 10 dict begin
814 1741 moveto (get_identifier) 75 14.00 -0.50 alignedtext
end grestore
end grestore

%	builtin_function -> get_identifier
newpath 708 1882 moveto
722 1869 740 1851 750 1838 curveto
759 1827 761 1813 768 1802 curveto
775 1791 785 1777 795 1766 curveto
stroke
newpath 793 1765 moveto
801 1758 lineto
797 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
789 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	build_decl
gsave 10 dict begin
708 1740 40 18 ellipse_path
stroke
gsave 10 dict begin
708 1741 moveto (build_decl) 59 14.00 -0.50 alignedtext
end grestore
end grestore

%	builtin_function -> build_decl
newpath 692 1881 moveto
696 1852 702 1797 705 1765 curveto
stroke
newpath 702 1768 moveto
706 1758 lineto
707 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
722 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	get_identifier -> make_node
newpath 827 1722 moveto
843 1700 871 1663 888 1642 curveto
896 1631 909 1617 921 1605 curveto
stroke
newpath 919 1604 moveto
927 1598 lineto
922 1607 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
913 1661 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	get_identifier -> _obstack_newchunk
newpath 797 1723 moveto
784 1710 768 1692 760 1678 curveto
755 1667 757 1653 760 1642 curveto
788 1561 881 1229 935 1165 curveto
993 1096 1122 1165 1198 1121 curveto
1232 1101 1203 1042 1212 1005 curveto
1237 904 1292 808 1292 705 curveto
1292 705 1292 705 1292 466 curveto
1292 431 1294 384 1324 369 curveto
1353 354 1473 331 1548 318 curveto
stroke
newpath 1545 316 moveto
1555 317 lineto
1545 321 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1233 1024 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_decl -> make_node
newpath 722 1723 moveto
742 1700 779 1659 805 1642 curveto
829 1625 872 1608 903 1595 curveto
stroke
newpath 900 1593 moveto
910 1593 lineto
901 1598 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
830 1661 moveto (57008) 35 14.00 -0.50 alignedtext
end grestore

%	record_function_format
gsave 10 dict begin
547 307 77 18 ellipse_path
stroke
gsave 10 dict begin
547 308 moveto (record_function_format) 133 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_function_format_info -> record_function_format
newpath 383 448 moveto
417 420 482 363 519 331 curveto
stroke
newpath 518 329 moveto
527 324 lineto
521 332 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
494 388 moveto (240) 21 14.00 -0.50 alignedtext
end grestore

%	record_international_format
gsave 10 dict begin
363 307 89 18 ellipse_path
stroke
gsave 10 dict begin
363 308 moveto (record_international_format) 157 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_function_format_info -> record_international_format
newpath 363 448 moveto
363 420 363 368 363 335 curveto
stroke
newpath 361 335 moveto
363 325 lineto
366 335 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
377 388 moveto (48) 14 14.00 -0.50 alignedtext
end grestore

%	record_function_format -> xmalloc
newpath 551 289 moveto
557 261 573 210 600 209 curveto
1188 163 2307 150 2537 148 curveto
stroke
newpath 2536 146 moveto
2546 148 lineto
2536 151 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
618 228 moveto (240) 21 14.00 -0.50 alignedtext
end grestore

%	record_international_format -> xmalloc
newpath 384 289 moveto
417 262 485 212 531 209 curveto
1199 161 1870 148 2538 148 curveto
stroke
newpath 2536 146 moveto
2546 148 lineto
2536 151 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
545 228 moveto (48) 14 14.00 -0.50 alignedtext
end grestore

%	init_iterators -> gcc_obstack_init
newpath 3274 1881 moveto
3273 1858 3274 1820 3286 1802 curveto
3296 1786 3319 1770 3338 1758 curveto
stroke
newpath 3334 1757 moveto
3344 1755 lineto
3336 1762 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3307 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_optab
gsave 10 dict begin
312 1501 38 18 ellipse_path
stroke
gsave 10 dict begin
312 1502 moveto (init_optab) 56 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_optabs -> init_optab
newpath 284 1722 moveto
287 1686 294 1607 300 1563 curveto
302 1554 304 1541 306 1529 curveto
stroke
newpath 304 1528 moveto
308 1519 lineto
308 1529 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
317 1661 moveto (12000) 35 14.00 -0.50 alignedtext
end grestore

%	init_integral_libfuncs
gsave 10 dict begin
382 1581 70 18 ellipse_path
stroke
gsave 10 dict begin
382 1582 moveto (init_integral_libfuncs) 120 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_optabs -> init_integral_libfuncs
newpath 303 1724 moveto
319 1711 339 1693 348 1678 curveto
359 1660 369 1629 376 1607 curveto
stroke
newpath 373 1608 moveto
378 1599 lineto
378 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
384 1661 moveto (5040) 28 14.00 -0.50 alignedtext
end grestore

%	init_floating_libfuncs
gsave 10 dict begin
541 1581 71 18 ellipse_path
stroke
gsave 10 dict begin
541 1582 moveto (init_floating_libfuncs) 121 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_optabs -> init_floating_libfuncs
newpath 312 1727 moveto
342 1714 387 1694 412 1678 curveto
441 1659 486 1626 513 1603 curveto
stroke
newpath 510 1602 moveto
519 1598 lineto
513 1606 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
480 1661 moveto (336) 21 14.00 -0.50 alignedtext
end grestore

%	init_optab -> xmalloc
newpath 305 1483 moveto
281 1422 207 1218 207 1103 curveto
207 1103 207 1103 207 307 curveto
207 255 275 212 326 209 curveto
667 185 2251 154 2535 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
232 865 moveto (12000) 35 14.00 -0.50 alignedtext
end grestore

%	init_libfuncs
gsave 10 dict begin
482 1422 45 18 ellipse_path
stroke
gsave 10 dict begin
482 1423 moveto (init_libfuncs) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_integral_libfuncs -> init_libfuncs
newpath 393 1563 moveto
411 1534 447 1478 467 1446 curveto
stroke
newpath 463 1447 moveto
471 1440 lineto
468 1450 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
465 1502 moveto (5040) 28 14.00 -0.50 alignedtext
end grestore

%	init_libfuncs -> xmalloc
newpath 451 1409 moveto
395 1384 284 1325 284 1262 curveto
284 1262 284 1262 284 944 curveto
284 834 171 348 262 289 curveto
317 253 375 212 439 209 curveto
439 209 2243 158 2539 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
289 786 moveto (1304) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_s
gsave 10 dict begin
1059 1262 51 18 ellipse_path
stroke
gsave 10 dict begin
1059 1263 moveto (gen_rtx_fmt_s) 81 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_libfuncs -> gen_rtx_fmt_s
newpath 508 1407 moveto
552 1384 638 1339 692 1324 curveto
776 1300 924 1279 1004 1269 curveto
stroke
newpath 1001 1267 moveto
1011 1268 lineto
1001 1272 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
713 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	obstack_alloc_rtx
gsave 10 dict begin
1440 1103 60 18 ellipse_path
stroke
gsave 10 dict begin
1440 1104 moveto (obstack_alloc_rtx) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_rtx_fmt_s -> obstack_alloc_rtx
newpath 1099 1251 moveto
1143 1238 1213 1217 1253 1201 curveto
1270 1194 1278 1173 1293 1165 curveto
1320 1151 1364 1133 1396 1120 curveto
stroke
newpath 1393 1119 moveto
1403 1117 lineto
1395 1123 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1314 1184 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	obstack_alloc_rtx -> _obstack_newchunk
newpath 1436 1085 moveto
1428 1052 1414 983 1414 944 curveto
1414 944 1414 944 1414 466 curveto
1414 407 1509 353 1567 326 curveto
stroke
newpath 1565 324 moveto
1575 322 lineto
1567 329 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1439 706 moveto (52936) 35 14.00 -0.50 alignedtext
end grestore

%	init_floating_libfuncs -> init_libfuncs
newpath 534 1563 moveto
524 1534 503 1479 491 1447 curveto
stroke
newpath 489 1450 moveto
489 1440 lineto
494 1449 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
536 1502 moveto (336) 21 14.00 -0.50 alignedtext
end grestore

%	init_stmt -> gcc_obstack_init
newpath 3516 2518 moveto
3513 2496 3508 2459 3505 2438 curveto
3490 2343 3472 2250 3459 2156 curveto
3442 2039 3550 1887 3469 1802 curveto
3462 1794 3432 1775 3408 1760 curveto
stroke
newpath 3409 1764 moveto
3402 1756 lineto
3412 1759 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3480 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_REG
gsave 10 dict begin
1860 1581 49 18 ellipse_path
stroke
gsave 10 dict begin
1860 1582 moveto (gen_rtx_REG) 77 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_expr_once -> gen_rtx_REG
newpath 1906 2438 moveto
1898 2387 1876 2238 1867 2156 curveto
1859 2076 1855 1996 1850 1917 curveto
1850 1905 1850 1892 1850 1881 curveto
1852 1803 1857 1664 1859 1606 curveto
stroke
newpath 1857 1609 moveto
1859 1599 lineto
1862 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1886 2059 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_i0
gsave 10 dict begin
1771 1342 54 18 ellipse_path
stroke
gsave 10 dict begin
1771 1343 moveto (gen_rtx_fmt_i0) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_rtx_REG -> gen_rtx_fmt_i0
newpath 1841 1564 moveto
1827 1552 1810 1534 1804 1519 curveto
1790 1479 1779 1407 1774 1368 curveto
stroke
newpath 1772 1370 moveto
1773 1360 lineto
1777 1370 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1829 1502 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_i0 -> obstack_alloc_rtx
newpath 1747 1326 moveto
1727 1313 1702 1294 1688 1280 curveto
1657 1245 1648 1191 1610 1165 curveto
1595 1154 1533 1132 1488 1118 curveto
stroke
newpath 1491 1122 moveto
1482 1116 lineto
1492 1117 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1713 1263 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	init_loop -> gcc_obstack_init
newpath 3630 2518 moveto
3638 2486 3652 2417 3653 2377 curveto
3653 2377 3653 2377 3653 1899 curveto
3652 1822 3509 1774 3428 1753 curveto
stroke
newpath 3430 1756 moveto
3421 1751 lineto
3431 1751 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3674 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_reload -> gcc_obstack_init
newpath 3178 1881 moveto
3188 1857 3206 1817 3227 1802 curveto
3250 1783 3293 1766 3327 1755 curveto
stroke
newpath 3324 1753 moveto
3334 1753 lineto
3325 1758 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3248 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_ee
gsave 10 dict begin
2504 1501 54 18 ellipse_path
stroke
gsave 10 dict begin
2504 1502 moveto (gen_rtx_fmt_ee) 88 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_reload -> gen_rtx_fmt_ee
newpath 3135 1890 moveto
3088 1879 3004 1857 2957 1838 curveto
2944 1832 2943 1813 2934 1802 curveto
2915 1774 2901 1739 2872 1722 curveto
2832 1696 2777 1702 2736 1678 curveto
2675 1640 2577 1561 2530 1523 curveto
stroke
newpath 2530 1526 moveto
2524 1518 lineto
2533 1522 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2927 1741 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_ee -> obstack_alloc_rtx
newpath 2498 1483 moveto
2489 1459 2473 1420 2454 1404 curveto
2424 1377 2369 1389 2340 1360 curveto
2312 1330 2334 1263 2298 1244 curveto
2226 1203 2135 1217 2054 1201 curveto
2007 1191 1962 1172 1914 1165 curveto
1802 1146 1688 1135 1575 1121 curveto
1556 1118 1527 1115 1502 1111 curveto
stroke
newpath 1505 1114 moveto
1495 1110 lineto
1505 1109 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2361 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	splay_tree_new
gsave 10 dict begin
2900 785 54 18 ellipse_path
stroke
gsave 10 dict begin
2900 786 moveto (splay_tree_new) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_alias_once -> splay_tree_new
newpath 3565 2120 moveto
3565 2054 3561 1831 3516 1722 curveto
3389 1413 3216 1124 3033 846 curveto
3019 824 2981 808 2950 798 curveto
stroke
newpath 2952 801 moveto
2943 796 lineto
2953 796 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3435 1502 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	splay_tree_new -> xmalloc
newpath 2897 767 moveto
2892 734 2883 665 2883 625 curveto
2883 625 2883 625 2883 307 curveto
2883 270 2869 225 2836 209 curveto
2807 194 2684 168 2619 156 curveto
stroke
newpath 2619 159 moveto
2610 154 lineto
2620 154 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2901 467 moveto (176) 21 14.00 -0.50 alignedtext
end grestore

%	init_final -> xmalloc
newpath 83 846 moveto
93 814 114 745 114 705 curveto
114 705 114 705 114 307 curveto
114 265 149 211 190 209 curveto
971 158 1755 148 2537 148 curveto
stroke
newpath 2536 146 moveto
2546 148 lineto
2536 151 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
128 547 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

%	yyparse -> pushlevel
newpath 1102 2533 moveto
961 2521 402 2474 402 2474 curveto
356 2466 301 2439 283 2395 curveto
232 2263 192 2005 181 1924 curveto
stroke
newpath 179 1927 moveto
180 1917 lineto
184 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
258 2219 moveto (120) 21 14.00 -0.50 alignedtext
end grestore

%	yylex
gsave 10 dict begin
1767 1899 27 18 ellipse_path
stroke
gsave 10 dict begin
1767 1900 moveto (yylex) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> yylex
newpath 1166 2535 moveto
1390 2527 1647 2539 1813 2395 curveto
1827 2383 1783 2027 1770 1926 curveto
stroke
newpath 1768 1927 moveto
1769 1917 lineto
1773 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1827 2219 moveto (8272) 28 14.00 -0.50 alignedtext
end grestore

%	tree_cons
gsave 10 dict begin
319 2058 37 18 ellipse_path
stroke
gsave 10 dict begin
319 2059 moveto (tree_cons) 53 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> tree_cons
newpath 1102 2536 moveto
883 2534 663 2515 448 2474 curveto
390 2462 308 2212 291 2156 curveto
286 2137 297 2105 306 2084 curveto
stroke
newpath 303 2084 moveto
310 2076 lineto
308 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
372 2298 moveto (57008) 35 14.00 -0.50 alignedtext
end grestore

%	start_decl
gsave 10 dict begin
591 2058 37 18 ellipse_path
stroke
gsave 10 dict begin
591 2059 moveto (start_decl) 54 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> start_decl
newpath 1103 2531 moveto
1017 2516 777 2474 777 2474 curveto
756 2468 741 2448 721 2438 curveto
689 2421 646 2421 622 2395 curveto
562 2327 578 2152 587 2085 curveto
stroke
newpath 584 2086 moveto
588 2076 lineto
589 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
613 2298 moveto (36648) 35 14.00 -0.50 alignedtext
end grestore

%	push_parm_decl
gsave 10 dict begin
675 2218 56 18 ellipse_path
stroke
gsave 10 dict begin
675 2219 moveto (push_parm_decl) 92 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> push_parm_decl
newpath 1105 2529 moveto
1063 2518 987 2496 947 2474 curveto
919 2457 907 2423 890 2395 curveto
869 2357 869 2306 836 2279 curveto
812 2258 765 2242 728 2231 curveto
stroke
newpath 729 2234 moveto
720 2229 lineto
730 2229 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
915 2378 moveto (40720) 35 14.00 -0.50 alignedtext
end grestore

%	get_parm_info
gsave 10 dict begin
464 2377 51 18 ellipse_path
stroke
gsave 10 dict begin
464 2378 moveto (get_parm_info) 82 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> get_parm_info
newpath 1102 2535 moveto
996 2531 652 2517 470 2474 curveto
450 2469 453 2431 458 2404 curveto
stroke
newpath 455 2404 moveto
460 2395 lineto
460 2405 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
495 2457 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	build_tree_list
gsave 10 dict begin
942 2138 51 18 ellipse_path
stroke
gsave 10 dict begin
942 2139 moveto (build_tree_list) 80 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> build_tree_list
newpath 1115 2521 moveto
1082 2495 1017 2439 1001 2395 curveto
979 2332 980 2264 965 2200 curveto
963 2191 959 2177 954 2165 curveto
stroke
newpath 952 2166 moveto
950 2156 lineto
956 2164 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1026 2378 moveto (20360) 35 14.00 -0.50 alignedtext
end grestore

%	make_pointer_declarator
gsave 10 dict begin
1423 2377 80 18 ellipse_path
stroke
gsave 10 dict begin
1423 2378 moveto (make_pointer_declarator) 139 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> make_pointer_declarator
newpath 1160 2525 moveto
1190 2512 1239 2489 1268 2474 curveto
1303 2455 1355 2421 1390 2399 curveto
stroke
newpath 1387 2398 moveto
1397 2394 lineto
1390 2402 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1348 2457 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	finish_decl
gsave 10 dict begin
1589 2297 41 18 ellipse_path
stroke
gsave 10 dict begin
1589 2298 moveto (finish_decl) 62 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> finish_decl
newpath 1164 2530 moveto
1215 2518 1319 2495 1376 2474 curveto
1426 2455 1475 2429 1515 2395 curveto
1535 2379 1558 2346 1573 2322 curveto
stroke
newpath 1570 2322 moveto
1578 2315 lineto
1574 2325 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1474 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_nt
gsave 10 dict begin
1076 2297 33 18 ellipse_path
stroke
gsave 10 dict begin
1076 2298 moveto (build_nt) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> build_nt
newpath 1120 2520 moveto
1108 2506 1093 2487 1085 2474 curveto
1072 2449 1064 2422 1057 2395 curveto
1053 2376 1060 2345 1067 2323 curveto
stroke
newpath 1064 2323 moveto
1070 2315 lineto
1069 2325 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1106 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	c_expand_start_cond
gsave 10 dict begin
766 2377 69 18 ellipse_path
stroke
gsave 10 dict begin
766 2378 moveto (c_expand_start_cond) 118 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> c_expand_start_cond
newpath 1102 2533 moveto
1038 2526 890 2507 812 2474 curveto
792 2465 779 2429 772 2403 curveto
stroke
newpath 770 2405 moveto
770 2395 lineto
775 2404 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
833 2457 moveto (4232) 28 14.00 -0.50 alignedtext
end grestore

%	build_function_call
gsave 10 dict begin
1134 2377 65 18 ellipse_path
stroke
gsave 10 dict begin
1134 2378 moveto (build_function_call) 109 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> build_function_call
newpath 1134 2518 moveto
1134 2490 1134 2438 1134 2405 curveto
stroke
newpath 1132 2405 moveto
1134 2395 lineto
1137 2405 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1155 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	finish_function
gsave 10 dict begin
2364 2377 53 18 ellipse_path
stroke
gsave 10 dict begin
2364 2378 moveto (finish_function) 85 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> finish_function
newpath 1166 2535 moveto
1296 2529 1786 2508 2046 2474 curveto
2124 2463 2252 2418 2320 2394 curveto
stroke
newpath 2319 2392 moveto
2329 2391 lineto
2320 2397 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2208 2457 moveto (200689) 42 14.00 -0.50 alignedtext
end grestore

%	expand_start_bindings
gsave 10 dict begin
1987 2297 73 18 ellipse_path
stroke
gsave 10 dict begin
1987 2298 moveto (expand_start_bindings) 126 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> expand_start_bindings
newpath 1166 2535 moveto
1306 2529 1855 2506 1973 2474 curveto
2015 2462 2003 2370 1993 2324 curveto
stroke
newpath 1991 2325 moveto
1991 2315 lineto
1996 2324 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2021 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_start_loop_continue_elsewhere
gsave 10 dict begin
1680 2377 121 18 ellipse_path
stroke
gsave 10 dict begin
1680 2378 moveto (expand_start_loop_continue_elsewhere) 221 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> expand_start_loop_continue_elsewhere
newpath 1166 2534 moveto
1247 2527 1464 2507 1580 2474 curveto
1609 2466 1641 2429 1661 2403 curveto
stroke
newpath 1659 2402 moveto
1667 2395 lineto
1663 2405 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1652 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	iterator_expand
gsave 10 dict begin
1271 2377 54 18 ellipse_path
stroke
gsave 10 dict begin
1271 2378 moveto (iterator_expand) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	yyparse -> iterator_expand
newpath 1148 2520 moveto
1172 2492 1222 2434 1250 2402 curveto
stroke
newpath 1248 2401 moveto
1256 2395 lineto
1251 2404 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1240 2457 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	yylex -> get_identifier
newpath 1759 1882 moveto
1746 1855 1717 1806 1687 1802 curveto
1417 1759 1141 1777 868 1758 curveto
864 1757 859 1756 854 1755 curveto
stroke
newpath 856 1758 moveto
847 1753 lineto
857 1753 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1754 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	skip_white_space
gsave 10 dict begin
3161 1740 60 18 ellipse_path
stroke
gsave 10 dict begin
3161 1741 moveto (skip_white_space) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	yylex -> skip_white_space
newpath 1792 1891 moveto
1808 1887 1829 1882 1843 1881 curveto
2144 1862 2446 1863 2745 1838 curveto
2760 1836 2756 1805 2769 1802 curveto
2862 1777 2958 1772 3052 1758 curveto
3065 1756 3084 1753 3101 1750 curveto
stroke
newpath 3098 1748 moveto
3108 1749 lineto
3098 1753 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2787 1821 moveto (128) 21 14.00 -0.50 alignedtext
end grestore

%	check_newline
gsave 10 dict begin
3722 1581 52 18 ellipse_path
stroke
gsave 10 dict begin
3722 1582 moveto (check_newline) 83 14.00 -0.50 alignedtext
end grestore
end grestore

%	skip_white_space -> check_newline
newpath 3205 1728 moveto
3309 1699 3568 1624 3676 1594 curveto
stroke
newpath 3672 1593 moveto
3682 1592 lineto
3673 1598 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3524 1661 moveto (128) 21 14.00 -0.50 alignedtext
end grestore

%	check_newline -> xmalloc
newpath 3712 1563 moveto
3695 1531 3661 1464 3662 1422 curveto
3662 1422 3662 1422 3662 307 curveto
3661 219 3505 221 3419 209 curveto
3300 191 2774 159 2621 151 curveto
stroke
newpath 2622 154 moveto
2612 150 lineto
2622 149 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3680 865 moveto (128) 21 14.00 -0.50 alignedtext
end grestore

%	__filbuf
gsave 10 dict begin
4049 1422 33 18 ellipse_path
stroke
gsave 10 dict begin
4049 1423 moveto (__filbuf) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	check_newline -> __filbuf
newpath 3752 1566 moveto
3813 1536 3952 1469 4016 1438 curveto
stroke
newpath 4014 1436 moveto
4024 1434 lineto
4016 1441 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3944 1502 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_findbuf
gsave 10 dict begin
4204 1262 34 18 ellipse_path
stroke
gsave 10 dict begin
4204 1263 moveto (_findbuf) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	__filbuf -> _findbuf
newpath 4064 1406 moveto
4092 1378 4150 1318 4182 1285 curveto
stroke
newpath 4180 1284 moveto
4188 1278 lineto
4183 1287 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4164 1343 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_findbuf -> ALLOC
newpath 4204 1244 moveto
4204 1211 4203 1142 4204 1103 curveto
4204 1103 4204 1103 4204 148 curveto
4203 118 4219 73 4230 45 curveto
stroke
newpath 4228 44 moveto
4234 36 lineto
4232 46 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4229 626 moveto (16400) 35 14.00 -0.50 alignedtext
end grestore

%	tree_cons -> _obstack_newchunk
newpath 316 2040 moveto
309 2004 298 1925 306 1881 curveto
312 1854 319 1827 328 1802 curveto
339 1774 344 1739 368 1722 curveto
407 1694 461 1696 504 1678 curveto
524 1669 538 1653 555 1642 curveto
578 1627 617 1625 624 1599 curveto
650 1510 621 1411 647 1324 curveto
731 1051 907 817 1036 564 curveto
1055 527 1047 476 1075 448 curveto
1170 351 1415 320 1538 312 curveto
stroke
newpath 1535 310 moveto
1545 311 lineto
1535 315 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
733 1184 moveto (81440) 35 14.00 -0.50 alignedtext
end grestore

%	pushdecl
gsave 10 dict begin
353 1899 35 18 ellipse_path
stroke
gsave 10 dict begin
353 1900 moveto (pushdecl) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	start_decl -> pushdecl
newpath 558 2050 moveto
497 2034 374 2003 364 1997 curveto
347 1985 347 1951 349 1926 curveto
stroke
newpath 346 1927 moveto
350 1917 lineto
351 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
385 1980 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	grokdeclarator
gsave 10 dict begin
830 1899 51 18 ellipse_path
stroke
gsave 10 dict begin
830 1900 moveto (grokdeclarator) 81 14.00 -0.50 alignedtext
end grestore
end grestore

%	start_decl -> grokdeclarator
newpath 604 2041 moveto
623 2018 657 1978 683 1961 curveto
709 1944 753 1927 786 1914 curveto
stroke
newpath 783 1912 moveto
793 1912 lineto
784 1917 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
708 1980 moveto (28504) 35 14.00 -0.50 alignedtext
end grestore

%	build_type_copy
gsave 10 dict begin
437 1740 57 18 ellipse_path
stroke
gsave 10 dict begin
437 1741 moveto (build_type_copy) 94 14.00 -0.50 alignedtext
end grestore
end grestore

%	pushdecl -> build_type_copy
newpath 346 1881 moveto
338 1858 327 1818 342 1802 curveto
355 1788 379 1772 400 1761 curveto
stroke
newpath 398 1759 moveto
408 1756 lineto
401 1763 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
363 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	copy_node
gsave 10 dict begin
787 1342 41 18 ellipse_path
stroke
gsave 10 dict begin
787 1343 moveto (copy_node) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	build_type_copy -> copy_node
newpath 471 1725 moveto
523 1701 622 1651 657 1599 curveto
699 1537 753 1418 776 1367 curveto
stroke
newpath 773 1368 moveto
779 1360 lineto
777 1370 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
698 1582 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	copy_node -> _obstack_newchunk
newpath 787 1324 moveto
787 1268 789 1095 813 1005 curveto
827 954 880 924 910 882 curveto
1034 712 1113 502 1275 369 curveto
1306 344 1451 324 1540 314 curveto
stroke
newpath 1538 312 moveto
1548 313 lineto
1538 317 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
957 865 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	grokdeclarator -> build_decl
newpath 831 1881 moveto
832 1858 831 1819 817 1802 curveto
804 1783 772 1767 747 1756 curveto
stroke
newpath 746 1758 moveto
738 1752 lineto
748 1754 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
855 1821 moveto (48864) 35 14.00 -0.50 alignedtext
end grestore

%	build_function_type
gsave 10 dict begin
947 1740 67 18 ellipse_path
stroke
gsave 10 dict begin
947 1741 moveto (build_function_type) 113 14.00 -0.50 alignedtext
end grestore
end grestore

%	grokdeclarator -> build_function_type
newpath 853 1883 moveto
870 1870 892 1852 902 1838 curveto
915 1820 929 1789 938 1766 curveto
stroke
newpath 935 1766 moveto
941 1758 lineto
940 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
946 1821 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	build_function_type -> make_node
newpath 946 1722 moveto
945 1693 943 1638 943 1606 curveto
stroke
newpath 941 1609 moveto
943 1599 lineto
946 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
971 1661 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	push_parm_decl -> tree_cons
newpath 642 2203 moveto
574 2173 420 2103 352 2073 curveto
stroke
newpath 354 2077 moveto
346 2070 lineto
356 2072 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
559 2139 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	push_parm_decl -> grokdeclarator
newpath 684 2200 moveto
710 2146 787 1988 817 1925 curveto
stroke
newpath 814 1925 moveto
821 1917 lineto
819 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
787 2059 moveto (32576) 35 14.00 -0.50 alignedtext
end grestore

%	saveable_tree_cons
gsave 10 dict begin
400 2218 64 18 ellipse_path
stroke
gsave 10 dict begin
400 2219 moveto (saveable_tree_cons) 108 14.00 -0.50 alignedtext
end grestore
end grestore

%	get_parm_info -> saveable_tree_cons
newpath 452 2359 moveto
443 2346 432 2328 426 2315 curveto
419 2297 411 2267 406 2245 curveto
stroke
newpath 404 2246 moveto
404 2236 lineto
409 2245 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
451 2298 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	saveable_tree_cons -> tree_cons
newpath 391 2200 moveto
376 2171 348 2114 331 2082 curveto
stroke
newpath 330 2086 moveto
328 2076 lineto
335 2084 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
394 2139 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	build_tree_list -> make_node
newpath 949 2120 moveto
968 2069 1025 1921 1051 1838 curveto
1072 1775 1069 1694 1029 1642 curveto
1029 1642 996 1618 971 1601 curveto
stroke
newpath 971 1604 moveto
964 1596 lineto
974 1600 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1061 1900 moveto (20360) 35 14.00 -0.50 alignedtext
end grestore

%	build1
gsave 10 dict begin
1526 1979 28 18 ellipse_path
stroke
gsave 10 dict begin
1526 1980 moveto (build1) 35 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_pointer_declarator -> build1
newpath 1432 2359 moveto
1446 2330 1473 2271 1486 2236 curveto
1506 2183 1523 2130 1536 2076 curveto
1541 2058 1537 2028 1533 2006 curveto
stroke
newpath 1531 2007 moveto
1531 1997 lineto
1536 2006 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1520 2219 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	build1 -> _obstack_newchunk
newpath 1527 1961 moveto
1528 1914 1530 1788 1510 1722 curveto
1502 1694 1459 1696 1437 1678 curveto
1427 1669 1433 1645 1419 1642 curveto
1324 1617 1215 1643 1126 1599 curveto
1098 1584 1033 1469 1021 1440 curveto
1001 1390 1003 1333 996 1280 curveto
995 1268 987 1251 996 1244 curveto
1027 1221 1068 1217 1102 1201 curveto
1155 1176 1214 1160 1256 1121 curveto
1303 1078 1333 1019 1358 962 curveto
1372 931 1368 896 1368 864 curveto
1368 864 1368 864 1368 466 curveto
1368 425 1406 390 1439 369 curveto
1455 359 1513 338 1559 324 curveto
stroke
newpath 1558 322 moveto
1568 321 lineto
1559 327 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1206 1184 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	rest_of_decl_compilation
gsave 10 dict begin
1220 1581 82 18 ellipse_path
stroke
gsave 10 dict begin
1220 1582 moveto (rest_of_decl_compilation) 142 14.00 -0.50 alignedtext
end grestore
end grestore

%	finish_decl -> rest_of_decl_compilation
newpath 1589 2279 moveto
1590 2200 1592 1882 1543 1722 curveto
1536 1697 1501 1693 1481 1678 curveto
1468 1667 1461 1647 1444 1642 curveto
1402 1627 1333 1609 1283 1596 curveto
stroke
newpath 1285 1599 moveto
1276 1594 lineto
1286 1594 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1604 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	make_decl_rtl
gsave 10 dict begin
1083 1422 50 18 ellipse_path
stroke
gsave 10 dict begin
1083 1423 moveto (make_decl_rtl) 79 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_decl_compilation -> make_decl_rtl
newpath 1205 1563 moveto
1180 1534 1132 1478 1104 1446 curveto
stroke
newpath 1103 1449 moveto
1098 1440 lineto
1107 1445 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1188 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	make_decl_rtl -> gen_rtx_fmt_s
newpath 1080 1404 moveto
1076 1375 1067 1319 1063 1287 curveto
stroke
newpath 1061 1290 moveto
1062 1280 lineto
1066 1290 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1095 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_nt -> make_node
newpath 1079 2279 moveto
1083 2249 1091 2190 1092 2156 curveto
1098 2011 1102 1865 1080 1722 curveto
1076 1694 1076 1661 1056 1642 curveto
1056 1642 1009 1617 975 1599 curveto
stroke
newpath 975 1602 moveto
968 1595 lineto
978 1598 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1117 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	c_expand_start_cond -> xmalloc
newpath 715 2365 moveto
671 2353 610 2335 575 2315 curveto
532 2288 517 2229 476 2200 curveto
442 2175 394 2177 357 2156 curveto
324 2135 282 2113 270 2076 curveto
252 2019 224 1780 230 1722 curveto
240 1642 234 1558 262 1483 curveto
303 1375 703 266 802 209 curveto
802 209 2264 158 2536 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
369 1263 moveto (160) 21 14.00 -0.50 alignedtext
end grestore

%	expand_start_cond
gsave 10 dict begin
890 2218 63 18 ellipse_path
stroke
gsave 10 dict begin
890 2219 moveto (expand_start_cond) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	c_expand_start_cond -> expand_start_cond
newpath 788 2360 moveto
804 2347 825 2329 836 2315 curveto
849 2297 867 2266 877 2244 curveto
stroke
newpath 874 2244 moveto
881 2236 lineto
879 2246 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
879 2298 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	do_jump
gsave 10 dict begin
1308 2058 35 18 ellipse_path
stroke
gsave 10 dict begin
1308 2059 moveto (do_jump) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_start_cond -> do_jump
newpath 927 2203 moveto
981 2182 1083 2142 1142 2120 curveto
1184 2104 1226 2091 1267 2076 curveto
1268 2075 1270 2075 1271 2074 curveto
stroke
newpath 1271 2071 moveto
1281 2070 lineto
1273 2076 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1163 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	do_jump -> do_jump
gsave 10 dict begin
dotted
newpath 1333 2045 moveto
1347 2043 1361 2047 1361 2058 curveto
1361 2067 1351 2071 1340 2071 curveto
stroke
newpath 1343 2074 moveto
1333 2071 lineto
1343 2069 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1372 2059 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_expr
gsave 10 dict begin
1413 1899 46 18 ellipse_path
stroke
gsave 10 dict begin
1413 1900 moveto (expand_expr) 72 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_jump -> expand_expr
newpath 1319 2041 moveto
1339 2012 1376 1955 1397 1923 curveto
stroke
newpath 1393 1924 moveto
1401 1917 lineto
1398 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1394 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_expr -> expand_expr
gsave 10 dict begin
dotted
newpath 1445 1886 moveto
1462 1884 1477 1888 1477 1899 curveto
1477 1908 1466 1913 1453 1912 curveto
stroke
newpath 1455 1915 moveto
1445 1912 lineto
1455 1910 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1488 1900 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_call
gsave 10 dict begin
1781 1740 44 18 ellipse_path
stroke
gsave 10 dict begin
1781 1741 moveto (expand_call) 67 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_expr -> expand_call
newpath 1444 1886 moveto
1511 1856 1667 1789 1741 1757 curveto
stroke
newpath 1741 1754 moveto
1751 1753 lineto
1743 1759 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1659 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	expand_assignment
gsave 10 dict begin
1433 1740 65 18 ellipse_path
stroke
gsave 10 dict begin
1433 1741 moveto (expand_assignment) 110 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_expr -> expand_assignment
gsave 10 dict begin
dotted
newpath 1415 1881 moveto
1419 1852 1426 1797 1430 1765 curveto
stroke
newpath 1427 1768 moveto
1431 1758 lineto
1432 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1437 1821 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_move_insn
gsave 10 dict begin
1922 1501 57 18 ellipse_path
stroke
gsave 10 dict begin
1922 1502 moveto (emit_move_insn) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_call -> emit_move_insn
newpath 1780 1722 moveto
1778 1685 1776 1602 1799 1563 curveto
1812 1542 1843 1527 1871 1516 curveto
stroke
newpath 1870 1514 moveto
1880 1513 lineto
1871 1519 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1802 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	emit_call_1
gsave 10 dict begin
1674 1581 43 18 ellipse_path
stroke
gsave 10 dict begin
1674 1582 moveto (emit_call_1) 66 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_call -> emit_call_1
newpath 1761 1724 moveto
1746 1710 1726 1692 1716 1678 curveto
1704 1660 1692 1629 1683 1607 curveto
stroke
newpath 1681 1609 moveto
1680 1599 lineto
1686 1607 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1737 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	emit_move_insn_1
gsave 10 dict begin
1983 1103 64 18 ellipse_path
stroke
gsave 10 dict begin
1983 1104 moveto (emit_move_insn_1) 107 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_move_insn -> emit_move_insn_1
newpath 1933 1483 moveto
1950 1454 1984 1396 1999 1360 curveto
2010 1334 2009 1306 2011 1280 curveto
2013 1268 2013 1255 2011 1244 curveto
2006 1213 1996 1162 1989 1131 curveto
stroke
newpath 1987 1131 moveto
1987 1121 lineto
1991 1130 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2028 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_movsi
gsave 10 dict begin
1968 944 41 18 ellipse_path
stroke
gsave 10 dict begin
1968 945 moveto (gen_movsi) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_move_insn_1 -> gen_movsi
newpath 1981 1085 moveto
1978 1056 1973 1001 1970 969 curveto
stroke
newpath 1968 972 moveto
1970 962 lineto
1973 972 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1999 1024 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	emit_insn
gsave 10 dict begin
1670 785 38 18 ellipse_path
stroke
gsave 10 dict begin
1670 786 moveto (emit_insn) 55 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_move_insn_1 -> emit_insn
newpath 1949 1088 moveto
1891 1061 1774 1006 1714 962 curveto
1679 935 1672 854 1670 811 curveto
stroke
newpath 1668 813 moveto
1670 803 lineto
1673 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1735 945 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_movsi -> emit_insn
newpath 1936 933 moveto
1901 920 1847 899 1816 882 curveto
1804 874 1805 853 1792 846 curveto
1771 832 1734 814 1707 801 curveto
stroke
newpath 1706 803 moveto
1698 797 lineto
1708 799 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1837 865 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	make_insn_raw
gsave 10 dict begin
1670 625 54 18 ellipse_path
stroke
gsave 10 dict begin
1670 626 moveto (make_insn_raw) 88 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_insn -> make_insn_raw
newpath 1670 767 moveto
1670 739 1670 686 1670 653 curveto
stroke
newpath 1668 653 moveto
1670 643 lineto
1673 653 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1691 706 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	rtx_alloc
gsave 10 dict begin
1611 466 35 18 ellipse_path
stroke
gsave 10 dict begin
1611 467 moveto (rtx_alloc) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_insn_raw -> rtx_alloc
newpath 1663 607 moveto
1653 578 1632 523 1620 491 curveto
stroke
newpath 1618 494 moveto
1618 484 lineto
1623 493 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1669 547 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	rtx_alloc -> _obstack_newchunk
newpath 1611 448 moveto
1611 420 1611 368 1611 335 curveto
stroke
newpath 1609 335 moveto
1611 325 lineto
1614 335 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1636 388 moveto (28504) 35 14.00 -0.50 alignedtext
end grestore

%	gen_call
gsave 10 dict begin
1472 1422 34 18 ellipse_path
stroke
gsave 10 dict begin
1472 1423 moveto (gen_call) 47 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_call_1 -> gen_call
newpath 1667 1563 moveto
1657 1540 1638 1500 1618 1483 curveto
1590 1457 1548 1454 1512 1440 curveto
1510 1439 1507 1438 1504 1437 curveto
stroke
newpath 1506 1441 moveto
1498 1434 lineto
1508 1436 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1666 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_e
gsave 10 dict begin
1557 1262 51 18 ellipse_path
stroke
gsave 10 dict begin
1557 1263 moveto (gen_rtx_fmt_e) 82 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_call -> gen_rtx_fmt_e
newpath 1481 1405 moveto
1496 1376 1527 1319 1544 1287 curveto
stroke
newpath 1541 1288 moveto
1547 1280 lineto
1545 1290 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1546 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_e -> obstack_alloc_rtx
newpath 1535 1245 moveto
1519 1233 1498 1215 1487 1201 curveto
1475 1183 1461 1152 1451 1129 curveto
stroke
newpath 1449 1131 moveto
1447 1121 lineto
1454 1129 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1508 1184 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	store_expr
gsave 10 dict begin
1042 1581 40 18 ellipse_path
stroke
gsave 10 dict begin
1042 1582 moveto (store_expr) 58 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_assignment -> store_expr
newpath 1416 1722 moveto
1390 1696 1341 1648 1325 1642 curveto
1253 1611 1170 1615 1093 1599 curveto
1089 1598 1084 1597 1080 1595 curveto
stroke
newpath 1082 1598 moveto
1073 1593 lineto
1083 1593 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1391 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	store_expr -> expand_expr
newpath 1396 1873 moveto
1356 1813 1255 1665 1219 1642 curveto
1175 1613 1114 1617 1066 1595 curveto
stroke
newpath 1398 1871 moveto
1401 1881 lineto
1394 1874 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1338 1741 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	convert_arguments
gsave 10 dict begin
1191 2218 64 18 ellipse_path
stroke
gsave 10 dict begin
1191 2219 moveto (convert_arguments) 107 14.00 -0.50 alignedtext
end grestore
end grestore

%	build_function_call -> convert_arguments
newpath 1140 2359 moveto
1150 2330 1170 2275 1182 2243 curveto
stroke
newpath 1179 2245 moveto
1184 2236 lineto
1184 2246 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1191 2298 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	default_conversion
gsave 10 dict begin
1191 2058 64 18 ellipse_path
stroke
gsave 10 dict begin
1191 2059 moveto (default_conversion) 107 14.00 -0.50 alignedtext
end grestore
end grestore

%	convert_arguments -> default_conversion
newpath 1191 2200 moveto
1191 2172 1191 2119 1191 2086 curveto
stroke
newpath 1189 2086 moveto
1191 2076 lineto
1194 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1212 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_unary_op
gsave 10 dict begin
1207 1899 54 18 ellipse_path
stroke
gsave 10 dict begin
1207 1900 moveto (build_unary_op) 88 14.00 -0.50 alignedtext
end grestore
end grestore

%	default_conversion -> build_unary_op
newpath 1193 2040 moveto
1196 2012 1201 1960 1204 1927 curveto
stroke
newpath 1202 1927 moveto
1205 1917 lineto
1206 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1222 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_pointer_type
gsave 10 dict begin
1209 1740 63 18 ellipse_path
stroke
gsave 10 dict begin
1209 1741 moveto (build_pointer_type) 106 14.00 -0.50 alignedtext
end grestore
end grestore

%	build_unary_op -> build_pointer_type
newpath 1207 1881 moveto
1208 1853 1208 1801 1209 1768 curveto
stroke
newpath 1207 1768 moveto
1209 1758 lineto
1212 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1230 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_pointer_type -> make_node
newpath 1199 1722 moveto
1185 1698 1159 1657 1135 1642 curveto
1093 1614 1039 1614 990 1599 curveto
987 1598 984 1597 981 1595 curveto
stroke
newpath 983 1598 moveto
974 1593 lineto
984 1593 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1191 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	rest_of_compilation
gsave 10 dict begin
2538 2218 66 18 ellipse_path
stroke
gsave 10 dict begin
2538 2219 moveto (rest_of_compilation) 112 14.00 -0.50 alignedtext
end grestore
end grestore

%	finish_function -> rest_of_compilation
newpath 2383 2360 moveto
2414 2332 2477 2274 2512 2242 curveto
stroke
newpath 2510 2240 moveto
2519 2235 lineto
2514 2244 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2500 2298 moveto (200689) 42 14.00 -0.50 alignedtext
end grestore

%	reg_scan
gsave 10 dict begin
3768 1979 35 18 ellipse_path
stroke
gsave 10 dict begin
3768 1980 moveto (reg_scan) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> reg_scan
newpath 2593 2208 moveto
2958 2149 3335 2199 3702 2156 curveto
3748 2150 3762 2055 3766 2007 curveto
stroke
newpath 3764 2007 moveto
3767 1997 lineto
3768 2007 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3762 2139 moveto (8368) 28 14.00 -0.50 alignedtext
end grestore

%	cse_main
gsave 10 dict begin
2189 1899 36 18 ellipse_path
stroke
gsave 10 dict begin
2189 1900 moveto (cse_main) 52 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> cse_main
newpath 2480 2209 moveto
2419 2199 2324 2180 2270 2156 curveto
2209 2128 2227 2027 2214 1961 curveto
2212 1951 2207 1937 2202 1926 curveto
stroke
newpath 2200 1927 moveto
2198 1917 lineto
2204 1925 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2249 2059 moveto (17444) 35 14.00 -0.50 alignedtext
end grestore

%	purge_addressof
gsave 10 dict begin
2941 1979 56 18 ellipse_path
stroke
gsave 10 dict begin
2941 1980 moveto (purge_addressof) 92 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> purge_addressof
newpath 2566 2202 moveto
2638 2159 2829 2045 2907 1999 curveto
stroke
newpath 2904 1998 moveto
2914 1995 lineto
2907 2002 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2729 2139 moveto (16344) 35 14.00 -0.50 alignedtext
end grestore

%	life_analysis
gsave 10 dict begin
2360 2058 45 18 ellipse_path
stroke
gsave 10 dict begin
2360 2059 moveto (life_analysis) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> life_analysis
newpath 2487 2207 moveto
2447 2196 2394 2179 2367 2156 curveto
2352 2143 2353 2109 2356 2085 curveto
stroke
newpath 2353 2086 moveto
2357 2076 lineto
2358 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2392 2139 moveto (40720) 35 14.00 -0.50 alignedtext
end grestore

%	combine_instructions
gsave 10 dict begin
1543 1581 70 18 ellipse_path
stroke
gsave 10 dict begin
1543 1582 moveto (combine_instructions) 120 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> combine_instructions
newpath 2472 2216 moveto
2352 2210 2232 2188 2115 2156 curveto
2080 2145 2064 2102 2038 2076 curveto
1953 1984 1870 1891 1782 1802 curveto
1766 1784 1741 1776 1725 1758 curveto
1694 1722 1677 1675 1643 1642 curveto
1630 1628 1605 1613 1584 1602 curveto
stroke
newpath 1583 1604 moveto
1575 1597 lineto
1585 1600 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1916 1900 moveto (28792) 35 14.00 -0.50 alignedtext
end grestore

%	regclass
gsave 10 dict begin
2528 1183 33 18 ellipse_path
stroke
gsave 10 dict begin
2528 1184 moveto (regclass) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> regclass
newpath 2486 2207 moveto
2438 2196 2391 2181 2348 2156 curveto
2289 2120 2242 1826 2232 1758 curveto
2219 1664 2220 1536 2297 1483 curveto
2342 1452 2406 1463 2454 1440 curveto
2492 1421 2525 1392 2552 1360 curveto
2580 1326 2555 1249 2539 1209 curveto
stroke
newpath 2537 1211 moveto
2536 1201 lineto
2542 1209 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2257 1741 moveto (10800) 35 14.00 -0.50 alignedtext
end grestore

%	local_alloc
gsave 10 dict begin
2741 1023 41 18 ellipse_path
stroke
gsave 10 dict begin
2741 1024 moveto (local_alloc) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> local_alloc
newpath 2526 2200 moveto
2498 2159 2428 2055 2390 1997 curveto
2358 1945 2325 1893 2298 1838 curveto
2284 1808 2303 1661 2329 1642 curveto
2396 1592 2495 1623 2573 1599 curveto
2629 1581 2689 1561 2729 1519 curveto
2752 1495 2742 1454 2742 1422 curveto
2742 1422 2742 1422 2742 1183 curveto
2742 1146 2741 1083 2741 1048 curveto
stroke
newpath 2739 1051 moveto
2741 1041 lineto
2744 1051 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2350 1661 moveto (2430) 28 14.00 -0.50 alignedtext
end grestore

%	global_alloc
gsave 10 dict begin
2538 2058 45 18 ellipse_path
stroke
gsave 10 dict begin
2538 2059 moveto (global_alloc) 69 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> global_alloc
newpath 2538 2200 moveto
2538 2172 2538 2119 2538 2086 curveto
stroke
newpath 2536 2086 moveto
2538 2076 lineto
2541 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2563 2139 moveto (40335) 35 14.00 -0.50 alignedtext
end grestore

%	reload_cse_regs
gsave 10 dict begin
2105 2058 55 18 ellipse_path
stroke
gsave 10 dict begin
2105 2059 moveto (reload_cse_regs) 89 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> reload_cse_regs
newpath 2474 2213 moveto
2388 2205 2236 2187 2151 2156 curveto
2130 2148 2117 2111 2111 2084 curveto
stroke
newpath 2109 2086 moveto
2109 2076 lineto
2114 2085 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2172 2139 moveto (4376) 28 14.00 -0.50 alignedtext
end grestore

%	dbr_schedule
gsave 10 dict begin
3389 1899 47 18 ellipse_path
stroke
gsave 10 dict begin
3389 1900 moveto (dbr_schedule) 74 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> dbr_schedule
newpath 2589 2206 moveto
2667 2189 2809 2157 2813 2156 curveto
2882 2135 2948 2105 3013 2076 curveto
3110 2032 3279 1952 3353 1916 curveto
stroke
newpath 3349 1915 moveto
3359 1913 lineto
3351 1920 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3116 2059 moveto (10248) 35 14.00 -0.50 alignedtext
end grestore

%	shorten_branches
gsave 10 dict begin
3506 546 59 18 ellipse_path
stroke
gsave 10 dict begin
3506 547 moveto (shorten_branches) 97 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> shorten_branches
newpath 2592 2207 moveto
2972 2137 3576 2103 3577 1740 curveto
3577 1740 3577 1740 3577 705 curveto
3576 664 3543 605 3522 571 curveto
stroke
newpath 3521 574 moveto
3518 564 lineto
3525 571 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3598 1423 moveto (5657) 28 14.00 -0.50 alignedtext
end grestore

%	loop_optimize
gsave 10 dict begin
3025 1899 51 18 ellipse_path
stroke
gsave 10 dict begin
3025 1900 moveto (loop_optimize) 80 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> loop_optimize
newpath 2590 2207 moveto
2641 2195 2717 2176 2760 2156 curveto
2850 2114 2939 2065 3009 1997 curveto
3023 1983 3026 1950 3026 1926 curveto
stroke
newpath 3024 1927 moveto
3026 1917 lineto
3029 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2982 2059 moveto (10495) 35 14.00 -0.50 alignedtext
end grestore

%	find_basic_blocks
gsave 10 dict begin
4178 2058 61 18 ellipse_path
stroke
gsave 10 dict begin
4178 2059 moveto (find_basic_blocks) 101 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> find_basic_blocks
newpath 2604 2216 moveto
2812 2210 3463 2190 3818 2156 curveto
3907 2146 4056 2099 4131 2074 curveto
stroke
newpath 4128 2072 moveto
4138 2072 lineto
4129 2077 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3991 2139 moveto (3880) 28 14.00 -0.50 alignedtext
end grestore

%	instantiate_virtual_regs
gsave 10 dict begin
4471 2058 76 18 ellipse_path
stroke
gsave 10 dict begin
4471 2059 moveto (instantiate_virtual_regs) 131 14.00 -0.50 alignedtext
end grestore
end grestore

%	rest_of_compilation -> instantiate_virtual_regs
newpath 2604 2218 moveto
3077 2216 3548 2194 4019 2156 curveto
4130 2146 4318 2099 4413 2074 curveto
stroke
newpath 4411 2072 moveto
4421 2072 lineto
4412 2077 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4226 2139 moveto (800) 21 14.00 -0.50 alignedtext
end grestore

%	allocate_reg_info
gsave 10 dict begin
4002 1740 59 18 ellipse_path
stroke
gsave 10 dict begin
4002 1741 moveto (allocate_reg_info) 97 14.00 -0.50 alignedtext
end grestore
end grestore

%	reg_scan -> allocate_reg_info
newpath 3800 1971 moveto
3849 1958 3939 1934 3956 1917 curveto
3986 1885 3997 1807 4000 1766 curveto
stroke
newpath 3997 1768 moveto
4001 1758 lineto
4002 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3998 1900 moveto (8368) 28 14.00 -0.50 alignedtext
end grestore

%	allocate_reg_info -> xmalloc
newpath 3994 1722 moveto
3980 1690 3952 1622 3953 1581 curveto
3953 1581 3953 1581 3953 307 curveto
3952 264 3913 213 3871 209 curveto
3497 166 2794 151 2619 148 curveto
stroke
newpath 2622 151 moveto
2612 148 lineto
2622 146 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3974 945 moveto (1116) 28 14.00 -0.50 alignedtext
end grestore

%	varray_init
gsave 10 dict begin
4131 1581 41 18 ellipse_path
stroke
gsave 10 dict begin
4131 1582 moveto (varray_init) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	allocate_reg_info -> varray_init
newpath 4014 1722 moveto
4029 1700 4056 1663 4073 1642 curveto
4081 1631 4095 1617 4107 1605 curveto
stroke
newpath 4105 1603 moveto
4114 1598 lineto
4109 1607 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4094 1661 moveto (1140) 28 14.00 -0.50 alignedtext
end grestore

%	xcalloc
gsave 10 dict begin
4281 1422 30 18 ellipse_path
stroke
gsave 10 dict begin
4281 1423 moveto (xcalloc) 40 14.00 -0.50 alignedtext
end grestore
end grestore

%	allocate_reg_info -> xcalloc
newpath 4002 1722 moveto
4002 1684 4005 1598 4036 1563 curveto
4082 1510 4193 1459 4249 1435 curveto
stroke
newpath 4246 1434 moveto
4256 1432 lineto
4248 1438 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4057 1582 moveto (6112) 28 14.00 -0.50 alignedtext
end grestore

%	varray_init -> xcalloc
newpath 4147 1564 moveto
4174 1535 4229 1477 4260 1444 curveto
stroke
newpath 4257 1443 moveto
4266 1438 lineto
4261 1447 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4248 1502 moveto (10355) 35 14.00 -0.50 alignedtext
end grestore

%	xcalloc -> ALLOC
newpath 4281 1404 moveto
4281 1371 4280 1302 4281 1262 curveto
4281 1262 4281 1262 4281 148 curveto
4280 118 4265 73 4254 45 curveto
stroke
newpath 4252 46 moveto
4250 36 lineto
4256 44 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4306 706 moveto (17555) 35 14.00 -0.50 alignedtext
end grestore

%	init_alias_analysis
gsave 10 dict begin
2035 1740 62 18 ellipse_path
stroke
gsave 10 dict begin
2035 1741 moveto (init_alias_analysis) 103 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_main -> init_alias_analysis
newpath 2170 1883 moveto
2154 1870 2131 1851 2118 1838 curveto
2100 1819 2073 1787 2055 1765 curveto
stroke
newpath 2054 1767 moveto
2049 1758 lineto
2057 1764 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2139 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	cse_basic_block
gsave 10 dict begin
2644 1103 56 18 ellipse_path
stroke
gsave 10 dict begin
2644 1104 moveto (cse_basic_block) 91 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_main -> cse_basic_block
newpath 2187 1881 moveto
2184 1845 2180 1763 2196 1722 curveto
2212 1683 2253 1655 2291 1642 curveto
2371 1613 2464 1633 2541 1599 curveto
2608 1569 2635 1228 2642 1129 curveto
stroke
newpath 2639 1131 moveto
2643 1121 lineto
2644 1131 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2617 1502 moveto (9300) 28 14.00 -0.50 alignedtext
end grestore

%	init_alias_analysis -> gen_rtx_REG
newpath 2016 1723 moveto
1984 1694 1921 1636 1886 1604 curveto
stroke
newpath 1885 1606 moveto
1879 1598 lineto
1888 1603 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1988 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_alias_analysis -> gen_rtx_fmt_e
newpath 2003 1724 moveto
1951 1698 1849 1643 1799 1599 curveto
1776 1577 1761 1547 1747 1519 curveto
1730 1482 1729 1436 1704 1404 curveto
1687 1380 1651 1379 1630 1360 curveto
1612 1342 1589 1309 1574 1287 curveto
stroke
newpath 1573 1290 moveto
1569 1280 lineto
1577 1287 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1768 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	oballoc
gsave 10 dict begin
1878 546 31 18 ellipse_path
stroke
gsave 10 dict begin
1878 547 moveto (oballoc) 41 14.00 -0.50 alignedtext
end grestore
end grestore

%	init_alias_analysis -> oballoc
newpath 2037 1722 moveto
2046 1645 2079 1344 2079 1183 curveto
2079 1183 2079 1183 2079 944 curveto
2079 912 1937 652 1892 570 curveto
stroke
newpath 1891 573 moveto
1888 563 lineto
1895 570 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2104 1184 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	oballoc -> _obstack_newchunk
newpath 1861 531 moveto
1847 518 1827 499 1819 484 curveto
1801 448 1815 394 1784 369 curveto
1784 369 1710 343 1659 324 curveto
stroke
newpath 1661 327 moveto
1652 322 lineto
1662 322 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1844 467 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	new_basic_block
gsave 10 dict begin
2670 944 59 18 ellipse_path
stroke
gsave 10 dict begin
2670 945 moveto (new_basic_block) 97 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_basic_block -> new_basic_block
newpath 2645 1085 moveto
2647 1063 2650 1026 2653 1005 curveto
2655 996 2658 983 2661 971 curveto
stroke
newpath 2658 971 moveto
2664 962 lineto
2663 972 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2671 1024 moveto (160) 21 14.00 -0.50 alignedtext
end grestore

%	cse_insn
gsave 10 dict begin
2387 944 34 18 ellipse_path
stroke
gsave 10 dict begin
2387 945 moveto (cse_insn) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_basic_block -> cse_insn
newpath 2618 1087 moveto
2570 1056 2467 993 2416 962 curveto
stroke
newpath 2416 965 moveto
2409 958 lineto
2419 961 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2565 1024 moveto (9140) 28 14.00 -0.50 alignedtext
end grestore

%	new_basic_block -> splay_tree_new
newpath 2694 927 moveto
2736 897 2824 838 2870 805 curveto
stroke
newpath 2866 804 moveto
2876 801 lineto
2869 809 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2830 865 moveto (160) 21 14.00 -0.50 alignedtext
end grestore

%	canon_hash
gsave 10 dict begin
2239 625 43 18 ellipse_path
stroke
gsave 10 dict begin
2239 626 moveto (canon_hash) 65 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> canon_hash
newpath 2371 928 moveto
2353 909 2327 882 2327 882 curveto
2309 857 2293 831 2281 803 curveto
2264 763 2250 690 2243 651 curveto
stroke
newpath 2241 653 moveto
2242 643 lineto
2246 653 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2295 786 moveto (28) 14 14.00 -0.50 alignedtext
end grestore

%	get_cse_reg_info
gsave 10 dict begin
2408 466 58 18 ellipse_path
stroke
gsave 10 dict begin
2408 467 moveto (get_cse_reg_info) 96 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> get_cse_reg_info
newpath 2387 926 moveto
2387 870 2387 700 2390 607 curveto
2392 576 2399 525 2404 494 curveto
stroke
newpath 2402 494 moveto
2405 484 lineto
2406 494 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2410 706 moveto (1280) 28 14.00 -0.50 alignedtext
end grestore

%	invalidate
gsave 10 dict begin
2201 785 38 18 ellipse_path
stroke
gsave 10 dict begin
2201 786 moveto (invalidate) 55 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> invalidate
newpath 2359 934 moveto
2314 918 2232 889 2223 882 curveto
2208 869 2203 836 2201 812 curveto
stroke
newpath 2199 813 moveto
2201 803 lineto
2204 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2241 865 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	invalidate_for_call
gsave 10 dict begin
2465 785 63 18 ellipse_path
stroke
gsave 10 dict begin
2465 786 moveto (invalidate_for_call) 105 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> invalidate_for_call
newpath 2396 926 moveto
2410 898 2437 842 2453 810 curveto
stroke
newpath 2450 811 moveto
2456 803 lineto
2454 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2457 865 moveto (7556) 28 14.00 -0.50 alignedtext
end grestore

%	canon_reg
gsave 10 dict begin
2551 705 39 18 ellipse_path
stroke
gsave 10 dict begin
2551 706 moveto (canon_reg) 58 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> canon_reg
newpath 2411 931 moveto
2434 918 2468 898 2485 882 curveto
2509 860 2529 833 2540 803 curveto
2547 785 2549 754 2551 732 curveto
stroke
newpath 2549 733 moveto
2551 723 lineto
2554 733 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2535 865 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	fold_rtx
gsave 10 dict begin
2305 705 33 18 ellipse_path
stroke
gsave 10 dict begin
2305 706 moveto (fold_rtx) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	cse_insn -> fold_rtx
newpath 2373 928 moveto
2361 914 2347 896 2342 882 curveto
2329 841 2316 769 2309 731 curveto
stroke
newpath 2307 733 moveto
2308 723 lineto
2312 733 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2356 865 moveto (60) 14 14.00 -0.50 alignedtext
end grestore

%	canon_hash -> get_cse_reg_info
newpath 2240 607 moveto
2243 583 2249 543 2266 528 curveto
2287 508 2327 491 2359 480 curveto
stroke
newpath 2356 478 moveto
2366 478 lineto
2357 483 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2284 547 moveto (136) 21 14.00 -0.50 alignedtext
end grestore

%	get_cse_reg_info -> xmalloc
newpath 2405 448 moveto
2401 411 2393 328 2414 289 curveto
2438 244 2509 194 2549 167 curveto
stroke
newpath 2547 165 moveto
2557 162 lineto
2550 169 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2435 308 moveto (1236) 28 14.00 -0.50 alignedtext
end grestore

%	splay_tree_insert
gsave 10 dict begin
2526 307 58 18 ellipse_path
stroke
gsave 10 dict begin
2526 308 moveto (splay_tree_insert) 95 14.00 -0.50 alignedtext
end grestore
end grestore

%	get_cse_reg_info -> splay_tree_insert
newpath 2421 448 moveto
2442 420 2484 363 2508 331 curveto
stroke
newpath 2505 331 moveto
2513 325 lineto
2509 334 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2501 388 moveto (7904) 28 14.00 -0.50 alignedtext
end grestore

%	splay_tree_insert -> xmalloc
newpath 2532 289 moveto
2541 260 2560 205 2571 173 curveto
stroke
newpath 2568 175 moveto
2573 166 lineto
2573 176 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2580 228 moveto (7904) 28 14.00 -0.50 alignedtext
end grestore

%	invalidate -> canon_hash
newpath 2196 767 moveto
2190 744 2183 707 2192 687 curveto
2198 676 2208 661 2218 649 curveto
stroke
newpath 2216 648 moveto
2224 642 lineto
2219 651 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2210 706 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	delete_reg_equiv
gsave 10 dict begin
2460 625 58 18 ellipse_path
stroke
gsave 10 dict begin
2460 626 moveto (delete_reg_equiv) 96 14.00 -0.50 alignedtext
end grestore
end grestore

%	invalidate_for_call -> delete_reg_equiv
newpath 2463 767 moveto
2461 753 2459 734 2458 723 curveto
2457 704 2458 674 2459 652 curveto
stroke
newpath 2457 653 moveto
2459 643 lineto
2462 653 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2480 706 moveto (7556) 28 14.00 -0.50 alignedtext
end grestore

%	delete_reg_equiv -> get_cse_reg_info
newpath 2454 607 moveto
2445 578 2427 523 2416 491 curveto
stroke
newpath 2414 494 moveto
2414 484 lineto
2419 493 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2462 547 moveto (7556) 28 14.00 -0.50 alignedtext
end grestore

%	canon_reg -> get_cse_reg_info
newpath 2548 687 moveto
2541 649 2522 564 2490 528 curveto
2478 514 2457 498 2439 486 curveto
stroke
newpath 2440 490 moveto
2433 482 lineto
2443 485 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2556 626 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	canon_reg -> canon_reg
gsave 10 dict begin
dotted
newpath 2579 692 moveto
2594 690 2608 694 2608 705 curveto
2608 714 2598 719 2586 718 curveto
stroke
newpath 2589 721 moveto
2579 718 lineto
2589 716 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2619 706 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	fold_rtx -> get_cse_reg_info
newpath 2308 687 moveto
2316 651 2334 569 2357 528 curveto
2364 517 2375 503 2385 491 curveto
stroke
newpath 2384 489 moveto
2392 483 lineto
2387 492 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2344 626 moveto (60) 14 14.00 -0.50 alignedtext
end grestore

%	hash_table_init
gsave 10 dict begin
2869 1820 53 18 ellipse_path
stroke
gsave 10 dict begin
2869 1821 moveto (hash_table_init) 85 14.00 -0.50 alignedtext
end grestore
end grestore

%	purge_addressof -> hash_table_init
newpath 2933 1961 moveto
2920 1932 2895 1877 2880 1845 curveto
stroke
newpath 2879 1848 moveto
2877 1838 lineto
2883 1846 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2938 1900 moveto (16344) 35 14.00 -0.50 alignedtext
end grestore

%	hash_table_init_n
gsave 10 dict begin
2919 1581 60 18 ellipse_path
stroke
gsave 10 dict begin
2919 1582 moveto (hash_table_init_n) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	hash_table_init -> hash_table_init_n
newpath 2897 1805 moveto
2918 1792 2947 1774 2960 1758 curveto
2979 1736 2984 1705 2991 1678 curveto
2995 1666 2999 1651 2991 1642 curveto
2983 1629 2966 1615 2951 1604 curveto
stroke
newpath 2950 1606 moveto
2943 1598 lineto
2953 1602 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3004 1741 moveto (16344) 35 14.00 -0.50 alignedtext
end grestore

%	hash_table_init_n -> _obstack_begin
newpath 2933 1563 moveto
2956 1535 3002 1478 3029 1446 curveto
stroke
newpath 3026 1446 moveto
3034 1440 lineto
3030 1449 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3021 1502 moveto (8072) 28 14.00 -0.50 alignedtext
end grestore

%	hash_table_init_n -> _obstack_newchunk
newpath 2901 1564 moveto
2848 1514 2696 1368 2622 1280 curveto
2596 1247 2603 1194 2573 1165 curveto
2492 1085 2390 1030 2299 962 curveto
2242 918 2165 874 2151 803 curveto
2123 656 2182 409 2037 369 curveto
1943 342 1777 323 1683 314 curveto
stroke
newpath 1685 317 moveto
1675 313 lineto
1685 312 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2320 945 moveto (8272) 28 14.00 -0.50 alignedtext
end grestore

%	life_analysis -> init_alias_analysis
newpath 2350 2040 moveto
2322 1991 2239 1852 2167 1802 curveto
2167 1802 2115 1778 2076 1759 curveto
stroke
newpath 2076 1762 moveto
2068 1755 lineto
2078 1757 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2293 1900 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	life_analysis_1
gsave 10 dict begin
2659 1899 52 18 ellipse_path
stroke
gsave 10 dict begin
2659 1900 moveto (life_analysis_1) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	life_analysis -> life_analysis_1
newpath 2377 2041 moveto
2402 2018 2447 1977 2478 1961 curveto
2512 1943 2569 1925 2610 1913 curveto
stroke
newpath 2608 1911 moveto
2618 1910 lineto
2610 1916 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2503 1980 moveto (32576) 35 14.00 -0.50 alignedtext
end grestore

%	life_analysis_1 -> gcc_obstack_init
newpath 2703 1890 moveto
2764 1877 2871 1853 2934 1838 curveto
2972 1828 3008 1810 3045 1802 curveto
3119 1785 3245 1762 3318 1750 curveto
stroke
newpath 3315 1748 moveto
3325 1749 lineto
3315 1753 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3070 1821 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	record_volatile_insns
gsave 10 dict begin
2790 1740 70 18 ellipse_path
stroke
gsave 10 dict begin
2790 1741 moveto (record_volatile_insns) 120 14.00 -0.50 alignedtext
end grestore
end grestore

%	life_analysis_1 -> record_volatile_insns
newpath 2663 1881 moveto
2669 1858 2681 1820 2696 1802 curveto
2707 1788 2730 1773 2750 1761 curveto
stroke
newpath 2749 1759 moveto
2759 1756 lineto
2751 1763 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2717 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	propagate_block
gsave 10 dict begin
2559 1740 57 18 ellipse_path
stroke
gsave 10 dict begin
2559 1741 moveto (propagate_block) 93 14.00 -0.50 alignedtext
end grestore
end grestore

%	life_analysis_1 -> propagate_block
newpath 2648 1881 moveto
2630 1853 2594 1796 2574 1764 curveto
stroke
newpath 2573 1768 moveto
2570 1758 lineto
2578 1765 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2642 1821 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	bitmap_set_bit
gsave 10 dict begin
3049 1581 52 18 ellipse_path
stroke
gsave 10 dict begin
3049 1582 moveto (bitmap_set_bit) 83 14.00 -0.50 alignedtext
end grestore
end grestore

%	record_volatile_insns -> bitmap_set_bit
newpath 2821 1724 moveto
2847 1710 2883 1691 2904 1678 curveto
2936 1658 2987 1624 3018 1602 curveto
stroke
newpath 3015 1601 moveto
3025 1597 lineto
3018 1605 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2980 1661 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	bitmap_set_bit -> _obstack_begin
newpath 3049 1563 moveto
3049 1535 3049 1483 3049 1450 curveto
stroke
newpath 3047 1450 moveto
3049 1440 lineto
3052 1450 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3070 1502 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	mark_set_regs
gsave 10 dict begin
2478 1581 51 18 ellipse_path
stroke
gsave 10 dict begin
2478 1582 moveto (mark_set_regs) 81 14.00 -0.50 alignedtext
end grestore
end grestore

%	propagate_block -> mark_set_regs
newpath 2550 1722 moveto
2536 1693 2507 1638 2490 1606 curveto
stroke
newpath 2489 1609 moveto
2487 1599 lineto
2493 1607 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2549 1661 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	mark_set_1
gsave 10 dict begin
2299 1422 43 18 ellipse_path
stroke
gsave 10 dict begin
2299 1423 moveto (mark_set_1) 65 14.00 -0.50 alignedtext
end grestore
end grestore

%	mark_set_regs -> mark_set_1
newpath 2441 1569 moveto
2399 1554 2335 1531 2320 1519 curveto
2305 1506 2301 1473 2299 1449 curveto
stroke
newpath 2297 1450 moveto
2299 1440 lineto
2302 1450 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2341 1502 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_ue
gsave 10 dict begin
1944 1262 55 18 ellipse_path
stroke
gsave 10 dict begin
1944 1263 moveto (gen_rtx_fmt_ue) 89 14.00 -0.50 alignedtext
end grestore
end grestore

%	mark_set_1 -> gen_rtx_fmt_ue
newpath 2256 1419 moveto
2182 1412 2030 1395 1950 1360 curveto
1932 1351 1934 1315 1938 1289 curveto
stroke
newpath 1935 1289 moveto
1940 1280 lineto
1940 1290 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1971 1343 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_ue -> obstack_alloc_rtx
newpath 1924 1245 moveto
1894 1221 1837 1177 1797 1165 curveto
1756 1151 1593 1126 1502 1112 curveto
stroke
newpath 1504 1115 moveto
1494 1111 lineto
1504 1110 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1886 1184 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	try_combine
gsave 10 dict begin
1375 1422 45 18 ellipse_path
stroke
gsave 10 dict begin
1375 1423 moveto (try_combine) 70 14.00 -0.50 alignedtext
end grestore
end grestore

%	combine_instructions -> try_combine
newpath 1524 1563 moveto
1494 1534 1434 1477 1400 1445 curveto
stroke
newpath 1399 1447 moveto
1393 1439 lineto
1402 1444 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1503 1502 moveto (24720) 35 14.00 -0.50 alignedtext
end grestore

%	record_dead_and_set_regs
gsave 10 dict begin
1608 1422 84 18 ellipse_path
stroke
gsave 10 dict begin
1608 1423 moveto (record_dead_and_set_regs) 148 14.00 -0.50 alignedtext
end grestore
end grestore

%	combine_instructions -> record_dead_and_set_regs
newpath 1547 1563 moveto
1552 1541 1561 1504 1569 1483 curveto
1574 1473 1582 1460 1589 1448 curveto
stroke
newpath 1587 1447 moveto
1595 1440 lineto
1591 1450 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1590 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	try_combine -> xmalloc
newpath 1398 1406 moveto
1422 1391 1456 1367 1465 1360 curveto
1479 1349 1486 1329 1502 1324 curveto
1571 1301 1657 1323 1714 1280 curveto
1745 1257 1690 1192 1716 1165 curveto
1738 1143 2003 986 2021 962 curveto
2065 902 2168 619 2168 546 curveto
2168 546 2168 546 2168 307 curveto
2168 247 2436 180 2539 157 curveto
stroke
newpath 2538 155 moveto
2548 155 lineto
2539 160 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2122 786 moveto (32) 14 14.00 -0.50 alignedtext
end grestore

%	combinable_i3pat
gsave 10 dict begin
1030 1183 60 18 ellipse_path
stroke
gsave 10 dict begin
1030 1184 moveto (combinable_i3pat) 100 14.00 -0.50 alignedtext
end grestore
end grestore

%	try_combine -> combinable_i3pat
newpath 1337 1412 moveto
1297 1402 1235 1382 1203 1360 curveto
1165 1332 1155 1277 1122 1244 curveto
1110 1231 1087 1216 1067 1204 curveto
stroke
newpath 1066 1206 moveto
1059 1199 lineto
1069 1202 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1217 1343 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	recog_for_combine
gsave 10 dict begin
890 1023 65 18 ellipse_path
stroke
gsave 10 dict begin
890 1024 moveto (recog_for_combine) 109 14.00 -0.50 alignedtext
end grestore
end grestore

%	try_combine -> recog_for_combine
newpath 1357 1405 moveto
1337 1387 1307 1360 1307 1360 curveto
1279 1333 1251 1306 1222 1280 curveto
1182 1241 1146 1198 1102 1165 curveto
1055 1128 970 1073 923 1043 curveto
stroke
newpath 924 1047 moveto
917 1039 lineto
927 1042 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1236 1263 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	subst
gsave 10 dict begin
1120 1103 27 18 ellipse_path
stroke
gsave 10 dict begin
1120 1104 moveto (subst) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	try_combine -> subst
newpath 1365 1404 moveto
1344 1368 1294 1285 1257 1244 curveto
1238 1221 1200 1222 1179 1201 curveto
1163 1184 1144 1151 1133 1128 curveto
stroke
newpath 1131 1130 moveto
1129 1120 lineto
1136 1128 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1304 1263 moveto (8368) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_E
gsave 10 dict begin
1398 1262 52 18 ellipse_path
stroke
gsave 10 dict begin
1398 1263 moveto (gen_rtx_fmt_E) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	try_combine -> gen_rtx_fmt_E
newpath 1378 1404 moveto
1382 1375 1390 1319 1394 1287 curveto
stroke
newpath 1391 1290 moveto
1395 1280 lineto
1396 1290 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1411 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	rtvec_alloc
gsave 10 dict begin
1739 864 41 18 ellipse_path
stroke
gsave 10 dict begin
1739 865 moveto (rtvec_alloc) 62 14.00 -0.50 alignedtext
end grestore
end grestore

%	try_combine -> rtvec_alloc
newpath 1395 1406 moveto
1410 1392 1430 1374 1439 1360 curveto
1463 1324 1472 1280 1494 1244 curveto
1505 1226 1527 1218 1536 1201 curveto
1555 1164 1550 1116 1575 1085 curveto
1618 1033 1693 1015 1732 962 curveto
1744 946 1744 914 1742 891 curveto
stroke
newpath 1740 892 moveto
1741 882 lineto
1745 892 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1573 1184 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	combinable_i3pat -> xmalloc
newpath 989 1170 moveto
923 1146 797 1092 797 1023 curveto
797 1023 797 1023 797 307 curveto
797 270 811 212 847 209 curveto
1409 158 1973 154 2536 148 curveto
stroke
newpath 2536 146 moveto
2546 148 lineto
2536 151 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
811 706 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	recog_for_combine -> xmalloc
newpath 887 1005 moveto
878 936 843 682 843 546 curveto
843 546 843 546 843 307 curveto
843 270 854 212 890 209 curveto
1142 185 2300 155 2537 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
865 626 moveto (16) 14 14.00 -0.50 alignedtext
end grestore

%	subst -> xmalloc
newpath 1107 1087 moveto
1060 1030 907 832 907 705 curveto
907 705 907 705 907 307 curveto
907 239 1017 215 1083 209 curveto
1305 187 2319 156 2538 149 curveto
stroke
newpath 2536 147 moveto
2546 149 lineto
2536 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
921 626 moveto (64) 14 14.00 -0.50 alignedtext
end grestore

%	subst -> subst
gsave 10 dict begin
dotted
newpath 1140 1091 moveto
1153 1087 1165 1091 1165 1103 curveto
1165 1113 1157 1117 1147 1116 curveto
stroke
newpath 1150 1119 moveto
1140 1115 lineto
1150 1114 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1176 1104 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	simplify_rtx
gsave 10 dict begin
1120 944 45 18 ellipse_path
stroke
gsave 10 dict begin
1120 945 moveto (simplify_rtx) 69 14.00 -0.50 alignedtext
end grestore
end grestore

%	subst -> simplify_rtx
newpath 1120 1085 moveto
1120 1057 1120 1005 1120 972 curveto
stroke
newpath 1118 972 moveto
1120 962 lineto
1123 972 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1141 1024 moveto (8304) 28 14.00 -0.50 alignedtext
end grestore

%	simplify_rtx -> xmalloc
newpath 1089 931 moveto
1060 918 1019 899 996 882 curveto
953 847 1001 602 1001 546 curveto
1001 546 1001 546 1001 307 curveto
1001 191 1575 220 1690 209 curveto
1816 196 2377 160 2537 151 curveto
stroke
newpath 2536 149 moveto
2546 150 lineto
2536 154 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1015 547 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

%	make_compound_operation
gsave 10 dict begin
1137 785 88 18 ellipse_path
stroke
gsave 10 dict begin
1137 786 moveto (make_compound_operation) 156 14.00 -0.50 alignedtext
end grestore
end grestore

%	simplify_rtx -> make_compound_operation
newpath 1122 926 moveto
1125 897 1131 842 1134 810 curveto
stroke
newpath 1131 813 moveto
1135 803 lineto
1136 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1152 865 moveto (8224) 28 14.00 -0.50 alignedtext
end grestore

%	make_compound_operation -> xmalloc
newpath 1131 767 moveto
1108 692 1027 404 1142 369 curveto
1391 293 1648 248 1904 209 curveto
1998 194 2407 161 2538 152 curveto
stroke
newpath 2536 150 moveto
2546 151 lineto
2536 155 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1100 467 moveto (80) 14 14.00 -0.50 alignedtext
end grestore

%	make_compound_operation -> make_compound_operation
gsave 10 dict begin
dotted
newpath 1196 772 moveto
1221 771 1243 775 1243 785 curveto
1243 794 1226 798 1205 798 curveto
stroke
newpath 1206 801 moveto
1196 798 lineto
1206 796 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1254 786 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_rtx_combine
gsave 10 dict begin
1501 625 59 18 ellipse_path
stroke
gsave 10 dict begin
1501 626 moveto (gen_rtx_combine) 97 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_compound_operation -> gen_rtx_combine
newpath 1172 768 moveto
1218 746 1299 708 1347 687 curveto
1376 674 1422 656 1457 642 curveto
stroke
newpath 1454 641 moveto
1464 639 lineto
1456 645 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1368 706 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_combine -> rtx_alloc
newpath 1504 607 moveto
1508 584 1516 546 1529 528 curveto
1539 513 1561 497 1580 485 curveto
stroke
newpath 1578 483 moveto
1588 480 lineto
1581 487 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1550 547 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_E -> obstack_alloc_rtx
newpath 1399 1244 moveto
1401 1222 1404 1186 1409 1165 curveto
1411 1155 1418 1141 1424 1130 curveto
stroke
newpath 1422 1129 moveto
1429 1121 lineto
1426 1131 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1430 1184 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	rtvec_alloc -> _obstack_newchunk
newpath 1750 847 moveto
1780 800 1856 670 1820 607 curveto
1775 524 1721 446 1667 369 curveto
1660 358 1648 344 1636 332 curveto
stroke
newpath 1634 334 moveto
1629 325 lineto
1638 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1855 626 moveto (12216) 35 14.00 -0.50 alignedtext
end grestore

%	note_stores
gsave 10 dict begin
1791 1262 42 18 ellipse_path
stroke
gsave 10 dict begin
1791 1263 moveto (note_stores) 63 14.00 -0.50 alignedtext
end grestore
end grestore

%	record_dead_and_set_regs -> note_stores
newpath 1615 1404 moveto
1625 1380 1644 1340 1663 1324 curveto
1683 1306 1720 1289 1750 1278 curveto
stroke
newpath 1749 1276 moveto
1759 1274 lineto
1751 1280 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1684 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	record_dead_and_set_regs_1
gsave 10 dict begin
1678 1103 91 18 ellipse_path
stroke
gsave 10 dict begin
1678 1104 moveto (record_dead_and_set_regs_1) 162 14.00 -0.50 alignedtext
end grestore
end grestore

%	note_stores -> record_dead_and_set_regs_1
newpath 1779 1245 moveto
1758 1216 1719 1160 1696 1128 curveto
stroke
newpath 1695 1131 moveto
1691 1121 lineto
1699 1128 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1769 1184 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	record_value_for_reg
gsave 10 dict begin
1838 944 70 18 ellipse_path
stroke
gsave 10 dict begin
1838 945 moveto (record_value_for_reg) 120 14.00 -0.50 alignedtext
end grestore
end grestore

%	record_dead_and_set_regs_1 -> record_value_for_reg
newpath 1696 1085 moveto
1725 1056 1782 1000 1814 968 curveto
stroke
newpath 1811 967 moveto
1820 962 lineto
1815 971 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1798 1024 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	copy_rtx
gsave 10 dict begin
1893 785 35 18 ellipse_path
stroke
gsave 10 dict begin
1893 786 moveto (copy_rtx) 49 14.00 -0.50 alignedtext
end grestore
end grestore

%	record_value_for_reg -> copy_rtx
newpath 1846 926 moveto
1853 912 1861 894 1865 882 curveto
1872 864 1881 834 1886 812 curveto
stroke
newpath 1883 812 moveto
1888 803 lineto
1888 813 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1897 865 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	copy_rtx -> rtx_alloc
newpath 1878 768 moveto
1852 739 1799 679 1771 643 curveto
1744 606 1728 561 1697 528 curveto
1685 514 1661 497 1642 485 curveto
stroke
newpath 1641 487 moveto
1634 480 lineto
1644 483 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1792 626 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	copy_rtx -> copy_rtx
gsave 10 dict begin
dotted
newpath 1918 772 moveto
1932 770 1946 774 1946 785 curveto
1946 794 1936 798 1925 798 curveto
stroke
newpath 1928 801 moveto
1918 798 lineto
1928 796 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1957 786 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	regclass -> xmalloc
newpath 2526 1165 moveto
2523 1129 2519 1048 2530 1005 curveto
2540 971 2576 951 2599 926 curveto
2614 910 2639 902 2646 882 curveto
2675 799 2703 712 2703 625 curveto
2703 625 2703 625 2703 307 curveto
2703 259 2642 200 2605 169 curveto
stroke
newpath 2604 171 moveto
2598 163 lineto
2607 168 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2723 706 moveto (10800) 35 14.00 -0.50 alignedtext
end grestore

%	local_alloc -> xmalloc
newpath 2743 1005 moveto
2749 949 2765 779 2759 687 curveto
2757 639 2749 593 2749 546 curveto
2749 546 2749 546 2749 307 curveto
2749 272 2745 232 2720 209 curveto
2708 197 2652 175 2615 161 curveto
stroke
newpath 2615 164 moveto
2607 158 lineto
2617 159 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2777 626 moveto (2430) 28 14.00 -0.50 alignedtext
end grestore

%	global_alloc -> xmalloc
newpath 2565 2043 moveto
2629 2009 2794 1921 2890 1881 curveto
2946 1857 3019 1875 3066 1838 curveto
3097 1813 3063 1751 3089 1722 curveto
3140 1665 3232 1655 3284 1599 curveto
3306 1574 3290 1533 3291 1501 curveto
3291 1501 3291 1501 3291 307 curveto
3290 198 3088 232 2982 209 curveto
2931 197 2711 166 2619 153 curveto
stroke
newpath 2621 156 moveto
2611 152 lineto
2621 151 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3309 1104 moveto (108) 21 14.00 -0.50 alignedtext
end grestore

%	build_insn_chain
gsave 10 dict begin
2044 625 58 18 ellipse_path
stroke
gsave 10 dict begin
2044 626 moveto (build_insn_chain) 96 14.00 -0.50 alignedtext
end grestore
end grestore

%	global_alloc -> build_insn_chain
newpath 2506 2045 moveto
2479 2034 2442 2015 2424 1997 curveto
2384 1952 2358 1894 2336 1838 curveto
2308 1760 2294 1679 2275 1599 curveto
2261 1534 2231 1468 2244 1404 curveto
2250 1376 2258 1349 2269 1324 curveto
2277 1307 2293 1296 2298 1280 curveto
2303 1268 2303 1255 2298 1244 curveto
2230 1067 2094 745 2055 651 curveto
stroke
newpath 2053 653 moveto
2052 643 lineto
2058 651 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2294 1343 moveto (20360) 35 14.00 -0.50 alignedtext
end grestore

%	reload
gsave 10 dict begin
2530 1899 27 18 ellipse_path
stroke
gsave 10 dict begin
2530 1900 moveto (reload) 34 14.00 -0.50 alignedtext
end grestore
end grestore

%	global_alloc -> reload
newpath 2537 2040 moveto
2536 2011 2533 1956 2531 1924 curveto
stroke
newpath 2529 1927 moveto
2531 1917 lineto
2534 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2560 1980 moveto (19867) 35 14.00 -0.50 alignedtext
end grestore

%	new_insn_chain
gsave 10 dict begin
1935 466 55 18 ellipse_path
stroke
gsave 10 dict begin
1935 467 moveto (new_insn_chain) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	build_insn_chain -> new_insn_chain
newpath 2029 608 moveto
2017 594 2002 576 1993 564 curveto
1980 545 1962 514 1949 492 curveto
stroke
newpath 1947 494 moveto
1945 484 lineto
1952 492 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2018 547 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	bitmap_copy
gsave 10 dict begin
2055 466 47 18 ellipse_path
stroke
gsave 10 dict begin
2055 467 moveto (bitmap_copy) 73 14.00 -0.50 alignedtext
end grestore
end grestore

%	build_insn_chain -> bitmap_copy
newpath 2045 607 moveto
2047 579 2051 527 2053 494 curveto
stroke
newpath 2051 494 moveto
2054 484 lineto
2055 494 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2072 547 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	new_insn_chain -> _obstack_newchunk
newpath 1920 448 moveto
1899 424 1860 383 1830 369 curveto
1790 349 1721 331 1671 320 curveto
stroke
newpath 1673 323 moveto
1664 318 lineto
1674 318 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1899 388 moveto (16288) 35 14.00 -0.50 alignedtext
end grestore

%	bitmap_copy -> _obstack_newchunk
newpath 2038 449 moveto
2013 425 1965 381 1930 369 curveto
1865 345 1751 326 1678 316 curveto
stroke
newpath 1681 319 moveto
1671 315 lineto
1681 314 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2009 388 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	reload -> xmalloc
newpath 2540 1882 moveto
2554 1860 2577 1823 2591 1802 curveto
2602 1786 2619 1774 2628 1758 curveto
2673 1679 2734 1606 2754 1519 curveto
2822 1227 2819 923 2819 625 curveto
2819 625 2819 625 2819 307 curveto
2819 266 2782 231 2748 209 curveto
2732 198 2658 173 2614 159 curveto
stroke
newpath 2617 163 moveto
2608 157 lineto
2618 158 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2840 1024 moveto (15755) 35 14.00 -0.50 alignedtext
end grestore

%	init_elim_table
gsave 10 dict begin
2969 864 52 18 ellipse_path
stroke
gsave 10 dict begin
2969 865 moveto (init_elim_table) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	reload -> init_elim_table
newpath 2553 1889 moveto
2578 1878 2616 1858 2632 1838 curveto
2679 1780 2696 1703 2736 1642 curveto
2749 1622 2783 1620 2789 1599 curveto
2852 1391 2940 997 2963 891 curveto
stroke
newpath 2960 891 moveto
2965 882 lineto
2965 892 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2853 1423 moveto (40) 14 14.00 -0.50 alignedtext
end grestore

%	reload_as_needed
gsave 10 dict begin
2424 1740 60 18 ellipse_path
stroke
gsave 10 dict begin
2424 1741 moveto (reload_as_needed) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	reload -> reload_as_needed
newpath 2512 1885 moveto
2497 1872 2474 1853 2464 1838 curveto
2452 1820 2441 1789 2433 1766 curveto
stroke
newpath 2431 1768 moveto
2430 1758 lineto
2436 1766 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2485 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_elim_table -> xmalloc
newpath 2971 846 moveto
2975 813 2982 744 2982 705 curveto
2982 705 2982 705 2982 307 curveto
2982 257 2917 227 2870 209 curveto
2835 194 2687 168 2617 155 curveto
stroke
newpath 2620 158 moveto
2611 154 lineto
2621 153 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2996 547 moveto (40) 14 14.00 -0.50 alignedtext
end grestore

%	emit_reload_insns
gsave 10 dict begin
2348 1581 61 18 ellipse_path
stroke
gsave 10 dict begin
2348 1582 moveto (emit_reload_insns) 102 14.00 -0.50 alignedtext
end grestore
end grestore

%	reload_as_needed -> emit_reload_insns
newpath 2415 1722 moveto
2402 1693 2375 1638 2360 1606 curveto
stroke
newpath 2359 1609 moveto
2357 1599 lineto
2363 1607 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2416 1661 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_reload
gsave 10 dict begin
2401 1422 41 18 ellipse_path
stroke
gsave 10 dict begin
2401 1423 moveto (gen_reload) 62 14.00 -0.50 alignedtext
end grestore
end grestore

%	emit_reload_insns -> gen_reload
newpath 2354 1563 moveto
2363 1534 2382 1479 2393 1447 curveto
stroke
newpath 2390 1449 moveto
2395 1440 lineto
2395 1450 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2402 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_move_insn
gsave 10 dict begin
2232 1262 54 18 ellipse_path
stroke
gsave 10 dict begin
2232 1263 moveto (gen_move_insn) 88 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_reload -> gen_move_insn
newpath 2371 1409 moveto
2365 1407 2359 1405 2354 1404 curveto
2298 1387 2236 1384 2182 1360 curveto
2161 1350 2189 1310 2211 1284 curveto
stroke
newpath 2207 1284 moveto
2216 1279 lineto
2211 1288 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2204 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_move_insn -> emit_move_insn_1
newpath 2217 1244 moveto
2198 1221 2162 1182 2135 1165 curveto
2110 1148 2066 1131 2032 1119 curveto
stroke
newpath 2034 1122 moveto
2025 1117 lineto
2035 1117 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2196 1184 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	reload_cse_regs_1
gsave 10 dict begin
2035 1899 62 18 ellipse_path
stroke
gsave 10 dict begin
2035 1900 moveto (reload_cse_regs_1) 103 14.00 -0.50 alignedtext
end grestore
end grestore

%	reload_cse_regs -> reload_cse_regs_1
newpath 2085 2041 moveto
2070 2028 2053 2011 2046 1997 curveto
2038 1979 2036 1948 2035 1926 curveto
stroke
newpath 2033 1927 moveto
2035 1917 lineto
2038 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2067 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	reload_combine
gsave 10 dict begin
2620 387 55 18 ellipse_path
stroke
gsave 10 dict begin
2620 388 moveto (reload_combine) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	reload_cse_regs -> reload_combine
newpath 2107 2040 moveto
2110 1999 2118 1902 2109 1881 curveto
2104 1864 2086 1854 2080 1838 curveto
2076 1826 2076 1813 2080 1802 curveto
2086 1785 2104 1774 2109 1758 curveto
2119 1726 2125 1693 2125 1660 curveto
2125 1660 2125 1660 2125 1342 curveto
2125 1309 2113 1270 2131 1244 curveto
2151 1216 2198 1222 2224 1201 curveto
2264 1168 2288 1120 2324 1085 curveto
2399 1013 2491 959 2559 882 curveto
2599 837 2618 777 2641 723 curveto
2676 641 2642 477 2627 413 curveto
stroke
newpath 2625 415 moveto
2625 405 lineto
2630 414 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2149 1263 moveto (304) 21 14.00 -0.50 alignedtext
end grestore

%	reload_cse_regs_1 -> init_alias_analysis
newpath 2024 1881 moveto
2017 1868 2007 1850 2002 1838 curveto
1996 1819 2008 1788 2020 1766 curveto
stroke
newpath 2017 1766 moveto
2024 1758 lineto
2022 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2026 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	reload_combine -> xmalloc
newpath 2620 369 moveto
2619 333 2616 253 2608 209 curveto
2606 199 2600 185 2595 174 curveto
stroke
newpath 2593 175 moveto
2590 165 lineto
2597 173 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2636 308 moveto (304) 21 14.00 -0.50 alignedtext
end grestore

%	dbr_schedule -> gcc_obstack_init
newpath 3394 1881 moveto
3400 1859 3407 1823 3402 1802 curveto
3400 1793 3394 1779 3388 1767 curveto
stroke
newpath 3386 1768 moveto
3384 1758 lineto
3390 1766 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3423 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_resource_info
gsave 10 dict begin
3439 705 61 18 ellipse_path
stroke
gsave 10 dict begin
3439 706 moveto (init_resource_info) 102 14.00 -0.50 alignedtext
end grestore
end grestore

%	dbr_schedule -> init_resource_info
newpath 3407 1882 moveto
3439 1852 3500 1788 3501 1740 curveto
3501 1740 3501 1740 3501 864 curveto
3500 825 3470 764 3453 730 curveto
stroke
newpath 3452 733 moveto
3449 723 lineto
3456 730 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3522 1343 moveto (2104) 28 14.00 -0.50 alignedtext
end grestore

%	fill_eager_delay_slots
gsave 10 dict begin
2820 1660 72 18 ellipse_path
stroke
gsave 10 dict begin
2820 1661 moveto (fill_eager_delay_slots) 123 14.00 -0.50 alignedtext
end grestore
end grestore

%	dbr_schedule -> fill_eager_delay_slots
newpath 3354 1887 moveto
3346 1884 3339 1882 3333 1881 curveto
3272 1865 3207 1862 3150 1838 curveto
3138 1833 3141 1810 3150 1802 curveto
3172 1780 3210 1779 3233 1758 curveto
3241 1749 3244 1724 3233 1722 curveto
3123 1695 3009 1694 2897 1678 curveto
2892 1677 2885 1676 2878 1674 curveto
stroke
newpath 2881 1677 moveto
2871 1673 lineto
2881 1672 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3171 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	init_resource_info -> xmalloc
newpath 3426 687 moveto
3405 656 3363 589 3364 546 curveto
3364 546 3364 546 3364 307 curveto
3363 269 3344 216 3308 209 curveto
3308 209 2776 165 2621 152 curveto
stroke
newpath 2622 155 moveto
2612 151 lineto
2622 150 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3385 467 moveto (2104) 28 14.00 -0.50 alignedtext
end grestore

%	fill_slots_from_thread
gsave 10 dict begin
2467 1342 73 18 ellipse_path
stroke
gsave 10 dict begin
2467 1343 moveto (fill_slots_from_thread) 125 14.00 -0.50 alignedtext
end grestore
end grestore

%	fill_eager_delay_slots -> fill_slots_from_thread
newpath 2803 1642 moveto
2768 1607 2690 1527 2643 1483 curveto
2627 1467 2607 1454 2589 1440 curveto
2564 1419 2522 1386 2495 1364 curveto
stroke
newpath 2495 1367 moveto
2489 1359 lineto
2498 1363 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2701 1502 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	fill_slots_from_thread -> copy_rtx
newpath 2458 1324 moveto
2440 1287 2396 1202 2358 1165 curveto
2240 1050 2000 865 1920 805 curveto
stroke
newpath 1920 808 moveto
1913 800 lineto
1923 804 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2327 1104 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	shorten_branches -> xmalloc
newpath 3505 528 moveto
3499 463 3474 249 3381 209 curveto
3355 197 2783 160 2621 151 curveto
stroke
newpath 2622 154 moveto
2612 150 lineto
2622 149 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3507 388 moveto (5657) 28 14.00 -0.50 alignedtext
end grestore

%	loop_optimize -> init_alias_analysis
newpath 2991 1886 moveto
2983 1883 2975 1881 2969 1881 curveto
2780 1862 2588 1866 2399 1838 curveto
2310 1824 2160 1780 2084 1755 curveto
stroke
newpath 2086 1758 moveto
2077 1753 lineto
2087 1753 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
2420 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	scan_loop
gsave 10 dict begin
4117 1740 38 18 ellipse_path
stroke
gsave 10 dict begin
4117 1741 moveto (scan_loop) 56 14.00 -0.50 alignedtext
end grestore
end grestore

%	loop_optimize -> scan_loop
newpath 3070 1890 moveto
3151 1875 3316 1843 3335 1838 curveto
3347 1834 3339 1803 3353 1802 curveto
3592 1776 3833 1777 4073 1758 curveto
4076 1757 4080 1756 4083 1755 curveto
stroke
newpath 4080 1753 moveto
4090 1753 lineto
4081 1758 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3374 1821 moveto (6423) 28 14.00 -0.50 alignedtext
end grestore

%	scan_loop -> varray_init
newpath 4119 1722 moveto
4121 1693 4126 1638 4129 1606 curveto
stroke
newpath 4127 1609 moveto
4129 1599 lineto
4132 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4146 1661 moveto (6423) 28 14.00 -0.50 alignedtext
end grestore

%	find_basic_blocks -> varray_init
newpath 4179 2040 moveto
4180 1976 4185 1759 4174 1642 curveto
4172 1631 4164 1617 4154 1605 curveto
stroke
newpath 4153 1607 moveto
4148 1598 lineto
4156 1604 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4200 1821 moveto (2792) 28 14.00 -0.50 alignedtext
end grestore

%	make_edges
gsave 10 dict begin
4367 1899 45 18 ellipse_path
stroke
gsave 10 dict begin
4367 1900 moveto (make_edges) 69 14.00 -0.50 alignedtext
end grestore
end grestore

%	find_basic_blocks -> make_edges
newpath 4198 2041 moveto
4233 2012 4301 1954 4339 1922 curveto
stroke
newpath 4338 1920 moveto
4347 1915 lineto
4341 1923 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4314 1980 moveto (1088) 28 14.00 -0.50 alignedtext
end grestore

%	make_edge
gsave 10 dict begin
4325 1581 42 18 ellipse_path
stroke
gsave 10 dict begin
4325 1582 moveto (make_edge) 63 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_edges -> make_edge
newpath 4373 1881 moveto
4378 1867 4384 1849 4387 1838 curveto
4389 1826 4387 1813 4387 1802 curveto
4384 1748 4380 1692 4361 1642 curveto
4357 1632 4349 1619 4342 1607 curveto
stroke
newpath 4340 1608 moveto
4337 1598 lineto
4344 1606 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4401 1741 moveto (768) 21 14.00 -0.50 alignedtext
end grestore

%	make_label_edge
gsave 10 dict begin
4310 1740 59 18 ellipse_path
stroke
gsave 10 dict begin
4310 1741 moveto (make_label_edge) 97 14.00 -0.50 alignedtext
end grestore
end grestore

%	make_edges -> make_label_edge
newpath 4361 1881 moveto
4351 1852 4331 1797 4319 1765 curveto
stroke
newpath 4317 1768 moveto
4317 1758 lineto
4322 1767 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4363 1821 moveto (320) 21 14.00 -0.50 alignedtext
end grestore

%	make_edge -> xcalloc
newpath 4320 1563 moveto
4313 1534 4297 1479 4288 1447 curveto
stroke
newpath 4286 1450 moveto
4286 1440 lineto
4291 1449 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4328 1502 moveto (1088) 28 14.00 -0.50 alignedtext
end grestore

%	make_label_edge -> make_edge
newpath 4312 1722 moveto
4315 1693 4320 1638 4323 1606 curveto
stroke
newpath 4321 1609 moveto
4323 1599 lineto
4326 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4337 1661 moveto (320) 21 14.00 -0.50 alignedtext
end grestore

%	instantiate_virtual_regs_1
gsave 10 dict begin
4513 1899 83 18 ellipse_path
stroke
gsave 10 dict begin
4513 1900 moveto (instantiate_virtual_regs_1) 145 14.00 -0.50 alignedtext
end grestore
end grestore

%	instantiate_virtual_regs -> instantiate_virtual_regs_1
newpath 4476 2040 moveto
4483 2011 4498 1956 4506 1924 curveto
stroke
newpath 4503 1926 moveto
4508 1917 lineto
4508 1927 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4514 1980 moveto (800) 21 14.00 -0.50 alignedtext
end grestore

%	instantiate_virtual_regs_1 -> instantiate_virtual_regs_1
gsave 10 dict begin
dotted
newpath 4569 1886 moveto
4593 1885 4614 1889 4614 1899 curveto
4614 1908 4598 1912 4578 1912 curveto
stroke
newpath 4579 1915 moveto
4569 1912 lineto
4579 1910 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4625 1900 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	validate_change
gsave 10 dict begin
4513 1740 55 18 ellipse_path
stroke
gsave 10 dict begin
4513 1741 moveto (validate_change) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	instantiate_virtual_regs_1 -> validate_change
newpath 4513 1881 moveto
4513 1853 4513 1801 4513 1768 curveto
stroke
newpath 4511 1768 moveto
4513 1758 lineto
4516 1768 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4531 1821 moveto (800) 21 14.00 -0.50 alignedtext
end grestore

%	xrealloc
gsave 10 dict begin
4410 227 33 18 ellipse_path
stroke
gsave 10 dict begin
4410 228 moveto (xrealloc) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	validate_change -> xrealloc
newpath 4507 1722 moveto
4497 1690 4477 1621 4478 1581 curveto
4478 1581 4478 1581 4478 387 curveto
4477 347 4445 285 4425 251 curveto
stroke
newpath 4424 254 moveto
4421 244 lineto
4428 251 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4496 1024 moveto (800) 21 14.00 -0.50 alignedtext
end grestore

%	xrealloc -> ALLOC
newpath 4398 210 moveto
4376 179 4327 112 4298 75 curveto
4290 65 4277 52 4266 41 curveto
stroke
newpath 4264 43 moveto
4259 34 lineto
4268 39 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4384 149 moveto (800) 21 14.00 -0.50 alignedtext
end grestore

%	emit_note
gsave 10 dict begin
1917 2138 38 18 ellipse_path
stroke
gsave 10 dict begin
1917 2139 moveto (emit_note) 56 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_start_bindings -> emit_note
newpath 1979 2279 moveto
1967 2250 1943 2195 1928 2163 curveto
stroke
newpath 1927 2166 moveto
1925 2156 lineto
1931 2164 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1982 2219 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	emit_note -> rtx_alloc
newpath 1918 2120 moveto
1923 2055 1941 1838 1961 1722 curveto
1965 1702 1992 1695 2000 1678 curveto
2006 1667 2001 1653 2000 1642 curveto
1998 1588 2011 1532 1991 1483 curveto
1972 1433 1914 1406 1887 1360 curveto
1868 1326 1872 1282 1877 1244 curveto
1880 1229 1887 1215 1889 1201 curveto
1891 1189 1898 1173 1889 1165 curveto
1843 1117 1782 1087 1734 1041 curveto
1672 979 1642 888 1620 803 curveto
1599 716 1605 556 1609 492 curveto
stroke
newpath 1606 494 moveto
1610 484 lineto
1611 494 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1908 1343 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_start_loop
gsave 10 dict begin
1680 2218 62 18 ellipse_path
stroke
gsave 10 dict begin
1680 2219 moveto (expand_start_loop) 103 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_start_loop_continue_elsewhere -> expand_start_loop
newpath 1680 2359 moveto
1680 2331 1680 2279 1680 2246 curveto
stroke
newpath 1678 2246 moveto
1680 2236 lineto
1683 2246 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1701 2298 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_label_rtx
gsave 10 dict begin
1680 2058 48 18 ellipse_path
stroke
gsave 10 dict begin
1680 2059 moveto (gen_label_rtx) 76 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_start_loop -> gen_label_rtx
newpath 1680 2200 moveto
1680 2172 1680 2119 1680 2086 curveto
stroke
newpath 1678 2086 moveto
1680 2076 lineto
1683 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1701 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_iuuis00
gsave 10 dict begin
1562 1660 69 18 ellipse_path
stroke
gsave 10 dict begin
1562 1661 moveto (gen_rtx_fmt_iuuis00) 117 14.00 -0.50 alignedtext
end grestore
end grestore

%	gen_label_rtx -> gen_rtx_fmt_iuuis00
newpath 1682 2040 moveto
1685 1993 1693 1867 1673 1802 curveto
1662 1763 1616 1712 1587 1683 curveto
stroke
newpath 1586 1686 moveto
1581 1677 lineto
1590 1682 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1706 1900 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	gen_rtx_fmt_iuuis00 -> obstack_alloc_rtx
newpath 1533 1643 moveto
1510 1630 1479 1612 1461 1599 curveto
1360 1522 1258 1446 1165 1360 curveto
1137 1333 1151 1266 1183 1244 curveto
1229 1212 1294 1227 1342 1201 curveto
1356 1193 1394 1153 1419 1126 curveto
stroke
newpath 1415 1126 moveto
1424 1121 lineto
1419 1130 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1281 1423 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_stmt_with_iterators_1
gsave 10 dict begin
1379 2218 95 18 ellipse_path
stroke
gsave 10 dict begin
1379 2219 moveto (expand_stmt_with_iterators_1) 170 14.00 -0.50 alignedtext
end grestore
end grestore

%	iterator_expand -> expand_stmt_with_iterators_1
newpath 1283 2359 moveto
1303 2331 1340 2275 1363 2243 curveto
stroke
newpath 1360 2243 moveto
1367 2236 lineto
1364 2246 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1359 2298 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_expr_stmt
gsave 10 dict begin
1462 2058 62 18 ellipse_path
stroke
gsave 10 dict begin
1462 2059 moveto (expand_expr_stmt) 103 14.00 -0.50 alignedtext
end grestore
end grestore

%	expand_stmt_with_iterators_1 -> expand_expr_stmt
newpath 1388 2200 moveto
1403 2171 1432 2115 1449 2083 curveto
stroke
newpath 1446 2083 moveto
1453 2076 lineto
1450 2086 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1451 2139 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	expand_expr_stmt -> expand_expr
newpath 1456 2040 moveto
1448 2011 1430 1956 1421 1924 curveto
stroke
newpath 1419 1927 moveto
1419 1917 lineto
1424 1926 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1465 1980 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	finish_incomplete_decl
gsave 10 dict begin
748 2297 76 18 ellipse_path
stroke
gsave 10 dict begin
748 2298 moveto (finish_incomplete_decl) 131 14.00 -0.50 alignedtext
end grestore
end grestore

%	wrapup_global_declarations -> finish_incomplete_decl
newpath 621 2438 moveto
624 2415 629 2376 643 2359 curveto
655 2344 680 2329 703 2317 curveto
stroke
newpath 702 2315 moveto
712 2313 lineto
704 2319 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
664 2378 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	complete_array_type
gsave 10 dict begin
804 2138 69 18 ellipse_path
stroke
gsave 10 dict begin
804 2139 moveto (complete_array_type) 117 14.00 -0.50 alignedtext
end grestore
end grestore

%	finish_incomplete_decl -> complete_array_type
newpath 752 2279 moveto
757 2257 766 2221 773 2200 curveto
777 2190 783 2176 789 2165 curveto
stroke
newpath 787 2164 moveto
794 2156 lineto
791 2166 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
794 2219 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_index_type
gsave 10 dict begin
898 1979 59 18 ellipse_path
stroke
gsave 10 dict begin
898 1980 moveto (build_index_type) 98 14.00 -0.50 alignedtext
end grestore
end grestore

%	complete_array_type -> build_index_type
newpath 815 2120 moveto
832 2091 864 2036 883 2004 curveto
stroke
newpath 880 2004 moveto
887 1997 lineto
884 2007 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
883 2059 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	build_index_type -> make_node
newpath 909 1961 moveto
935 1920 997 1818 1026 1758 curveto
1044 1722 1023 1675 1002 1642 curveto
995 1630 982 1616 969 1604 curveto
stroke
newpath 967 1605 moveto
961 1597 lineto
970 1602 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1023 1821 moveto (4072) 28 14.00 -0.50 alignedtext
end grestore

%	lang_init -> check_newline
newpath 3720 2438 moveto
3720 2326 3722 1737 3722 1606 curveto
stroke
newpath 3720 1609 moveto
3722 1599 lineto
3725 1609 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
3741 2059 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_fprintf
gsave 10 dict begin
4162 2297 31 18 ellipse_path
stroke
gsave 10 dict begin
4162 2298 moveto (_fprintf) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	output_file_directive -> _fprintf
newpath 4103 2438 moveto
4115 2409 4139 2353 4152 2321 curveto
stroke
newpath 4148 2323 moveto
4155 2315 lineto
4153 2325 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4157 2378 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_doprnt
gsave 10 dict begin
4271 1820 32 18 ellipse_path
stroke
gsave 10 dict begin
4271 1821 moveto (_doprnt) 43 14.00 -0.50 alignedtext
end grestore
end grestore

%	_fprintf -> _doprnt
newpath 4170 2279 moveto
4192 2229 4256 2080 4287 1997 curveto
4301 1957 4287 1885 4278 1846 curveto
stroke
newpath 4276 1848 moveto
4276 1838 lineto
4281 1847 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4290 2059 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_doprnt -> _findbuf
newpath 4260 1803 moveto
4252 1789 4242 1771 4239 1758 curveto
4229 1726 4222 1693 4223 1660 curveto
4223 1660 4223 1660 4223 1422 curveto
4222 1385 4213 1322 4208 1287 curveto
stroke
newpath 4206 1290 moveto
4207 1280 lineto
4211 1290 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
4244 1582 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

endpage
grestore
end
restore

%%Trailer

cleartomark
countdictstack exch sub { end } repeat
restore

%%EOF

%%EndDocument
@endspecial 90 rotate dyy eop
%%Page: 71 77
71 76 bop Fo 94 -116 a(Chapter) 30 b(10:) 42 b(Pro\014ling) 2838
b(71) 830 1808 y @beginspecial 35 @llx 36 @lly 312 @urx
253 @ury 2770 @rwi @setspecial
%%BeginDocument: images/collect2.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: allocation call graph
%%Creator: dot version gviz1.5.1 (09-29-99)
%%BoundingBox: 35 36 312 253
%%Pages: 1
%%DocumentFonts: Times-Roman

save
countdictstack
mark
newpath
/showpage {} def

%%EndProlog

%%Page 1 1

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 35 279 217 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0.2379 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	START
gsave 10 dict begin
327 890 32 18 ellipse_path
stroke
gsave 10 dict begin
327 891 moveto (START) 44 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start
gsave 10 dict begin
327 802 27 18 ellipse_path
stroke
gsave 10 dict begin
327 803 moveto (_start) 31 14.00 -0.50 alignedtext
end grestore
end grestore

%	START -> _start
newpath 327 872 moveto
327 860 327 843 327 829 curveto
stroke
newpath 325 830 moveto
327 820 lineto
330 830 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
352 847 moveto (52168) 35 14.00 -0.50 alignedtext
end grestore

%	main
gsave 10 dict begin
327 714 27 18 ellipse_path
stroke
gsave 10 dict begin
327 715 moveto (main) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	_start -> main
newpath 327 784 moveto
327 772 327 755 327 741 curveto
stroke
newpath 325 742 moveto
327 732 lineto
330 742 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
352 759 moveto (52168) 35 14.00 -0.50 alignedtext
end grestore

%	xcalloc
gsave 10 dict begin
30 572 30 18 ellipse_path
stroke
gsave 10 dict begin
30 573 moveto (xcalloc) 40 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> xcalloc
newpath 300 713 moveto
253 710 157 701 108 678 curveto
83 665 58 625 43 598 curveto
stroke
newpath 41 600 moveto
39 590 lineto
46 598 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
126 671 moveto (396) 21 14.00 -0.50 alignedtext
end grestore

%	_obstack_begin
gsave 10 dict begin
745 194 54 18 ellipse_path
stroke
gsave 10 dict begin
745 195 moveto (_obstack_begin) 87 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> _obstack_begin
newpath 352 706 moveto
372 699 399 689 414 678 curveto
447 654 478 624 502 590 curveto
573 485 691 286 731 218 curveto
stroke
newpath 727 220 moveto
734 212 lineto
732 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
613 465 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	prefix_from_env
gsave 10 dict begin
433 572 57 18 ellipse_path
stroke
gsave 10 dict begin
433 573 moveto (prefix_from_env) 94 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> prefix_from_env
newpath 339 698 moveto
358 673 394 625 416 596 curveto
stroke
newpath 412 597 moveto
420 590 lineto
417 600 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
386 671 moveto (2027) 28 14.00 -0.50 alignedtext
end grestore

%	find_a_file
gsave 10 dict begin
144 464 41 18 ellipse_path
stroke
gsave 10 dict begin
144 465 moveto (find_a_file) 61 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> find_a_file
newpath 303 705 moveto
274 693 228 670 215 644 curveto
194 603 167 529 153 490 curveto
stroke
newpath 151 492 moveto
150 482 lineto
156 490 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
233 627 moveto (677) 21 14.00 -0.50 alignedtext
end grestore

%	make_temp_file
gsave 10 dict begin
267 356 55 18 ellipse_path
stroke
gsave 10 dict begin
267 357 moveto (make_temp_file) 90 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> make_temp_file
newpath 311 699 moveto
293 681 266 649 267 626 curveto
267 626 267 626 267 464 curveto
266 442 267 407 267 383 curveto
stroke
newpath 265 384 moveto
267 374 lineto
270 384 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
281 573 moveto (64) 14 14.00 -0.50 alignedtext
end grestore

%	do_tlink
gsave 10 dict begin
766 626 33 18 ellipse_path
stroke
gsave 10 dict begin
766 627 moveto (do_tlink) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	main -> do_tlink
newpath 354 712 moveto
416 707 570 694 656 678 curveto
678 674 711 657 735 644 curveto
stroke
newpath 733 642 moveto
743 639 lineto
736 646 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
719 671 moveto (40860) 35 14.00 -0.50 alignedtext
end grestore

%	ALLOC
gsave 10 dict begin
443 18 33 18 ellipse_path
stroke
gsave 10 dict begin
443 19 moveto (ALLOC) 46 14.00 -0.50 alignedtext
end grestore
end grestore

%	xcalloc -> ALLOC
newpath 27 554 moveto
24 530 19 489 19 464 curveto
19 464 19 464 19 106 curveto
19 47 293 26 401 20 curveto
stroke
newpath 400 18 moveto
410 20 lineto
400 23 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
37 303 moveto (396) 21 14.00 -0.50 alignedtext
end grestore

%	xmalloc
gsave 10 dict begin
443 106 33 18 ellipse_path
stroke
gsave 10 dict begin
443 107 moveto (xmalloc) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	_obstack_begin -> xmalloc
newpath 704 182 moveto
646 165 536 133 480 117 curveto
stroke
newpath 481 120 moveto
472 115 lineto
482 115 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
646 151 moveto (28396) 35 14.00 -0.50 alignedtext
end grestore

%	xmalloc -> ALLOC
newpath 443 88 moveto
443 76 443 59 443 45 curveto
stroke
newpath 441 46 moveto
443 36 lineto
446 46 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
468 63 moveto (43572) 35 14.00 -0.50 alignedtext
end grestore

%	prefix_from_string
gsave 10 dict begin
433 410 63 18 ellipse_path
stroke
gsave 10 dict begin
433 411 moveto (prefix_from_string) 106 14.00 -0.50 alignedtext
end grestore
end grestore

%	prefix_from_env -> prefix_from_string
newpath 433 554 moveto
433 525 433 472 433 438 curveto
stroke
newpath 431 438 moveto
433 428 lineto
436 438 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
454 519 moveto (2027) 28 14.00 -0.50 alignedtext
end grestore

%	prefix_from_string -> xmalloc
newpath 431 392 moveto
430 372 427 339 426 320 curveto
424 302 423 284 423 266 curveto
422 254 421 241 423 230 curveto
427 203 433 161 438 133 curveto
stroke
newpath 435 133 moveto
440 124 lineto
440 134 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
441 249 moveto (863) 21 14.00 -0.50 alignedtext
end grestore

%	add_prefix
gsave 10 dict begin
478 302 40 18 ellipse_path
stroke
gsave 10 dict begin
478 303 moveto (add_prefix) 60 14.00 -0.50 alignedtext
end grestore
end grestore

%	prefix_from_string -> add_prefix
newpath 441 392 moveto
448 375 459 348 467 328 curveto
stroke
newpath 464 328 moveto
471 320 lineto
469 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
484 357 moveto (1164) 28 14.00 -0.50 alignedtext
end grestore

%	add_prefix -> xmalloc
newpath 475 284 moveto
468 249 455 172 448 132 curveto
stroke
newpath 446 134 moveto
446 124 lineto
451 133 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
479 195 moveto (280) 21 14.00 -0.50 alignedtext
end grestore

%	xstrdup
gsave 10 dict begin
579 194 31 18 ellipse_path
stroke
gsave 10 dict begin
579 195 moveto (xstrdup) 42 14.00 -0.50 alignedtext
end grestore
end grestore

%	add_prefix -> xstrdup
newpath 494 285 moveto
511 267 539 237 558 216 curveto
stroke
newpath 555 215 moveto
564 210 lineto
559 219 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
563 249 moveto (884) 21 14.00 -0.50 alignedtext
end grestore

%	xstrdup -> xmalloc
newpath 558 180 moveto
536 166 498 142 473 125 curveto
stroke
newpath 472 127 moveto
465 120 lineto
475 123 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
541 151 moveto (884) 21 14.00 -0.50 alignedtext
end grestore

%	find_a_file -> xmalloc
newpath 141 446 moveto
138 422 132 381 133 356 curveto
133 356 133 356 133 194 curveto
132 152 319 122 404 111 curveto
stroke
newpath 401 109 moveto
411 110 lineto
401 114 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
151 303 moveto (677) 21 14.00 -0.50 alignedtext
end grestore

%	make_temp_file -> xmalloc
newpath 271 338 moveto
280 295 308 184 352 142 curveto
364 130 386 122 407 115 curveto
stroke
newpath 403 114 moveto
413 113 lineto
404 119 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
316 249 moveto (64) 14 14.00 -0.50 alignedtext
end grestore

%	tlink_init
gsave 10 dict begin
766 518 36 18 ellipse_path
stroke
gsave 10 dict begin
766 519 moveto (tlink_init) 51 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_tlink -> tlink_init
newpath 766 608 moveto
766 591 766 565 766 545 curveto
stroke
newpath 764 546 moveto
766 536 lineto
769 546 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
791 573 moveto (32660) 35 14.00 -0.50 alignedtext
end grestore

%	dump_file
gsave 10 dict begin
947 518 39 18 ellipse_path
stroke
gsave 10 dict begin
947 519 moveto (dump_file) 57 14.00 -0.50 alignedtext
end grestore
end grestore

%	do_tlink -> dump_file
newpath 789 613 moveto
821 593 879 558 916 536 curveto
stroke
newpath 913 535 moveto
923 532 lineto
916 539 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
907 573 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	tlink_init -> _obstack_begin
newpath 765 500 moveto
761 446 751 284 747 220 curveto
stroke
newpath 745 222 moveto
746 212 lineto
750 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
777 357 moveto (8144) 28 14.00 -0.50 alignedtext
end grestore

%	hash_table_init
gsave 10 dict begin
886 410 53 18 ellipse_path
stroke
gsave 10 dict begin
886 411 moveto (hash_table_init) 85 14.00 -0.50 alignedtext
end grestore
end grestore

%	tlink_init -> hash_table_init
newpath 784 502 moveto
804 484 837 455 860 434 curveto
stroke
newpath 858 432 moveto
867 427 lineto
862 436 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
871 465 moveto (24516) 35 14.00 -0.50 alignedtext
end grestore

%	hash_table_init_n
gsave 10 dict begin
891 302 60 18 ellipse_path
stroke
gsave 10 dict begin
891 303 moveto (hash_table_init_n) 99 14.00 -0.50 alignedtext
end grestore
end grestore

%	hash_table_init -> hash_table_init_n
newpath 887 392 moveto
888 375 889 349 890 329 curveto
stroke
newpath 888 330 moveto
890 320 lineto
893 330 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
914 357 moveto (24516) 35 14.00 -0.50 alignedtext
end grestore

%	hash_table_init_n -> _obstack_begin
newpath 868 285 moveto
843 267 803 238 776 217 curveto
stroke
newpath 773 218 moveto
767 210 lineto
776 214 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
867 249 moveto (12108) 35 14.00 -0.50 alignedtext
end grestore

%	_obstack_newchunk
gsave 10 dict begin
970 194 67 18 ellipse_path
stroke
gsave 10 dict begin
970 195 moveto (_obstack_newchunk) 114 14.00 -0.50 alignedtext
end grestore
end grestore

%	hash_table_init_n -> _obstack_newchunk
newpath 904 284 moveto
916 266 937 239 952 219 curveto
stroke
newpath 949 219 moveto
957 212 lineto
953 222 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
968 249 moveto (12408) 35 14.00 -0.50 alignedtext
end grestore

%	_obstack_newchunk -> xmalloc
newpath 915 184 moveto
849 172 741 153 677 142 curveto
623 133 533 119 482 112 curveto
stroke
newpath 485 115 moveto
475 111 lineto
485 110 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
793 151 moveto (12408) 35 14.00 -0.50 alignedtext
end grestore

%	__filbuf
gsave 10 dict begin
1088 410 33 18 ellipse_path
stroke
gsave 10 dict begin
1088 411 moveto (__filbuf) 45 14.00 -0.50 alignedtext
end grestore
end grestore

%	dump_file -> __filbuf
newpath 967 503 moveto
992 483 1036 450 1063 429 curveto
stroke
newpath 1059 428 moveto
1069 425 lineto
1062 433 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1062 465 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_findbuf
gsave 10 dict begin
1123 248 34 18 ellipse_path
stroke
gsave 10 dict begin
1123 249 moveto (_findbuf) 48 14.00 -0.50 alignedtext
end grestore
end grestore

%	__filbuf -> _findbuf
newpath 1092 392 moveto
1099 363 1110 305 1118 273 curveto
stroke
newpath 1115 276 moveto
1119 266 lineto
1120 276 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1124 357 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

%	_findbuf -> ALLOC
newpath 1110 231 moveto
1096 212 1070 183 1049 176 curveto
889 122 590 51 483 27 curveto
stroke
newpath 483 30 moveto
474 25 lineto
484 25 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
1004 151 moveto (8200) 28 14.00 -0.50 alignedtext
end grestore

endpage
grestore
end
restore

%%Trailer

cleartomark
countdictstack exch sub { end } repeat
restore

%%EOF

%%EndDocument
@endspecial 219 2032 a(The) 41 b(allo) s(cation) k(call) e(graph) e
(for) h(the) g(prelink) m(er,) p Fl 45 w(collect2) p
Fo(,) g(is) g(a) g(lot) h(simpler) f(than) f(the) h(previous) 94
2132 y(graphs.) f(There) 31 b(are) g(no) f(cycles) i(in) f(the) g
(graph) f(and) g(most) h(of) g(the) g(allo) s(cations) h(are) g
(concerned) e(with) h(main-) 94 2232 y(taining) j(hash) f(tables.) 49
b(Once) 33 b(again,) p Fl 35 w(xmalloc\(\)) p Fo 31 w(and) p
Fl 32 w(_obstack_begin\(\)) p Fo 29 w(are) g(the) h(t) m(w) m(o) g
(main) f(sources) 94 2331 y(of) e(memory) f(allo) s(cation.) 219
2456 y(As) 25 b(can) g(b) s(e) f(seen,) j(a) e(lot) h(of) f
(information) g(ab) s(out) f(the) h(memory) g(allo) s(cation) i(b) s
(eha) m(viour) e(of) g(a) g(program) g(can) 94 2556 y(b) s(e) i
(obtained) g(b) m(y) g(creating) h(a) g(visual) f(image) h(of) f(the) g
(allo) s(cation) j(call) e(graph.) 39 b(In) 26 b(addition,) i
(di\013eren) m(t) g(graphs) 94 2655 y(can) h(b) s(e) f(pro) s(duced) e
(to) j(sho) m(w) f(call) i(coun) m(ts) f(instead) f(of) h(allo) s
(cated) h(b) m(ytes) f(\(via) g(the) f(`) p Fl(--counts) p
Fo(') f(option\),) j(and) 94 2755 y(graphs) j(of) g(unfreed) e(memory) i
(can) g(b) s(e) f(pro) s(duced) f(to) j(detect) g(where) e(memory) h
(leaks) h(come) g(from) e(\(via) i(the) 94 2854 y(`) p
Fl(--leaks) p Fo(') 29 b(option\).) 219 2979 y(Although) p
Fl 40 w(mprof) p Fo 39 w(do) s(es) 40 b(not) h(curren) m(tly) f
(o\013er) h(this) f(facilit) m(y) -8 b(,) 45 b(a) c(small) g(to) s(ol) g
(called) p Fl 41 w(profdiff) p Fo 38 w(whic) m(h) 94
3079 y(rep) s(orts) 62 b(di\013erences) g(b) s(et) m(w) m(een) g(t) m
(w) m(o) i(mpatrol) e(pro\014ling) f(output) h(\014les) g(can) g(b) s
(e) f(do) m(wnloaded) h(from) p Fl 94 3178 a
(http://www.cbmamiga.demon.) o(co.u) o(k/m) o(patr) o(ol/p) o(atc) o
(hes/) o(mpat) o(rol) o(_pat) o(ch3.) o(tar) o(.gz) p
Fo(.) 219 3303 y(Muc) m(h) 23 b(of) h(the) f(functionalit) m(y) h(of) g
(this) f(implemen) m(tation) h(of) g(memory) f(allo) s(cation) i
(pro\014ling) e(is) g(based) g(up) s(on) p Fl 94 3402
a(mprof) p Fo 33 w(b) m(y) 35 b(Benjamin) f(Zorn) f(and) h(P) m(aul) h
(Hil\014nger,) g(whic) m(h) g(w) m(as) f(written) h(as) f(a) h(researc)
m(h) g(pro) 5 b(ject) 35 b(and) e(ran) 94 3502 y(on) c(MIPS,) f(SP) -8
b(AR) m(C) 28 b(and) g(V) -10 b(AX) 29 b(mac) m(hines.) 40
b(Ho) m(w) m(ev) m(er,) 31 b(the) e(pro\014ling) f(output) g(\014les) g
(are) h(incompatible,) h(the) 94 3602 y(tables) f(displa) m(y) m(ed) g
(ha) m(v) m(e) g(a) g(di\013eren) m(t) f(format,) i(and) d(the) h(w) m
(a) m(y) h(they) g(are) f(implemen) m(ted) h(is) f(en) m(tirely) h
(di\013eren) m(t.) p 90 rotate dyy eop
%%Page: 72 78
72 77 bop Fo 94 -116 a(72) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 73 79
73 78 bop Fo 94 -116 a(Chapter) 30 b(11:) 42 b(T) -8
b(racing) 2878 b(73) p Fk 94 365 a(11) 81 b(T) -13 b(racing) p
Fo 219 610 a(In) 38 b(addition) i(to) g(pro\014ling,) h(the) e(mpatrol)
g(library) g(also) h(has) f(the) g(capabilit) m(y) i(to) f(concisely) g
(trace) h(the) 94 709 y(details) 23 b(of) f(ev) m(ery) h(dynamic) e
(memory) h(allo) s(cation,) k(reallo) s(cation) e(and) d(deallo) s
(cation) j(o) m(v) m(er) f(the) f(lifetime) h(of) f(an) m(y) 94
809 y(program) 28 b(that) g(it) g(w) m(as) g(link) m(ed) f(and) g(run) f
(with.) 40 b(This) 26 b(information) i(can) g(then) f(b) s(e) g(used) g
(to) h(calculate) i(trends) 94 909 y(in) 40 b(a) h(program's) e(memory)
h(allo) s(cation) j(b) s(eha) m(viour) c(and) h(pro) m(vide) g(details)
h(on) e(the) i(lifetimes) g(of) f(memory) 94 1008 y(allo) s(cations.) h
(In) 23 b(con) m(trast) i(to) f(pro\014ling,) g(it) g(can) g(also) g(b)
s(e) f(used) g(to) h(displa) m(y) f(a) h(program's) f(memory) h(allo) s
(cation) 94 1108 y(b) s(eha) m(viour) 35 b(in) f(real-time,) k(along) e
(with) e(some) h(useful) f(information) h(that) g(can) g(b) s(e) f
(displa) m(y) m(ed) i(in) e(graphical) 94 1208 y(or) d(tabular) f
(form.) 219 1339 y(Only) 38 b(allo) s(cations,) k(reallo) s(cations) f
(and) c(deallo) s(cations) j(are) f(recorded.) 64 b(The) 38
b(in) m(ten) m(tion) h(of) g(tracing) g(is) 94 1439 y(to) 30
b(gather) g(concise) g(details) g(ab) s(out) f(eac) m(h) h(memory) f
(allo) s(cation) j(ev) m(en) m(t) e(rather) f(than) g(complete) i
(information) 94 1538 y(ab) s(out) 36 b(some) g(or) g(all) h(memory) e
(allo) s(cations.) 60 b(As) 35 b(a) i(result,) g(the) f(mpatrol) g(log)
h(\014les) f(and) f(pro\014ling) g(output) 94 1638 y(\014les) 23
b(con) m(tain) h(more) f(detailed) h(information) f(ab) s(out) g
(individual) f(memory) h(allo) s(cations,) j(whereas) d(the) g(tracing)
94 1737 y(output) 30 b(\014les) h(con) m(tain) g(a) g(broader) f(view) h
(of) f(allo) s(cation) j(b) s(eha) m(viour) d(throughout) g(the) g(en) m
(tire) i(program.) 219 1869 y(Memory) 23 b(allo) s(cation) h(tracing) f
(is) f(disabled) g(b) m(y) g(default,) i(but) e(can) g(b) s(e) g
(enabled) g(using) g(the) g(`) p Fl(TRACE) p Fo(') f(option.) 94
1968 y(This) k(writes) g(all) g(of) g(the) g(tracing) h(data) g(to) f
(a) h(\014le) f(called) h(`) p Fl(mpatrol.trace) p Fo(') 21
b(in) k(the) g(curren) m(t) g(directory) g(at) h(the) 94
2068 y(end) f(of) g(program) g(execution,) j(but) c(the) h(name) g(of) h
(this) f(\014le) g(can) g(b) s(e) g(c) m(hanged) h(using) e(the) h(`) p
Fl(TRACEFILE) p Fo(') e(option) 94 2168 y(and) 32 b(the) g(default) g
(directory) g(in) g(whic) m(h) g(to) g(place) h(these) f(\014les) g
(can) g(b) s(e) g(c) m(hanged) g(b) m(y) g(setting) h(the) p
Fl 32 w(TRACEDIR) p Fo 94 2267 a(en) m(vironmen) m(t) e(v) -5
b(ariable.) 219 2399 y(The) p Fl 42 w(mptrace) p Fo 40
w(command) 42 b(is) g(a) h(to) s(ol) g(designed) f(to) h(read) f(a) h
(tracing) g(output) f(\014le) g(pro) s(duced) f(b) m(y) h(the) 94
2498 y(mpatrol) 28 b(library) e(and) g(displa) m(y) h(the) g(tracing) g
(information) g(that) h(w) m(as) f(obtained.) 40 b(The) 26
b(tracing) i(information) 94 2598 y(is) 22 b(a) h(concise) g(enco) s
(ded) e(trace) i(of) f(all) h(of) f(the) g(memory) g(allo) s(cation) i
(ev) m(en) m(ts) f(that) g(o) s(ccurred) e(during) g(a) h(program's) 94
2697 y(execution,) 30 b(and) e(can) g(b) s(e) f(deco) s(ded) h(in) m
(to) g(tabular) g(or) g(graphical) h(form,) f(along) h(with) f(an) m(y)
g(relev) -5 b(an) m(t) 29 b(statistics) 94 2797 y(that) i(can) g(b) s
(e) f(calculated.) 219 2928 y(The) p Fl 30 w(mptrace) p
Fo 29 w(command) g(also) i(attempts) g(to) f(calculate) i(the) e
(endianness) f(of) h(the) g(pro) s(cessor) f(that) h(pro-) 94
3028 y(duced) 26 b(the) h(tracing) g(output) f(\014le) g(and) g(reads) g
(the) h(\014le) f(accordingly) -8 b(.) 41 b(This) 26
b(means) g(that) h(it) g(is) f(p) s(ossible) g(to) h(use) p
Fl 94 3128 a(mptrace) p Fo 24 w(on) f(a) g(SP) -8 b(AR) m(C) 25
b(mac) m(hine) h(to) h(read) e(a) h(tracing) h(output) e(\014le) h
(that) g(w) m(as) g(pro) s(duced) e(on) h(an) h(In) m(tel) g(80x86) 94
3227 y(mac) m(hine,) 35 b(for) d(example.) 49 b(Ho) m(w) m(ev) m(er,) 35
b(this) e(will) g(only) g(w) m(ork) g(if) f(the) h(pro) s(cessor) g
(that) g(pro) s(duced) e(the) i(tracing) 94 3327 y(output) d(\014le) g
(has) g(the) g(same) h(w) m(ord) e(size) i(as) g(the) f(pro) s(cessor) f
(that) i(is) f(running) f(the) p Fl 30 w(mptrace) p Fo
28 w(command.) 40 b(F) -8 b(or) 94 3427 y(example,) 32
b(reading) e(a) h(64-bit) h(tracing) f(output) f(\014le) g(on) h(a) f
(32-bit) i(mac) m(hine) f(will) g(not) f(w) m(ork.) 219
3558 y(In) j(addition,) h(the) g(tracing) g(output) f(\014le) h(also) g
(con) m(tains) h(the) e(v) m(ersion) h(n) m(um) m(b) s(er) e(of) i(the)
g(mpatrol) f(library) 94 3657 y(whic) m(h) g(pro) s(duced) f(it.) 49
b(If) 33 b(the) g(ma) 5 b(jor) 33 b(v) m(ersion) h(n) m(um) m(b) s(er) e
(that) i(is) f(em) m(b) s(edded) f(in) h(the) g(tracing) h(output) f
(\014le) g(is) 94 3757 y(new) m(er) c(that) f(the) h(v) m(ersion) g(of)
f(mpatrol) g(that) p Fl 29 w(mptrace) p Fo 26 w(came) i(with) d(then) p
Fl 28 w(mptrace) p Fo 27 w(will) h(refuse) g(to) h(read) f(the) 94
3857 y(\014le.) 41 b(Y) -8 b(ou) 30 b(should) e(do) m(wnload) i(the) f
(latest) i(v) m(ersion) f(of) f(mpatrol) h(in) f(that) h(case.) 42
b(The) 28 b(reason) i(for) f(storing) h(the) 94 3956
y(v) m(ersion) 35 b(n) m(um) m(b) s(er) d(is) i(so) g(that) g(the) g
(format) g(of) g(the) g(tracing) h(output) e(\014le) h(can) g(c) m
(hange) h(b) s(et) m(w) m(een) f(releases) h(of) 94 4056
y(mpatrol,) c(but) f(also) h(allo) m(w) p Fl 32 w(mptrace) p
Fo 29 w(to) g(cop) s(e) f(with) g(older) h(v) m(ersions.) 219
4187 y(Along) 46 b(with) f(the) g(usual) g(`) p Fl(--help) p
Fo(') f(and) g(`) p Fl(--version) p Fo(') g(options,) 49
b(the) p Fl 45 w(mptrace) p Fo 44 w(command) c(accepts) 94
4287 y(sev) m(eral) 37 b(other) e(options) g(and) f(tak) m(es) i(one) f
(optional) h(argumen) m(t) f(whic) m(h) g(m) m(ust) g(b) s(e) f(a) h(v)
-5 b(alid) 35 b(mpatrol) g(tracing) 94 4387 y(output) d(\014lename) g
(but) f(if) h(it) g(is) g(omitted) h(then) e(it) i(will) f(use) g(`) p
Fl(mpatrol.trace) p Fo(') c(as) k(the) g(name) g(of) g(the) g(\014le) g
(to) 94 4486 y(use.) 41 b(If) 29 b(the) h(\014lename) g(argumen) m(t) g
(is) g(giv) m(en) h(as) f(`) p Fl(-) p Fo(') g(then) f(the) h(standard)
f(input) g(\014le) h(stream) g(will) h(b) s(e) e(used) g(as) 94
4586 y(the) i(tracing) g(output) f(\014le.) 219 4717
y(Normally) -8 b(,) 48 b(the) p Fl 43 w(mptrace) p Fo
41 w(command) 43 b(will) g(simply) g(read) g(in) f(the) i(tracing) g
(output) e(\014le) h(and) g(displa) m(y) 94 4817 y(an) m(y) f
(statistics) g(it) g(has) e(gathered.) 73 b(Ho) m(w) m(ev) m(er,) 45
b(it) c(can) g(also) h(b) s(e) e(instructed) h(to) g(displa) m(y) g(a) g
(tracing) h(table) 94 4916 y(whic) m(h) 29 b(displa) m(ys) g(useful) e
(details) j(for) f(ev) m(ery) g(ev) m(en) m(t) h(in) e(the) h(tracing) h
(output) e(\014le.) 40 b(The) 29 b(tracing) g(table) h(can) f(b) s(e) 94
5016 y(displa) m(y) m(ed) 37 b(with) f(the) h(`) p Fl(--verbose) p
Fo(') d(option.) 58 b(If) 36 b(the) h(mpatrol) f(library) g(w) m(as) g
(able) h(to) g(obtain) g(source-lev) m(el) 94 5116 y(information) d
(for) f(one) h(or) g(more) f(memory) h(ev) m(en) m(ts) g(then) g(this) f
(can) h(b) s(e) e(displa) m(y) m(ed) j(in) e(the) g(tracing) i(table) f
(b) m(y) 94 5215 y(adding) c(the) h(`) p Fl(--source) p
Fo(') e(option.) 219 5347 y(A) 45 b(C) g(source) g(\014le) h(con) m
(taining) g(a) g(trace-driv) m(en) g(memory) f(allo) s(cation) j(sim) m
(ulation) e(program) f(can) h(b) s(e) 94 5446 y(written) 31
b(with) g(the) g(`) p Fl(--sim-file) p Fo(') e(option.) 43
b(This) 30 b(program) h(will) g(ha) m(v) m(e) h(the) f(iden) m(tical) i
(memory) e(allo) s(cation) 94 5546 y(b) s(eha) m(viour) 24
b(to) g(the) g(program) f(whic) m(h) g(pro) s(duced) f(the) i(original)
h(trace) f(\014le.) 39 b(This) 22 b(option) i(can) g(b) s(e) f(useful) g
(to) h(use) 94 5645 y(if) 31 b(y) m(ou) g(wish) e(to) i(determine) g
(whic) m(h) f(mallo) s(c) h(library) f(is) h(most) f(suitable) h(to) g
(use) f(for) h(a) f(sp) s(eci\014c) g(application.) p
90 rotate dyy eop
%%Page: 74 80
74 79 bop Fo 94 -116 a(74) 3377 b(mpatrol) 219 365 y(A) 25
b(trace) g(\014le) g(in) f(Heap) i(Allo) s(cation) g(T) -8
b(race) 26 b(F) -8 b(ormat) 26 b(\(HA) -8 b(TF\)) 26
b(can) f(also) g(b) s(e) f(written) h(out) g(b) m(y) f(the) p
Fl 25 w(mptrace) p Fo 94 465 a(command) 34 b(b) m(y) g(using) g(the) g
(`) p Fl(--hatf-file) p Fo(') e(option.) 52 b(It) 35
b(tak) m(es) g(the) g(name) f(of) g(the) g(HA) -8 b(TF) 35
b(trace) g(\014le) g(to) g(b) s(e) 94 565 y(written) 24
b(as) h(an) e(argumen) m(t) i(and) e(writes) h(out) g(the) g(HA) -8
b(TF) 25 b(v) m(ersion) f(of) g(the) g(mpatrol) h(tracing) f(output) g
(\014le) g(giv) m(en) 94 664 y(as) h(input) f(when) f(it) i(is) f(b) s
(eing) g(pro) s(cessed.) 39 b(The) 23 b(HA) -8 b(TF) 26
b(\014le) e(format) h(is) f(an) h(attempt) g(to) g(standardise) f
(trace) i(\014le) 94 764 y(formats) g(for) e(memory) h(allo) s(cation) i
(tracing,) h(and) c(is) h(b) s(eing) g(dev) m(elop) s(ed) g(b) m(y) g
(Benjamin) g(Zorn,) g(Ric) m(hard) g(Jones) 94 863 y(and) 35
b(T) -8 b(rish) m(ul) 34 b(Chilim) m(bi.) 55 b(There) 34
b(is) h(a) g(HA) -8 b(TF) 36 b(DTD) f(lo) s(cated) i(in) d(the) h(`) p
Fl(extra) p Fo(') f(directory) i(in) e(the) i(mpatrol) 94
963 y(distribution.) 219 1087 y(The) p Fl 33 w(mptrace) p
Fo 32 w(command) e(will) g(normally) g(b) s(e) f(built) g(with) h(GUI) p
Fh 2485 1054 a(1) p Fo 2556 1087 a(supp) s(ort) e(on) i(UNIX) g
(platforms) f(that) 94 1187 y(are) e(running) e(X) i(Windo) m(ws.) 41
b(This) 30 b(means) h(that) g(a) g(graphical) g(memory) g(map) f
(displa) m(y) h(of) f(the) h(heap) g(will) g(b) s(e) 94
1286 y(sho) m(wn) e(in) h(a) f(windo) m(w) g(ev) m(ery) i(time) p
Fl 30 w(mptrace) p Fo 27 w(is) f(run) e(with) h(the) h(`) p
Fl(--gui) p Fo(') e(option.) 41 b(This) 29 b(displa) m(y) h(is) f(up) s
(dated) 94 1386 y(ev) m(ery) e(time) g(a) f(new) f(ev) m(en) m(t) j(is)
e(read) g(from) f(the) h(tracing) h(output) f(\014le) g(and) f(b) m(y) h
(default) g(uses) f(the) h(colour) h(red) e(for) 94 1485
y(in) m(ternal) 34 b(heap) f(memory) f(\(used) h(b) m(y) f(the) h
(mpatrol) g(library\),) h(blue) e(for) h(unallo) s(cated) g(heap) g
(memory) -8 b(,) 34 b(blac) m(k) 94 1585 y(for) g(allo) s(cated) i
(memory) e(and) g(white) g(for) g(free) g(memory) -8
b(.) 52 b(Options) 34 b(exist) g(to) h(c) m(hange) g(this) f(colour) h
(sc) m(heme,) 94 1685 y(as) c(w) m(ell) g(as) g(the) g(dimensions) e
(of) i(the) f(dra) m(wing) h(area) g(and) f(the) g(windo) m(w.) 219
1809 y(By) f(default,) h(it) g(is) f(assumed) f(that) h(the) h(start) f
(address) f(of) h(the) h(\014rst) e(ev) m(en) m(t) i(that) g(app) s
(ears) e(in) h(the) g(tracing) 94 1908 y(output) j(\014le) g(is) g(the)
g(base) h(address) e(of) h(the) g(memory) g(map) g(displa) m(y) m(ed) g
(in) g(the) g(windo) m(w.) 45 b(If) 32 b(the) g(heap) g(gro) m(ws) 94
2008 y(do) m(wn) m(w) m(ards) h(then) g(this) g(assumption) f(will) i
(b) s(e) e(incorrect) i(\(since) g(nothing) f(will) g(b) s(e) g(displa)
m(y) m(ed\)) h(and) e(so) i(the) 94 2107 y(`) p Fl(--base) p
Fo(') h(option) h(m) m(ust) f(b) s(e) g(used) f(to) j(sp) s(ecify) e(a)
g(reasonable) i(lo) m(w) m(er) f(b) s(ound) e(for) h(the) h(\014nal) f
(memory) g(map.) 94 2207 y(In) j(addition,) i(the) e(visible) g
(address) f(space) h(displa) m(y) m(ed) h(in) e(the) h(memory) g(map) g
(is) f(\014xed) h(to) g(a) g(certain) h(size) 94 2307
y(\(4) f(megab) m(ytes) g(b) m(y) e(default\),) j(but) d(this) g(can) h
(b) s(e) f(c) m(hanged) h(with) f(the) h(`) p Fl(--space) p
Fo(') e(option.) 59 b(A) 37 b(small) g(dela) m(y) 94
2406 y(can) 29 b(also) g(b) s(e) e(added) g(after) i(dra) m(wing) e
(eac) m(h) j(memory) d(allo) s(cation) k(ev) m(en) m(t) e(through) e
(the) i(use) e(of) h(the) g(`) p Fl(--delay) p Fo(') 94
2506 y(option.) 219 2630 y(The) 40 b(follo) m(wing) j(options) e(are) g
(sp) s(eci\014c) g(to) h(the) f(GUI) g(v) m(ersion) g(of) p
Fl 42 w(mptrace) p Fo 38 w(and) g(are) g(read) g(b) m(y) g(the) g(X) 94
2729 y(command) 36 b(line) h(parser) e(rather) h(than) g(directly) g(b)
m(y) p Fl 36 w(mptrace) p Fo(.) 56 b(As) 36 b(a) g(result) g(they) g
(are) h(parsed) e(according) 94 2829 y(to) i(X) f(to) s(olkit) h(rules)
e(and) g(do) h(not) g(app) s(ear) f(in) g(the) h(quic) m(k-reference) h
(option) g(summary) d(pro) s(duced) g(b) m(y) i(the) 94
2929 y(`) p Fl(--help) p Fo(') 30 b(option.) 41 b(The) 30
b(application) h(class) h(for) e(setting) p Fl 31 w(mptrace) p
Fo 29 w(X) g(resources) g(is) h(called) g(`) p Fl(MPTrace) p
Fo('.) 94 3077 y(`) p Fl(--alloc) p Fo(') p Fl 29 w(<) p
Fe(colour) p Fl 7 w(>) p Fo 574 3177 a(Sp) s(eci\014es) k(the) h
(colour) h(to) f(use) f(for) h(displa) m(ying) g(allo) s(cated) i
(memory) -8 b(.) 57 b(The) 35 b(default) h(colour) g(is) 574
3276 y(`) p Fl(black) p Fo('.) 94 3424 y(`) p Fl(--base) p
Fo(') p Fl 30 w(<) p Fe(address) p Fl 4 w(>) p Fo 574
3524 a(Sp) s(eci\014es) 44 b(the) f(base) h(address) f(of) h(the) g
(visible) g(address) f(space) h(displa) m(y) m(ed) h(in) e(the) h
(memory) 574 3624 y(map.) 60 b(The) 36 b(default) h(address) f(is) h
(calculated) i(at) e(run-time) f(from) h(the) g(start) g(address) f(of)
h(the) 574 3723 y(\014rst) 30 b(memory) g(allo) s(cation) j(ev) m(en) m
(t) f(in) e(the) h(tracing) g(output) f(\014le.) 94 3871
y(`) p Fl(--delay) p Fo(') p Fl 29 w(<) p Fe(length) p
Fl(>) p Fo 574 3971 a(Sp) s(eci\014es) h(that) g(a) h(small) f(dela) m
(y) h(of) g(a) f(certain) h(length) g(should) e(b) s(e) g(added) g
(after) i(dra) m(wing) f(eac) m(h) 574 4071 y(memory) g(allo) s(cation)
i(ev) m(en) m(t.) 42 b(The) 30 b(dela) m(y) i(do) s(es) e(not) h
(corresp) s(ond) e(to) i(a) g(sp) s(eci\014c) f(unit) g(of) h(time,) 574
4170 y(but) i(exp) s(erimen) m(tation) i(with) e(the) g(length) h
(should) f(yield) g(satisfactory) i(results.) 50 b(The) 33
b(default) 574 4270 y(dela) m(y) f(is) e(`) p Fl(0) p
Fo('.) 94 4418 y(`) p Fl(--free) p Fo(') p Fl 30 w(<) p
Fe(colour) p Fl 7 w(>) p Fo 574 4518 a(Sp) s(eci\014es) 25
b(the) h(colour) g(to) h(use) e(for) h(displa) m(ying) g(free) f
(memory) -8 b(.) 40 b(The) 25 b(default) h(colour) g(is) g(`) p
Fl(white) p Fo('.) 94 4666 y(`) p Fl(--height) p Fo(') p
Fl 29 w(<) p Fe(size) p Fl 5 w(>) p Fo 574 4765 a(Sp) s(eci\014es) k
(the) h(heigh) m(t) g(\(in) f(pixels\)) h(of) g(the) f(dra) m(wing) h
(area.) 41 b(The) 30 b(default) h(heigh) m(t) g(is) f(`) p
Fl(512) p Fo('.) 94 4914 y(`) p Fl(--internal) p Fo(') p
Fl 29 w(<) p Fe(colour) p Fl 7 w(>) p Fo 574 5013 a(Sp) s(eci\014es) g
(the) h(colour) f(to) h(use) f(for) g(displa) m(ying) h(in) m(ternal) g
(heap) f(memory) -8 b(.) 41 b(The) 30 b(default) g(colour) 574
5113 y(is) h(`) p Fl(red) p Fo('.) 94 5261 y(`) p Fl(--space) p
Fo(') p Fl 29 w(<) p Fe(size) p Fl 5 w(>) p Fo 574 5361
a(Sp) s(eci\014es) 22 b(the) g(size) h(\(in) g(megab) m(ytes\)) h(of) e
(the) g(visible) h(address) e(space) i(displa) m(y) m(ed) g(in) f(the) g
(memory) 574 5460 y(map.) 41 b(The) 30 b(default) g(size) i(is) e(`) p
Fl(4) p Fo('.) p 94 5553 1200 4 v Fh 143 5614 a(1) p
Fg 219 5645 a(Graphical) d(User) f(In) n(terface.) p
90 rotate dyy eop
%%Page: 75 81
75 80 bop Fo 94 -116 a(Chapter) 30 b(11:) 42 b(T) -8
b(racing) 2878 b(75) 94 365 y(`) p Fl(--unalloc) p Fo(') p
Fl 29 w(<) p Fe(colour) p Fl 7 w(>) p Fo 574 465 a(Sp) s(eci\014es) 39
b(the) h(colour) h(to) f(use) f(for) h(displa) m(ying) g(unallo) s
(cated) g(heap) g(memory) -8 b(.) 69 b(The) 39 b(default) 574
565 y(colour) 31 b(is) g(`) p Fl(blue) p Fo('.) 94 712
y(`) p Fl(--view-height) p Fo(') p Fl 28 w(<) p Fe(size) p
Fl 5 w(>) p Fo 574 812 a(Sp) s(eci\014es) f(the) h(heigh) m(t) g(\(in) f
(pixels\)) h(of) g(the) f(windo) m(w.) 41 b(The) 29 b(default) i(heigh)
m(t) g(is) g(`) p Fl(256) p Fo('.) 94 959 y(`) p Fl(--view-width) p
Fo(') p Fl 28 w(<) p Fe(size) p Fl 5 w(>) p Fo 574 1059
a(Sp) s(eci\014es) f(the) h(width) e(\(in) i(pixels\)) g(of) f(the) h
(windo) m(w.) 40 b(The) 30 b(default) g(width) g(is) g(`) p
Fl(256) p Fo('.) 94 1207 y(`) p Fl(--width) p Fo(') p
Fl 29 w(<) p Fe(size) p Fl 5 w(>) p Fo 574 1306 a(Sp) s(eci\014es) g
(the) h(width) e(\(in) i(pixels\)) g(of) f(the) h(dra) m(wing) f(area.)
42 b(The) 29 b(default) i(width) f(is) g(`) p Fl(512) p
Fo('.) 219 1454 y(W) -8 b(e'll) 41 b(no) m(w) d(lo) s(ok) h(at) h(an) e
(example) h(of) g(using) f(the) h(mpatrol) g(library) f(to) h(trace) h
(the) f(dynamic) f(memory) 94 1554 y(allo) s(cations) 25
b(in) d(a) g(program.) 38 b(As) 22 b(with) g(the) h(previous) e(c) m
(hapter) i(w) m(e) g(will) f(attempt) i(to) f(trace) g(a) g(real) g
(application) 94 1653 y(in) 43 b(order) g(to) g(examine) h(its) f
(memory) g(allo) s(cation) i(b) s(eha) m(viour.) 78 b(Since) 43
b(all) h(of) f(the) g(follo) m(wing) i(steps) d(w) m(ere) 94
1753 y(p) s(erformed) d(on) h(a) g(Solaris) g(mac) m(hine,) k(the) c(`)
p Fl(--dynamic) p Fo(') e(option) i(of) g(the) p Fl 41
w(mpatrol) p Fo 38 w(command) f(w) m(as) i(used) 94 1853
y(to) 36 b(allo) m(w) g(us) d(to) j(replace) f(the) g(system) f(memory)
h(allo) s(cation) h(routines) f(with) f(mpatrol's) h(routines) f
(without) 94 1952 y(requiring) f(a) g(relink.) 48 b(It) 33
b(also) h(means) f(that) h(w) m(e) f(can) g(trace) h(all) g(of) f(the) g
(c) m(hild) g(pro) s(cesses) g(that) h(w) m(ere) f(created) 94
2052 y(b) m(y) e(the) f(application) i(as) f(w) m(ell.) 219
2175 y(The) k(application) j(that) e(w) m(e) h(are) f(going) h(to) f
(trace) h(is) f(the) h(GNU) f(C) g(compiler,) i(as) e(b) s(efore,) h
(and) e(w) m(e) i(will) 94 2275 y(discard) 27 b(the) g(tracing) h
(information) g(generated) g(for) e(the) i(assem) m(bler) f(and) g
(link) m(er.) 40 b(All) 27 b(of) h(the) f(command) g(line) 94
2375 y(examples) 37 b(use) f(the) p Fl 37 w(bash) p Fo
35 w(shell) h(but) e(in) h(most) h(cases) g(these) g(will) g(w) m(ork) f
(in) g(other) h(shells) f(with) g(a) h(minimal) 94 2474
y(amoun) m(t) 31 b(of) g(c) m(hanges.) 219 2598 y(W) -8
b(e) 32 b(will) g(use) f(`) p Fl(tests/profile/test2.c) p
Fo(') 25 b(as) 32 b(the) f(source) g(\014le) g(to) h(compile) g(with) p
Fl 31 w(gcc) p Fo 30 w(and) f(w) m(e'll) h(turn) 94 2698
y(on) k(optimisation) g(in) f(order) f(to) i(cause) p
Fl 36 w(gcc) p Fo 34 w(to) g(allo) s(cate) i(a) d(bit) g(more) h
(memory) f(than) g(it) g(w) m(ould) g(normally) -8 b(.) 94
2797 y(Note) 29 b(that) f(use) f(is) g(also) h(made) f(of) g(the) h
(format) f(string) g(feature) h(of) f(the) g(`) p Fl(--log-file) p
Fo(') e(and) i(`) p Fl(--trace-file) p Fo(') 94 2897
y(options) j(so) g(that) g(it) g(is) g(clear) h(whic) m(h) e(mpatrol) h
(log) h(and) d(tracing) j(output) e(\014les) h(b) s(elong) f(to) i
(whic) m(h) e(pro) s(cesses.) p Fl 334 3025 a(bash$) 47
b(mpatrol) f(--dynamic) f(--log-file=\045p.log) e
(--trace-file=\045p.trace) 1003 3128 y(--trace) i(gcc) i(-O) h(-o) f
(test2) f(test2.c) 334 3232 y(bash$) h(ls) g(*.log) f(*.trace) 334
3336 y(as.log) 428 b(cc1.trace) 284 b(cpp.log) 380 b(gcc.trace) 334
3440 y(as.trace) 332 b(collect2.log) 140 b(cpp.trace) 284
b(ld.log) 334 3544 y(cc1.log) 380 b(collect2.trace) 44
b(gcc.log) 380 b(ld.trace) p Fo 219 3667 a(As) 32 b(men) m(tioned) h
(ab) s(o) m(v) m(e,) h(w) m(e're) f(not) g(in) m(terested) g(in) f(the)
h(mpatrol) f(log) i(and) d(tracing) i(output) f(\014les) h(for) p
Fl 32 w(as) p Fo 94 3767 a(and) p Fl 28 w(ld) p Fo 27
w(so) 28 b(w) m(e'll) h(delete) g(them.) 40 b(W) -8 b(e) 29
b(can) f(no) m(w) g(use) p Fl 28 w(mptrace) p Fo 26 w(to) g(deco) s(de)
g(eac) m(h) i(of) e(the) g(tracing) h(output) e(\014les) 94
3866 y(pro) s(duced) f(and) g(write) g(their) h(con) m(ten) m(ts) i(in)
d(tabular) h(form) f(to) h(the) g(standard) f(output) g(\014le) h
(stream,) h(whic) m(h) f(can) 94 3966 y(b) s(e) 34 b(redirected) g(to) h
(a) g(\014le) f(for) g(later) h(viewing.) 53 b(Y) -8
b(ou) 34 b(can) h(\014nd) d(these) j(tracing) g(output) f(\014les) g
(in) g(the) g(`) p Fl(extra) p Fo(') 94 4066 y(directory) d(in) f(the) h
(mpatrol) g(distribution.) 219 4189 y(Note) f(that) f(b) s(oth) e(the) i
(tracing) g(\014les) f(men) m(tioned) h(ab) s(o) m(v) m(e) h(and) d
(the) i(examples) g(b) s(elo) m(w) f(treat) i(reallo) s(cations) 94
4289 y(as) 41 b(a) f(deallo) s(cation) i(follo) m(w) m(ed) f(b) m(y) f
(an) f(allo) s(cation.) 72 b(This) 39 b(w) m(as) h(the) g(b) s(eha) m
(viour) f(in) h(older) g(v) m(ersions) g(of) g(the) 94
4389 y(mpatrol) 28 b(library) e(and) h(I) f(ha) m(v) m(en't) j(b) s
(othered) d(to) h(up) s(date) g(the) g(\014les.) 39 b(Ho) m(w) m(ev) m
(er,) 30 b(it) e(shouldn't) e(a\013ect) i(the) f(\014nal) 94
4488 y(outcome) k(in) e(an) m(y) h(w) m(a) m(y) -8 b(.) 41
b(In) 29 b(addition,) h(as) f(the) h(`) p Fl(mpatrol.h) p
Fo(') d(header) i(\014le) h(w) m(as) f(not) h(included) e(b) m(y) i(an)
m(y) f(of) h(the) 94 4588 y(source) f(\014les) f(that) h(comprise) g
(the) f(compiler) h(and) f(its) g(to) s(olset,) j(there) d(w) m(as) h
(no) f(source-lev) m(el) j(information) d(for) 94 4687
y(memory) j(ev) m(en) m(ts.) 42 b(If) 30 b(there) g(w) m(as,) h(the) g
(`) p Fl(--source) p Fo(') e(option) h(could) h(ha) m(v) m(e) g(b) s
(een) f(used) g(to) h(displa) m(y) f(it.) p Fl 334 4815
a(bash$) 47 b(rm) g(as.log) f(as.trace) g(ld.log) g(ld.trace) 334
4919 y(bash$) h(ls) g(*.trace) 334 5023 y(cc1.trace) 284
b(collect2.trace) 44 b(cpp.trace) 284 b(gcc.trace) 334
5127 y(bash$) 47 b(for) g(file) f(in) i(*.trace) 334
5230 y(>) g(do) 334 5334 y(>) 239 b(mptrace) 46 b(--verbose) f($file) h
(>`basename) f($file) i(.trace`.res) 334 5438 y(>) h(done) 334
5542 y(bash$) f(ls) g(*.res) 334 5645 y(cc1.res) 380
b(collect2.res) 140 b(cpp.res) 380 b(gcc.res) p 90 rotate
dyy eop
%%Page: 76 82
76 81 bop Fo 94 -116 a(76) 3377 b(mpatrol) 219 365 y(F) -8
b(or) 35 b(the) g(purp) s(oses) e(of) h(this) h(example) g(w) m(e) g
(will) g(only) f(b) s(e) g(lo) s(oking) h(at) h(the) e(tracing) i
(results) e(for) g(the) p Fl 35 w(cc1) p Fo 94 465 a(compiler) 42
b(whic) m(h) f(are) h(no) m(w) f(deco) s(ded) g(in) g(the) h(\014le) f
(`) p Fl(cc1.res) p Fo('.) 72 b(If) 41 b(y) m(ou) h(examine) g(this) f
(\014le) g(y) m(ou) h(will) f(see) 94 565 y(something) 31
b(similar) g(to) g(the) g(follo) m(wing.) 42 b(Note) 32
b(that) f(the) f(`) p Fl(...) p Fo(') g(marks) g(text) i(that) e(has) h
(b) s(een) e(remo) m(v) m(ed.) p Fl 382 768 a(event) 94
b(type) 238 b(index) 94 b(allocation) 284 b(size) 189
b(life) 142 b(count) 238 b(bytes) 334 872 y(------) 94
b(------) g(------) g(----------) f(--------) g(------) h(------) g
(--------) 716 976 y(internal) 380 b(0x0024E000) 236
b(32768) 716 1079 y(internal) 380 b(0x00256000) 236 b(32768) 716
1183 y(internal) 380 b(0x0025E000) 236 b(32768) 716 1287
y(reserve) 428 b(0x00266000) 284 b(8192) 716 1391 y(internal) 380
b(0x00268000) 236 b(32768) 716 1494 y(internal) 380 b(0x00270000) 236
b(32768) 716 1598 y(internal) 380 b(0x00278000) 236 b(32768) 716
1702 y(internal) 380 b(0x00280000) 236 b(32768) 716 1806
y(internal) 380 b(0x00288000) 236 b(32768) 716 1910 y(internal) 380
b(0x00290000) 236 b(32768) 334 2013 y(...) 716 2117 y(reserve) 428
b(0x00308000) 236 b(16384) 573 2221 y(1) 95 b(alloc) 333
b(19) 95 b(0x00266568) 284 b(4072) 714 b(1) 286 b(4072) 573
2325 y(2) 95 b(alloc) 333 b(21) 95 b(0x0030A008) 284
b(4072) 714 b(2) 286 b(8144) 573 2428 y(3) 95 b(alloc) 333
b(22) 95 b(0x0030AFF0) 284 b(4072) 714 b(3) 239 b(12216) 716
2532 y(reserve) 428 b(0x0030C000) 284 b(8192) 573 2636
y(4) 95 b(alloc) 333 b(23) 95 b(0x0030BFD8) 284 b(4072) 714
b(4) 239 b(16288) 573 2740 y(5) 95 b(alloc) 333 b(24) 95
b(0x0030CFC0) 284 b(4072) 714 b(5) 239 b(20360) 716 2844
y(reserve) 428 b(0x0030E000) 284 b(8192) 573 2947 y(6) 95
b(alloc) 333 b(25) 95 b(0x0030DFA8) 284 b(4072) 714 b(6) 239
b(24432) 573 3051 y(7) 95 b(alloc) 333 b(26) 95 b(0x00267550) 379
b(42) 715 b(7) 239 b(24474) 334 3155 y(...) 430 3259
y(1712) 94 b(free) 333 b(650) 95 b(0x00373FF0) 284 b(4072) 237
b(827) h(398) 190 b(321191) 430 3362 y(1713) 94 b(free) 333
b(649) 95 b(0x00376FA8) 284 b(4072) 237 b(829) h(397) 190
b(317119) 430 3466 y(1714) 94 b(alloc) 238 b(1074) 94
b(0x00376FA8) 284 b(4072) 619 b(398) 190 b(321191) 430
3570 y(1715) 94 b(free) 333 b(233) 95 b(0x0031ED18) 284
b(8200) 189 b(1498) 238 b(397) 190 b(312991) 430 3674
y(1716) 94 b(free) 333 b(234) 95 b(0x00320D20) 284 b(8200) 189
b(1498) 238 b(396) 190 b(304791) 430 3778 y(1717) 94
b(free) 333 b(299) 95 b(0x00355CC8) 331 b(620) 190 b(1426) 238
b(395) 190 b(304171) 430 3881 y(1718) 94 b(free) 333
b(655) 95 b(0x00353A28) 284 b(1016) 237 b(823) h(394) 190
b(303155) 430 3985 y(1719) 94 b(free) 333 b(303) 95 b(0x0035E000) 284
b(5096) 189 b(1424) 238 b(393) 190 b(298059) 430 4089
y(1720) 94 b(free) 333 b(653) 95 b(0x00354E60) 331 b(152) 238
b(827) g(392) 190 b(297907) 430 4193 y(1721) 94 b(free) 333
b(654) 95 b(0x00354EF8) 331 b(152) 238 b(827) g(391) 190
b(297755) 334 4400 y(memory) 47 b(allocation) e(tracing) g(statistics)
334 4504 y(--------------------------) o(----) o(---) o(---) 334
4608 y(allocated:) g(1056) i(\(540776) f(bytes\)) 334
4711 y(freed:) 237 b(665) 47 b(\(243021) f(bytes\)) 334
4815 y(unfreed:) 141 b(391) 47 b(\(297755) f(bytes\)) 334
4919 y(peak:) 285 b(489) 47 b(\(375169) f(bytes\)) 334
5023 y(reserved:) 93 b(48) 48 b(\(409600) d(bytes\)) 334
5127 y(internal:) 93 b(27) 48 b(\(884736) d(bytes\)) 334
5230 y(total:) 237 b(75) 48 b(\(1294336) d(bytes\)) 334
5438 y(smallest) h(size:) g(3) i(bytes) 334 5542 y(largest) e(size:) 94
b(8200) 47 b(bytes) 334 5645 y(average) f(size:) 94 b(512) 47
b(bytes) p 90 rotate dyy eop
%%Page: 77 83
77 82 bop Fo 94 -116 a(Chapter) 30 b(11:) 42 b(T) -8
b(racing) 2878 b(77) 219 365 y(There) 23 b(are) g(eigh) m(t) i
(di\013eren) m(t) f(columns) e(of) i(data) g(displa) m(y) m(ed) f(b) m
(y) g(the) p Fl 24 w(mptrace) p Fo 21 w(command) g(when) f(it) i(deco) s
(des) 94 465 y(the) 35 b(tracing) h(output) e(\014le) g(and) g(displa) m
(ys) h(it) g(in) f(tabular) g(format) h(with) f(the) h(`) p
Fl(--verbose) p Fo(') d(option.) 54 b(Here) 35 b(is) 94
565 y(an) c(explanation) g(for) f(eac) m(h) i(of) e(them.) 94
715 y(`) p Fl(event) p Fo(') 190 b(This) 28 b(con) m(tains) h(the) g
(ev) m(en) m(t) g(n) m(um) m(b) s(er) e(\(or) i(time) g(line\)) f(for) g
(eac) m(h) i(memory) e(allo) s(cation,) j(reallo) s(ca-) 574
815 y(tion) i(or) f(deallo) s(cation) j(\(heap) d(reserv) -5
b(ations) 33 b(are) f(not) h(considered) f(ev) m(en) m(ts) h(for) f
(this) g(purp) s(ose\).) 574 914 y(Eac) m(h) 43 b(memory) f(allo) s
(cation,) 47 b(reallo) s(cation) d(or) e(deallo) s(cation) i(increases)
f(the) f(curren) m(t) f(ev) m(en) m(t) 574 1014 y(n) m(um) m(b) s(er,)
30 b(and) g(this) g(information) h(is) f(used) g(to) h(calculate) h
(the) f(lifetime) h(of) e(a) h(heap) f(allo) s(cation.) 94
1164 y(`) p Fl(type) p Fo(') 238 b(This) 42 b(con) m(tains) h(the) f
(ev) m(en) m(t) h(t) m(yp) s(e) g(for) e(eac) m(h) i(en) m(try) g(in) e
(the) h(tracing) h(output) f(\014le.) 75 b(Memory) 574
1264 y(allo) s(cations,) 45 b(reallo) s(cations) e(and) c(deallo) s
(cations) j(are) f(represen) m(ted) f(b) m(y) g(`) p
Fl(alloc) p Fo(',) h(`) p Fl(realloc) p Fo(') 574 1364
y(and) c(`) p Fl(free) p Fo(') g(resp) s(ectiv) m(ely) -8
b(.) 63 b(Normal) 38 b(heap) f(reserv) -5 b(ations) 38
b(\(that) g(will) g(b) s(e) f(used) f(for) h(memory) 574
1463 y(allo) s(cations\)) e(are) e(represen) m(ted) f(b) m(y) g(`) p
Fl(reserve) p Fo(',) g(while) g(in) m(ternal) h(heap) f(reserv) -5
b(ations) 33 b(\(for) f(use) 574 1563 y(b) m(y) f(the) f(mpatrol) h
(library) f(itself) 7 b(\)) 32 b(are) e(represen) m(ted) h(b) m(y) f(`)
p Fl(internal) p Fo('.) 94 1713 y(`) p Fl(index) p Fo(') 190
b(This) 22 b(con) m(tains) h(the) f(allo) s(cation) i(index) e(that) h
(is) f(used) f(b) m(y) h(the) g(mpatrol) g(library) g(to) h(k) m(eep) g
(trac) m(k) g(of) 574 1813 y(eac) m(h) j(unique) e(memory) g(allo) s
(cation,) 29 b(and) 24 b(corresp) s(onds) f(directly) i(to) g(an) m(y) g
(memory) g(allo) s(cations) 574 1912 y(listed) 38 b(in) f(the) g(log) h
(\014le.) 60 b(In) 37 b(older) g(tracing) h(output) e(\014les,) j
(memory) e(allo) s(cation) i(ev) m(en) m(ts) f(that) 574
2012 y(reuse) 31 b(allo) s(cation) h(indices) f(represen) m(t) f(a) h
(reallo) s(cation) i(of) d(the) h(original) g(allo) s(cation.) 94
2162 y(`) p Fl(allocation) p Fo(') 574 2262 y(This) f(con) m(tains) i
(the) e(start) h(address) f(of) g(the) h(memory) f(allo) s(cation.) 94
2412 y(`) p Fl(size) p Fo(') 238 b(This) 30 b(con) m(tains) i(the) e
(size) h(\(in) g(b) m(ytes\)) g(of) g(the) f(memory) g(allo) s(cation.)
94 2562 y(`) p Fl(life) p Fo(') 238 b(This) 41 b(con) m(tains) i(the) f
(lifetime) i(of) e(a) g(memory) f(allo) s(cation) k(and) c(is) h
(displa) m(y) m(ed) g(when) f(it) h(is) g(is) 574 2662
y(freed.) 52 b(It) 35 b(is) f(simply) g(the) g(di\013erence) h(b) s(et)
m(w) m(een) f(the) h(curren) m(t) f(ev) m(en) m(t) i(n) m(um) m(b) s
(er) c(and) i(the) g(ev) m(en) m(t) 574 2762 y(n) m(um) m(b) s(er) 23
b(at) h(whic) m(h) g(the) g(original) h(allo) s(cation) h(to) s(ok) e
(place,) j(but) c(is) g(useful) g(for) h(w) m(orking) g(out) g(ho) m(w)
574 2861 y(long) 34 b(a) g(memory) g(allo) s(cation) h(is) f(v) -5
b(alid) 33 b(throughout) g(a) h(program's) f(execution.) 51
b(If) 33 b(a) h(memory) 574 2961 y(allo) s(cation) 45
b(is) d(reallo) s(cated,) 48 b(its) 43 b(lifetime) g(will) g(b) s(e) f
(calculated) i(from) e(the) g(original) i(time) f(of) 574
3060 y(allo) s(cation,) p Fi 33 w(not) p Fo 40 w(the) 31
b(p) s(oin) m(t) f(at) h(whic) m(h) f(it) h(w) m(as) g(reallo) s
(cated.) 94 3211 y(`) p Fl(count) p Fo(') 190 b(This) 27
b(con) m(tains) h(a) g(running) d(total) k(of) e(the) h(n) m(um) m(b) s
(er) d(of) j(memory) f(allo) s(cations) i(curren) m(tly) e(in) g(use.)
574 3310 y(The) j(total) j(is) d(calculated) i(after) f(pro) s(cessing)
f(the) h(curren) m(t) f(ev) m(en) m(t.) 94 3461 y(`) p
Fl(bytes) p Fo(') 190 b(This) 21 b(con) m(tains) i(a) f(running) e
(total) k(of) e(the) g(memory) f(used) g(b) m(y) h(the) f(curren) m(t) h
(memory) g(allo) s(cations.) 574 3560 y(The) 30 b(total) j(is) d
(calculated) i(after) f(pro) s(cessing) f(the) h(curren) m(t) f(ev) m
(en) m(t.) 219 3711 y(The) c(\014rst) g(few) g(en) m(tries) i(in) e
(the) h(table) h(sho) m(w) e(that) h(the) g(mpatrol) g(library) f
(started) i(b) m(y) e(allo) s(cating) j(memory) 94 3811
y(from) d(the) g(heap) g(for) g(its) h(o) m(wn) f(purp) s(oses) e(b) s
(efore) i(reserving) g(8192) i(b) m(ytes) e(for) g(the) h(memory) f
(allo) s(cations) i(made) 94 3910 y(b) m(y) 40 b(the) h(ob) 5
b(ject) 40 b(\014le) g(access) i(library) d(for) h(reading) g(the) g
(sym) m(b) s(ols) g(from) f(the) i(executable) g(\014le) f(and) g
(shared) 94 4010 y(libraries) p Fh 413 3977 a(2) p Fo
451 4010 a(.) 53 b(Most) 36 b(of) f(the) g(further) e(in) m(ternal) i
(heap) g(reserv) -5 b(ation) 35 b(ev) m(en) m(ts) h(are) f(due) f(to) i
(the) e(mpatrol) h(library) 94 4109 y(ha) m(ving) k(to) g(store) g
(details) g(for) f(all) i(of) e(the) h(relev) -5 b(an) m(t) 39
b(sym) m(b) s(ols) f(that) h(it) g(could) f(read) g(at) h(program) f
(startup.) 94 4209 y(The) g(more) f(sym) m(b) s(ols) g(that) i(there) e
(are,) j(the) e(more) g(memory) f(that) i(m) m(ust) e(b) s(e) g(used) g
(to) h(store) g(them.) 63 b(Note) 94 4309 y(that) 28
b(the) f(heap) g(reserv) -5 b(ation) 27 b(ev) m(en) m(ts) h(are) g(not)
f(really) g(relev) -5 b(an) m(t) 28 b(to) g(the) f(analysis) g(of) g
(the) g(program's) g(memory) 94 4408 y(allo) s(cations) 33
b(but) d(they) g(are) h(used) f(when) f(displa) m(ying) i(the) f(heap) g
(graphically) -8 b(.) 219 4534 y(The) 37 b(\014rst) f(few) h(memory) g
(allo) s(cation) j(ev) m(en) m(ts) e(in) f(the) g(table) h(sho) m(w) f
(that) h(sev) m(eral) h(memory) e(allo) s(cations) 94
4633 y(of) 42 b(4072) h(b) m(ytes) e(are) h(b) s(eing) f(made) g(along)
h(with) f(sev) m(eral) i(more) e(heap) g(reserv) -5 b(ations) 42
b(that) g(are) f(needed) g(to) 94 4733 y(store) 36 b(them.) 55
b(The) 34 b(last) i(ev) m(en) m(ts) h(in) d(the) i(table) g(are) f
(mainly) g(all) h(deallo) s(cation) h(ev) m(en) m(ts) g(of) e(allo) s
(cations) i(that) 94 4833 y(w) m(ere) 32 b(made) e(quite) h(early) g
(on) g(in) f(the) h(program.) 41 b(The) 30 b(lifetime) i(information) f
(for) f(these) h(ev) m(en) m(ts) h(sho) m(ws) e(that) 94
4932 y(some) k(of) g(these) g(allo) s(cations) i(w) m(ere) e(made) g(v)
m(ery) g(near) f(the) h(b) s(eginning) f(of) g(the) h(program,) h
(while) e(the) h(others) 94 5032 y(w) m(ere) f(made) e(near) h(the) g
(middle.) 44 b(None) 33 b(of) e(them) h(w) m(ere) g(v) m(ery) g(big) g
(and) f(so) h(w) m(ould) g(not) g(b) s(e) f(o) s(ccup) m(ying) h(m) m
(uc) m(h) 94 5131 y(memory) -8 b(.) 219 5257 y(The) 35
b(statistics) j(that) e(w) m(ere) h(gathered) f(from) f(the) h(tracing)
h(output) e(\014le) h(are) g(displa) m(y) m(ed) h(after) f(the) g
(trac-) 94 5356 y(ing) 44 b(table.) 81 b(The) 43 b(\014rst) f(group) h
(of) h(en) m(tries) g(summarise) f(the) g(heap) g(memory) h(that) g(w) m
(as) g(used,) i(with) d(the) 94 5456 y(`) p Fl(allocated) p
Fo(',) 27 b(`) p Fl(freed) p Fo(') h(and) f(`) p Fl(unfreed) p
Fo(') g(\014elds) h(sho) m(wing) g(the) g(total) j(n) m(um) m(b) s(er)
26 b(of) j(memory) f(allo) s(cations) i(that) p 94 5553
1200 4 v Fh 143 5614 a(2) p Fg 219 5645 a(The) c(actual) g(allo) r
(cation) i(ev) n(en) n(ts) d(from) i(this) f(do) f(not) h(app) r(ear) g
(since) g(they) f(w) n(ere) h(in) n(ternal) g(memory) g(allo) r
(cations.) p 90 rotate dyy eop
%%Page: 78 84
78 83 bop Fo 94 -116 a(78) 3377 b(mpatrol) 94 365 y(w) m(ere) 36
b(made,) h(the) f(total) h(n) m(um) m(b) s(er) d(of) i(memory) f(allo) s
(cations) j(that) e(w) m(ere) g(freed,) g(and) f(the) g(total) j(n) m
(um) m(b) s(er) c(of) 94 465 y(unfreed) 28 b(memory) h(allo) s(cations)
i(resp) s(ectiv) m(ely) -8 b(.) 42 b(The) 28 b(`) p Fl(peak) p
Fo(') h(\014eld) f(sho) m(ws) h(the) g(highest) g(n) m(um) m(b) s(er) f
(of) h(memory) 94 565 y(allo) s(cations) 35 b(\(and) d(total) i(n) m
(um) m(b) s(er) c(of) j(b) m(ytes\)) g(that) g(w) m(ere) f(in) g(use) g
(at) h(an) m(y) f(one) h(time.) 46 b(The) 32 b(`) p Fl(reserved) p
Fo(') f(and) 94 664 y(`) p Fl(internal) p Fo(') c(\014elds) g(sho) m(w)
h(the) h(total) h(n) m(um) m(b) s(er) c(of) j(pages) f(reserv) m(ed) h
(from) e(the) i(system) f(heap) g(for) g(user) f(allo) s(ca-) 94
764 y(tions) g(and) e(in) m(ternal) i(allo) s(cations) i(resp) s(ectiv)
m(ely) -8 b(,) 29 b(and) c(the) h(`) p Fl(total) p Fo(') g(\014eld) f
(sho) m(ws) h(the) g(total) i(n) m(um) m(b) s(er) d(of) h(pages) 94
863 y(that) 31 b(w) m(ere) g(used) f(from) g(the) g(system) h(heap.) 219
983 y(The) 39 b(`) p Fl(smallest) 28 b(size) p Fo(') 39
b(and) g(`) p Fl(largest) 28 b(size) p Fo(') 39 b(\014elds) g(indicate)
h(the) g(sizes) g(of) g(the) f(smallest) i(memory) 94
1083 y(allo) s(cation) 36 b(and) d(the) g(largest) i(memory) e(allo) s
(cation) i(resp) s(ectiv) m(ely) -8 b(.) 51 b(The) 33
b(`) p Fl(average) c(size) p Fo(') j(\014eld) h(sho) m(ws) g(the) 94
1183 y(mean) e(n) m(um) m(b) s(er) e(of) i(b) m(ytes) f(that) h(w) m
(as) g(allo) s(cated) h(b) s(et) m(w) m(een) f(eac) m(h) h(of) f(the) f
(memory) g(allo) s(cations.) 219 1302 y(If) h(y) m(ou) g(w) m(ere) h
(running) d(a) j(GUI) f(v) m(ersion) h(of) p Fl 31 w(mptrace) p
Fo(,) d(information) j(ab) s(out) f(all) h(of) f(these) h(ev) m(en) m
(ts) g(can) g(b) s(e) 94 1402 y(displa) m(y) m(ed) e(in) f(graphical) h
(form) f(inside) f(a) i(windo) m(w) e(if) i(the) f(`) p
Fl(--gui) p Fo(') f(option) i(is) f(used.) 39 b(The) 29
b(follo) m(wing) i(screen-) 94 1502 y(shot) d(sho) m(ws) f(the) p
Fl 27 w(mptrace) p Fo 25 w(displa) m(y) g(windo) m(w) g(when) f(it) i
(is) f(run) f(with) g(the) i(`) p Fl(--gui) p Fo(') e(option) h(and) g
(`) p Fl(cc1.trace) p Fo(') 94 1601 y(as) k(input.) 40
b(It) 30 b(w) m(as) h(generated) h(using) d(the) i(`) p
Fl(--space) e(2) p Fo(') h(option.) 309 4747 y @beginspecial
105 @llx 215 @lly 507 @urx 577 @ury 4020 @rwi @setspecial
%%BeginDocument: images/trace.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: trace.eps
%%Creator:
%%BoundingBox: 105 215 507 577
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

/origstate save def
20 dict begin
/pix 402 string def
/grays 402 string def
/npixls 0 def
/rgbindx 0 def
105 215 translate
401.97600 362.01600 scale
402 362 8
[402 0 0 -362 0 362]
{currentfile pix readhexstring pop}
image

080000000a00000000000001020702070c110f0f111211101111100f100f101010101011
121312111212121112121112121111111111111111111110101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
10101010101010101010101010101010101010101010101010101010111110101011110c
0711060101010a0101060203010105000e0006000700000003010600010900000103000c
000001020915
00f6fefaf3fafafafafafafaf3fbfcc72e201f1f2020201f2020201f201f131f2c1d361b
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020
2020202020202020202020202020202020202020202020202020201f202020202027230f
1feafcf9fdf5f2f9f2fbf5f9f4faf7f5f3fbf4f2effafef8f6f5faf9fefaf3f6fdfefcf5
f6fcfdfdf3aa
05fdccd0d1b6c8c8c8c8c8c8c5cac86d2016141415151515141515151414281211111013
141514141414141414151415151515141414141414151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
15151515151515151515151515151515151515151515151515151514151515151512160e
07fdc9c8becbcddac9d2d0d3cacec4d6bfcfc1d0c9b7c7c1cdd0cdcacecbcad0bec4c9c7
d2d1c5b7c787
0cefd0bcfefef9f9f9f9f9f9fdebcb77261817161717171617171717171715131d1c1114
161717171716171717171718181716161717181717161716171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717171717171717171717171717171717171717
17171717171717171717171717171717171717171717171717171716171717161613130c
07f683f1f2f9f8fdf2fdfdfdf5f9cec3edf2fef6e6fcfaedecfefdbfbffef3f2fef9fef9
ecfdfac5cf73
00fcbf6f010001010101010100cfd3801613131111131111121313141414231211152511
121213131312131313121414141211111113141414121112121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121212121212121212
121212121212121212121212121212121212121212121212121212121313121111181c11
10e372f3d3c6c4c0cac9bec4c6f9c9c3fed0cebdd9d0cccacdc6fad4d1f3d3cbb2cdc7cb
d2c6c484cc7c
00fac8daf7f5f7f7f7f7f7f7eafdcc782a1d13121213121112121214131311172622d41e
131213141312131412121313121212121212121212121212131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131213131313121213130d
0ff182fbbbc8cdcccccdc6c8c2eecbcafac1b7cdcac1cac8e5bcf1c7c4fed7b3c9dabce2
bfcecc79ca7c
00facacbf5fef9f9f9f9f9f9f6fdc78620141626ec16f61212f2120cf70fedf80ef3ecf8
19eff6f20cebf7e8131216eef2f6130e0df7f8f90e181713131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131312131313121212141413
06fa76f7cec8c6cbccc9c6cdcbf7ccc2f3ce020100000500cdc9f3c3c8fecfc501c8cf00
06cbc87dcb78
03f7cf79000100000000000101c4bf7521101711e9f50af6ed0af816f8f00ceff91af907
12f60b2009f8091ae80ef5f911eaea15f5ec0ff5f7101913131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131312121313131212141413
06fa80f2c5bdcfc2c3cfbbd9c3fdb8d4f1c5000000030002d3c8f9cec8eac4c905000400
cbcbc87dcb78
09f1c1c4fceaf9f9f9f9f9f9fdf3ca802a121015ef0f15f22520eb1aef101010f90aec14
0be7280c2b110e0bf912ec0b140e151df30a0918ed171112131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131312121313131212131413
06fa79f5c8c6cdc8c9ccc4d0c5fbcdd2fecb12ced3d4d4c3bfc3f3cbcefed1cabf0c06c2
bacbc87dcb78
0df4c5c0fbe5f7f7f7f7f7f7fdedcd8532101612f7100cf3111bf110ee20180df710e80e
0ef318240dea0f16f909eb101c190c0bf014141d12101713131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131312121313131212131413
06fa70f1c8bbc8cdcfcdb9d7c6f2c0c9fdc400dad5c8cacfd0bafdd0c4f1d0d400070204
bbcbc87dcb78
00fdd87c000d00000000000100cbc67b18111316e10f0ff61a0ef211f50b0f19ed15f50f
17f71012110f1718eb16eb1e0f12f61af4180e0f1b201513131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131312121313131212131413
06fa81f8cb010201010201cdc8fdd6bafecc0bbcc7bfd3bfc2d2f7cfccfecfc201c8c600
0acbc87dcb78
04f4cf75050000000000000105b9c8752211140ef41114f1170bf40cf70df1f90f140bf6
14e8101410f0f6f5f7f713f7edf30e1f14f4fbfa0b1b1513131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131312121212141313
06fa76fac7cccccacbc6cac7c4f7c0cef8d0bfc9d2c7c8c2d6c8facbc4fdcebfb4e1c8bc
d8cbc87dcb78
07f8c6cfeefdfcfcfbfbfbf9f4f8cd782a131413131314131d15171aee13111111121212
131212131212121211111211111212131211111211121313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313121212121212120c
07f87ef7c1cacbc3c8c1d0c4bffbceccecc3c9d2cbcacac9cacafec5cffec4cfcacacaca
cacebe8ac07b
02fad1650f0100000403010309bfc77b2812141414141515191a100ff40e131314141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141313141413190f
06f575c4856e79857c80767184f4cbc1c38f72737c7a7a797a7aeac2c7c67d717a7a7a7a
7a727370d67e
00fec4cdd5d0c8c8c8c8c8c8c7cdd388141016151515151614110b0e140a151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
151515151515151515151515151515151515151515151515151515151515151515151515
15151515151515151515151515151515151515151515151515151516151515151514130c
09f3bececbc4d6cfcfcdc7d7c9bfccc0d3ccc9c9c8c6c5c6c6c7cdc5c4c8bec0c6c6c6c6
c6c7b9c7c78f
01fdc8d270787a7b7a7b7b7a83776f790e0b04020202030405051108040a030404050605
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050506050403040406050d
0db6877b776779807673717c6685776b737476757d7c7c7c7d7d737272767a847c7c7c7c
7c8373dac47d
08f3bcbd0002020202020201010c01090201010203030201020302020202020202030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030302030201010101070701
021a010202070b030502040f0202060202030a0601020201020204080a00000000000000
000301cebe7c
01fdc7c300bec2c2c1c0c0c1bccfb8bfc7c0c1c1c1c1c1c2bfc2bfd8a5d3c1c1c1c1c2c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c0c0c0c1c2bdc0
cab2b7cabbcac0c5b8c8bdc1c5c7c5c3c9c6cabcc1c0c1c1c2c2bbc0bfc4c7bac1c1c1c1
c1c401cac475
02f9cac9026f727270707071717171727171717071717272717171707070707070717171
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707070707070707070707070
707070707070707070707070707070707070707070707070707071707070707070717071
7170707071717070717070717070707376716c675aa9ccc2bcca5e726f637f657f617275
71c201c9ca78
05f6c9c90472505251515252515151505050515151515251515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515150515150515151
51515150505050505050505050515a595a5957b2dbc8cabfbebe8499a2a0b3d099ab9ae2
fec201c9ca78
05f7c9c90371555757575758575657575757575757585858575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575758
58585757575757575757575757575356555655c9ebbec6c0bbc66babaca9e0fb98af9ef4
d8c201c9ca78
02f9c9c903704e5150504f4f525454545454555555555554535352525352525352525352
525353525353525353525253525253525253535253535253535253535252535252535252
535352535352535352525352525352525352525353525353525353525253525253525253
535253535253535253535252535252535252535352535352535352525352525352525353
525353525353525353525253525253525253535253535253535252535252535252535252
535352535352535352525352525352525353525353525353525353525253525253525253
535253535253535252535252535252535252535352535352535352525352525352525353
525353525353525353525253525253525253535253535253535252535252535252535352
535352535352535352525352525352525353525353525353525253525253525253525253
535253535253535252535252535252535352535352535352535353535353535353535353
5353545555555555555555555552515d50564dcae4c6b9b4c8be5daba5afe7ddb49face2
eac201c9ca78
04f9cac8046f505454555453535353535453535454545454535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353545454565655545454
54545352525252525252525252535552565850c8ecbccec8b7c875a4a7efdbc157afa1ee
ecc201c9ca78
04fac9c80370545758585856565656565656575756575757565656575757575756565656
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757575757575757
575757575757575757575757575757575757575757575757575757575757585858575757
57575656565656565656565656565c52585448c5e4c0bdbac4be6fa3a1e3c2c57d68aae0
dec201c9ca78
02fac9c80371525555565555555455555555545555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555545454545454545454545455555453554ec5e8c1c4bfc0c278a4aaebbcc26e71a8ea
ddc201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c262aef6c2d7bbc974a3f2
efc201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c282ddde795f6a6e5f69eb
d8c201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274a4a2a6aa98b3a4bcd8
eec201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e7e6d2f1e6ecdddbe3
f2c201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c264e9edf5e4ecdeea72e3
e7c201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02fac9c80372535656585756555555565555565655565655565655555655555655555655
555656555656555656555556555556555556565556565556565556565555565555565555
565655565655565655555655555655555655555656555656555656555556555556555556
5655565655565655565655555655555655555656555b554d5a5253545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
54545454545454545454545454545a564f5751bfe8c2c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c903724e5050505050504f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f
4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f
4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f
4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f503d594e5a524e515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
5151515151515151515151515151534d5a594ad1e8c2c5bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
05f9c9ca0371f1edf3f5f4f0f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f2f0eef01111101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010101010101010
101010101010101010101010100f100d11150fb4e5c0c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c80371515353545453545353545353545453545453545453535453535453535453
535454535454535454535354535354535354545354545354545354545353545353545353
545453545453545453535453535453535453535454535454535454535354535354535354
5453545453545453545453535453535453535454535448655544564e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
4e4e4e4e4e4e4e4e4e4e4e4e4e4e4f4a525147cce7c1c4bfbfc274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c704714f5555555553535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535f4d5a575d585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
5858585858585858585858585858595853594fc0e8c1c4bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80371525757575757565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
56565656565656565656565656565656565656565654555c525155525352525352525353
525353525353525353525253525253525253535253535253535252535252535252535252
535352535352535352525352525352525353525353525353525353525253525253525253
535253535253535252535252535252535252535352535352535352525352525352525353
525353525353525353525253525253525253535253535253535252535252535252535352
535352535352535352525352525352525353525353525353525253525253525253525253
535253535253535252535252535252535352535352535352535352525352525352525353
52535352535352525352525352535755505351c5e8c1c4bfbfc274e5e8c0c2c0c3c374e4
eac201c9ca78
04f9c9c90673515454555658565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555452564ec6e8c1c5bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9caca0673525454555657555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555452554ec7e8c2c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
08f6cac80371515756565654545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545455555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555545352544dc6e8c1c5c0c0c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c70471515756565756545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555565655564dc3e7c2c4c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
04f9c9c70471515656565656555454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555565654564dc3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c8c70371515555565554555656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565655555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555554565552554ec7e8c1c4bfbfc274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565554555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555565552554dc6e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80371515555565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555453554ec5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02fac9c80371525555555555555454555454555554555554555554545554545554545554
545555545555545555545455545455545455555455555455555455555454555454555454
555554555554555554545554545554545554545555545555545555545455545455545455
555455555455555455555454555454555454555554555554555554545554545554545555
545555545555545555545455545455545455555455555455555454555454555454555454
555554555554555554545554545554545555545555545555545555545455545455545455
555455555455555454555454555454555454555554555554555554545554545554545555
545555545555545555545455545455545455555455555455555454555454555454555554
555554555554555554545554545554545555545555545555545455545455545455545455
555455555455555454555454555454555554555554555554555554545554545554545555
5455555455555454555454555455555453554dc5e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80470525952595d51545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
5454545454545454545454545454535b526045c6e8bfc2bdc0c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c90371536356595d5c565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
56565656565656565656565656565a56575b47c5e4c0c2bec0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90371583f564a4d4e515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
51515151515151515151515151515156495359c5e7c1c3bec1c374e5e8c0c2c0c3c374e4
eac201c9ca78
04f8cac9046ff1ecf1eef7f0f0efefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefeff1edf4ecf9bee8c1c4bfc2c374e5e8c0c2c0c3c374e4
eac201c9ca78
03f9cac90370f61300020302010202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
0202020202020202020202020201000b010107c0e8c2c5c0c1c374e5e8c0c2c0c3c374e4
eac201c9ca78
04f8c9c9037006050702060b010202010202010102010102010102020102020102020102
020101020101020101020201020201020201010201010201010201010202010202010202
010102010102010102020102020102020102020101020101020101020201020201020201
010201010201010201010202010202010202010102010102010102020102020102020101
020101020101020101020201020201020201010201010201010202010202010202010202
010102010102010102020102020102020101020101020101020101020201020201020201
010201010201010202010202010202010202010102010102010102020102020102020101
020101020101020101020201020201020201010201010201010202010202010202010102
010102010102010102020102020102020101020101020101020201020201020201020201
010201010201010202010202010202010102010102010102010102020102020102020101
02010102010102020102020102010102070101c8e9c3c5c0bfc274e5e8c0c2c0c3c374e4
eac201c9ca78
05f7c9c90371010202020103020101020101020201020201020201010201010201010201
010202010202010202010102010102010102020102020102020102020101020101020101
020201020201020201010201010201010201010202010202010202010102010102010102
020102020102020102020101020101020101020201020201020201010201010201010202
010202010202010202010102010102010102020102020102020101020101020101020101
020201020201020201010201010201010202010202010202010202010102010102010102
020102020102020101020101020101020101020201020201020201010201010201010202
010202010202010202010102010102010102020102020102020101020101020101020201
020201020201020201010201010201010202010202010202010102010102010102010102
020102020102020101020101020101020201020201020201020201010201010201010202
01020201020201010201010201020203010201c3e8c2c5bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
06f7c9c90271000001000203020000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000010406020000c3e8c2c4bfbec174e5e8c0c2c0c3c374e4
eac201c9ca78
05f8c9c90271000001000102000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000203010000c3e7c1c4bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02fac9c80271020201010202010000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000010203020102c1e7c1c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c80271010002020001000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000102010100c2e7c1c4bfc2c474e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c80371000003020100000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002020201c3e7c1c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000a00000c000000000000000100
030400000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000100050000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271010101010101020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020e000f0005000101010101010e00
000a04010101010101010101010101010101010101010101010101010101010101010101
0101010101010101010101010101040e000b04c6e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000e8f9f6fcf9f9f9f9f9f9f3f5
f4e2fff9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f4f4fff0f5c0e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271f7f7f7f7f7f7f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8eff0fef7f7f0fbfbfbfbfbfbffff
ebfff0fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbf7fffafefcc3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271f9f9f9f9f9f9fafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafcecfdfcf8fef9f9f9f9f9f9e5ff
fff0fef9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f4f4fff0f5c0e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80271f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9fcfdfb000801010101010101fff9
06000e010101010101010101010101010101010101010101010101010101010101010101
0101010101010101010101010101040e000b04c6e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
01f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000c3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000a0501000302000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000200070ac1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101000000001000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000801060407b3e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000110803090006000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000020006cfe8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000b00090004020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020004000000d2e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000050000030700000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000c000108ace8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
020202020202020202020202020202020202020202020202020202020202020202020202
0202020202020202020202020202020202020202020202020000fadafffffefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefeffeef5ffe4d6e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90673f9f6f7fafafafafefeedfefdf9f9f9f9f9f9fdfeedf2fef9fef1faf0fef1
f8f8fbf8f8f8fef5f6fafef9f9f9f9f9f9f8f5fef6ecfef9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f8fef5f6fafefbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbf8f8fbf8f8fbf8f8
fbf8f8fbf8f8fbf8f8fbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbf8f8fbf8f8fbf8f8fb
f8f8fbf8f8fbf8f8fbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbf8f8fbf8f8fbf8f8fbf8
f8fbf8f8fbf8f8fbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbf8f8fbf8f8fbf8f8
fbf8f8fbf8f8fbf8fbfbf8fbfbf8fbfbf8fbfbf8fbfbf8fbf70001060008000001000001
000001000001000001000101000101000101000101000101000100000100000100000100
00010000010000010001050000000f020101010101010101010101010101010101010101
01010101010101010101010101010101060beefef7fafafafafafafafafafafafafafafa
fafafbfbf4f3fef8fef9fef2fcf8faf9f3f5fab8e8c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
03f8c9c90573f3f2f1efeeeeede90e100e0f0e0e0e0e0e0e0f0e100fe9ededf0f3f3e50f
eeee0feeee0e0e110ef00e0e0e0e0e0e0e0e110e0ef30e0e0e0e0e0e0e0e0e0e0e0e0e0e
0e0e0e0e0e0e110ef00e0fee0f0fee0f0fee0f0fee0f0fee0f0fee0feeee0feeee0feeee
0feeee0feeee0feeee0fee0f0fee0f0fee0f0fee0f0fee0f0fee0feeee0feeee0feeee0f
eeee0feeee0feeee0fee0f0fee0f0fee0f0fee0f0fee0f0fee0feeee0feeee0feeee0fee
ee0feeee0feeee0fee0f0fee0f0fee0f0fee0f0fee0f0fee0f0fee0feeee0feeee0feeee
0feeee0feeee0fee0f0fee0f0fee0f0fee0f0fee0f0fee0f0ee012eee50eefee0fefee0f
efee0fefee0fefee0fef0f0fef0f0fef0f0fee0f0fee0f0fee0fefee0fefee0fefee0fef
ee0fefee0fefee0fef0f0ef3120e0eedefefefefefefefefefefefefefefefefefefefef
efefefefefefefefefefefefefefeff1eae2f2e9eaededeeededeeeeedeeeeedeeeeeded
eeed0e0e10f2edf0ec0e0e0e0ef4eeeff4f4e9d1e8c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
04f9cac804704e555452535352515e4f595654545454545456594f51515259515d515351
5757545757575751545c5054545454545457515154545054545454545454545454545454
54545454575751545c505457545457545457545457545457545457545757545757545757
545757545757545757545754545754545754545754545754545754575754575754575754
575754575754575754575454575454575454575454575454575457575457575457575457
575457575457575457545457545457545457545457545457545457545757545757545757
54575754575754575454575454575454575454575454575465594f575750565654565654
565654565654565654565454565454565454565454565454565456565456565456565456
56545656545656545654624e585257585353535353535353535353535353535353535353
5353535353535353535353535353535d545351574e525252525252525252525252525252
5252585751545e54515552505e555750545350c6e6c0c3bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9cac803705659585959595272566451535555555555555351644b7253505659526b51
525256525256595560555f55555555555556555660525f55555555555555555555555555
5555555556595560555f5652565652565652565652565652565652565252565252565252
565252565252565252565256565256565256565256565256565256525256525256525256
525256525256525256525656525656525656525656525656525652525652525652525652
525652525652525652565652565652565652565652565652565652565252565252565252
56525256525256525656525656525656525656525656525651536056535b525256525256
525256525256525256525656525656525656525656525656525652525652525652525652
525652525652525652564e5e535557545757575757575757575757575757575757575757
575757575757575757575757575757535e515f5c5b585858585858585858585858585858
58584f5c5967515e5652516950565556595840c2e8c0c3bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
04f9cac9027053565455555551515250565e5555555555555f56505e51525b5253584e55
5a5a525a5a5d4f55534e525555555555555d555b53545255555555555555555555555555
555555555d4f55534e52525a52525a52525a52525a52525a52525a525a5a525a5a525a5a
525a5a525a5a525a5a525a52525a52525a52525a52525a52525a525a5a525a5a525a5a52
5a5a525a5a525a5a525a52525a52525a52525a52525a52525a525a5a525a5a525a5a525a
5a525a5a525a5a525a52525a52525a52525a52525a52525a52525a525a5a525a5a525a5a
525a5a525a5a525a52525a52525a52525a52525a52525a525052515555565d5d535d5d53
5d5d535d5d535d5d535d53535d53535d53535d53535d53535d535d5d535d5d535d5d535d
5d535d5d535d5d535d5357554d5f5b5e5353535353535353535353535353535353535353
535353535353535353535353535353525452575157555555555555555555555555555555
55555e51555155515b57534f555653564f4d4ccde8c1c4c0c1c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c803725255575757565456545956595757575757575957595657545252545d5455
545458545457545b595256575757575757575b5559575657575757575757575757575757
5757575757545b5952565854585854585854585854585854585854585454585454585454
585454585454585454585458585458585458585458585458585458545458545458545458
545458545458545458545858545858545858545858545858545854545854545854545854
545854545854545854585854585854585854585854585854585854585454585454585454
5854545854545854585854585854585854585854585854585c595b545658545559545559
545559545559545559545959545959545959555959555959555954555954555954555954
5559545559545559545955575559545d5656555656555656555556555556555556555556
565556565556565555565555565555575d57555a55575756575756565756565756565757
5657585652545d54535f54535b59515b5c514ec7e5c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02fac9c70471515456555554555555565555565655565655565655555655555655555655
555656555656555656555556555556555556565556565556565556565555565555565555
565655565655565655555655555655555655555656555656555656555556555556555556
565556565556565556565555565555565555565655565655565655555655555655555656
555656555656555656555556555556555556565556565556565555565555565555565555
565655565655565655555655555655555656555656555656555656555556555556555556
565556565556565555565555565555565555565655565655565655555655555655555656
555656555656555656555556555556555556565556565556565555565555565555565655
565655565655565655555655555655555656555656555656555556555556555556555556
565556565556565555565555565555565655565655565655565655555655555655555656
55565655565655555655555655545253545350c2e4c2c4bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c706714e5051505050515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515151
51515151515151515151515151505a4b5e5455c0e6c2c4bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
05f8c9c80471f9f9f7f9f9f8f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f7f1fafcf7c0e6c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90372f9faf9f8f8f9f9f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f9fdf4f9fbf8c0e7c2c6c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
04f9cac903704f5150505051505050505050505050505051505050505050505050505050
505050505050505050505051505050505050505050505050505050505050505050505050
505050505050505050515050505050505050505050505050505050505050505050505050
505050505050505050505050505050505050505050505050505050505050505050505050
505050505050505050505050505050505050505050505050505050505050505050505050
505050505050505050505050505050505050505050505050505050505050505050505050
505050505050505050505050505050505050515050505050505050505051505050505050
505050505050505050505050505050505050505050505050505050505050505050505050
505050505050505050505050505050505150505050505050505050505050505050505050
505050505050505050505050505051505050505050505050505050505050505050505050
50505050505050505050505050505b4c5f5555bfe8c1c3bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
04f9cac90370525554535355555656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
5656565656565656565656565655535455544fc5e8c0c3bfc2c474e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90371515453545555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555545453554dc5e7c0c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80372525555565655555454555454555554555554555554545554545554545554
545555545555545555545455545455545455555455555455555455555454555454555454
555554555554555554545554545554545554545555545555545555545455545455545455
555455555455555455555454555454555454555554555554555554545554545554545555
545555545555545555545455545455545455555455555455555454555454555454555454
555554555554555554545554545554545555545555545555545555545455545455545455
555455555455555454555454555454555454555554555554555554545554545554545555
545555545555545555545455545455545455555455555455555454555454555454555554
555554555554555554545554545554545555545555545555545455545455545455545455
555455555455555454555454555454555554555554555554555554545554545554545555
5455555455555454555454555455555554574ec4e8c0c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80372525556565555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555545353564ec5e8c0c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c70471515455545453555555565555565655565655565655555655555655555655
555656555656555656555556555556555556565556565556565556565555565555565555
565655565655565655555655555655555655555656555656555656555556555556555556
565556565556565556565555565555565555565655565655565655555655555655555656
555656555656555656555556555556555556565556565556565555565555565555565555
565655565655565655555655555655555656555656555656555656555556555556555556
565556565556565555565555565555565555565655565655565655555655555655555656
555656555656555656555556555556555556565556565556565555565555565555565655
565655565655565655555655555655555656555656555656555556555556555556555556
565556565556565555565555565555565655565655565655565655555655555655555656
5556565556565555565555565555535151544dc7e7c0c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c70571515556565555545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
5454545454545454545454545454545353564ec4e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c70571525656565655545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
5454545454545454545454545454555553564ec3e8c1c5bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03fac9c80371515656565655545555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555563544f50c0e8c2c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02fac9c80271515554555555555656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
5656565656565656565656565656535a515752c7e8c2c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c80372555858585858595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959
5959595959595959595959595959575c52544ac3e7c2c6c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
06f6c9c90472545655565757565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
56565656565656565656565656566242504e5bb8e8c2c6c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
04f8c9c90370ebe6edf0efededeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeedee
eeededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeededeeeeedeeeeedeeee
ededeeededeeededeeeeedeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeed
edeeededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeeded
eeededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeedeeee
ededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeededeeeeedeeeeedeeeeed
edeeededeeededeeeeedeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeeded
eeededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeededee
ededeeededeeededeeeeedeeeeedeeeeededeeededeeededeeeeedeeeeedeeeeedeeeeed
edeeededeeededeeeeedeeeeedeeeeededeeededeeededeeededeeeeedeeeeedeeeeeded
eeededeeededeeeeedeeeeedeeeeece9f2ebe6d3e5c1c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80470f6f4f9f8f8fafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafcf70203fcb6e5c1c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c80371fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa
fafafafafafafafafde8fdf8fdec0000020201bee8c2c5bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c90372000001010101010202010202010102010102010102020102020102020102
020101020101020101020201020201020201010201010201010201010202010202010202
010102010102010102020102020102020102020101020101020101020201020201020201
010201010201010201010202010202010202010102010102010102020102020102020101
020101020101020101020201020201020201010201010201010202010202010202010202
010102010102010102020102020102020101020101020101020101020201020201020201
010201010201010202010202010202010202010102010102010102020102020102020101
020101020101020101020201020201020201010201010201010202010202010202010102
010102010102010102020102020102020101020101020101020201020201020201020201
010201010201010202010202010202010102010102010102010102020102020102020101
020101020101020201020207020b08020c010bcde7c1c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80370515353525253535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
535353535353535353535353535353535353535353535353535353535353535353535353
5353535353535353544c44634e54555257554fcde8c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80371505553545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
54545454545454545c48584f54534f5a4e5938c1e6c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90371545756555656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565659605260545454575a5953cce8c2c4c0c0c174e5e8c0c2c0c3c374e4
eac201c9ca78
03f9cac90471545755555657565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
565656565656565656565656565656565656565656565656565656565656565656565656
5656565656565656545a54565e55505758514ec9e8c1c5c0c0c174e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90371515553535355545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545454545454545454545454545454545454545454545454545454545454
545454545454545459575a565356565a5b5e48c1e8c2c4c0c0c174e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80371555858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
585858585858585858585858585858585858585858585858585858585858585858585858
5858585858585858555156525451515c555349cbe6c2c5c0bfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c90371f4f1f2f2f2f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1
f1f1f1f1f1f1f1f1e5f2ecefeff4f5eceeefebd5e7c1c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c90372f6f6f6f6f6f7f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
f6f6f6f6f6f6f6f6fdfcecfdf6f5f2f8fdedeac1e7c1c5c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c80371fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbf3f1fde6f4fdfbfee5fbedc8e8c2c5bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90372f9f7f7f9fafafbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb
fbfbfbfbfbfbfbfbfbfbfbfbfbfbfcf4fbf7efc2e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
04f9c9c90372f7f6f6f7f8f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f8f9f2faf5fcd2e7c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c80372f9f8f7f8f7f9f9f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f9f2fbf2f1fdcfe8c1c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
03f8cac80371faf9f8f8f7f7f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8
f8f8f8f8f8f8f8f8f8f8f8f8f8f7f3f7f0fcf5b2e6c1c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
04f8cac80371f6f4f3f4f5f7f6f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5
f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f8f0f9e5d4e7c1c4bfc1c374e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80272222526272727282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
282828282828282828282828282828282828282828282828282828282828282828282828
28282828282828282828282828272b2532281fc2e5c2c4bfbfc174e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271232626272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272628262c23c0e6c2c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271232727272726262727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727262628262c23c1e6c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271232826272726262727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727262628262c23c2e7c1c4c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80270232726262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626262627262c22c2e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
03f9c9c90371242725252628272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727262628272c22c3e8c1c4c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9cac90371242826262628272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727262628262c23c2e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c90271242826272726262727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272728252c23c1e8c1c4c0c0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e5e8c0c2c0c3c374e4
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c274e2e1cac0c1b6c975e9
e3c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c25df3eeb6c3c8bfcb73e9
e3c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c271e2f3c9bcbcbdc16de8
e6c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c264f2f2b6babbbdb473e8
e3c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c27dded5826b807e7d6ce3
e2c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c268aaa3b69ab0afa89df3
dec201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26faba8aaa8a8a5aba4e9
e8c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c276a6aea1afa4b0a3abe8
e7c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c26fa4a4a7ada6acaeade6
eac201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c25fb1a5b1a0a7aaa1a4e9
f0c201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c27de1e7f2e2efdce8e2ea
dfc201c9ca78
02f9c9c80271242827272726262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626272728242c23c1e8c1c4bfc0c275d8f1ebdeebffd56ce6
fbc201c9ca78
01fac9c80270232826272727262727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727262627252c23c2e8c1c4c0c0c26face0c3c1c3c17ca5f2
e1c201c9ca78
02f9c9c80470222725272727262727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
272727272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727252923252423c7e8c1c4c0c0c277a896dfbcc66873a8f0
dcc201c9ca78
02f9c9c8046f262828292929282828292828292928292928292928282928282928282928
282929282929282929282829282829282829292829292829292829292828292828292828
292928292928292928282928282928282928282929282929282929282829282829282829
292829292829292829292828292828292828292928292928292928282928282928282929
282929282929282929282829282829282829292829292829292828292828292828292828
292928292928292928282928282928282929282929282929282929282829282829282829
292829292829292828292828292828292828292928292928292928282928282928282929
282929282929282929282829282829282829292829292829292828292828292828292928
292928292928292928282928282928282929282929282929282829282829282829282829
292829292829292828292828292828292928292928292928292928282928282928282929
28292928292928282928282928282922263419bee8c1c4c0c0c26faca4f4c6c1747aa4eb
e2c201c9ca78
02f9c9c80471282b2b2a2a2a2a29292a29292a2a292a2a292a2a29292a29292a29292a29
292a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a292a2a29292a29292a2929
2a2a292a2a292a2a29292a29292a29292a29292a2a292a2a292a2a29292a29292a29292a
2a292a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a29292a29292a29292a2a
292a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a29292a29292a29292a2929
2a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a292a2a29292a29292a29292a
2a292a2a292a2a29292a29292a29292a29292a2a292a2a292a2a29292a29292a29292a2a
292a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a29292a29292a29292a2a29
2a2a292a2a292a2a29292a29292a29292a2a292a2a292a2a29292a29292a29292a29292a
2a292a2a292a2a29292a29292a29292a2a292a2a292a2a292a2a29292a29292a29292a2a
292a2a292a2a29292a29292a292a2530242720c1e7c2c5c0c0c26eaca6d7fdc57fa2abed
e9c201c9ca78
02f9c9c80471212726262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626262626262626252830273425bae7c2c5c0c0c275aba8a8e073a4aba5f2
e3c201c9ca78
02f9c9c80371202322212122222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222222222222222222222222222
222222222222222222222222222225242e2032b0e8c2c5c0c1c376afa79bac6cac9aaae6
eac201c9ca78
02f9c9c80371e3e1e2e2e3e2e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e5e5dde1d9f5e7c1c5c0c1c379e3ecefe9e6e4efe2e8
ecc201c9ca78
02f9cbc80869e8e7e7e8e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9
e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e8e7e9e8e8cdc4c2c1bfd9f3def0dfebe8e6e8e8
dbc601d4cb7d
06fbc3cd03c6c4c4c4c4c4c4c4c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3
c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c4c4c4c3c1bcbec2c3c1c6b9b9c0b7bdc4c3c3c8
c9bb09cbc07d
01fbc5c80101010101010100000000010000010100010100010100000100000100000100
000101000101000101000001000001000001010001010001010001010000010000010000
010100010100010100000100000100000100000101000101000101000001000001000001
010001010001010001010000010000010000010100010100010100000100000100000101
000101000101000101000001000001000001010001010001010000010000010000010000
010100010100010100000100000100000101000101000101000101000001000001000001
010001010001010000010000010000010000010100010100010100000100000100000101
000101000101000101000001000001000001010001010001010000010000010000010100
010100010100010100000100000100000101000101000101000001000001000001000001
010001010001010000010000010000010100010100010100010100000100000100000101
000101000101000001000001000000000102010005020202010100010c00000200000000
000001c7c673
0bf1c9d0ccc4cfcfcfcfcfcfcfcececfcececfcfcecfcfcecfcfcececfcececfcececfce
cecfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcecfcfcececfcececfcece
cfcfcecfcfcecfcfcececfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececf
cfcecfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececfcf
cecfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececfcece
cfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcecfcfcececfcececfcececf
cfcecfcfcecfcfcececfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececfcf
cecfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececfcfce
cfcfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcececfcececfcececfcececf
cfcecfcfcecfcfcececfcececfcececfcfcecfcfcecfcfcecfcfcececfcececfcececfcf
cecfcfcecfcfcececfcececfcecfcfcfcfcfcfcfc9c5c6c7c9c8c5cbcbc2cccacfd0cdca
cbd2c4d7d17d
01fdcdcdb5c3cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbccccc9c8c6c4c3c3c5c7cbcfc9c4c9cad1cd
cdd0d0c1ce85
00ca79788d73787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
787878787878787878787878787878787878787878787878787878787878787878787878
7878787878787878787878787878787878787879767b7d7d7d7d7e7c7d71738677747b78
78786f7e7574

showpage
end
origstate restore

%%Trailer

%%EndDocument
@endspecial 219 4948 a(Areas) d(coloured) g(blue) f(indicate) h(heap) f
(memory) g(that) h(has) g(not) f(y) m(et) i(b) s(een) d(used) h(b) m(y)
g(the) h(mpatrol) f(library) 94 5048 y(\(i.e.) 37 b(it) f(has) e(not) i
(curren) m(tly) f(b) s(een) f(allo) s(cated) j(from) e(the) g(system,) i
(or) e(is) g(curren) m(tly) g(b) s(eing) f(used) h(b) m(y) g(a) g(part)
94 5147 y(of) c(the) g(program) g(that) g(is) g(not) g(b) s(eing) f
(trac) m(k) m(ed) i(b) m(y) f(the) g(mpatrol) g(library\).) 42
b(Areas) 31 b(coloured) g(red) f(indicated) 94 5247 y(heap) i(memory) g
(that) h(is) f(b) s(eing) g(used) f(in) m(ternally) i(b) m(y) f(the) g
(mpatrol) g(library) -8 b(.) 46 b(In) 31 b(this) h(example,) i(the) e
(reason) 94 5347 y(that) i(there) f(is) g(so) g(m) m(uc) m(h) g(in) m
(ternal) h(memory) e(b) s(eing) h(used) f(is) h(that) g(there) g(are) h
(a) f(large) h(n) m(um) m(b) s(er) d(of) i(sym) m(b) s(ols) 94
5446 y(that) 40 b(w) m(ere) g(read) f(from) f(the) h(executable) i
(\014le) e(and) g(shared) f(libraries.) 67 b(The) 39
b(narro) m(w) f(band) g(of) h(blac) m(k) i(and) 94 5546
y(white) 33 b(lines) g(at) g(the) g(top) g(of) g(the) g(memory) f(map) h
(represen) m(ts) f(the) h(memory) g(that) g(w) m(as) g(used) f(b) m(y) g
(the) h(ob) 5 b(ject) 94 5645 y(\014le) 31 b(access) h(library) e(when)
f(it) i(w) m(as) g(reading) f(the) h(sym) m(b) s(ols.) p
90 rotate dyy eop
%%Page: 79 85
79 84 bop Fo 94 -116 a(Chapter) 30 b(11:) 42 b(T) -8
b(racing) 2878 b(79) 219 365 y(The) 40 b(large) i(blac) m(k) g(bands) e
(in) h(the) g(middle) f(of) h(the) g(memory) g(map) g(indicate) h
(memory) e(that) i(w) m(as) f(still) 94 465 y(allo) s(cated) 33
b(at) e(program) f(termination.) 42 b(While) 31 b(this) g(is) f(a) h
(substan) m(tial) g(amoun) m(t) g(compared) g(to) g(the) g(amoun) m(t)
94 565 y(of) d(free) e(memory) -8 b(,) 29 b(it) e(do) s(es) g(not) g
(necessary) g(indicate) h(memory) f(leaks) g(as) g(the) g(memory) g
(could) g(b) s(e) f(b) s(eing) h(used) 94 664 y(righ) m(t) k(up) f(un) m
(til) g(the) h(end) f(of) g(the) h(program,) f(and) g(is) g(implicitly)
i(freed) e(at) h(program) f(termination) h(an) m(yw) m(a) m(y) -8
b(.) 219 789 y(Unlik) m(e) 32 b(memory) e(allo) s(cation) j
(pro\014ling) d(whic) m(h) g(summarises) g(all) i(of) e(the) h(accum) m
(ulated) h(data,) g(it) f(is) f(p) s(os-) 94 888 y(sible) f(to) g
(trace) h(memory) e(allo) s(cation) j(ev) m(en) m(ts) f(in) e
(real-time) i(as) f(the) f(program) g(runs.) 39 b(This) 27
b(can) i(curren) m(tly) g(b) s(e) 94 988 y(done) 35 b(on) f(UNIX) g
(platforms) h(b) m(y) f(piping) g(the) g(tracing) h(output) f(\014le) h
(from) e(the) i(program) f(b) s(eing) g(run) f(to) i(the) p
Fl 94 1088 a(mptrace) p Fo 27 w(command,) 29 b(whic) m(h) g(can) g(b) s
(e) f(ac) m(hiev) m(ed) j(in) d(sev) m(eral) j(w) m(a) m(ys) e(dep) s
(ending) f(on) g(the) h(UNIX) g(system) g(that) 94 1187
y(y) m(ou) 34 b(are) g(using.) 48 b(Both) 34 b(of) f(the) h(follo) m
(wing) g(metho) s(ds) f(are) g(equiv) -5 b(alen) m(t,) 36
b(where) d(`) p Fl(testprog) p Fo(') e(is) i(the) h(name) f(of) 94
1287 y(the) e(program) f(that) h(is) g(b) s(eing) f(traced) h(\(and) f
(has) g(previously) g(b) s(een) g(link) m(ed) g(with) g(the) h(mpatrol)
g(library\).) p Fl 334 1416 a(#) 48 b(This) f(method) f(specifies) f
(the) i(standard) e(output) h(file) h(stream) f(as) h(the) 334
1519 y(#) h(destination) d(for) i(the) f(tracing) g(output) g(file) h
(and) g(then) g(runs) f(both) 334 1623 y(#) i(commands) d(in) j(a) f
(shell) f(command) g(pipe.) 94 b(This) 47 b(has) g(a) g(disadvantage) e
(in) 334 1727 y(#) j(that) f(testprog) e(must) i(not) g(write) f
(anything) g(to) h(stdout) f(since) g(that) h(would) 334
1831 y(#) h(be) f(written) f(out) h(to) g(the) g(tracing) f(output) g
(file.) 94 b(If) 47 b(stdout) f(is) h(not) 334 1934 y(#) h(suitable) d
(then) i(stderr) f(could) h(be) g(used) f(instead) g(if) h(you) g
(redirect) f(it.) 334 2142 y(bash$) h(mpatrol) f(--trace-file=stdout) c
(--trace) k(./testprog) f(|) i(mptrace) f(--verbose) g(-) 334
2271 y(#) i(This) f(method) f(creates) f(a) j(named) e(pipe) h(called) f
(myfifo) g(\(but) h(it) g(could) f(be) 334 2374 y(#) i(called) e
(anything\)) f(and) i(runs) g(the) g(program) f(being) g(traced) g(and)
h(the) g(mptrace) 334 2478 y(#) h(command) e(separately) f(\(perhaps) g
(in) i(two) g(separate) f(windows\).) 93 b(If) 47 b(the) 334
2582 y(#) h(mkfifo) e(command) g(is) h(not) g(available) e(on) i(your) g
(system) f(then) h(try) g(mknod.) 334 2790 y(bash$) g(mkfifo) f(myfifo)
334 2893 y(bash$) h(mpatrol) f(--trace-file=myfifo) c(--trace) k
(./testprog) f(&) 334 2997 y(bash$) i(mptrace) f(--verbose) f(myfifo) p
Fo 219 3122 a(The) 38 b(idea) h(for) f(graphically) h(displa) m(ying) g
(a) f(memory) h(map) e(of) i(the) f(heap) g(comes) i(from) d(the) p
Fl 39 w(xmem) p Fo 37 w(to) s(ol) 94 3221 y(supplied) e(with) h(the) g
(Univ) m(ersit) m(y) h(of) f(T) -8 b(oron) m(to) 38 b(Computer) d
(Systems) g(Researc) m(h) i(Institute) g(mallo) s(c) g(library) -8
b(,) 94 3321 y(written) 27 b(b) m(y) g(Mark) g(Moraes.) 41
b(Ho) m(w) m(ev) m(er,) 29 b(the) e(do) s(cumen) m(tation) h(for) f
(that) g(to) s(ol) h(remarks) e(that) h(it) h(w) m(as) f(written) 94
3421 y(as) 34 b(a) f(quic) m(k) h(and) e(dirt) m(y) h(hac) m(k.) 49
b(The) p Fl 33 w(mptrace) p Fo 31 w(command) 32 b(is) h(hop) s(efully) f
(more) h(stable) h(and) e(con) m(tains) j(a) e(lot) 94
3520 y(more) e(functionalit) m(y) -8 b(.) 219 3645 y(The) 39
b(mpatrol) h(library) g(can) g(also) h(generate) g(trace) g(\014les) f
(in) f(a) i(format) f(that) g(is) g(compatible) h(with) f(the) 94
3744 y(GNU) p Fl 39 w(mtrace\(\)) p Fo 37 w(option.) 65
b(The) 38 b(co) s(de) g(to) h(do) g(this) f(is) g(built) g(on) h(top) f
(of) h(the) f(mpatrol) h(library) f(and) g(is) g(in) 94
3844 y(`) p Fl(tools/mtrace.c) p Fo(') 31 b(and) i(`) p
Fl(tools/mtrace.h) p Fo('.) 46 b(Suc) m(h) 33 b(trace) i(\014les) e
(can) h(then) f(b) s(e) g(pro) s(cessed) g(b) m(y) h(the) f(GNU) p
Fl 94 3944 a(mtrace) p Fo 39 w(command.) 71 b(The) 41
b(`) p Fl(tools/mgauge.c) p Fo(') c(and) j(`) p Fl(tools/mgauge.h) p
Fo(') d(\014les) j(in) h(the) f(same) h(directory) 94
4043 y(can) 31 b(b) s(e) e(used) g(to) i(implemen) m(t) g(an) f(allo) s
(cated) i(memory) e(gauge) h(whic) m(h) f(up) s(dates) f(in) h
(real-time) h(in) f(a) g(terminal) 94 4143 y(windo) m(w.) 61
b(This) 37 b(can) g(b) s(e) g(used) f(as) i(an) f(alternativ) m(e) j
(to) e(the) f(windo) m(w) g(used) f(b) m(y) h(the) p
Fl 38 w(mptrace) p Fo 35 w(command's) 94 4242 y(`) p
Fl(--gui) p Fo(') 30 b(option) h(for) f(a) h(simpler) f(displa) m(y) -8
b(.) p 90 rotate dyy eop
%%Page: 80 86
80 85 bop Fo 94 -116 a(80) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 81 87
81 86 bop Fo 94 -116 a(Chapter) 30 b(12:) 42 b(Heap) 31
b(corruption) 2528 b(81) p Fk 94 365 a(12) 81 b(Heap) 53
b(corruption) p Fo 219 571 a(There) 29 b(can) h(b) s(e) g(man) m(y) f
(causes) i(of) f(heap) f(corruption) h(in) f(a) h(program) g(and) f
(there) h(can) g(b) s(e) f(man) m(y) h(forms) f(in) 94
670 y(whic) m(h) 35 b(it) g(can) g(app) s(ear.) 53 b(This) 34
b(c) m(hapter) h(attempts) h(to) f(describ) s(e) f(the) h(most) g
(appropriate) f(w) m(a) m(ys) i(to) f(narro) m(w) 94
770 y(do) m(wn) g(and) f(remo) m(v) m(e) i(the) f(causes) g(of) g(the) g
(most) g(common) g(forms) f(of) g(heap) h(corruption.) 53
b(Note) 36 b(that) f(errors) 94 870 y(suc) m(h) k(as) f(freeing) h(an) g
(allo) s(cated) h(blo) s(c) m(k) f(t) m(wice) h(are) f(not) g
(considered) f(in) h(this) f(c) m(hapter) h(ev) m(en) h(though) e(they)
94 969 y(w) m(ould) 29 b(result) g(in) g(heap) g(corruption) g(in) f(a)
i(normal) f(mallo) s(c) h(library) e(|) h(the) h(mpatrol) f(library) g
(catc) m(hes) h(these) 94 1069 y(sp) s(ecial) h(cases) h(so) e(y) m(ou)
h(kno) m(w) f(exactly) j(where) c(they) i(o) s(ccur.) 219
1190 y(The) c(three) i(forms) e(of) h(errors) f(w) m(e) i(are) f(going)
h(to) g(lo) s(ok) f(at) h(are) f(heap) g(corruption) g(in) f(free) h
(memory) g(blo) s(c) m(ks,) 94 1289 y(freed) 33 b(memory) g(blo) s(c) m
(ks) h(and) e(o) m(v) m(er\015o) m(w) j(bu\013ers.) 48
b(As) 33 b(y) m(ou) g(will) h(so) s(on) f(see,) i(the) e(same) g(piece)
i(of) e(fault) m(y) h(co) s(de) 94 1389 y(can) f(pro) s(duce) e(an) m
(y) i(one) f(of) g(these) h(errors) f(dep) s(ending) e(on) i(whic) m(h)
g(mpatrol) h(library) f(options) g(y) m(ou) h(use.) 45
b(The) 94 1489 y(follo) m(wing) 31 b(discussion) d(assumes) h(that) h
(y) m(ou) f(ha) m(v) m(e) i(run) c(y) m(our) i(program) g(with) g(the) g
(mpatrol) g(library) g(and) g(y) m(ou) 94 1588 y(get) h(an) e(`) p
Fl(ALLOVF) p Fo(',) g(`) p Fl(FRDCOR) p Fo(',) g(`) p
Fl(FRDOVF) p Fo(') f(or) h(`) p Fl(FRECOR) p Fo(') f(error) h(in) g
(the) h(mpatrol) g(log) g(\014le) g(when) e(y) m(our) h(program) 94
1688 y(terminates.) 64 b(It) 38 b(also) h(assumes) e(that) h(y) m(ou) g
(ha) m(v) m(en't) h(set) f(the) p Fl 38 w(MPATROL_OPTIONS) p
Fo 34 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 94 1787
y(y) m(et.) 219 1908 y(By) 27 b(default,) g(the) g(only) f(times) h
(the) f(mpatrol) h(library) f(will) g(c) m(hec) m(k) i(the) e(heap) h
(for) f(memory) g(corruption) g(are) 94 2008 y(when) e(it) h
(terminates) h(or) e(when) p Fl 24 w(__mp_check\(\)) p
Fo 21 w(is) h(called) h(\(but) e(the) h(latter) h(w) m(on't) f(b) s(e) f
(happ) s(ening) g(since) h(y) m(ou) 94 2108 y(w) m(on't) 34
b(ha) m(v) m(e) g(mo) s(di\014ed) e(y) m(our) h(program) g(y) m(et\).)
50 b(This) 32 b(isn't) h(go) s(o) s(d) g(enough) g(for) f(errors) h
(suc) m(h) g(as) g(these) g(so) g(w) m(e) 94 2207 y(need) f(to) g
(instruct) f(it) g(to) h(mak) m(e) h(c) m(hec) m(ks) f(whenev) m(er) g
(an) f(mpatrol) g(library) g(function) g(is) g(called.) 45
b(The) 31 b(`) p Fl(CHECK) p Fo(') 94 2307 y(option) j(con) m(trols) h
(when) d(suc) m(h) i(automated) g(c) m(hec) m(ks) h(o) s(ccur,) f(and) f
(this) g(can) h(normally) g(b) s(e) e(set) i(to) g(`) p
Fl(CHECK=-) p Fo(') 94 2406 y(to) e(c) m(hec) m(k) g(the) e(heap) g
(whenev) m(er) h(a) f(call) i(to) f(an) f(mpatrol) h(library) f
(function) g(is) g(made.) 219 2527 y(Ho) m(w) m(ev) m(er,) 39
b(in) d(programs) f(whic) m(h) g(tak) m(e) i(a) f(long) h(time) f(to) g
(execute,) j(or) d(programs) f(whic) m(h) g(mak) m(e) i(a) f(large) 94
2627 y(n) m(um) m(b) s(er) 31 b(of) i(memory) f(allo) s(cations,) j
(this) d(can) g(slo) m(w) h(the) f(program) g(do) m(wn) g(quite) h(a) f
(bit) g(so) h(y) m(ou) f(migh) m(t) h(w) m(an) m(t) 94
2726 y(to) h(try) e(the) h(optional) g(`) p Fl(/freq) p
Fo(') f(argumen) m(t) h(to) g(the) g(`) p Fl(CHECK) p
Fo(') e(option.) 48 b(This) 32 b(simply) g(instructs) g(the) h(mpatrol)
94 2826 y(library) 24 b(to) g(mak) m(e) g(the) g(c) m(hec) m(ks) h(ev) m
(ery) p Fi 24 w(fr) -5 b(e) g(q) p Fo 32 w(calls) 25
b(to) f(the) g(mpatrol) f(library) h(functions) f(rather) g(than) g(ev)
m(ery) h(call.) 94 2926 y(F) -8 b(or) 34 b(example,) g(`) p
Fl(CHECK=/10) p Fo(') d(will) i(mak) m(e) g(the) g(c) m(hec) m(ks) h
(ev) m(ery) g(10) f(calls,) i(whic) m(h) d(will) h(reduce) g(the) g
(slo) m(wdo) m(wn) 94 3025 y(in) e(the) f(program) g(but) g(will) h
(still) g(help) f(narro) m(w) g(do) m(wn) g(where) g(the) g(heap) g
(corruption) g(is) h(o) s(ccurring.) 219 3146 y(W) -8
b(e'll) 39 b(use) e(the) g(follo) m(wing) i(program) e(as) g(a) h
(running) e(example) h(for) g(the) h(discussions) e(b) s(elo) m(w,) k
(although) 94 3246 y(y) m(ou'll) c(probably) d(b) s(e) h(follo) m(wing)
i(them) e(using) g(y) m(our) g(program) g(instead) h(of) f(this) g
(one.) 53 b(It) 34 b(con) m(tains) i(a) e(small) 94 3345
y(bug) 27 b(that) g(do) s(esn't) g(normally) g(sho) m(w) g(up) f(when) g
(using) g(the) i(system) f(C) f(library) h(but) f(causes) h(a) h(`) p
Fl(FRECOR) p Fo(') d(error) 94 3445 y(when) 30 b(link) m(ed) h(with) f
(mpatrol.) p Fl 382 3570 a(1) 95 b(/*) 382 3674 y(2) 143
b(*) 48 b(A) f(program) f(which) g(causes) g(heap) h(corruption.) 382
3778 y(3) 143 b(*/) 382 4089 y(6) 95 b(#include) 46 b(<stdio.h>) 382
4193 y(7) 95 b(#include) 46 b("mpatrol.h") 334 4504 y(10) 95
b(int) 47 b(main\(void\)) 334 4608 y(11) 95 b({) 334
4711 y(12) 286 b(char) 47 b(*p[128];) 334 4815 y(13) 286
b(size_t) 46 b(i;) 334 5023 y(15) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g
(<) h(128;) f(i++\)) 334 5127 y(16) 286 b({) 334 5230
y(17) 477 b(if) 47 b(\(\(p[i]) f(=) i(\(char) e(*\)) h(malloc\(9\)\)) e
(==) j(NULL\)) 334 5334 y(18) 477 b({) 334 5438 y(19) 668
b(fputs\("out) 45 b(of) i(memory\\n",) e(stderr\);) 334
5542 y(20) 668 b(exit\(EXIT_FAILURE\);) 334 5645 y(21) 477
b(}) p 90 rotate dyy eop
%%Page: 82 88
82 87 bop Fo 94 -116 a(82) 3377 b(mpatrol) p Fl 334 365
a(22) 477 b(sprintf\(p[i],) 44 b("test\045lu",) h(i) j(*) f(100\);) 334
469 y(23) 477 b(puts\(p[i]\);) 334 573 y(24) g(free\(p[i]\);) 334
677 y(25) 286 b(}) 334 780 y(26) g(return) 46 b(EXIT_SUCCESS;) 334
884 y(27) 95 b(}) p Fo 219 1012 a(W) -8 b(e) 28 b(get) f(the) g(follo) m
(wing) g(error) f(in) g(the) h(mpatrol) g(log) g(\014le) f(when) g(w) m
(e) h(run) d(with) j(the) f(ab) s(o) m(v) m(e) i(example) f(link) m(ed)
94 1111 y(to) 36 b(the) e(mpatrol) h(library) -8 b(.) 53
b(The) 34 b(error) g(o) s(ccurs) g(when) f(the) i(program) f(returns) f
(from) p Fl 34 w(main\(\)) p Fo 33 w(since) i(that) g(is) 94
1211 y(when) 30 b(the) g(mpatrol) h(library) f(is) g(terminating.) p
Fl 334 1343 a(ERROR:) 47 b([FRECOR]:) e(free) h(memory) h(corruption) e
(at) i(0x0002A571) 716 1447 y(0x0002A571) 93 b(00555555) 46
b(555555) 1048 b(.UUUUUU) p Fo 219 1574 a(If) 28 b(w) m(e) h(run) e
(with) h(the) h(`) p Fl(CHECK=-) p Fo(') e(option) i(then) f(the) h(ab)
s(o) m(v) m(e) g(error) f(o) s(ccurs) h(at) g(line) g(24) g(when) e
(the) i(v) -5 b(ariable) p Fl 94 1674 a(i) p Fo 31 w(is) 30
b(100,) i(whic) m(h) e(is) g(sligh) m(tly) i(b) s(etter) f(since) f(w) m
(e'v) m(e) i(narro) m(w) m(ed) f(do) m(wn) f(where) f(the) i(fault) g
(is.) 219 1802 y(Assuming) 37 b(all) h(go) s(es) g(w) m(ell,) i(y) m
(our) d(program) g(should) g(no) m(w) g(also) h(terminate) h(at) f(an) f
(earlier) h(p) s(oin) m(t,) h(with) 94 1901 y(the) 29
b(mpatrol) g(library) f(still) h(rep) s(orting) f(the) h(same) f(heap) h
(corruption) f(error) f(in) i(the) f(log) i(\014le.) 40
b(If) 28 b(not,) h(it) g(could) 94 2001 y(b) s(e) i(that) h(the) g
(heap) f(is) h(b) s(eing) f(corrupted) g(after) h(the) f(last) i(call) f
(to) h(the) e(mpatrol) h(library) f(is) h(made,) g(or) f(if) h(y) m(ou)
94 2100 y(get) f(a) f(di\013eren) m(t) g(error) f(then) g(the) g
(original) i(heap) e(corruption) g(migh) m(t) h(ha) m(v) m(e) h(b) s
(een) d(as) i(a) g(result) f(of) g(the) h(earlier) 94
2200 y(error.) 41 b(In) 29 b(either) i(case) h(y) m(ou) e(can) h(still)
g(pro) s(ceed) f(with) h(the) f(follo) m(wing) i(instructions.) 219
2328 y(If) 27 b(y) m(ou) g(lo) s(ok) h(at) g(the) f(summary) f(of) h
(statistics) i(that) f(w) m(ere) g(pro) s(duced) d(in) i(the) g
(mpatrol) h(log) g(\014le) f(b) s(efore) g(the) 94 2427
y(error) e(w) m(as) g(displa) m(y) m(ed) g(y) m(ou) g(will) g(see) h
(an) e(en) m(try) h(for) g(`) p Fl(allocation) i(count) p
Fo('.) 38 b(The) 24 b(n) m(um) m(b) s(er) g(follo) m(wing) i(it) f(is) g
(the) 94 2527 y(n) m(um) m(b) s(er) c(of) i(memory) f(allo) s(cations) i
(that) f(w) m(ere) f(made) g(b) s(efore) g(the) g(error) g(o) s
(ccurred.) 37 b(Remem) m(b) s(er) 22 b(this) g(n) m(um) m(b) s(er) 94
2627 y(b) s(ecause) 28 b(y) m(ou) f(can) h(use) e(this) h(information) h
(with) f(the) g(`) p Fl(CHECK) p Fo(') f(option) i(so) f(that) h(c) m
(hec) m(ks) h(for) d(heap) h(corruption) 94 2726 y(are) k(only) f(made)
g(after) g(a) h(certain) g(n) m(um) m(b) s(er) d(of) i(memory) g(allo) s
(cations.) 43 b(Ho) m(w) m(ev) m(er,) 32 b(y) m(ou'll) f(probably) e(w)
m(an) m(t) i(to) 94 2826 y(subtract) h(a) f(few) h(allo) s(cations) h
(just) e(to) h(b) s(e) e(sure) h(\(or) h(in) f(case) h(y) m(ou) g(are) f
(running) f(a) i(m) m(ultithreaded) f(program) 94 2925
y(that) 39 b(do) s(es) f(not) h(pro) s(duce) e(the) h(same) h(allo) s
(cation) h(coun) m(t) f(ev) m(ery) g(time) g(it) g(is) f(run\).) 63
b(That) 39 b(w) m(a) m(y) -8 b(,) 41 b(y) m(ou) e(don't) 94
3025 y(need) g(to) h(c) m(hec) m(k) g(the) f(en) m(tire) h(heap.) 65
b(F) -8 b(or) 40 b(example,) i(if) c(the) h(allo) s(cation) i(coun) m
(t) f(w) m(as) f(178,) j(try) d(setting) h(the) 94 3125
y(`) p Fl(CHECK=170-190) p Fo(') 31 b(option) j(so) g(that) g(y) m(our)
f(program) h(will) g(run) e(at) i(a) g(reasonable) g(sp) s(eed) f(up) g
(to) h(that) g(p) s(oin) m(t) 94 3224 y(\(although) 27
b(mak) m(e) g(sure) f(that) g(it) h(still) g(giv) m(es) g(the) f(same) h
(error) e(at) i(the) f(same) g(p) s(oin) m(t\).) 40 b(There) 26
b(is) g(nothing) g(w) m(orse) 94 3324 y(than) 31 b(debugging) f(a) h
(problem) e(that) i(tak) m(es) h(forev) m(er) f(to) g(repro) s(duce.)
219 3452 y(In) 37 b(our) g(example,) j(the) d(allo) s(cation) j(coun) m
(t) e(giv) m(en) h(is) e(123) i(\(excerpt) f(giv) m(en) h(b) s(elo) m
(w\)) f(and) f(running) e(with) 94 3551 y(`) p Fl(CHECK=120-125) p
Fo(') 28 b(giv) m(es) k(the) f(same) g(b) s(eha) m(viour) f(as) h(when)
f(w) m(e) h(ran) g(with) f(`) p Fl(CHECK=-) p Fo(') f(\(except) j(that)
g(w) m(e) f(got) 94 3651 y(to) h(the) e(error) g(sligh) m(tly) i
(faster\).) p Fl 334 3783 a(...) 334 3990 y(symbols) 46
b(read:) 285 b(5059) 334 4094 y(autosave) 46 b(count:) 189
b(0) 334 4198 y(freed) 47 b(queue) f(size:) 94 b(0) 334
4302 y(allocation) 45 b(count:) 94 b(123) 334 4405 y(allocation) 45
b(peak:) 142 b(8) 48 b(\(11117) e(bytes\)) 334 4509 y(allocation) f
(limit:) 94 b(0) 48 b(bytes) 334 4613 y(allocated) e(blocks:) 93
b(7) 48 b(\(1374) e(bytes\)) 334 4820 y(...) p Fo 219
4948 a(So) 27 b(w) m(e) g(no) m(w) g(ha) m(v) m(e) h(the) f(allo) s
(cation) j(index) c(of) h(the) g(last) h(successful) f(memory) f(allo) s
(cation) k(b) s(efore) c(the) h(heap) 94 5048 y(corruption) k(o) s
(ccurred,) f(and) h(w) m(e) g(can) g(safely) g(run) f(the) h(program) f
(without) h(p) s(erforming) f(heap) g(c) m(hec) m(ks) i(up) e(to) 94
5147 y(that) 37 b(p) s(oin) m(t.) 57 b(If) 35 b(the) h(error) f(w) m
(as) h(not) g(`) p Fl(FRECOR) p Fo(') f(then) g(there) h(will) g(also) h
(b) s(e) e(information) h(displa) m(y) m(ed) g(in) g(the) 94
5247 y(mpatrol) h(log) g(\014le) f(ab) s(out) f(the) i(asso) s(ciated) g
(memory) f(allo) s(cation) i(that) e(w) m(as) h(corrupted.) 56
b(If) 36 b(the) g(error) g(w) m(as) 94 5347 y(`) p Fl(FRECOR) p
Fo(') 30 b(then) g(quic) m(kly) h(try) f(to) h(see) g(if) g(y) m(ou) g
(can) f(con) m(v) m(ert) i(it) f(to) h(a) e(`) p Fl(FRDCOR) p
Fo(') g(error) g(or) g(a) h(`) p Fl(FRDOVF) p Fo(') e(error) h(b) m(y)
94 5446 y(also) g(running) e(with) g(the) h(`) p Fl(NOFREE) p
Fo(') f(option.) 41 b(Y) -8 b(ou) 29 b(ma) m(y) h(ha) m(v) m(e) g(to) g
(use) f(the) g(relev) -5 b(an) m(t) 30 b(allo) s(cation) h(index) e(as)
g(an) 94 5546 y(argumen) m(t) 35 b(to) g(the) f(`) p
Fl(NOFREE) p Fo(') f(option) h(just) f(in) h(case) h(it) g(w) m(as) f
(the) g(v) m(ery) h(\014rst) e(memory) h(allo) s(cation) i(that) f(w) m
(as) 94 5645 y(freed) 28 b(and) f(corrupted,) h(but) f(remem) m(b) s
(er) g(that) i(the) f(`) p Fl(NOFREE) p Fo(') e(option) j(ma) m(y) f
(cause) h(y) m(our) e(program) h(to) g(use) g(up) p 90 rotate
dyy eop
%%Page: 83 89
83 88 bop Fo 94 -116 a(Chapter) 30 b(12:) 42 b(Heap) 31
b(corruption) 2528 b(83) 94 365 y(a) 28 b(lot) h(more) e(memory) h(and)
f(so) g(it) h(migh) m(t) h(b) s(e) d(unfeasible) i(to) g(use.) 39
b(Running) 26 b(with) i(the) f(`) p Fl(NOFREE=123) p
Fo(') e(option) 94 465 y(in) 31 b(our) e(example) i(has) g(no) f
(e\013ect.) 219 589 y(One) 23 b(of) h(the) f(most) h(common) g(causes) f
(of) h(heap) f(corruption) g(is) h(to) g(erroneously) f(write) h(b) s
(ey) m(ond) f(the) g(b) s(ounds) 94 688 y(of) 35 b(a) g(memory) g(allo)
s(cation.) 56 b(This) 34 b(can) h(corrupt) f(the) h(b) m(ytes) g
(directly) h(b) s(efore) e(and/or) h(after) g(the) g(allo) s(cated) 94
788 y(b) m(ytes) g(and) f(can) g(b) s(e) g(detected) h(b) m(y) f
(placing) h(o) m(v) m(er\015o) m(w) h(bu\013ers) d(on) h(either) h
(side) f(of) g(the) h(memory) f(allo) s(cation) 94 888
y(with) 39 b(the) f(`) p Fl(OFLOWSIZE) p Fo(') e(option.) 65
b(By) 39 b(default,) i(the) d(mpatrol) h(library) f(do) s(es) g(not) h
(mak) m(e) g(use) f(of) h(o) m(v) m(er\015o) m(w) 94
987 y(bu\013ers) j(so) i(y) m(ou) f(ha) m(v) m(e) h(to) g(explicitly) h
(turn) d(them) h(on,) j(giving) e(the) f(n) m(um) m(b) s(er) f(of) h(b)
m(ytes) g(to) h(use) f(for) g(eac) m(h) 94 1087 y(o) m(v) m(er\015o) m
(w) f(bu\013er) c(\(whic) m(h) i(m) m(ust) f(a) h(b) s(e) f(p) s(o) m
(w) m(er) h(of) g(t) m(w) m(o\)) h(as) f(the) f(argumen) m(t) i(to) f
(the) g(`) p Fl(OFLOWSIZE) p Fo(') d(option.) 94 1187
y(In) c(our) g(example,) i(if) e(w) m(e) h(use) f(the) g(`) p
Fl(OFLOWSIZE=4) p Fo(') e(option,) k(the) f(`) p Fl(FRECOR) p
Fo(') e(error) h(turns) f(in) m(to) i(an) f(`) p Fl(ALLOVF) p
Fo(') 94 1286 y(error,) i(th) m(us) e(pro) m(viding) h(us) f(with) g
(more) h(information) g(\(and) f(also) i(that) f(the) g(heap) f
(corruption) g(is) h(due) f(to) i(a) 94 1386 y(write) c(b) s(ey) m(ond)
f(the) g(end) g(of) h(a) f(memory) h(allo) s(cation\).) p
Fl 334 1514 a(ERROR:) 47 b([ALLOVF]:) e(allocation) g(0x0002A5A0) g
(has) i(a) g(corrupted) e(overflow) h(buffer) g(at) 1146
1618 y(0x0002A5A9) 716 1722 y(0x0002A5A9) 93 b(00AAAAAA) 1382
b(.) 525 1929 y(0x0002A5A0) 45 b(\(9) j(bytes\)) e({malloc:123:0}) e
([main|test.c|17]) 716 2033 y(0x0001372C) h(main+88) 716
2137 y(0x000135A4) g(_start+100) p Fo 219 2261 a(Sometimes) 38
b(it's) g(not) g(just) f(a) h(immediate) h(o) m(v) m(er\015o) m(w) g
(that) f(can) f(o) s(ccur.) 62 b(F) -8 b(or) 39 b(example,) h(if) d
(not) h(enough) 94 2360 y(memory) f(has) f(b) s(een) g(allo) s(cated) i
(for) f(a) g(structure) f(v) -5 b(ariable) 37 b(and) f(then) g(the) h
(last) g(\014eld) f(of) h(the) g(structure) f(is) 94
2460 y(assigned) 21 b(to,) j(the) d(memory) f(corruption) h(ma) m(y) g
(o) s(ccur) g(m) m(uc) m(h) f(further) g(a) m(w) m(a) m(y) i(than) f
(the) g(few) f(b) m(ytes) h(surrounding) 94 2559 y(the) j(allo) s
(cation.) 41 b(In) 22 b(this) h(case) h(it) g(ma) m(y) g(b) s(e) f
(useful) f(to) i(try) f(v) -5 b(arying) 23 b(the) h(argumen) m(t) f
(giv) m(en) i(to) f(the) f(`) p Fl(OFLOWSIZE) p Fo(') 94
2659 y(option) 29 b(since) g(it) f(is) h(p) s(ossible) e(to) i(con) m
(v) m(ert) h(otherwise) e(unhelpful) f(`) p Fl(FRECOR) p
Fo(') g(errors) g(in) m(to) i(`) p Fl(ALLOVF) p Fo(',) f(`) p
Fl(FRDCOR) p Fo(') 94 2759 y(or) 40 b(`) p Fl(FRDOVF) p
Fo(') e(errors) g(whic) m(h) h(describ) s(e) g(the) g(memory) g(allo) s
(cation) j(that) e(w) m(as) f(a\013ected.) 69 b(Also,) 42
b(dep) s(ending) 94 2858 y(on) g(the) f(b) m(ytes) h(that) g(are) g(b) s
(eing) f(written) g(to) h(corrupt) f(the) h(heap,) i(y) m(ou) e(ma) m
(y) f(\014nd) f(it) i(helpful) f(to) h(c) m(hange) 94
2958 y(the) 36 b(v) -5 b(alues) 36 b(of) g(the) g(free) f(b) m(ytes) h
(and) f(o) m(v) m(er\015o) m(w) i(b) m(ytes) g(that) f(the) f(mpatrol) h
(library) g(uses) f(to) h(p) s(erform) e(heap) 94 3058
y(in) m(tegrit) m(y) c(c) m(hec) m(ks,) g(just) e(in) f(case) i(there) f
(are) h(illegal) h(b) m(ytes) e(b) s(eing) g(written) g(that) g(are) g
(going) h(unnoticed) f(when) 94 3157 y(the) 35 b(heap) e(is) h(b) s
(eing) g(c) m(hec) m(k) m(ed.) 54 b(In) 33 b(our) g(example,) j(if) e
(the) g(`) p Fl(OFLOWBYTE=0) p Fo(') e(option) i(is) g(used) f(then) h
(the) g(heap) 94 3257 y(corruption) c(is) h(hidden) e(completely) j
(and) e(w) m(e) h(don't) f(get) h(an) g(error) f(at) h(all!) 219
3381 y(Hop) s(efully) -8 b(,) 32 b(w) m(e) f(no) m(w) g(kno) m(w) h(as)
f(m) m(uc) m(h) g(as) g(p) s(ossible) g(ab) s(out) g(where) f(the) i
(heap) f(corruption) f(is) h(happ) s(ening) 94 3480 y(\(i.e.) d(the) e
(details) h(of) f(the) g(allo) s(cated) i(or) e(freed) g(memory) g(blo)
s(c) m(k) g(that) h(is) f(a\013ected,) i(or) e(the) g(free) h(memory) e
(blo) s(c) m(k) 94 3580 y(if) 37 b(w) m(e) g(are) g(unluc) m(ky\)) f
(and) g(also) h(when) e(it) i(is) g(happ) s(ening) e(\(i.e.) j(after) f
(whic) m(h) f(allo) s(cation) j(index\).) 58 b(W) -8
b(e) 38 b(no) m(w) 94 3680 y(ha) m(v) m(e) 32 b(sev) m(eral) g(c) m
(hoices) g(on) e(ho) m(w) h(to) g(narro) m(w) f(the) g(problem) g(do) m
(wn) g(to) h(a) g(sp) s(eci\014c) f(source) h(line.) 219
3804 y(On) 39 b(systems) g(with) h(virtual) g(memory) f(w) m(e) h(can) g
(mak) m(e) h(use) e(of) h(the) g(`) p Fl(PAGEALLOC) p
Fo(') e(option) i(in) f(order) g(to) 94 3903 y(write-protect) d(a) e
(page) h(of) f(virtual) g(memory) g(on) g(either) h(side) e(of) i(eac) m
(h) g(memory) f(allo) s(cation.) 53 b(This) 33 b(option) 94
4003 y(tak) m(es) c(up) c(a) i(lot) h(more) e(memory) h(since) g(eac) m
(h) g(memory) g(allo) s(cation) i(will) e(o) s(ccup) m(y) g(at) g
(least) h(3) f(pages) g(of) g(virtual) 94 4102 y(memory) 32
b(no) f(matter) h(ho) m(w) f(small) h(it) f(is,) h(and) f(on) g
(systems) g(with) g(a) g(page) h(size) g(of) g(8192) h(b) m(ytes) e
(that) h(equates) 94 4202 y(to) 37 b(a) e(minim) m(um) g(24) h(kilob) m
(ytes) h(of) e(memory) g(p) s(er) f(allo) s(cation!) 58
b(Ho) m(w) m(ev) m(er,) 39 b(if) c(that) h(is) f(still) i(feasible) f
(for) f(the) 94 4302 y(particular) 30 b(program) f(that) h(is) f
(causing) h(the) f(heap) g(corruption) g(then) g(w) m(e) g(can) h(pro) s
(ceed) f(b) m(y) g(\014rst) f(setting) j(the) 94 4401
y(`) p Fl(PAGEALLOC=LOWER) p Fo(') 23 b(option.) 40 b(That) 26
b(aligns) h(eac) m(h) g(memory) f(allo) s(cation) j(to) e(a) f(page) h
(b) s(oundary) d(so) j(that) g(an) m(y) 94 4501 y(underwrites) 22
b(o) s(ccurring) g(b) s(efore) g(the) h(allo) s(cation) i(will) e(b) s
(e) f(trapp) s(ed) f(and) h(cause) h(the) g(program) g(to) g(crash.) 38
b(This) 94 4601 y(can) d(b) s(e) e(caugh) m(t) i(in) f(a) g(debugger) g
(whic) m(h) g(will) g(sho) m(w) g(the) g(exact) i(source) e(line) g
(that) h(attempted) g(to) f(p) s(erform) 94 4700 y(the) c(illegal) i
(write) d(to) h(memory) g(\(assuming) f(it) h(is) f(a) h(sym) m(b) s
(olic) g(debugger) f(and) g(the) h(program) f(w) m(as) g(compiled) 94
4800 y(with) i(debugging) f(information\).) 219 4924
y(In) c(our) g(example,) i(running) c(with) i(this) h(option) f(do) s
(esn't) h(pro) m(vide) f(us) g(with) g(an) m(y) g(more) h(information) g
(since) 94 5023 y(the) 40 b(heap) g(corruption) f(w) m(as) h(o) s
(ccurring) g(b) s(ey) m(ond) f(the) h(end) f(of) h(the) g(memory) f
(allo) s(cation) j(and) d(not) h(b) s(efore) 94 5123
y(the) c(start.) 57 b(In) 34 b(this) i(case) g(w) m(e) g(need) f(to) i
(use) e(the) g(`) p Fl(PAGEALLOC=UPPER) p Fo(') d(option) k(to) g
(align) h(the) e(end) g(of) h(eac) m(h) 94 5223 y(memory) 28
b(allo) s(cation) h(to) g(a) e(page) i(b) s(oundary) c(so) j(that) g
(an) m(y) f(o) m(v) m(erwrites) i(o) s(ccurring) e(after) h(the) g
(allo) s(cation) i(will) 94 5322 y(b) s(e) i(trapp) s(ed) e(and) i
(cause) g(the) g(program) g(to) h(crash.) 45 b(Unfortunately) -8
b(,) 33 b(using) f(this) f(option) i(still) g(do) s(esn't) e(help) 94
5422 y(in) g(our) e(example,) j(so) e(what's) h(wrong?) 219
5546 y(The) i(mpatrol) g(library) g(m) m(ust) g(align) i(eac) m(h) f
(new) f(general-purp) s(ose) g(memory) g(allo) s(cation) j(to) e(an) f
(address) 94 5645 y(that) g(allo) m(ws) g(the) g(pro) s(cessor) e(to) i
(access) g(the) f(datat) m(yp) s(es) h(that) g(ma) m(y) f(b) s(e) g
(stored) g(there.) 46 b(This) 31 b(is) h(t) m(ypically) i(4) p
90 rotate dyy eop
%%Page: 84 90
84 89 bop Fo 94 -116 a(84) 3377 b(mpatrol) 94 365 y(b) m(ytes) 36
b(on) f(32-bit) h(pro) s(cessors) f(and) g(8) g(b) m(ytes) h(on) f
(64-bit) h(pro) s(cessors,) g(but) e(a) i(few) f(pro) s(cessor) f(arc) m
(hitectures) 94 465 y(\(suc) m(h) 45 b(as) f(the) g(In) m(tel) h(x86\))
g(allo) m(w) g(the) g(pro) s(cessor) e(to) i(read) f(misaligned) h
(data) f(at) h(a) f(p) s(erformance) g(cost.) 94 565
y(This) 31 b(is) f(in) h(direct) g(con\015ict) h(with) e(the) h(`) p
Fl(PAGEALLOC=UPPER) p Fo(') c(option,) 32 b(whic) m(h) f(w) m(ould) f
(lik) m(e) i(to) g(align) g(the) f(end) 94 664 y(of) 40
b(eac) m(h) i(memory) d(allo) s(cation) j(to) f(a) f(page) h(b) s
(oundary) d(no) h(matter) i(what) f(the) g(size) g(of) g(the) h(allo) s
(cation) h(is.) 94 764 y(Ho) m(w) m(ev) m(er,) c(if) c(w) m(e) g(use) g
(the) g(`) p Fl(DEFALIGN=1) p Fo(') d(option) k(in) e(our) h(example) g
(w) m(e) h(can) f(get) h(the) f(desired) g(e\013ect) h(with) 94
863 y(the) c(`) p Fl(PAGEALLOC=UPPER) p Fo(') c(option.) p
Fl 334 990 a(ERROR:) 47 b([ILLMEM]:) e(illegal) h(memory) g(access) g
(at) h(address) f(0x00052000) 525 1094 y(0x00051FF7) f(\(9) j(bytes\)) e
({malloc:123:0}) e([main|test.c|17]) 716 1198 y(0x0001372C) h(main+88)
716 1302 y(0x000135A4) g(_start+100) 525 1509 y(call) i(stack) 716
1613 y(0x7FA808E8) e(sprintf+64) 716 1717 y(0x000137B4) g(main+224) 716
1821 y(0x000135A4) g(_start+100) p Fo 219 1943 a(Running) 29
b(this) i(in) f(a) i(debugger) e(sho) m(ws) h(that) g(the) g(failure) g
(o) s(ccurs) f(at) i(line) f(22) g(in) g(our) f(example) h(since) g(w) m
(e) 94 2043 y(didn't) f(allo) s(cate) j(enough) c(memory) h(at) h(line)
g(17.) 41 b(W) -8 b(e) 32 b(can) e(also) h(ac) m(hiev) m(e) i(the) d
(same) h(e\013ect) g(on) f(systems) g(that) 94 2143 y(supp) s(ort) f
(soft) m(w) m(are) i(w) m(atc) m(hp) s(oin) m(ts) g(b) m(y) f(using) f
(the) i(`) p Fl(OFLOWWATCH) p Fo(') c(option.) 41 b(This) 29
b(uses) h(the) g(same) g(amoun) m(t) h(of) 94 2242 y(memory) 38
b(as) g(the) f(`) p Fl(OFLOWSIZE) p Fo(') f(option) i(but) f(can) h
(run) e(v) m(ery) i(slo) m(wly) g(as) g(ev) m(ery) g(single) h(memory) e
(access) i(is) 94 2342 y(c) m(hec) m(k) m(ed) 29 b(b) m(y) e(the) h
(system.) 39 b(Note) 29 b(that) e(the) h(`) p Fl(FRDCOR) p
Fo(') d(and) i(`) p Fl(FRECOR) p Fo(') f(errors) g(do) h(not) g(o) s
(ccur) g(when) f(using) h(the) 94 2441 y(`) p Fl(PAGEALLOC) p
Fo(') i(option) i(since) f(they) h(will) g(b) s(ecome) f(illegal) j
(memory) d(accesses) i(instead.) 219 2564 y(If) d(y) m(ou) g(don't) g
(ha) m(v) m(e) h(the) f(luxury) f(of) h(b) s(eing) g(able) g(to) h(use)
f(the) g(mpatrol) g(options) h(that) f(tak) m(e) i(adv) -5
b(an) m(tage) 31 b(of) 94 2664 y(virtual) g(memory) f(protection,) i(y)
m(ou) f(can) g(still) g(use) f(more) h(traditional) g(means) g(of) f
(\014nding) f(the) i(error.) 219 2787 y(The) 39 b(c) m(hapter) h(that) g
(describ) s(es) f(ho) m(w) h(to) g(use) f(mpatrol) h(\(see) h(Chapter) e
(7) h([Using) g(mpatrol],) i(page) f(27\)) 94 2886 y(con) m(tains) i(a)
f(section) h(on) f(ho) m(w) g(to) g(pause) f(at) i(sp) s(eci\014c) e
(memory) h(allo) s(cation) i(ev) m(en) m(ts) f(in) e(a) i(debugger) e
(\(see) 94 2986 y(Section) 33 b(7.5) g([Using) f(with) f(a) h
(debugger],) h(page) f(32\).) 46 b(Since) 31 b(w) m(e) i(kno) m(w) e
(what) h(the) g(allo) s(cation) i(index) d(of) h(the) 94
3085 y(last) e(successful) e(allo) s(cation) i(w) m(as) f(w) m(e) f
(can) h(use) f(the) g(debugger) g(to) h(set) g(a) g(w) m(atc) m(hp) s
(oin) m(t) g(on) g(the) f(address) f(of) i(the) 94 3185
y(memory) j(corruption) e(so) i(that) g(it) f(can) h(trap) f(the) g
(instruction) h(that) f(c) m(hanges) i(it.) 43 b(Doing) 33
b(this) e(is) g(e\013ectiv) m(ely) 94 3285 y(the) e(same) f(as) h
(using) e(the) i(`) p Fl(PAGEALLOC) p Fo(') d(or) i(`) p
Fl(OFLOWWATCH) p Fo(') e(options.) 40 b(There) 28 b(is) g(a) g
(detailed) i(tutorial) f(on) f(ho) m(w) 94 3384 y(to) k(do) e(this) g
(in) g(GDB) i(in) e(the) g(aforemen) m(tioned) i(section) f(of) g(the) g
(man) m(ual.) 219 3507 y(If) d(the) h(debugger) f(option) h(isn't) g(a)
m(v) -5 b(ailable) 31 b(to) e(y) m(ou) g(either) g(then) g(y) m(ou) g
(can) g(try) f(lo) s(cating) i(the) f(problem) f(b) m(y) 94
3607 y(mo) s(difying) k(y) m(our) g(co) s(de.) 47 b(Y) -8
b(ou) 33 b(should) e(kno) m(w) h(where) g(the) g(last) i(successful) e
(memory) g(allo) s(cation) i(w) m(as) f(made) 94 3706
y(from) 39 b(the) h(steps) f(tak) m(en) h(at) g(the) g(start) f(of) h
(this) f(c) m(hapter.) 68 b(Using) 39 b(this) g(kno) m(wledge,) k(y) m
(ou) d(should) e(b) s(e) g(able) 94 3806 y(to) d(w) m(ork) f(out) f
(the) h(range) g(of) g(co) s(de) g(that) g(is) g(causing) g(the) f
(heap) h(corruption.) 50 b(Then) 33 b(y) m(ou) h(can) f(add) g(calls) i
(to) p Fl 94 3906 a(__mp_check\(\)) p Fo 21 w(at) 24
b(strategic) h(p) s(oin) m(ts) f(within) e(that) i(range) g(so) g(that)
g(y) m(ou) g(can) f(narro) m(w) h(do) m(wn) f(where) g(the) g(heap) 94
4005 y(corruption) h(is) g(coming) h(from.) 39 b(If) 23
b(y) m(ou) i(displa) m(y) f(a) h(unique) e(message) i(after) g(eac) m
(h) g(call) h(to) p Fl 24 w(__mp_check\(\)) p Fo 21 w(then) 94
4105 y(y) m(ou) h(should) e(b) s(e) g(able) h(to) h(narro) m(w) f(it) g
(do) m(wn) f(quite) i(quic) m(kly) f(b) m(y) g(monitoring) h(whic) m(h)
e(messages) i(get) g(displa) m(y) m(ed.) 219 4228 y(Y) -8
b(ou) 27 b(migh) m(t) h(also) f(\014nd) e(it) i(helpful) f(to) h(mak) m
(e) h(calls) g(to) p Fl 27 w(__mp_memorymap\(\)) p Fo
22 w(so) f(that) h(y) m(ou) e(can) h(k) m(eep) h(trac) m(k) 94
4327 y(of) f(the) f(lo) s(cation) i(of) e(eac) m(h) i(memory) e(allo) s
(cation) i(in) e(the) h(heap,) g(and) e(so) i(that) f(y) m(ou) h(can) f
(tell) i(whic) m(h) e(allo) s(cations) 94 4427 y(neigh) m(b) s(our) h
(eac) m(h) i(other.) 40 b(T) -8 b(urning) 27 b(on) g(the) h(`) p
Fl(LOGMEMORY) p Fo(') e(option) i(with) f(the) p Fl 28
w(__mp_setoption\(\)) p Fo 23 w(function) 94 4526 y(migh) m(t) 40
b(also) f(help) f(y) m(ou) h(see) g(what) f(is) h(going) g(on) f(if) h
(there) f(are) h(a) g(lot) g(of) g(calls) g(to) h(the) e(memory) h(op) s
(eration) 94 4626 y(functions.) h(Finally) -8 b(,) 29
b(if) f(y) m(ou) f(are) h(using) f(the) g(GNU) h(compiler) g(then) f
(the) g(`) p Fl(-fcheck-memory-usage) p Fo(') 22 b(option) 94
4726 y(migh) m(t) 40 b(come) h(in) e(handy) f(if) h(y) m(ou) g(can) h
(recompile) g(the) g(source) f(\014les) g(that) h(y) m(ou) f(think) g
(migh) m(t) h(con) m(tain) h(the) 94 4825 y(problem.) 73
b(Ho) m(w) m(ev) m(er,) 47 b(the) 41 b(error) g(ma) m(y) h(b) s(e) e
(hidden) g(b) s(ehind) g(a) h(call) i(to) f(a) g(library) f(function) g
(that) g(is) h(not) 94 4925 y(compiled) 31 b(with) f(that) h(option,) g
(as) g(is) f(the) h(case) g(with) g(our) e(example.) 219
5048 y(Another) g(sligh) m(tly) g(less) g(common) g(problem) f(asso) s
(ciated) i(with) f(heap) f(corruption) g(is) h(when) e(the) i(con) m
(ten) m(ts) 94 5147 y(of) g(a) h(memory) e(allo) s(cation) j(ha) m(v) m
(e) f(b) s(een) e(o) m(v) m(erwritten) j(unexp) s(ectedly) d(but) g(do)
h(not) g(o) m(v) m(er\015o) m(w) h(its) f(b) s(oundaries.) 94
5247 y(This) 38 b(is) g(not) h(a) g(misuse) f(of) g(the) h(heap) f(and)
f(so) i(mpatrol) g(will) f(not) h(rep) s(ort) f(an) m(y) g(errors) g
(or) g(w) m(arnings,) j(but) 94 5347 y(it) d(ma) m(y) f(b) s(e) f(an) g
(error) h(in) f(the) h(user's) f(co) s(de.) 60 b(The) 36
b(heap) s(di\013) g(to) s(ol) h(\(see) h(Section) f(8.3) h([heap) s
(di\013) 7 b(],) 38 b(page) g(51\)) 94 5446 y(pro) m(vided) 32
b(in) g(libmpto) s(ols) h(has) f(an) g(option) h(called) p
Fl 33 w(HD_CONTENTS) p Fo 29 w(whic) m(h) f(allo) m(ws) i(the) e(en) m
(tire) p Fi 33 w(live) p Fo 39 w(con) m(ten) m(ts) 94
5546 y(of) 40 b(the) f(heap) g(to) g(b) s(e) g(written) g(to) g(disk) g
(and) f(then) h(compared) g(when) p Fl 38 w(heapdiffend\(\)) p
Fo 35 w(is) g(called.) 68 b(Ev) m(ery) 94 5645 y(single) 33
b(di\013erence) f(\(at) h(the) f(b) m(yte) g(lev) m(el\)) i(in) d(eac) m
(h) i(memory) f(allo) s(cation) i(is) e(rep) s(orted) f(and) g(this) h
(information) p 90 rotate dyy eop
%%Page: 85 91
85 90 bop Fo 94 -116 a(Chapter) 30 b(12:) 42 b(Heap) 31
b(corruption) 2528 b(85) 94 365 y(can) 30 b(b) s(e) e(extremely) i
(useful) e(in) g(narro) m(wing) h(do) m(wn) f(heap) h(corruption.) 39
b(Ho) m(w) m(ev) m(er,) 32 b(the) p Fl 29 w(HD_CONTENTS) p
Fo 25 w(option) 94 465 y(will) f(require) f(a) h(lot) g(of) g(disk) f
(space) h(if) f(the) h(heap) f(is) g(v) m(ery) h(large.) 219
589 y(T) -8 b(o) 34 b(conclude,) i(the) e(mpatrol) g(library) g(con) m
(tains) h(a) g(wide) e(v) -5 b(ariet) m(y) 36 b(of) e(options) g(and) f
(functions) h(that) h(y) m(ou) 94 689 y(can) d(add) e(to) i(y) m(our) f
(debugging) g(to) s(olkit,) i(but) d(only) h(if) g(y) m(ou) g(kno) m(w)
g(ho) m(w) g(to) h(use) e(them) h(correctly) -8 b(.) 44
b(Hop) s(efully) -8 b(,) 94 789 y(after) 30 b(reading) g(this) f(c) m
(hapter) h(y) m(ou) f(will) h(feel) g(sligh) m(tly) h(more) e
(con\014den) m(t) g(ab) s(out) g(kno) m(wing) h(ho) m(w) f(to) h(sla) m
(y) g(those) 94 888 y(heap) h(corruption) f(demons.) p
90 rotate dyy eop
%%Page: 86 92
86 91 bop Fo 94 -116 a(86) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 87 93
87 92 bop Fo 94 -116 a(Chapter) 30 b(13:) 42 b(Memory) 31
b(leaks) 2625 b(87) p Fk 94 365 a(13) 81 b(Memory) 53
b(leaks) p Fo 219 592 a(Memory) 41 b(leaks) h(can) f(b) s(e) f(the) h
(bane) f(of) h(man) m(y) g(a) g(programmer) f(and) g(is) h(the) f(t) m
(yp) s(e) h(of) g(error) f(that) i(can) 94 692 y(t) m(ypically) i(go) e
(unnoticed) f(in) g(simple) h(test) g(cases.) 75 b(It) 41
b(is) h(p) s(erhaps) d(not) j(un) m(til) g(an) f(application) i(has) e
(b) s(een) 94 792 y(released) 34 b(to) g(the) f(customer) g(and) f(is) h
(b) s(eing) g(run) e(in) i(real-life) h(situations) g(that) g(memory) e
(leaks) i(get) g(noticed) 94 891 y(and) 28 b(b) s(ecome) h(a) f
(serious) h(problem.) 39 b(Luc) m(kily) 29 b(the) f(mpatrol) h(library)
f(pro) m(vides) g(to) s(ols) h(that) g(can) f(quic) m(kly) h(help) 94
991 y(detect,) h(iden) m(tify) f(and) e(remo) m(v) m(e) i(suc) m(h) e
(errors.) 40 b(Note) 29 b(that) f(it's) h(probably) d(a) j(go) s(o) s
(d) e(idea) h(to) h(\014x) e(an) m(y) h(w) m(arnings) 94
1090 y(or) j(errors) f(that) h(app) s(ear) e(in) h(the) h(mpatrol) g
(log) g(\014le) g(b) s(efore) f(starting) h(to) g(lo) s(ok) g(at) g
(remo) m(ving) g(memory) f(leaks.) 219 1216 y(Surprisingly) -8
b(,) 29 b(there) h(are) g(no) f(less) h(than) f(four) g(di\013eren) m
(t) h(groups) f(of) h(mpatrol) g(library) f(run-time) h(options) 94
1316 y(that) d(y) m(ou) f(can) g(use) f(to) h(detect) h(memory) f
(leaks) h(in) e(a) h(program,) h(all) f(without) g(ha) m(ving) g(to) g
(c) m(hange) h(a) f(single) h(line) 94 1415 y(of) c(co) s(de!) 39
b(They) 22 b(eac) m(h) i(emplo) m(y) f(di\013eren) m(t) h(tec) m
(hniques) f(in) g(order) f(to) h(lo) s(cate) i(the) e(unfreed) e
(memory) i(allo) s(cations) 94 1515 y(at) 35 b(program) e(termination) i
(and) e(op) s(erate) h(indep) s(enden) m(tly) f(of) h(one) g(another) g
(so) g(that) g(an) m(y) g(com) m(bination) h(of) 94 1614
y(tec) m(hniques) 21 b(can) g(b) s(e) f(used) g(at) h(an) m(y) g(one) f
(time.) 38 b(They) 20 b(also) i(ha) m(v) m(e) f(di\013ering) g(lev) m
(els) h(of) e(detail) i(in) e(the) h(information) 94
1714 y(they) 31 b(pro) m(vide,) g(so) f(whic) m(h) g(options) h(y) m
(ou) g(use) f(will) h(dep) s(end) d(on) j(what) f(y) m(our) g
(requiremen) m(ts) h(are.) 219 1840 y(If) 37 b(y) m(ou) g(wish) f(to) i
(see) g(a) f(summary) f(of) h(the) h(memory) e(leaks) i(group) s(ed) e
(together) j(b) m(y) e(call) h(site) g(then) f(the) 94
1939 y(`) p Fl(PROF) p Fo(') 29 b(or) g(`) p Fl(LEAKTABLE) p
Fo(') f(options) h(are) h(y) m(our) f(b) s(est) g(b) s(et.) 40
b(The) 29 b(output) f(\014le) i(pro) s(duced) d(b) m(y) i(the) h(`) p
Fl(PROF) p Fo(') e(option) 94 2039 y(can) g(b) s(e) f(displa) m(y) m
(ed) h(b) m(y) f(the) p Fl 27 w(mprof) p Fo 26 w(command,) h(whic) m(h)
f(will) g(displa) m(y) h(a) g(list) g(of) f(memory) g(leaks) h(as) g
(one) f(of) h(the) 94 2138 y(tables) k(that) g(it) g(sho) m(ws.) 42
b(Eac) m(h) 32 b(en) m(try) f(in) g(the) g(memory) g(leak) h(table) g
(will) f(normally) h(only) f(sho) m(w) g(one) g(lev) m(el) i(of) 94
2238 y(stac) m(k) d(depth) d(from) g(its) h(call) h(graph) e(but) g
(this) h(can) g(b) s(e) f(c) m(hanged) h(with) g(the) g(`) p
Fl(--stack-depth) p Fo(') c(option) k(in) g(the) p Fl
94 2338 a(mprof) p Fo 27 w(command.) 39 b(The) 27 b(table) i(of) f
(memory) f(leaks) i(can) e(also) i(b) s(e) e(written) h(to) g(a) g
(graph) f(sp) s(eci\014cation) h(\014le) g(for) 94 2437
y(later) 36 b(visualisation) g(with) f(a) g(graph) f(pac) m(k) -5
b(age.) 55 b(Using) 35 b(the) g(`) p Fl(PROF) p Fo(') f(option) h(is) g
(probably) f(the) g(b) s(est) h(w) m(a) m(y) g(to) 94
2537 y(summarise) 30 b(where) g(memory) g(leaks) i(o) s(ccur) e(in) g
(a) h(program.) 219 2662 y(Ho) m(w) m(ev) m(er,) e(the) c(`) p
Fl(LEAKTABLE) p Fo(') f(option) i(can) f(generate) i(similar) f
(information) g(to) g(the) g(`) p Fl(PROF) p Fo(') f(option) h(in) f
(the) 94 2762 y(mpatrol) 34 b(log) g(\014le.) 50 b(The) 32
b(dra) m(wbac) m(k) i(to) g(this) f(option) h(is) f(that) h(the) f(en) m
(tries) h(displa) m(y) m(ed) g(will) g(only) f(ev) m(er) h(sho) m(w) 94
2862 y(the) i(immediate) g(calling) g(functions) e(and) h(no) g(call) h
(stac) m(k) g(information,) h(but) d(in) h(man) m(y) g(cases) g(this) g
(is) g(go) s(o) s(d) 94 2961 y(enough.) 40 b(Another) 26
b(dra) m(wbac) m(k) h(to) g(this) f(option) h(is) f(that) h(it) g(is) f
(a\013ected) i(b) m(y) e(calls) i(in) d(the) i(co) s(de) g(to) g
(manipulate) 94 3061 y(the) 36 b(leak) h(table.) 57 b(Ho) m(w) m(ev) m
(er,) 39 b(if) d(the) g(calls) g(aren't) g(there) g(then) f(that) i(w) m
(on't) f(b) s(e) f(an) g(issue.) 56 b(The) 35 b(leak) i(table) 94
3161 y(should) 25 b(really) g(b) s(e) g(used) f(from) h(within) f(the) h
(source) g(co) s(de) h(\(see) g(b) s(elo) m(w\)) f(but) f(it) i(can) f
(still) h(pro) m(vide) f(some) h(useful) 94 3260 y(information) 31
b(with) f(the) h(`) p Fl(LEAKTABLE) p Fo(') d(option.) 219
3386 y(The) 34 b(third) f(option) i(is) f(the) g(`) p
Fl(SHOWUNFREED) p Fo(') e(option,) k(whic) m(h) e(will) g(sho) m(w) g
(the) h(details) g(of) f(ev) m(ery) h(unfreed) 94 3485
y(memory) 22 b(allo) s(cation) j(at) d(the) g(end) g(of) g(program) f
(execution.) 39 b(No) 23 b(attempt) g(is) f(made) g(to) h(summarise) e
(them,) j(but) 94 3585 y(the) 29 b(full) f(details) h(of) f(eac) m(h) i
(\(including) e(the) g(call) h(stac) m(k) h(if) e(a) m(v) -5
b(ailable\)) 31 b(are) e(giv) m(en.) 41 b(This) 27 b(option) i(is) f
(really) h(only) 94 3685 y(useful) 34 b(if) g(there) g(are) g(a) h
(small) f(n) m(um) m(b) s(er) f(of) h(unfreed) f(memory) h(allo) s
(cations) i(when) d(a) h(program) g(terminates,) 94 3784
y(but) c(it) h(is) f(in) m(v) -5 b(aluable) 32 b(if) e(all) h(of) g
(the) f(gory) h(details) h(are) e(required.) 219 3910
y(The) h(\014nal) h(group) f(of) i(options) f(are) g(the) g(`) p
Fl(LOGALLOCS) p Fo(',) f(`) p Fl(LOGREALLOCS) p Fo(') e(and) j(`) p
Fl(LOGFREES) p Fo(') e(options) p Fh 3683 3877 a(1) p
Fo 3720 3910 a(.) 46 b(In) 94 4009 y(some) 23 b(situations) f(a) g
(program) g(will) g(ab) s(ort) f(abnormally) h(b) s(efore) g(it) g(can)
g(exit,) i(in) e(whic) m(h) f(case) i(the) f(`) p Fl(LEAKTABLE) p
Fo(') 94 4109 y(and) g(`) p Fl(SHOWUNFREED) p Fo(') d(options) k(will) f
(not) g(displa) m(y) h(an) m(ything,) h(and) e(the) g(`) p
Fl(PROF) p Fo(') f(option) i(will) f(not) g(\014nish) f(writing) 94
4209 y(out) 29 b(the) f(pro\014ling) g(output) f(\014le) h(unless) g(y)
m(ou) g(are) h(exceptionally) h(luc) m(ky) f(with) e(the) i(`) p
Fl(AUTOSAVE) p Fo(') d(option.) 40 b(One) 94 4308 y(can) 26
b(argue) f(that) g(y) m(ou) h(should) e(b) s(e) g(lo) s(oking) i(for) e
(the) h(cause) h(of) f(the) g(error) g(rather) f(than) h(memory) g
(leaks) h(in) e(suc) m(h) 94 4408 y(a) 36 b(program,) g(but) e(it) h
(is) g(still) g(p) s(ossible) g(to) g(detect) h(the) f(latter) h(using)
f(the) g(aforemen) m(tioned) h(`) p Fl(LOG*) p Fo(') e(options) 94
4507 y(and) c(the) p Fl 31 w(mleak) p Fo 29 w(command.) 219
4633 y(The) p Fl 23 w(mleak) p Fo 22 w(command) 23 b(reads) g(in) g(an)
g(mpatrol) h(log) h(\014le,) g(recording) e(the) h(details) g(of) g
(eac) m(h) g(logged) h(memory) 94 4732 y(allo) s(cation,) g(reallo) s
(cation) e(or) d(deallo) s(cation) j(and) d(then) g(writes) g(out) h
(what) f(the) g(`) p Fl(SHOWUNFREED) p Fo(') e(option) j(should) 94
4832 y(ha) m(v) m(e) i(written) f(out) g(at) g(the) g(end) f(of) h(the)
g(log) h(\014le.) 38 b(It) 21 b(has) h(a) g(few) f(limitations) j
(compared) d(to) i(the) f(`) p Fl(SHOWUNFREED) p Fo(') 94
4932 y(option,) 30 b(but) d(the) i(details) g(of) g(eac) m(h) g
(unfreed) e(memory) h(allo) s(cation) j(that) e(it) f(writes) h(out) f
(should) g(b) s(e) f(accurate,) 94 5031 y(although) k(only) g(if) f
(the) h(logging) h(information) e(in) h(the) f(log) i(\014le) e(w) m
(as) h(complete) h(and) d(accurate) j(as) f(w) m(ell.) 219
5157 y(Note) 43 b(that) g(more) f(information) h(from) e(the) h(`) p
Fl(SHOWUNFREED) p Fo(') e(and) h(`) p Fl(LOG*) p Fo(') h(options) g
(can) g(b) s(e) g(obtained) 94 5256 y(b) m(y) 35 b(using) e(the) h(`) p
Fl(USEDEBUG) p Fo(') f(option.) 52 b(This) 34 b(will) g(attempt) h(to) g
(add) f(missing) g(source) g(\014le) g(and) g(line) g(n) m(um) m(b) s
(er) 94 5356 y(information) 40 b(to) h(the) e(details) i(recorded) e(b)
m(y) h(these) g(options) f(in) h(the) f(mpatrol) h(log) h(\014le,) h
(but) d(only) g(if) h(it) g(is) 94 5456 y(supp) s(orted) 35
b(b) m(y) i(the) g(particular) g(system) g(and) f(ob) 5
b(ject) 37 b(\014le) g(format,) i(and) d(then) h(only) g(if) f(the) h
(program) g(w) m(as) p 94 5553 1200 4 v Fh 143 5614 a(1) p
Fg 219 5645 a(Note) 26 b(that) f(the) g(`) p Ff(LOGMEMORY) p
Fg(') k(option) d(isn't) g(listed) g(whic) n(h) g(is) g(wh) n(y) f(`) p
Ff(LOGALL) p Fg(') j(w) n(asn't) e(listed) g(either.) p
90 rotate dyy eop
%%Page: 88 94
88 93 bop Fo 94 -116 a(88) 3377 b(mpatrol) 94 365 y(compiled) 22
b(with) f(debugging) f(information) i(from) e(the) h(compiler.) 38
b(If) 21 b(the) g(`) p Fl(USEDEBUG) p Fo(') e(option) j(isn't) f(supp) s
(orted) 94 465 y(then) 34 b(it) g(migh) m(t) g(b) s(e) f(p) s(ossible) g
(to) h(use) f(the) p Fl 34 w(mpsym) p Fo 32 w(command) g(to) h(p) s
(ostpro) s(cess) f(the) h(mpatrol) f(log) i(\014le) e(using) 94
565 y(a) 40 b(sym) m(b) s(olic) f(debugger) g(to) g(\014ll) g(in) g
(suc) m(h) f(information.) 67 b(Y) -8 b(ou) 39 b(ma) m(y) h(also) g
(\014nd) d(that) j(running) d(the) i(log) h(\014le) 94
664 y(through) 30 b(a) h(C) p Fl(++) p Fo 29 w(enco) s(ded) f(name) h
(demangler) f(is) h(useful) e(as) i(w) m(ell) g(if) g(y) m(our) f
(program) g(con) m(tains) i(C) p Fl(++) p Fo 29 w(co) s(de.) 219
789 y(Despite) 24 b(the) f(plethora) h(of) f(automated) h(features) f
(that) g(the) h(mpatrol) f(library) f(has) h(for) g(detecting) h
(memory) 94 888 y(leaks,) 30 b(the) e(most) h(p) s(o) m(w) m(erful) e
(metho) s(d) h(of) g(narro) m(wing) g(do) m(wn) f(suc) m(h) h(leaks) h
(is) f(b) m(y) g(mo) s(difying) f(the) h(source) g(co) s(de.) 94
988 y(The) 40 b(mpatrol) h(library) f(pro) m(vides) h(sev) m(eral) h
(functions) e(that) h(can) f(b) s(e) g(used) g(to) h(k) m(eep) g(trac) m
(k) h(of) f(di\013erences) 94 1088 y(in) 35 b(the) g(heap) g(b) s(et) m
(w) m(een) g(t) m(w) m(o) i(or) d(more) h(p) s(oin) m(ts) g(in) g(a) g
(program's) g(execution) h(|) f(suc) m(h) f(information) h(can) h(b) s
(e) 94 1187 y(in) m(v) -5 b(aluable) 32 b(when) d(pinp) s(oin) m(ting) h
(where) g(a) h(memory) f(leak) h(is) g(coming) g(from.) 219
1312 y(The) 36 b(\014rst) f(set) i(of) f(functions) g(are) g(based) g
(up) s(on) f(taking) i(a) f(snapshot) g(of) g(the) h(heap) e(at) i(a) g
(certain) g(p) s(oin) m(t) 94 1411 y(and) c(then) g(w) m(alking) i(the)
e(heap) g(to) h(examine) g(the) g(di\013erences) g(at) g(a) f(later) i
(p) s(oin) m(t.) 49 b(The) p Fl 33 w(__mp_snapshot\(\)) p
Fo 94 1511 a(function) 40 b(returns) e(the) i(curren) m(t) g(ev) m(en) m
(t) h(iden) m(ti\014er) f(in) f(the) h(mpatrol) g(library) f(and) g
(the) p Fl 40 w(__mp_iterate\(\)) p Fo 94 1611 a(function) 32
b(tra) m(v) m(erses) h(the) f(heap) g(calling) h(a) f(user-de\014ned) e
(callbac) m(k) k(function) e(for) f(eac) m(h) i(memory) f(allo) s
(cation) 94 1710 y(that) 43 b(has) g(c) m(hanged) g(since) f(a) h
(particular) g(ev) m(en) m(t) h(iden) m(ti\014er.) 77
b(This) 41 b(is) i(v) m(ery) f(useful) g(for) g(noting) h(memory) 94
1810 y(allo) s(cations) e(that) e(ha) m(v) m(e) h(b) s(een) e(made) h
(since) g(a) f(certain) i(p) s(oin) m(t) f(in) f(a) h(program) f(but) g
(ha) m(v) m(e) i(not) e(b) s(een) g(freed) 94 1910 y(when) 29
b(they) g(w) m(ere) h(exp) s(ected) g(to.) 41 b(The) 29
b(heap) s(di\013) g(to) s(ol) h(\(see) g(Section) h(8.3) f([heap) s
(di\013) 7 b(],) 30 b(page) g(51\)) g(pro) m(vided) f(in) 94
2009 y(libmpto) s(ols) i(mak) m(es) g(use) f(of) h(these) g(functions) f
(to) h(pro) m(vide) f(an) g(easy-to-use) j(in) m(terface.) 219
2134 y(The) j(mpatrol) g(library) g(also) h(pro) m(vides) f(a) h(leak) g
(table) g(\(see) g(Section) g(7.8) g([Leak) g(table],) i(page) e(45\)) g
(that) 94 2233 y(can) 43 b(b) s(e) f(manipulated) h(at) g(an) m(y) g(p)
s(oin) m(t) f(in) g(a) h(program) g(for) f(the) h(purp) s(ose) d(of) j
(detecting) h(c) m(hanges) g(in) e(the) 94 2333 y(heap.) d(The) p
Fl 23 w(__mp_clearleaktable\(\)) p Fo 19 w(function) 23
b(clears) i(the) g(leak) g(table,) h(while) e(the) p
Fl 24 w(__mp_leaktable\(\)) p Fo 94 2433 a(function) 41
b(writes) h(the) f(con) m(ten) m(ts) i(of) e(the) h(leak) g(table) g
(to) g(the) g(mpatrol) f(log) i(\014le.) 73 b(Automatic) 43
b(logging) g(of) 94 2532 y(memory) 35 b(allo) s(cations,) j(reallo) s
(cations) e(and) e(deallo) s(cations) i(can) f(b) s(e) f(turned) f(on) h
(and) g(o\013) h(using) f(the) p Fl 34 w(__mp_) 94 2632
y(startleaktable\(\)) p Fo 37 w(and) p Fl 40 w(__mp_stopleaktable\(\)) p
Fo 36 w(functions) 40 b(resp) s(ectiv) m(ely) -8 b(.) 75
b(The) 40 b(main) h(adv) -5 b(an) m(tage) 94 2731 y(to) 43
b(using) e(the) h(leak) h(table) g(instead) f(of) g(the) g(functions) g
(describ) s(ed) e(in) i(the) g(previous) f(paragraph) g(is) h(that) 94
2831 y(it) e(can) e(pro) m(vide) h(a) g(summary) e(of) i(unfreed) e
(allo) s(cations) k(rather) d(than) g(sho) m(wing) h(the) g(details) g
(of) g(eac) m(h) h(one) 94 2931 y(individually) -8 b(.) 49
b(It) 33 b(can) h(also) g(summarise) e(freed) h(allo) s(cations) i
(without) e(requiring) g(the) g(use) g(of) g(the) g(`) p
Fl(NOFREE) p Fo(') 94 3030 y(option.) 219 3155 y(Finally) -8
b(,) 45 b(y) m(ou) c(can) g(indicate) h(to) f(the) g(mpatrol) g
(library) g(that) g(a) g(particular) g(memory) g(allo) s(cation) i
(will) 94 3254 y(remain) f(allo) s(cated) h(un) m(til) f(program) f
(termination) i(and) e(that) h(it) g(should) e(not) i(b) s(e) f
(treated) h(as) g(a) g(memory) 94 3354 y(leak.) 63 b(This) 36
b(can) i(b) s(e) f(done) g(b) m(y) g(calling) i(the) p
Fl 37 w(__mp_setmark\(\)) p Fo 34 w(function,) f(and) f(thereafter) h
(an) m(y) g(attempt) 94 3454 y(to) c(free) g(the) f(newly-mark) m(ed) h
(allo) s(cation) h(will) f(result) f(in) g(an) g(error,) h(although) g
(reallo) s(cating) h(it) f(is) f(p) s(ossible.) 94 3553
y(It) i(is) g(normal) g(in) f(man) m(y) h(programs) g(to) g(mak) m(e) h
(sev) m(eral) g(initial) g(memory) f(allo) s(cations) i(that) e(will) h
(remain) e(in) 94 3653 y(use) i(throughout) f(the) h(program's) g
(lifetime.) 58 b(On) 35 b(most) h(systems,) i(suc) m(h) d(allo) s
(cations) j(will) e(b) s(e) g(freed) f(when) 94 3753
y(the) 41 b(program) e(terminates) i(an) m(yw) m(a) m(y) h(so) e(there)
g(will) g(b) s(e) g(no) f(need) h(to) h(free) f(them) g(explicitly) -8
b(.) 71 b(It) 40 b(is) g(these) 94 3852 y(allo) s(cations) 33
b(that) e(should) e(b) s(e) h(mark) m(ed) h(so) f(as) h(to) g(prev) m
(en) m(t) g(them) f(sho) m(wing) h(up) e(as) i(memory) f(leaks.) p
90 rotate dyy eop
%%Page: 89 95
89 94 bop Fo 94 -116 a(Chapter) 30 b(14:) 42 b(Impro) m(ving) 30
b(p) s(erformance) 2250 b(89) p Fk 94 365 a(14) 81 b(Impro) l(ving) 52
b(p) t(erformance) p Fo 219 582 a(Because) 41 b(of) e(their) h(need) f
(to) h(co) m(v) m(er) h(ev) m(ery) f(ev) m(en) m(tualit) m(y) -8
b(,) 45 b(mallo) s(c) c(library) e(implemen) m(tations) i(are) f(v) m
(ery) 94 682 y(general) 34 b(and) e(most) i(do) e(their) h(job) g(w) m
(ell) g(when) f(y) m(ou) h(consider) g(what) g(is) g(thro) m(wn) f(at) h
(them.) 48 b(Ho) m(w) m(ev) m(er,) 36 b(y) m(our) 94
781 y(program) 24 b(ma) m(y) h(not) f(b) s(e) f(p) s(erforming) g(as) h
(w) m(ell) h(as) g(it) f(should) f(simply) h(b) s(ecause) g(there) g
(ma) m(y) h(b) s(e) e(a) h(more) g(e\016cien) m(t) 94
881 y(w) m(a) m(y) 37 b(of) e(dealing) h(with) e(dynamic) h(memory) g
(allo) s(cations.) 57 b(Indeed,) 36 b(there) f(ma) m(y) h(ev) m(en) f
(b) s(e) g(a) g(more) g(e\016cien) m(t) 94 981 y(mallo) s(c) d(library)
e(a) m(v) -5 b(ailable) 33 b(for) d(y) m(ou) g(to) i(use.) 219
1104 y(If) i(y) m(ou) h(need) f(to) h(allo) s(cate) i(lots) e(of) f
(blo) s(c) m(ks) h(of) g(the) f(same) h(size) p Fh 2365
1071 a(1) p Fo 2403 1104 a(,) h(but) d(y) m(ou) i(w) m(on't) g(kno) m
(w) f(the) h(n) m(um) m(b) s(er) e(of) 94 1203 y(blo) s(c) m(ks) e(y) m
(ou'll) g(require) e(un) m(til) h(run-time) f(then) h(y) m(ou) g(could)
g(tak) m(e) h(the) f(easy) h(approac) m(h) f(b) m(y) f(simply) h(allo) s
(cating) 94 1303 y(a) i(new) f(blo) s(c) m(k) h(of) f(memory) g(for) g
(eac) m(h) i(o) s(ccurrence.) 43 b(Ho) m(w) m(ev) m(er,) 34
b(this) d(is) g(going) i(to) f(create) g(a) g(lot) g(of) g(\(t) m
(ypically) 94 1402 y(small\)) k(memory) g(blo) s(c) m(ks) f(that) h
(the) f(underlying) f(mallo) s(c) i(library) f(will) h(ha) m(v) m(e) g
(to) g(k) m(eep) g(trac) m(k) g(of,) h(and) d(ev) m(en) 94
1502 y(in) h(man) m(y) g(go) s(o) s(d) f(mallo) s(c) i(libraries) f
(this) f(is) h(lik) m(ely) h(to) g(cause) f(memory) g(fragmen) m
(tation) h(and) e(p) s(ossibly) g(ev) m(en) 94 1602 y(result) 40
b(in) e(the) i(blo) s(c) m(ks) f(scattered) h(throughout) f(the) h
(address) e(space) h(rather) g(than) g(all) h(in) f(the) g(one) h
(place,) 94 1701 y(whic) m(h) 31 b(is) f(not) h(necessarily) g(a) g(go)
s(o) s(d) f(thing) g(on) h(systems) f(with) g(virtual) h(memory) -8
b(.) 219 1824 y(An) 44 b(alternativ) m(e) i(approac) m(h) f(w) m(ould) f
(b) s(e) f(to) i(allo) s(cate) h(memory) e(in) g(m) m(ultiples) h(of) f
(the) g(blo) s(c) m(k) h(size,) k(so) 94 1924 y(that) d(sev) m(eral) h
(blo) s(c) m(ks) e(w) m(ould) g(b) s(e) g(allo) s(cated) i(at) e(once.)
86 b(This) 44 b(w) m(ould) h(require) g(sligh) m(tly) i(more) e(w) m
(ork) g(on) 94 2024 y(y) m(our) 34 b(part) f(since) h(y) m(ou) f(w) m
(ould) h(need) f(to) h(write) f(in) m(terface) i(co) s(de) f(to) g
(return) e(a) i(single) g(blo) s(c) m(k,) h(while) e(p) s(ossible) 94
2123 y(allo) s(cating) 40 b(space) d(for) g(more) g(blo) s(c) m(ks) g
(if) g(no) g(free) g(blo) s(c) m(ks) g(w) m(ere) h(a) m(v) -5
b(ailable.) 62 b(Ho) m(w) m(ev) m(er,) 41 b(this) c(approac) m(h) g
(has) 94 2223 y(sev) m(eral) d(adv) -5 b(an) m(tages.) 49
b(The) 32 b(\014rst) g(is) h(that) g(the) f(mallo) s(c) i(library) e
(only) h(needs) f(to) h(k) m(eep) g(trac) m(k) h(of) f(a) g(few) f
(large) 94 2323 y(allo) s(cations) d(rather) c(than) h(lots) h(of) f
(small) h(allo) s(cations,) i(so) d(splitting) h(and) e(merging) i
(free) f(blo) s(c) m(ks) g(is) g(less) g(lik) m(ely) 94
2422 y(to) 31 b(o) s(ccur.) 40 b(Secondly) -8 b(,) 31
b(y) m(our) f(blo) s(c) m(ks) g(will) g(b) s(e) f(scattered) i(ab) s
(out) f(less) g(in) f(the) h(address) f(space) h(of) g(the) g(pro) s
(cess,) 94 2522 y(whic) m(h) h(means) g(that) h(on) f(systems) g(with) g
(virtual) g(memory) g(there) h(are) f(less) h(lik) m(ely) g(to) g(b) s
(e) e(page) i(faults) g(if) f(y) m(ou) 94 2621 y(need) g(to) g(access) g
(or) g(tra) m(v) m(erse) h(all) f(of) f(the) h(blo) s(c) m(ks) g(y) m
(ou) g(ha) m(v) m(e) g(created.) 219 2744 y(A) 25 b(memory) f(allo) s
(cation) j(concept) f(that) f(is) g(similar) g(to) h(this) e(is) h
(called) h(an) p Fi 25 w(ar) -5 b(ena) p Fo(.) 40 b(This) 24
b(datat) m(yp) s(e) h(requires) 94 2844 y(functions) f(whic) m(h) g
(are) g(built) f(on) h(top) g(of) g(the) g(existing) h(mallo) s(c) g
(library) f(functions) f(and) g(whic) m(h) h(asso) s(ciate) i(eac) m(h)
94 2944 y(memory) 31 b(allo) s(cation) i(with) d(a) h(particular) g
(arena.) 41 b(An) 30 b(arena) h(can) g(ha) m(v) m(e) g(as) g(man) m(y) g
(allo) s(cations) h(added) e(to) h(it) 94 3043 y(as) 37
b(required,) f(but) f(allo) s(cations) j(cannot) f(usually) e(b) s(e) h
(freed) f(un) m(til) h(the) g(whole) g(arena) h(is) e(freed.) 57
b(Note) 37 b(that) 94 3143 y(there) 32 b(are) f(not) h(really) g(an) m
(y) f(generic) h(implemen) m(tations) h(of) e(arenas) h(that) f(are) h
(a) m(v) -5 b(ailable) 33 b(as) f(ev) m(ery) m(one) g(tends) 94
3243 y(to) c(write) g(their) f(o) m(wn) g(v) m(ersion) g(when) f(they) i
(require) e(it,) j(although) e(SGI) g(IRIX) g(and) f(Compaq) h(T) -8
b(ru64) 27 b(systems) 94 3342 y(do) k(come) g(with) f(an) g(arena) h
(library) f(called) p Fi 32 w(amal) 5 b(lo) -5 b(c) p
Fo(.) 219 3465 y(Ho) m(w) m(ev) m(er,) 34 b(what) d(if) g(y) m(ou) g
(don't) g(plan) g(to) h(free) f(all) h(of) f(the) g(blo) s(c) m(ks) h
(at) f(the) h(same) f(time?) 43 b(A) 32 b(sligh) m(t) g(mo) s(di\014-)
94 3565 y(cation) d(to) g(the) e(ab) s(o) m(v) m(e) i(design) e(could) h
(b) s(e) f(to) h(ha) m(v) m(e) g(a) p Fi 28 w(slot) j(table) p
Fo(.) 40 b(This) 27 b(w) m(ould) g(in) m(v) m(olv) m(e) j(allo) s
(cating) g(c) m(h) m(unks) d(of) 94 3665 y(blo) s(c) m(ks) f(as) g
(they) f(are) h(required,) g(adding) f(eac) m(h) h(individual) f(blo) s
(c) m(k) h(within) f(a) h(c) m(h) m(unk) f(to) h(a) g(singly-link) m
(ed) g(list) g(of) 94 3764 y(free) k(blo) s(c) m(ks.) 41
b(Then,) 30 b(as) g(new) f(blo) s(c) m(ks) h(are) g(required,) g(the) g
(allo) s(cator) i(w) m(ould) d(simply) h(c) m(ho) s(ose) g(the) g
(\014rst) f(blo) s(c) m(k) 94 3864 y(on) h(the) g(free) f(list,) i
(otherwise) f(it) g(w) m(ould) f(allo) s(cate) j(memory) d(for) g(a) h
(new) f(c) m(h) m(unk) h(of) f(blo) s(c) m(ks) h(and) f(add) g(them) g
(to) 94 3963 y(the) i(free) e(list.) 42 b(F) -8 b(reeing) 31
b(individual) e(blo) s(c) m(ks) h(w) m(ould) g(simply) f(in) m(v) m
(olv) m(e) j(returning) d(the) h(blo) s(c) m(k) h(to) f(the) g(free) g
(list.) 94 4063 y(If) h(this) g(description) f(isn't) h(clear) h
(enough,) f(ha) m(v) m(e) h(a) f(lo) s(ok) h(in) e(`) p
Fl(src/slots.h) p Fo(') e(and) i(`) p Fl(src/slots.c) p
Fo('.) 40 b(This) 30 b(is) 94 4163 y(ho) m(w) f(the) g(mpatrol) f
(library) g(allo) s(cates) j(memory) d(from) g(the) h(system) g(for) f
(all) h(of) g(its) g(in) m(ternal) g(structures.) 39
b(F) -8 b(or) 94 4262 y(v) j(ariable-sized) 33 b(structures,) d(a) h
(sligh) m(tly) h(di\013eren) m(t) f(approac) m(h) g(needs) f(to) h(b) s
(e) f(tak) m(en,) i(but) e(for) g(an) h(example) g(of) 94
4362 y(this) g(using) f(strings) g(see) h(`) p Fl(src/strtab.h) p
Fo(') c(and) j(`) p Fl(src/strtab.c) p Fo('.) 219 4485
y(Another) 40 b(optimisation) i(that) f(is) f(p) s(ossible) g(on) g
(UNIX) g(and) g(Windo) m(ws) g(platforms) g(is) g(making) h(use) f(of)
94 4585 y(memory-mapp) s(ed) 26 b(\014les.) 39 b(This) 26
b(allo) m(ws) i(y) m(ou) e(to) i(map) e(a) h(\014lesystem) f(ob) 5
b(ject) 28 b(in) m(to) f(the) g(address) e(space) i(of) g(y) m(our) 94
4684 y(pro) s(cess,) f(th) m(us) e(allo) m(wing) i(y) m(ou) e(to) i
(treat) f(a) g(\014le) f(as) h(an) f(arra) m(y) h(of) f(b) m(ytes.) 39
b(Because) 26 b(it) f(uses) f(the) g(virtual) h(memory) 94
4784 y(system) 37 b(to) g(map) f(the) h(\014le,) h(an) m(y) f(c) m
(hanges) g(y) m(ou) g(mak) m(e) g(to) g(the) g(mapp) s(ed) e(memory) h
(will) h(b) s(e) e(applied) i(to) g(the) 94 4883 y(\014le.) k(This) 28
b(is) h(implemen) m(ted) g(through) g(the) g(virtual) g(memory) g
(system) g(treating) h(the) f(\014le) g(as) h(a) f(pseudo) f(sw) m(ap)
94 4983 y(\014le) g(and) f(will) h(therefore) g(only) g(use) f(up) f
(ph) m(ysical) j(memory) e(when) g(pages) h(are) g(accessed.) 41
b(It) 27 b(also) i(means) e(that) 94 5083 y(\014le) i(op) s(erations) f
(can) g(b) s(e) g(replaced) g(b) m(y) g(memory) g(read) g(and) f(write)
i(op) s(erations,) g(leading) g(to) f(a) h(v) m(ery) f(fast) h(and) 94
5182 y(e\016cien) m(t) 34 b(w) m(a) m(y) g(of) e(p) s(erforming) f
(I/O.) 46 b(Another) 33 b(added) e(b) s(on) m(us) g(of) i(this) f
(system) g(means) g(that) h(en) m(tire) h(blo) s(c) m(ks) 94
5282 y(of) f(pro) s(cess) g(memory) g(can) g(b) s(e) f(written) h(to) g
(a) h(\014le) f(for) f(later) i(re-use,) g(just) e(as) h(long) h(as) f
(the) g(\014le) g(can) g(later) h(b) s(e) 94 5382 y(mapp) s(ed) 24
b(to) h(the) h(same) f(address.) 38 b(This) 24 b(can) h(b) s(e) f(a) h
(lot) h(faster) f(than) g(writing) g(to) g(and) g(reading) g(from) f(a)
h(sp) s(eci\014c) 94 5481 y(format) 31 b(of) g(\014le.) p
94 5553 1200 4 v Fh 143 5614 a(1) p Fg 219 5645 a(Suc) n(h) 25
b(as) h(for) g(use) g(in) g(a) g(link) n(ed) f(list.) p
90 rotate dyy eop
%%Page: 90 96
90 95 bop Fo 94 -116 a(90) 3377 b(mpatrol) 219 365 y(If) 26
b(y) m(ou) g(really) h(don't) f(w) m(an) m(t) h(to) g(k) m(eep) f(trac)
m(k) i(of) e(dynamic) g(memory) g(allo) s(cations) i(at) f(all) g(then)
e(p) s(erhaps) g(y) m(ou) 94 465 y(should) 33 b(consider) p
Fi 33 w(garb) -5 b(age) 36 b(c) -5 b(ol) 5 b(le) -5 b(ction) p
Fo(.) 51 b(This) 32 b(allo) m(ws) j(y) m(ou) e(to) h(mak) m(e) h
(dynamic) e(memory) g(allo) s(cations) i(that) 94 565
y(need) 28 b(not) g(necessarily) h(b) s(e) e(matc) m(hed) h(b) m(y) g
(corresp) s(onding) e(calls) j(to) g(free) f(these) g(allo) s(cations.)
42 b(A) 28 b(garbage) h(col-) 94 664 y(lector) h(will) e(\(at) h
(certain) g(p) s(oin) m(ts) f(during) f(program) g(execution\)) j
(attempt) f(to) g(lo) s(ok) f(for) g(memory) g(allo) s(cations) 94
764 y(that) j(are) e(no) h(longer) g(referenced) f(b) m(y) h(the) f
(program) h(and) e(free) i(them) f(for) h(later) g(re-use,) g(hence) g
(remo) m(ving) g(all) 94 863 y(p) s(ossibilit) m(y) e(of) f(memory) f
(leaks.) 41 b(Ho) m(w) m(ev) m(er,) 29 b(the) e(garbage) h(collection) i
(pro) s(cess) c(can) h(tak) m(e) h(a) f(sizable) h(c) m(h) m(unk) f(of)
94 963 y(pro) s(cessor) h(time) g(dep) s(ending) e(on) i(ho) m(w) f
(large) i(the) f(program) f(is,) i(so) f(it) g(is) g(not) g(really) g
(an) g(option) g(for) f(real-time) 94 1063 y(programming.) 40
b(It) 26 b(is) h(also) g(v) m(ery) g(platform-dep) s(enden) m(t) f(as) h
(it) g(examines) g(v) m(ery) g(lo) m(w-lev) m(el) j(structures) 25
b(within) 94 1162 y(a) 30 b(pro) s(cess) e(in) g(order) g(to) i
(determine) f(whic) m(h) f(p) s(oin) m(ters) h(p) s(oin) m(t) f(to) i
(whic) m(h) e(memory) h(allo) s(cations.) 42 b(But) 29
b(there) g(is) 94 1262 y(at) 36 b(least) f(one) g(garbage) h(collector)
p Fh 1271 1229 a(2) p Fo 1345 1262 a(that) f(w) m(orks) g(w) m(ell) g
(with) g(C) f(and) g(C) p Fl(++) p Fo 33 w(and) g(acts) i(as) e(a) h
(replacemen) m(t) h(for) p Fl 94 1362 a(malloc\(\)) p
Fo 29 w(and) p Fl 29 w(free\(\)) p Fo(,) 29 b(so) i(it) g(ma) m(y) g(b)
s(e) f(the) g(ideal) h(solution) g(for) f(y) m(ou.) 219
1485 y(If) e(y) m(ou) g(do) h(c) m(ho) s(ose) g(to) g(use) f(an) g
(alternativ) m(e) j(mallo) s(c) e(library) f(mak) m(e) h(sure) f(that) h
(y) m(ou) g(ha) m(v) m(e) g(a) g(license) g(to) g(do) 94
1585 y(so) f(and) e(that) h(y) m(ou) h(follo) m(w) g(an) m(y) f
(distribution) f(requiremen) m(ts.) 40 b(On) 26 b(systems) h(that) g
(supp) s(ort) e(dynamic) i(linking) 94 1685 y(y) m(ou) 34
b(ma) m(y) g(w) m(an) m(t) h(to) f(link) f(the) h(library) f
(statically) j(rather) e(than) f(dynamically) h(so) g(that) g(y) m(ou) g
(don't) f(ha) m(v) m(e) i(to) 94 1784 y(w) m(orry) 40
b(ab) s(out) g(an) g(additional) h(\014le) g(that) f(w) m(ould) g(need)
g(to) h(b) s(e) f(installed.) 71 b(Ho) m(w) m(ev) m(er,) 45
b(whether) 39 b(y) m(ou) i(ha) m(v) m(e) 94 1884 y(that) c(c) m(hoice) g
(dep) s(ends) d(on) h(the) h(license) h(for) e(the) h(sp) s(eci\014c) g
(library) -8 b(,) 37 b(and) e(some) h(licenses) g(also) h(require) e
(that) 94 1984 y(the) f(source) g(co) s(de) f(for) h(the) f(library) g
(b) s(e) g(made) h(readily) f(a) m(v) -5 b(ailable.) 53
b(Shared) 32 b(libraries) i(ha) m(v) m(e) g(the) g(adv) -5
b(an) m(tage) 94 2083 y(that) 37 b(they) e(can) h(b) s(e) f(up) s
(dated) f(with) h(bug) g(\014xes) g(so) h(that) g(all) g(programs) f
(that) h(require) f(these) h(libraries) g(will) 94 2183
y(automatically) e(receiv) m(e) e(these) f(\014xes) f(without) g
(needing) h(to) g(b) s(e) e(relink) m(ed.) 219 2307 y(If) i(all) h(of) f
(the) g(ab) s(o) m(v) m(e) h(suggestions) g(do) f(not) h(seem) f(to) h
(help) e(and) h(y) m(ou) g(still) h(feel) g(that) g(y) m(ou) f(ha) m(v)
m(e) h(a) g(p) s(erfor-) 94 2406 y(mance) h(b) s(ottlenec) m(k) g(in) e
(the) h(part) g(of) f(y) m(our) h(co) s(de) g(that) g(deals) g(with) g
(dynamically) g(allo) s(cated) i(memory) d(then) 94 2506
y(y) m(ou) 36 b(should) d(try) i(using) f(the) h(memory) g(allo) s
(cation) i(pro\014ling) d(feature) h(of) g(mpatrol.) 54
b(This) 34 b(can) h(b) s(e) f(used) g(at) 94 2605 y(run-time) h(to) g
(analyse) g(the) g(dynamic) f(memory) h(allo) s(cation) h(calls) g
(that) f(y) m(our) g(program) f(mak) m(es) h(during) f(its) 94
2705 y(execution,) i(and) d(builds) f(statistics) k(for) d(later) h
(viewing) g(with) f(the) p Fl 34 w(mprof) p Fo 32 w(command.) 49
b(It) 34 b(is) f(then) g(p) s(ossible) 94 2805 y(for) g(y) m(ou) h(to) g
(see) g(exactly) h(ho) m(w) e(man) m(y) g(calls) h(w) m(ere) g(made) f
(to) h(eac) m(h) h(function) d(and) h(where) g(they) g(came) h(from.) 94
2904 y(Suc) m(h) h(information) g(can) h(then) e(b) s(e) h(put) f(to) i
(go) s(o) s(d) f(use) g(in) f(order) h(to) h(optimise) f(the) h(relev)
-5 b(an) m(t) 36 b(parts) f(of) g(y) m(our) 94 3004 y(co) s(de.) 40
b(The) 24 b(tracing) i(output) f(\014les) g(that) h(can) f(b) s(e) f
(pro) s(duced) g(b) m(y) h(the) g(mpatrol) g(library) g(ma) m(y) h
(also) g(b) s(e) e(useful) g(in) 94 3104 y(order) 32
b(to) h(view) f(patterns) h(in) f(memory) g(allo) s(cation) i(b) s(eha)
m(viour) e(and) f(gather) i(information) g(ab) s(out) f(lifetimes) 94
3203 y(of) f(memory) f(allo) s(cations.) 219 3327 y(And) f(\014nally) -8
b(,) 31 b(some) g(tips) f(on) h(ho) m(w) f(to) h(correctly) h(use) e
(dynamic) g(memory) g(allo) s(cations.) 43 b(The) 30
b(\014rst,) g(most) 94 3427 y(basic) 41 b(rule) f(is) g(to) p
Fi 41 w(always) p Fo 49 w(c) m(hec) m(k) i(the) e(return) f(v) -5
b(alues) 40 b(from) p Fl 40 w(malloc\(\)) p Fo 38 w(and) f(related) i
(functions.) p Fi 70 w(Never) p Fo 94 3526 a(assume) f(that) h(a) g
(call) g(to) p Fl 41 w(malloc\(\)) p Fo 38 w(will) g(succeed,) i(b) s
(ecause) e(y) m(ou're) f(unlik) m(ely) h(to) g(b) s(e) f(able) h(to) g
(read) f(the) 94 3626 y(future) p Fh 335 3593 a(3) p
Fo 372 3626 a(.) 48 b(Alternativ) m(ely) -8 b(,) 37 b(use) 32
b(\(or) i(write\)) f(an) p Fl 33 w(xmalloc\(\)) p Fo
30 w(or) g(similar) h(function) p Fh 2929 3593 a(4) p
Fo 2966 3626 a(,) f(whic) m(h) g(calls) p Fl 34 w(malloc\(\)) p
Fo 94 3726 a(but) 23 b(nev) m(er) g(returns) f(`) p Fl(NULL) p
Fo(') h(since) h(it) f(will) h(ab) s(ort) f(instead.) 38
b(With) 24 b(the) f(C) p Fl(++) p Fo 23 w(op) s(erators) g(it) h(is) f
(sligh) m(tly) h(di\013eren) m(t) 94 3825 y(b) s(ecause) j(some) g(v) m
(ersions) h(use) e(exceptions) i(to) g(indicate) f(failure,) h(so) f(y)
m(ou) h(should) d(alw) m(a) m(ys) k(pro) m(vide) e(a) g(handler) 94
3925 y(to) 32 b(deal) f(with) f(this) g(ev) m(en) m(tualit) m(y) -8
b(.) 219 4049 y(Nev) m(er) 31 b(use) p Fi 29 w(fe) -5
b(atur) g(es) p Fh 944 4016 a(5) p Fo 1013 4049 a(of) 30
b(sp) s(eci\014c) f(mallo) s(c) i(libraries) f(if) f(y) m(ou) h(w) m
(an) m(t) h(y) m(our) f(co) s(de) g(to) g(b) s(e) f(p) s(ortable.) 41
b(Alw) m(a) m(ys) 94 4148 y(follo) m(w) 33 b(the) f(ANSI) f(C) h(or) f
(C) p Fl(++) p Fo 31 w(calling) i(con) m(v) m(en) m(tions) h(and) d
(nev) m(er) h(mak) m(e) g(assumptions) f(ab) s(out) g(the) h(function)
94 4248 y(or) 26 b(op) s(erator) f(y) m(ou) h(are) f(ab) s(out) g(to) h
(call) h(|) e(the) g(standards) f(committees) k(w) m(en) m(t) e(to) g
(great) g(lengths) f(to) h(explicitly) 94 4348 y(sp) s(ecify) g(its) h
(b) s(eha) m(viour.) 39 b(F) -8 b(or) 26 b(example,) i(don't) e(assume)
g(that) h(the) f(con) m(ten) m(ts) i(of) e(a) h(freed) f(memory) g
(allo) s(cation) 94 4447 y(will) i(remain) f(v) -5 b(alid) 27
b(un) m(til) g(the) h(next) f(call) h(to) p Fl 28 w(malloc\(\)) p
Fo(,) e(and) g(don't) h(assume) g(that) h(the) f(con) m(ten) m(ts) i
(of) e(a) g(newly) 94 4547 y(allo) s(cated) 33 b(memory) d(blo) s(c) m
(k) h(will) g(b) s(e) e(zero) s(ed) i(unless) f(y) m(ou) g(created) i
(it) f(with) p Fl 30 w(calloc\(\)) p Fo(.) 219 4671 y(T) -8
b(ry) 35 b(to) i(a) m(v) m(oid) g(allo) s(cating) h(arra) m(ys) e(on) f
(the) h(stac) m(k) h(if) f(they) f(are) h(to) h(hold) e(data) h(that) h
(ma) m(y) f(o) m(v) m(er\015o) m(w.) 58 b(In) 94 4770
y(most) 33 b(cases) h(this) e(is) h(common) g(sense,) g(but) f
(sometimes) i(y) m(ou) f(ma) m(y) g(allo) s(cate) i(an) d(arra) m(y) h
(that) h(should) d(su\016ce) 94 4870 y(for) 43 b(99\045) g(of) g(the) g
(time.) 78 b(Ho) m(w) m(ev) m(er,) 49 b(if) 42 b(there) h(is) g(a) g
(1\045) g(c) m(hance) h(that) f(it) g(ma) m(y) g(o) m(v) m(er\015o) m
(w) i(then) d(on) h(some) 94 4970 y(systems) 29 b(the) f(stac) m(k) h
(is) g(executable) g(and) f(hac) m(k) m(ers) h(can) f(use) g(that) p
Fi 29 w(fe) -5 b(atur) g(e) p Fo 36 w(to) 28 b(break) g(in) m(to) h(a) g
(secure) f(program) 94 5069 y(b) m(y) 38 b(o) m(v) m(erwriting) g(the) g
(curren) m(t) f(function's) g(return) g(address) f(on) h(the) h(stac) m
(k.) 63 b(Use) 38 b(statically-allo) s(cated) k(or) 94
5169 y(dynamically-allo) s(cated) 34 b(arra) m(ys) d(for) f(these) h
(situations,) g(or) f(b) s(etter) h(still,) g(c) m(hec) m(k) h(for) f
(o) m(v) m(er\015o) m(w.) p 94 5262 1200 4 v Fh 143 5322
a(2) p Fg 219 5354 a(A) 25 b(freely) h(distributably) g(library) g
(called) g(GC) h(\(see) f(App) r(endix) e(K) h([Related) h(soft) n(w) n
(are],) i(page) e(213\).) p Fh 143 5419 a(3) p Fg 219
5451 a(If) g(y) n(ou) f(can,) h(wh) n(y) f(are) h(y) n(ou) f(reading) i
(this) e(|) h(y) n(ou'v) n(e) f(already) h(read) g(it!) p
Fh 143 5517 a(4) p Fg 219 5548 a(The) g(mpatrol) g(library) g(comes) h
(with) f(the) p Ff 25 w(xmalloc\(\)) p Fg 28 w(and) p
Ff 25 w(MP_MALLOC\(\)) p Fg 28 w(families) i(of) e(functions.) p
Fh 143 5614 a(5) p Fg 219 5645 a(Whether) f(they) g(are) h(do) r(cumen)
n(ted) f(or) h(not.) p 90 rotate dyy eop
%%Page: 91 97
91 96 bop Fo 94 -116 a(Chapter) 30 b(14:) 42 b(Impro) m(ving) 30
b(p) s(erformance) 2250 b(91) 219 365 y(Finally) -8 b(,) 48
b(try) 43 b(stress-testing) i(y) m(our) e(program) g(in) h(lo) m(w) g
(memory) f(conditions.) 80 b(The) 43 b(mpatrol) g(library) 94
465 y(con) m(tains) 35 b(the) f(`) p Fl(LIMIT) p Fo(') e(option) i
(whic) m(h) f(can) h(place) g(an) f(upp) s(er) f(b) s(ound) f(on) i
(the) h(size) g(of) f(the) h(heap,) g(and) f(also) 94
565 y(con) m(tains) 42 b(the) e(`) p Fl(FAILFREQ) p Fo(') e(and) h(`) p
Fl(FAILSEED) p Fo(') f(options) i(whic) m(h) g(can) g(cause) h(random) e
(memory) h(allo) s(cation) 94 664 y(failures.) 63 b(Doing) 39
b(this) e(will) h(test) h(parts) e(of) h(y) m(our) g(co) s(de) g(that) g
(y) m(ou) g(w) m(ould) f(probably) g(nev) m(er) h(exp) s(ect) g(to) h
(b) s(e) 94 764 y(called,) 32 b(but) e(p) s(erhaps) f(they) i(will) g
(one) f(da) m(y!) 42 b(Who) 31 b(w) m(ould) f(y) m(ou) h(rather) f(ha) m
(v) m(e) i(debugging) e(y) m(our) h(program) f(|) 94
863 y(y) m(ourself) h(or) f(the) h(user?) p 90 rotate
dyy eop
%%Page: 92 98
92 97 bop Fo 94 -116 a(92) 3377 b(mpatrol) p 90 rotate
dyy eop
%%Page: 93 99
93 98 bop Fo 94 -116 a(Chapter) 30 b(15:) 42 b(Ho) m(w) 31
b(it) g(w) m(orks) 2652 b(93) p Fk 94 365 a(15) 81 b(Ho) l(w) 52
b(it) i(w) l(orks) p Fo 219 598 a(The) 30 b(mpatrol) h(library) g(w) m
(as) g(originally) h(written) f(with) g(the) g(in) m(ten) m(tion) h(of)
f(plugging) g(it) g(in) m(to) h(an) f(existing) 94 697
y(compiler) 38 b(so) g(that) g(the) f(compiler) h(could) g(plan) m(t) f
(calls) i(to) f(it) g(in) f(the) g(co) s(de) h(it) g(generated) g(when)
e(a) i(sp) s(eci\014c) 94 797 y(debugging) d(option) g(w) m(as) g
(used.) 52 b(These) 34 b(extra) h(calls) h(w) m(ould) e(ob) m(viously) h
(slo) m(w) g(the) g(co) s(de) g(do) m(wn,) g(but) f(along) 94
897 y(with) f(the) g(stac) m(k) i(c) m(hec) m(king) g(options) e(that) g
(w) m(ould) g(b) s(e) f(pro) m(vided,) i(this) f(w) m(ould) g(giv) m(e)
h(the) f(user) f(an) h(enhanced) 94 996 y(run-time) e(debugging) g(en) m
(vironmen) m(t.) 44 b(Unfortunately) -8 b(,) 33 b(this) e(in) m
(tegration) i(nev) m(er) e(happ) s(ened,) f(but) h(the) g(w) m(a) m(y)
94 1096 y(that) g(mpatrol) g(w) m(orks) f(is) h(still) g(signi\014can) m
(tly) h(di\013eren) m(t) f(from) e(other) i(mallo) s(c) g(tracing) h
(libraries.) 219 1223 y(In) g(order) h(to) h(quic) m(kly) f(determine) g
(exactly) i(whic) m(h) e(memory) g(allo) s(cation) i(a) e(heap) g
(address) f(b) s(elonged) h(to) 94 1323 y(it) k(w) m(as) e(necessary) h
(to) g(b) s(e) f(able) h(to) h(searc) m(h) f(the) f(heap) h(in) f(an) g
(e\016cien) m(t) i(manner.) 55 b(The) 35 b(traditional) i(w) m(a) m(y) g
(of) 94 1422 y(searc) m(hing) c(along) f(a) g(link) m(ed) g(list) g(w) m
(as) g(unfeasible,) g(so) g(an) f(implemen) m(tation) i(based) f(on) p
Fi 31 w(r) -5 b(e) g(d-black) 35 b(tr) -5 b(e) g(es) p
Fo 40 w(w) m(as) 94 1522 y(used,) 37 b(where) e(ev) m(ery) h(kno) m(wn)
f(memory) h(allo) s(cation) h(in) f(the) f(heap) h(w) m(as) g(giv) m
(en) g(an) g(en) m(try) f(in) h(the) f(tree,) j(with) 94
1622 y(their) g(start) h(addresses) e(as) h(the) g(k) m(ey) -8
b(.) 64 b(Another) 38 b(ma) 5 b(jor) 38 b(design) f(decision) i(w) m
(as) f(to) h(also) f(c) m(ho) s(ose) h(red-blac) m(k) 94
1721 y(trees) 29 b(to) f(implemen) m(t) g(the) p Fi 28
w(b) -5 b(est) 30 b(\014t) p Fo 37 w(allo) s(cation) g(algorithm.) 40
b(Although) p Fi 28 w(\014rst) 31 b(\014t) p Fo 36 w(w) m(as) d
(considered,) h(I) e(decided) 94 1821 y(that) g(b) s(est) f(\014t) g(w)
m(ould) g(allo) m(w) h(the) g(library) e(to) i(ha) m(v) m(e) h(more) e
(con) m(trol) h(o) m(v) m(er) h(the) e(heap,) h(with) f(ev) m(ery) h
(free) f(memory) 94 1921 y(blo) s(c) m(k) 31 b(in) f(the) g(heap) g
(giv) m(en) h(an) f(en) m(try) g(in) g(the) g(free) g(tree,) h(with) f
(their) g(sizes) h(as) f(the) g(k) m(ey) -8 b(.) 42 b(There) 30
b(w) m(as) g(a) h(bit) f(of) 94 2020 y(w) m(ork) e(in) m(v) m(olv) m
(ed) g(in) f(getting) h(the) g(splitting) f(and) g(merging) g(of) g
(free) g(blo) s(c) m(ks) g(to) h(w) m(ork) f(e\016cien) m(tly) -8
b(,) 30 b(but) c(it) i(seems) 94 2120 y(to) k(w) m(ork) e(w) m(ell) h
(no) m(w.) 219 2247 y(My) 44 b(original) h(implemen) m(tation) g(had) f
(all) g(of) g(the) g(information) g(ab) s(out) g(eac) m(h) h(memory) f
(blo) s(c) m(k) g(stored) 94 2347 y(just) 33 b(b) s(efore) g(the) h
(blo) s(c) m(k) g(itself.) 50 b(I) 34 b(ev) m(en) m(tually) h(dropp) s
(ed) c(that) j(b) s(eha) m(viour) f(in) g(fa) m(v) m(our) i(of) e
(storing) h(all) g(of) g(the) 94 2446 y(library's) i(in) m(ternal) g
(information) g(in) f(a) h(separate) h(part) e(of) h(the) g(heap.) 56
b(I) 35 b(did) g(that) h(for) f(t) m(w) m(o) i(reasons.) 56
b(The) 94 2546 y(\014rst) 37 b(w) m(as) h(b) s(ecause) g(of) g(the) g
(problems) e(that) j(w) m(ould) e(o) s(ccur) h(due) f(to) h(memory) f
(allo) s(cations) j(with) d(di\013eren) m(t) 94 2646
y(alignmen) m(t) 44 b(requiremen) m(ts.) 78 b(The) 42
b(second) g(reason) h(w) m(as) g(that) g(the) g(library's) f(in) m
(ternal) h(structures) f(could) 94 2745 y(b) s(e) 36
b(write-protected) h(on) e(systems) h(with) g(virtual) g(memory) -8
b(,) 37 b(to) g(prev) m(en) m(t) f(user) f(co) s(de) h(in) m(terfering)
g(with) g(the) 94 2845 y(op) s(eration) 31 b(of) g(the) f(library) -8
b(.) 219 2972 y(Because) 29 b(the) e(library) g(attempts) h(to) g
(record) f(as) h(m) m(uc) m(h) f(information) h(as) f(p) s(ossible) g
(ab) s(out) g(ev) m(ery) h(memory) 94 3072 y(allo) s(cation) 33
b(there) c(will) i(inevitably) f(b) s(e) f(a) h(m) m(uc) m(h) g(larger)
h(memory) e(requiremen) m(t) h(when) f(running) f(a) i(program) 94
3171 y(link) m(ed) k(with) e(the) h(library) -8 b(.) 48
b(This) 32 b(will) h(t) m(ypically) i(b) s(e) d(t) m(w) m(o) i(or) f
(three) g(times) h(larger) f(in) g(magnitude,) g(but) g(will) 94
3271 y(b) s(e) h(a\013ected) i(b) m(y) f(the) f(n) m(um) m(b) s(er) g
(of) g(memory) h(allo) s(cations) h(made) f(and) f(also) h(the) g(n) m
(um) m(b) s(er) e(of) i(sym) m(b) s(ols) f(read.) 94
3371 y(The) 28 b(latter) i(will) f(also) g(a\013ect) h(ho) m(w) e(quic)
m(kly) h(the) g(program) f(starts) h(since) f(the) h(\014rst) f(call) h
(to) g(allo) s(cate) i(memory) 94 3470 y(will) f(result) e(in) h(the) f
(initialisation) k(of) c(the) h(library) g(and) f(the) h(loading) g(of)
g(sym) m(b) s(ols) f(from) h(the) g(executable) h(\014le) 94
3570 y(and) g(an) m(y) h(shared) f(libraries.) 219 3697
y(Due) 38 b(to) h(its) f(design,) i(it) e(is) g(also) h(p) s(ossible) e
(to) i(allo) s(cate) h(memory) e(from) g(the) g(heap) f(using) h(the) g
(mpatrol) 94 3797 y(library) i(functions) g(whilst) g(already) h
(within) e(an) h(mpatrol) h(library) e(function.) 70
b(This) 40 b(do) s(es) f(not) i(normally) 94 3896 y(o) s(ccur,) 31
b(but) e(on) g(some) i(platforms) e(calling) p Fl 32
w(printf\(\)) p Fo 27 w(from) h(within) f(the) h(library) f(ma) m(y) i
(result) f(in) p Fl 29 w(printf\(\)) p Fo 94 3996 a(calling) p
Fl 25 w(malloc\(\)) p Fo 20 w(to) 24 b(allo) s(cate) h(itself) e(a) g
(bu\013er,) h(whic) m(h) e(ends) g(up) g(as) h(a) g(recursiv) m(e) g
(call.) 39 b(Luc) m(kily) -8 b(,) 26 b(this) c(is) h(dealt) 94
4096 y(with) k(b) m(y) g(simply) g(not) g(displa) m(ying) h(the) f
(allo) s(cation) i(in) e(the) g(log) h(\014le,) g(but) f(all) h(other) f
(details) h(of) f(the) h(allo) s(cation) 94 4195 y(are) k(still) f
(recorded.) 42 b(This) 30 b(can) i(sometimes) f(result) g(in) p
Fi 31 w(hidden) p Fo 39 w(memory) f(usage) i(whic) m(h) e(o) s(ccurs) h
(b) s(ehind) e(the) 94 4295 y(scenes) 38 b(and) e(alters) i(the) f(p) s
(eak) f(memory) h(usage) g(in) g(the) g(summary) -8 b(.) 59
b(This) 36 b(is) h(particularly) g(eviden) m(t) h(when) 94
4395 y(the) j(library) e(uses) h(an) f(ob) 5 b(ject) 41
b(\014le) f(access) i(library) d(to) i(read) f(program) f(sym) m(b) s
(ols) h(at) g(the) h(time) f(of) g(library) 94 4494 y(initialisation.)
219 4622 y(Memory) c(allo) s(cation) h(pro\014ling) e(supp) s(ort) f(w)
m(as) i(added) e(for) h(mpatrol) h(release) h(1.2.0.) 57
b(Ev) m(ery) 36 b(allo) s(cation) 94 4721 y(and) g(deallo) s(cation) j
(is) d(recorded,) i(with) e(the) h(call) g(stac) m(k) h(information) f
(b) s(eing) f(used) f(to) i(di\013eren) m(tiate) i(all) e(of) 94
4821 y(the) 27 b(call) g(sites) g(within) f(the) h(program.) 39
b(Unlik) m(e) 27 b(other) f(pro\014lers) g(that) h(come) g(with) f
(UNIX) g(systems,) i(ev) m(en) f(the) 94 4920 y(sym) m(b) s(olic) 33
b(information) f(ab) s(out) f(the) h(program) f(b) s(eing) h(run) e(is)
i(written) f(to) i(the) f(pro\014ling) f(output) g(\014le,) i(since) 94
5020 y(it) 38 b(mak) m(es) f(no) g(sense) g(for) p Fl
36 w(mprof) p Fo 35 w(to) h(re-read) f(the) g(sym) m(b) s(ol) f(table) i
(from) e(the) h(executable) h(\014le) f(when) f(it) h(has) 94
5120 y(already) 28 b(b) s(een) e(read) h(and) f(pro) s(cessed) h(b) m
(y) g(the) g(mpatrol) g(library) -8 b(.) 40 b(It) 27
b(also) g(has) g(the) g(added) f(b) s(on) m(us) g(of) h(allo) m(wing) 94
5219 y(the) f(user) f(to) h(sa) m(v) m(e) h(pro\014ling) e(output) f
(\014les) i(for) f(later) h(use) f(ev) m(en) h(when) f(the) g
(executable) i(\014les) f(whic) m(h) f(pro) s(duced) 94
5319 y(them) 37 b(ha) m(v) m(e) g(c) m(hanged) g(or) g(no) f(longer) h
(exist.) 59 b(It) 36 b(also) i(means) e(that) h(sym) m(b) s(ol) f
(names) g(can) h(b) s(e) e(obtained) i(for) 94 5419 y(functions) 30
b(in) g(shared) g(libraries.) 219 5546 y(Memory) 38 b(allo) s(cation) j
(tracing) e(supp) s(ort) d(w) m(as) i(added) f(for) h(mpatrol) g
(release) i(1.3.2) f(and) f(w) m(as) g(added) f(to) 94
5645 y(pro) s(duce) 29 b(concise) i(information) f(for) f(ev) m(ery) h
(memory) g(allo) s(cation) i(ev) m(en) m(t.) 42 b(This) 29
b(information) g(could) h(also) h(b) s(e) p 90 rotate
dyy eop
%%Page: 94 100
94 99 bop Fo 94 -116 a(94) 3377 b(mpatrol) 94 365 y(pro) s(duced) 31
b(in) h(a) g(v) m(erb) s(ose) h(form) e(in) h(the) h(log) g(\014le,) g
(but) e(to) i(log) g(ev) m(ery) g(memory) f(allo) s(cation) j(ev) m(en)
m(t) e(in) f(a) h(large) 94 465 y(program) 27 b(w) m(ould) g(result) g
(in) f(a) i(massiv) m(e) g(log) g(\014le) f(that) g(w) m(ould) g(b) s
(e) f(hard) g(to) i(parse.) 39 b(In) 26 b(order) h(to) g(k) m(eep) h
(the) f(size) 94 565 y(of) h(the) f(tracing) h(output) e(\014le) h(do) m
(wn,) h(almost) g(all) g(of) f(the) g(data) h(in) f(the) g(\014le) g
(is) g(enco) s(ded) g(as) g(LEB128) h(n) m(um) m(b) s(ers.) 94
664 y(The) i(idea) h(for) f(this) h(comes) g(from) f(the) g(D) m(W) -10
b(ARF) 32 b(2) f(debugging) f(format.) 219 789 y(Supp) s(ort) 21
b(for) i(the) p Fl 23 w(alloca\(\)) p Fo 21 w(family) g(of) h
(functions) e(w) m(as) i(added) e(for) h(mpatrol) g(release) i(1.3.0) g
(and) d(uses) h(the) 94 888 y(heap) i(instead) g(of) f(the) h(stac) m
(k) h(in) e(order) g(to) h(trace) h(and) e(debug) g(these) h
(functions.) 38 b(If) 24 b(full) g(call) i(stac) m(k) g(tracebac) m(ks)
94 988 y(are) k(supp) s(orted) e(on) h(a) h(particular) g(system) f
(then) g(mpatrol) h(will) g(compare) f(the) h(curren) m(t) f(call) i
(stac) m(k) g(with) e(the) 94 1088 y(call) c(stac) m(k) f(of) f(the) g
(function) f(that) i(called) p Fl 24 w(alloca\(\)) p
Fo 20 w(in) f(order) f(to) h(determine) g(if) g(a) g(memory) g(allo) s
(cation) i(made) 94 1187 y(b) m(y) p Fl 35 w(alloca\(\)) p
Fo 33 w(is) 34 b(out) h(of) g(scop) s(e.) 54 b(This) 34
b(is) h(generally) h(a) f(safe) g(w) m(a) m(y) g(to) h(determine) f
(when) e(suc) m(h) i(allo) s(cations) 94 1287 y(should) f(b) s(e) g
(freed,) i(but) e(if) h(full) f(call) i(stac) m(k) g(tracebac) m(ks) h
(are) e(not) g(supp) s(orted) e(then) h(mpatrol) h(will) g(compare) 94
1386 y(the) f(addresses) e(of) h(sp) s(eci\014c) g(lo) s(cal) i(v) -5
b(ariables) 33 b(in) g(the) g(call) i(stac) m(k) f(in) f(order) f(to) i
(determine) f(if) g(the) h(allo) s(cation) 94 1486 y(should) 29
b(b) s(e) g(freed.) 40 b(This) 29 b(is) h(an) g(inferior) f(metho) s(d)
g(since) h(it) h(dep) s(ends) d(on) h(the) h(same) g(function) g(call) h
(sequence) 94 1586 y(b) s(eing) 37 b(used) g(eac) m(h) h(time) g(an) f
(mpatrol) g(function) g(is) g(called.) 62 b(Therefore,) 39
b(a) f(safet) m(y) g(b) s(oundary) d(w) m(as) j(added) 94
1685 y(that) g(will) e(prev) m(en) m(t) i(mpatrol) e(from) g(freeing) h
(suc) m(h) f(allo) s(cations) j(unless) d(they) h(are) g(a) f(really) i
(clear-cut) g(case) 94 1785 y(\(i.e.) e(the) f(stac) m(k) g(frames) f
(di\013er) g(b) m(y) g(a) h(minim) m(um) e(n) m(um) m(b) s(er) g(of) i
(b) m(ytes\).) 53 b(As) 34 b(a) h(result,) g(this) f(second) h(metho) s
(d) 94 1885 y(will) c(not) g(usually) f(free) g(suc) m(h) g(allo) s
(cations) j(un) m(til) e(a) f(m) m(uc) m(h) h(later) g(p) s(oin) m(t.)
219 2009 y(The) i(library) g(is) g(written) h(in) f(a) g(mo) s(dular) g
(fashion) g(so) g(as) h(to) g(mak) m(e) g(it) g(easy) g(to) g(add) f
(new) g(functionalit) m(y) -8 b(.) 94 2109 y(New) 38
b(mo) s(dules) e(ha) m(v) m(e) j(already) f(b) s(een) e(added,) j(suc) m
(h) e(as) g(the) p Fi 37 w(stack) p Fo(,) p Fi 40 w(symb) -5
b(ol) p Fo(,) p Fi 41 w(pr) g(o\014le) p Fo 46 w(and) p
Fi 36 w(tr) g(ac) g(e) p Fo 46 w(mo) s(dules.) 94 2208
y(Extra) 39 b(information) f(ab) s(out) g(eac) m(h) h(memory) f(allo) s
(cation) j(can) d(b) s(e) g(added) f(to) i(the) p Fi
39 w(al) 5 b(lo) -5 b(c) g(ation) 42 b(information) p
Fo 94 2308 a(mo) s(dule) 36 b(in) h(`) p Fl(src/info.h) p
Fo(') d(and) i(`) p Fl(src/info.c) p Fo(') e(without) i(ha) m(ving) h
(to) h(c) m(hange) f(m) m(uc) m(h) g(co) s(de) g(in) f(an) m(y) h
(other) 94 2408 y(\014les.) 219 2532 y(The) c(`) p Fl(tools) p
Fo(') g(directory) h(in) f(the) h(mpatrol) g(distribution) f(comes) i
(with) e(a) h(collection) i(of) e(functions) f(that) 94
2632 y(are) 40 b(built) f(on) f(top) i(of) f(the) g(mpatrol) g(library)
g(using) f(its) h(in) m(terface) i(functions.) 66 b(This) 38
b(pro) m(vides) h(a) g(w) m(a) m(y) h(to) 94 2731 y(extend) 22
b(the) h(mpatrol) f(library) f(for) h(sp) s(eci\014c) g(applications) h
(without) e(requiring) h(that) g(all) h(applications) g(use) f(the) 94
2831 y(extensions.) 40 b(It) 26 b(also) h(pro) m(vides) g(a) f(w) m(a) m
(y) h(to) g(add) e(new) h(in) m(terfaces) h(to) g(the) f(library) -8
b(,) 28 b(p) s(erhaps) c(for) i(compatibilit) m(y) 94
2931 y(with) 31 b(other) f(mallo) s(c) i(debugging) e(libraries.) 219
3055 y(Platform-dep) s(enden) m(t) j(co) s(de) h(has) g(b) s(een) e
(isolated) j(to) g(sp) s(eci\014c) e(mo) s(dules,) h(and) f(feature) h
(macros) g(are) g(en-) 94 3155 y(tirely) 26 b(de\014ned) e(and) h(con) m
(trolled) i(from) d(`) p Fl(config.h) p Fo(') g(and) g(`) p
Fl(target.h) p Fo('.) 37 b(The) 25 b(source) g(co) s(de) h(has) e(b) s
(een) h(written) 94 3254 y(so) j(as) f(to) h(mak) m(e) g(it) f(as) g
(easy) h(as) f(p) s(ossible) g(to) g(compile) h(the) g(library) e(on) h
(new) g(platforms) f(at) i(the) f(\014rst) g(attempt,) 94
3354 y(although) 45 b(an) m(y) f(additional) g(features) g(that) h(the)
f(platform) f(supp) s(orts) f(will) i(then) g(ha) m(v) m(e) h(to) f(b) s
(e) f(explicitly) 94 3454 y(enabled) 31 b(in) f(the) g(co) s(de.) 219
3578 y(Of) 38 b(the) g(UNIX) g(platforms) g(that) h(the) f(mpatrol) h
(library) e(runs) g(on,) j(Solaris) e(and) g(Lin) m(ux) f(pro) m(v) m
(ed) i(to) g(b) s(e) 94 3678 y(the) g(easiest) g(to) g(p) s(ort) e(to,)
k(with) d(w) m(ell) h(do) s(cumen) m(ted) f(and) f(easily) i
(accessible) h(programming) e(in) m(terfaces) h(to) 94
3778 y(op) s(erating) 28 b(system) g(features.) 40 b(Unfortunately) -8
b(,) 29 b(the) f(non-UNIX) f(p) s(orts) g(pro) m(v) m(ed) h(a) g(lot) g
(harder) f(to) h(write) g(and) 94 3877 y(do) 35 b(not) g(con) m(tain) i
(as) e(man) m(y) g(of) g(the) g(useful) f(features) h(that) h(the) f
(UNIX) g(p) s(orts) f(ha) m(v) m(e,) k(although) d(sometimes) 94
3977 y(not) 28 b(b) s(ecause) f(they) h(cannot) g(ev) m(er) g(supp) s
(ort) d(them,) j(but) f(b) s(ecause) g(there) h(w) m(ould) f(b) s(e) f
(a) i(h) m(uge) g(amoun) m(t) f(of) h(w) m(ork) 94 4076
y(in) m(v) m(olv) m(ed.) p 90 rotate dyy eop
%%Page: 95 101
95 100 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2795
b(95) p Fk 94 365 a(16) 81 b(Examples) p Fo 219 590 a(F) -8
b(ollo) m(wing) 34 b(are) e(a) g(set) g(of) f(examples) h(that) g(are) g
(in) m(tended) f(to) i(illustrate) f(what) g(exactly) h(is) e(p) s
(ossible) g(with) 94 690 y(the) g(mpatrol) g(library) f(and) f(ho) m(w)
i(to) g(go) g(ab) s(out) f(using) g(it) h(e\013ectiv) m(ely) -8
b(.) 219 814 y(Y) g(ou) 23 b(should) f(already) i(ha) m(v) m(e) g
(built) e(and) g(installed) i(the) f(library) f(and) h(should) e(kno) m
(w) i(ho) m(w) g(to) h(link) e(programs) 94 914 y(with) k(the) g
(library) -8 b(.) 39 b(Unfortunately) -8 b(,) 27 b(it) g(isn't) e(p) s
(ossible) h(to) g(giv) m(e) h(sp) s(eci\014c) f(instructions) f(on) h
(ho) m(w) f(to) i(do) e(this) h(as) 94 1014 y(it) 33
b(v) -5 b(aries) 33 b(from) f(system) h(to) g(system) g(and) f(also) h
(dep) s(ends) e(on) h(y) m(our) g(preferred) g(compiler) h(and) f(dev) m
(elopmen) m(t) 94 1113 y(to) s(ols.) 219 1238 y(Ho) m(w) m(ev) m(er,) 50
b(on) 44 b(a) h(t) m(ypical) h(SVR4) e(UNIX) g(system,) 49
b(with) 44 b(mpatrol) g(installed) h(in) f(`) p Fl(/usr/local) p
Fo(',) i(the) 94 1338 y(mpatrol) 31 b(library) f(can) h(usually) f(b) s
(e) g(incorp) s(orated) g(in) m(to) h(a) g(program) f(using) g(the) h
(follo) m(wing) h(commands:) p Fm 169 1513 a(\017) p
Fo 60 w(If) 27 b(the) g(mpatrol) g(library) g(w) m(as) g(built) g(with)
g(no) g(supp) s(ort) e(for) i(an) m(y) g(ob) 5 b(ject) 28
b(\014le) f(format) g(or) g(w) m(as) g(built) g(with) 274
1612 y(supp) s(ort) i(for) h(the) h(`) p Fl(a.out) p
Fo(') e(ob) 5 b(ject) 32 b(\014le) e(format:) p Fl 514
1741 a(cc) 48 b(-I/usr/local/include) 42 b(<file>) k(-L/usr/local/lib) d
(-lmpatrol) p Fm 169 1866 a(\017) p Fo 60 w(If) 33 b(the) h(mpatrol) g
(library) f(w) m(as) h(built) f(with) g(supp) s(ort) f(for) h(the) h
(COFF) f(or) h(X) m(COFF) g(ob) 5 b(ject) 34 b(\014le) g(format) 274
1965 y(access) e(library) e(\(not) h(on) f(LynxOS) f(systems\):) p
Fl 514 2094 a(cc) 48 b(-I/usr/local/include) 42 b(<file>) k
(-L/usr/local/lib) d(-lmpatrol) j(-lld) p Fm 169 2219
a(\017) p Fo 60 w(If) 36 b(the) g(mpatrol) g(library) g(w) m(as) g
(built) g(with) g(supp) s(ort) e(for) i(the) g(ELF32) h(or) f(ELF64) h
(ob) 5 b(ject) 37 b(\014le) f(format) 274 2318 y(access) c(library:) p
Fl 514 2447 a(cc) 48 b(-I/usr/local/include) 42 b(<file>) k
(-L/usr/local/lib) d(-lmpatrol) j(-lelf) p Fm 169 2572
a(\017) p Fo 60 w(If) 35 b(the) f(mpatrol) h(library) g(w) m(as) g
(built) f(with) g(supp) s(ort) f(for) i(the) f(GNU) i(BFD) f(ob) 5
b(ject) 36 b(\014le) f(format) g(access) 274 2671 y(library:) p
Fl 514 2800 a(cc) 48 b(-I/usr/local/include) 42 b(<file>) k
(-L/usr/local/lib) d(-lmpatrol) j(-lbfd) 658 2904 y(-liberty) p
Fm 169 3029 a(\017) p Fo 60 w(If) 41 b(the) g(mpatrol) h(library) e(w) m
(as) i(built) e(on) h(HP/UX) h(with) f(supp) s(ort) e(for) i(the) g
(GNU) h(BFD) g(ob) 5 b(ject) 42 b(\014le) 274 3128 y(format) 31
b(access) h(library:) p Fl 514 3257 a(cc) 48 b(-I/usr/local/include) 42
b(<file>) k(-L/usr/local/lib) d(-lmpatrol) j(-lbfd) 658
3361 y(-liberty) f(-lcl) p Fo 219 3510 a(On) 23 b(Windo) m(ws) h
(platforms,) h(with) f(mpatrol) g(installed) g(in) g(`) p
Fl(/mpatrol) p Fo(',) g(the) g(mpatrol) g(library) f(can) h(usually) 94
3610 y(b) s(e) 30 b(incorp) s(orated) h(in) m(to) g(a) g(program) f
(using) g(the) g(follo) m(wing) i(commands:) p Fm 169
3785 a(\017) p Fo 60 w(If) e(the) h(program) f(is) h(to) g(b) s(e) e
(link) m(ed) i(with) f(the) h(arc) m(hiv) m(e) h(v) m(ersion) e(of) h
(the) f(mpatrol) h(library:) p Fl 514 3914 a(cl) 48 b
(-I/mpatrol/include) 42 b(-Zi) 47 b(<file>) f(-link) h
(-libpath:/mpatrol/lib) 658 4018 y(-defaultlib:libmpatrol) 41
b(-defaultlib:imagehlp) i(-pdb:none) p Fm 169 4142 a(\017) p
Fo 60 w(If) 30 b(the) h(program) f(is) h(to) g(b) s(e) e(link) m(ed) i
(with) f(the) h(DLL) f(v) m(ersion) h(of) f(the) h(mpatrol) g(library:)
p Fl 514 4271 a(cl) 48 b(-I/mpatrol/include) 42 b(-MD) 47
b(-Zi) g(<file>) f(-link) h(-libpath:/mpatrol/lib) 658
4375 y(-defaultlib:mpatrol) 42 b(-pdb:none) p Fo 219
4524 a(If) f(y) m(ou) h(need) f(to) h(link) f(with) g(other) h
(libraries,) i(mak) m(e) f(sure) d(that) i(they) g(don't) f(con) m
(tain) i(de\014nitions) e(of) p Fl 94 4624 a(malloc\(\)) p
Fo(,) 25 b(etc.,) j(or) e(if) g(they) g(do) f(then) h(y) m(ou) g(m) m
(ust) f(ensure) g(that) i(the) e(mpatrol) h(library) g(app) s(ears) f
(b) s(efore) g(them) 94 4724 y(on) 40 b(the) f(link) g(line.) 67
b(Note) 41 b(also) f(that) g(if) f(the) g(mpatrol) g(library) g(w) m
(as) h(built) f(on) g(T) -8 b(ru64,) 41 b(or) e(on) g(IRIX) g(with) 94
4823 y(the) p Fl 32 w(MP_LIBRARYSTACK_SUPPORT) p Fo 26
w(prepro) s(cessor) 31 b(macro) h(de\014ned,) f(then) g(the) h(`) p
Fl(libexc) p Fo(') f(library) g(m) m(ust) h(b) s(e) 94
4923 y(link) m(ed) 40 b(in) f(as) g(w) m(ell.) 69 b(Y) -8
b(ou) 39 b(should) g(also) h(c) m(hec) m(k) h(the) e(section) h(on) f
(supp) s(orted) f(systems) h(\(see) h(App) s(endix) e(G) 94
5023 y([Supp) s(orted) 28 b(systems],) h(page) h(179\)) h(to) e(see) h
(if) f(there) g(are) g(an) m(y) h(other) f(issues) g(on) f(the) i
(platform) f(that) g(y) m(ou) h(are) 94 5122 y(using.) 219
5247 y(Y) -8 b(ou) 36 b(should) e(also) j(kno) m(w) e(ho) m(w) h(to) g
(set) g(an) f(en) m(vironmen) m(t) h(v) -5 b(ariable) 36
b(on) f(y) m(our) h(sp) s(eci\014c) f(system.) 56 b(Again,) 94
5347 y(this) 24 b(v) -5 b(aries) 25 b(from) f(system) g(to) h(system) f
(and) g(also) h(dep) s(ends) d(on) i(the) g(command) g(line) g(in) m
(terpreter) h(or) f(shell) g(that) 94 5446 y(y) m(ou) 37
b(use.) 60 b(The) 36 b(en) m(vironmen) m(t) h(v) -5 b(ariable) 38
b(that) f(the) g(mpatrol) g(library) f(uses) g(is) h(called) p
Fl 38 w(MPATROL_OPTIONS) p Fo(.) 94 5546 y(Y) -8 b(ou) 39
b(can) g(see) f(exactly) i(what) f(options) f(are) h(a) m(v) -5
b(ailable) 40 b(for) e(this) g(en) m(vironmen) m(t) h(v) -5
b(ariable) 39 b(b) m(y) f(setting) h(it) g(to) 94 5645
y(`) p Fl(HELP) p Fo(') 30 b(and) g(then) g(running) f(a) h(program) h
(that) g(has) f(b) s(een) f(link) m(ed) i(with) f(the) h(library) -8
b(.) p 90 rotate dyy eop
%%Page: 96 102
96 101 bop Fo 94 -116 a(96) 3377 b(mpatrol) p Fn 94 365
a(16.1) 69 b(Getting) 46 b(started) p Fo 219 554 a(The) 31
b(\014rst) g(example) h(w) m(e'll) h(lo) s(ok) f(at) h(is) e(when) g
(the) h(argumen) m(t) g(in) f(a) h(call) h(to) p Fl 32
w(free\(\)) p Fo 30 w(do) s(esn't) e(matc) m(h) i(the) 94
654 y(return) 26 b(v) -5 b(alue) 27 b(from) p Fl 27 w(malloc\(\)) p
Fo(,) e(ev) m(en) i(though) g(the) g(in) m(ten) m(tion) h(is) f(to) g
(free) g(the) g(memory) g(that) g(w) m(as) g(allo) s(cated) 94
753 y(b) m(y) p Fl 37 w(malloc\(\)) p Fo(.) 58 b(This) 36
b(example) h(is) g(in) g(`) p Fl(tests/fail/test1.c) p
Fo(') 32 b(and) k(causes) i(man) m(y) e(existing) p Fl
38 w(malloc\(\)) p Fo 94 853 a(implemen) m(tations) c(to) f(crash.) 219
984 y(Along) j(the) g(w) m(a) m(y) -8 b(,) 36 b(I'll) f(try) e(to) i
(describ) s(e) e(as) h(man) m(y) f(features) h(of) g(the) g(mpatrol) g
(library) f(as) h(p) s(ossible,) h(and) 94 1083 y(illustrate) 29
b(them) f(with) f(examples.) 41 b(Note) 29 b(that) f(the) g(output) f
(from) g(y) m(our) h(v) m(ersion) g(of) f(the) h(library) f(is) h(lik) m
(ely) h(to) 94 1183 y(v) -5 b(ary) 31 b(sligh) m(tly) g(from) f(that) h
(sho) m(wn) f(in) g(the) h(examples,) g(esp) s(ecially) g(on) g
(non-UNIX) f(systems.) p Fl 334 1318 a(23) 95 b(/*) 334
1422 y(24) 143 b(*) 48 b(Allocates) d(a) i(block) g(of) g(16) g(bytes) f
(and) h(then) g(attempts) e(to) j(free) e(the) 334 1526
y(25) 143 b(*) 48 b(memory) e(returned) f(at) i(an) h(offset) e(of) h
(1) g(byte) g(into) g(the) f(block.) 334 1629 y(26) 143
b(*/) 334 1941 y(29) 95 b(#include) 46 b("mpatrol.h") 334
2252 y(32) 95 b(int) 47 b(main\(void\)) 334 2356 y(33) 95
b({) 334 2460 y(34) 286 b(char) 47 b(*p;) 334 2667 y(36) 286
b(if) 47 b(\(p) h(=) f(\(char) f(*\)) i(malloc\(16\)\)) 334
2771 y(37) 477 b(free\(p) 46 b(+) i(1\);) 334 2875 y(38) 286
b(return) 46 b(EXIT_SUCCESS;) 334 2978 y(39) 95 b(}) p
Fo 219 3109 a(Note) 46 b(that) f(I'v) m(e) h(remo) m(v) m(ed) f(the) g
(cop) m(yrigh) m(t) h(message) g(from) e(the) g(start) i(of) e(the) h
(\014le) g(and) f(added) g(line) 94 3209 y(n) m(um) m(b) s(ers) 29
b(so) i(that) g(the) g(tracing) g(b) s(elo) m(w) f(mak) m(es) i(more) e
(sense.) 219 3340 y(After) 46 b(compiling) h(and) e(linking) h(the) f
(ab) s(o) m(v) m(e) i(program) f(with) f(the) h(mpatrol) g(library) -8
b(,) 50 b(the) p Fl 46 w(MPATROL_) 94 3439 y(OPTIONS) p
Fo 23 w(en) m(vironmen) m(t) 25 b(v) -5 b(ariable) 25
b(should) e(b) s(e) g(set) i(to) g(b) s(e) f(`) p Fl(LOGALL) p
Fo(') f(and) h(the) g(program) g(should) f(b) s(e) h(executed,) 94
3539 y(generating) 32 b(the) f(follo) m(wing) h(output) e(in) g(`) p
Fl(mpatrol.log) p Fo('.) p Fl 334 3674 a(@\(#\)) 47 b(mpatrol) f(1.4.8)
g(\(02/01/08\)) 334 3778 y(Copyright) g(\(C\)) h(1997-2002) e(Graeme) h
(S.) h(Roy) 334 3985 y(This) g(is) g(free) g(software,) e(and) i(you) g
(are) g(welcome) f(to) h(redistribute) d(it) k(under) 334
4089 y(certain) e(conditions;) f(see) i(the) g(GNU) g(Library) f
(General) f(Public) h(License) g(for) 334 4193 y(details.) 334
4400 y(For) h(the) g(latest) f(mpatrol) g(release) g(and) h
(documentation,) 334 4504 y(visit) g(http://www.cbmamiga.demo) o(n.c) o
(o.uk) o(/mpa) o(tro) o(l.) 334 4711 y(operating) f(system:) 332
b(UNIX) 334 4815 y(system) 47 b(variant:) 427 b(Linux) 334
4919 y(processor) 46 b(architecture:) e(Intel) i(80x86) 334
5023 y(processor) g(word) g(size:) 190 b(32-bit) 334
5127 y(object) 47 b(file) f(format:) 237 b(BFD) 334 5230
y(dynamic) 46 b(linker) g(type:) 190 b(SVR4) 334 5438
y(Log) 47 b(file) g(generated) e(on) i(Tue) g(Jan) 95
b(8) 47 b(19:47:24) f(2002) 334 5645 y(read) h(310) g(symbols) f(from) g
(/usr/lib/libmpatrol.so.1.4) p 90 rotate dyy eop
%%Page: 97 103
97 102 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2795
b(97) p Fl 334 365 a(read) 47 b(647) g(symbols) f(from) g
(/usr/lib/libbfd-2.9.5.0.22) o(.so) 334 469 y(read) h(2634) g(symbols) f
(from) g(/lib/libc.so.6) 334 573 y(read) h(1142) g(symbols) f(from) g
(/usr/lib/libstdc++-libc6.) o(1-1.) o(so.) o(2) 334 677
y(read) h(695) g(symbols) f(from) g(/lib/libm.so.6) 334
780 y(read) h(178) g(symbols) f(from) g(/lib/ld-linux.so.2) 334
884 y(read) h(158) g(symbols) f(from) g(./test1) 334
1092 y(ALLOC:) h(malloc) f(\(52,) g(16) h(bytes,) g(4) g(bytes\)) f
([main|test1.c|36]) 716 1196 y(0x0804942F) f(main+31) 716
1299 y(0x4007C9CB) g(__libc_start_main+255) 716 1403
y(0x08049381) g(_start+33) 334 1611 y(returns) h(0x080620E8) 334
1818 y(FREE:) h(free) f(\(0x080620E9\)) f([main|test1.c|37]) 716
1922 y(0x08049457) g(main+71) 716 2026 y(0x4007C9CB) g
(__libc_start_main+255) 716 2130 y(0x08049381) g(_start+33) 334
2337 y(ERROR:) i([MISMAT]:) e(free:) h(0x080620E9) f(does) i(not) g
(match) f(allocation) f(of) i(0x080620E8) 525 2441 y(0x080620E8) e
(\(16) i(bytes\)) f({malloc:52:0}) f([main|test1.c|36]) 716
2545 y(0x0804942F) g(main+31) 716 2648 y(0x4007C9CB) g
(__libc_start_main+255) 716 2752 y(0x08049381) g(_start+33) 334
2960 y(system) i(page) f(size:) 94 b(4096) 47 b(bytes) 334
3064 y(default) f(alignment:) f(4) j(bytes) 334 3167
y(overflow) e(size:) 237 b(0) 48 b(bytes) 334 3271 y(overflow) e(byte:)
237 b(0xAA) 334 3375 y(allocation) 45 b(byte:) 142 b(0xFF) 334
3479 y(free) 47 b(byte:) 428 b(0x55) 334 3582 y(allocation) 45
b(stop:) 142 b(0) 334 3686 y(reallocation) 45 b(stop:) h(0) 334
3790 y(free) h(stop:) 428 b(0) 334 3894 y(unfreed) 46
b(abort:) 237 b(0) 334 3998 y(small) 47 b(boundary:) 188
b(32) 47 b(bytes) 334 4101 y(medium) g(boundary:) 140
b(256) 47 b(bytes) 334 4205 y(large) g(boundary:) 188
b(2048) 47 b(bytes) 334 4309 y(lower) g(check) f(range:) g(0) 334
4413 y(upper) h(check) f(range:) g(0) 334 4516 y(check) h(frequency:)
140 b(1) 334 4620 y(failure) 46 b(frequency:) f(0) 334
4724 y(failure) h(seed:) 285 b(972951591) 334 4828 y(prologue) 46
b(function:) f(<unset>) 334 4932 y(epilogue) h(function:) f(<unset>) 334
5035 y(handler) h(function:) 93 b(<unset>) 334 5139 y(log) 47
b(file:) 476 b(mpatrol.log) 334 5243 y(profiling) 46
b(file:) 189 b(mpatrol.out) 334 5347 y(tracing) 46 b(file:) 285
b(mpatrol.trace) 334 5450 y(program) 46 b(filename:) 93
b(./test1) 334 5554 y(symbols) 46 b(read:) 285 b(5764) p
90 rotate dyy eop
%%Page: 98 104
98 103 bop Fo 94 -116 a(98) 3377 b(mpatrol) p Fl 334
365 a(autosave) 46 b(count:) 189 b(0) 334 469 y(freed) 47
b(queue) f(size:) 94 b(0) 334 573 y(allocation) 45 b(count:) 94
b(52) 334 677 y(allocation) 45 b(peak:) 142 b(20) 47
b(\(427512) f(bytes\)) 334 780 y(allocation) f(limit:) 94
b(0) 48 b(bytes) 334 884 y(allocated) e(blocks:) 93 b(7) 48
b(\(1528) e(bytes\)) 334 988 y(marked) h(blocks:) 236
b(0) 48 b(\(0) f(bytes\)) 334 1092 y(freed) g(blocks:) 284
b(0) 48 b(\(0) f(bytes\)) 334 1196 y(free) g(blocks:) 332
b(4) 48 b(\(432648) e(bytes\)) 334 1299 y(internal) g(blocks:) 141
b(33) 47 b(\(540672) f(bytes\)) 334 1403 y(total) h(heap) f(usage:) 94
b(974848) 46 b(bytes) 334 1507 y(total) h(compared:) 188
b(0) 48 b(bytes) 334 1611 y(total) f(located:) 236 b(2) 48
b(bytes) 334 1714 y(total) f(copied:) 284 b(32176) 47
b(bytes) 334 1818 y(total) g(set:) 428 b(582856) 46 b(bytes) 334
1922 y(total) h(warnings:) 188 b(0) 334 2026 y(total) 47
b(errors:) 284 b(1) p Fo 219 2154 a(Ignoring) 31 b(the) g(cop) m(yrigh)
m(t) i(blurb) c(and) h(target) j(en) m(vironmen) m(t) f(information) f
(at) h(the) f(top) g(of) g(the) g(\014le,) h(let's) 94
2254 y(\014rst) k(tak) m(e) j(a) e(lo) s(ok) g(at) g(the) g(initial) h
(log) g(message) g(from) e(the) h(library) -8 b(.) 60
b(I'v) m(e) 37 b(annotated) h(eac) m(h) g(of) f(the) f(items) 94
2354 y(with) 31 b(a) f(n) m(um) m(b) s(er) f(that) i(corresp) s(onds) e
(to) i(the) g(descriptions) f(b) s(elo) m(w.) p Fl 382
2486 a(\(1\)) 190 b(\(2\)) 143 b(\(3\)) 190 b(\(4\)) 333
b(\(5\)) 238 b(\(6\)) 190 b(\(7\)) 95 b(\(8\)) 430 2590
y(|) 286 b(|) 238 b(|) 286 b(|) 430 b(|) 334 b(|) 286
b(|) 190 b(|) 430 2694 y(V) 286 b(V) 238 b(V) 286 b(V) 430
b(V) 334 b(V) 286 b(V) 190 b(V) 334 2798 y(ALLOC:) 47
b(malloc) f(\(52,) g(16) h(bytes,) g(4) g(bytes\)) f([main|test1.c|36])
382 2901 y(\(9\)) h(->) g(0x0804942F) e(main+31) 716
3005 y(0x4007C9CB) g(__libc_start_main+255) 716 3109
y(0x08049381) g(_start+33) h(<-) h(\(10\)) 334 3317 y(returns) f
(0x080620E8) f(<-) i(\(11\)) p Fo 144 3501 a(1.) 60 b(Allo) s(cation) 45
b(t) m(yp) s(e.) 77 b(This) 42 b(generalises) i(the) f(t) m(yp) s(e) f
(of) h(dynamic) f(memory) h(op) s(eration) g(that) g(is) f(b) s(eing)
274 3601 y(p) s(erformed,) 34 b(and) g(can) h(b) s(e) e(one) i(of) f(`)
p Fl(ALLOC) p Fo(',) h(`) p Fl(REALLOC) p Fo(') d(or) j(`) p
Fl(FREE) p Fo('.) 51 b(This) 34 b(should) f(mak) m(e) i(lo) s(oking) g
(for) 274 3700 y(all) f(allo) s(cations,) i(reallo) s(cations) f(or) d
(frees) h(in) f(the) h(log) h(\014le) f(a) g(lot) g(easier.) 49
b(Alternativ) m(ely) -8 b(,) 36 b(if) d(a) g(memory) 274
3800 y(op) s(eration) j(function) e(w) m(as) h(called) h(then) f(this) g
(can) g(also) h(b) s(e) e(one) h(of) g(`) p Fl(MEMSET) p
Fo(',) g(`) p Fl(MEMCOPY) p Fo(',) f(`) p Fl(MEMFIND) p
Fo(') 274 3899 y(or) d(`) p Fl(MEMCMP) p Fo('.) 144 4026
y(2.) 60 b(Allo) s(cation) 36 b(function.) 49 b(This) 33
b(is) g(the) g(name) h(of) f(the) h(function) f(that) h(has) f(b) s
(een) f(called) j(to) f(allo) s(cate) i(the) 274 4126
y(memory) -8 b(,) 31 b(in) f(this) h(case) g(`) p Fl(malloc) p
Fo('.) 144 4252 y(3.) 60 b(Allo) s(cation) 26 b(index.) 38
b(This) 23 b(is) h(incremen) m(ted) g(ev) m(ery) h(time) f(a) h(new) e
(memory) g(allo) s(cation) j(is) e(requested,) i(and) 274
4352 y(p) s(ersists) 31 b(ev) m(en) g(if) g(the) g(memory) g(allo) s
(cation) i(is) e(resized) g(with) p Fl 31 w(realloc\(\)) p
Fo 28 w(and) f(its) h(related) h(functions,) 274 4451
y(so) 27 b(can) f(b) s(e) f(useful) g(to) h(k) m(eep) h(trac) m(k) g
(of) f(a) g(memory) f(allo) s(cation,) 30 b(ev) m(en) c(if) g(its) g
(start) g(address) f(c) m(hanges.) 40 b(The) 274 4551
y(mpatrol) 31 b(library) f(ma) m(y) h(use) f(up) f(the) i(\014rst) f
(few) g(allo) s(cation) i(indices) f(when) e(it) i(gets) h
(initialised.) 144 4678 y(4.) 60 b(Size) 31 b(of) g(requested) f(allo) s
(cation.) 144 4804 y(5.) 60 b(Alignmen) m(t) 46 b(for) e(requested) g
(allo) s(cation.) 85 b(This) 44 b(is) g(normally) h(the) f(default) h
(system) f(alignmen) m(t) i(for) 274 4904 y(general-purp) s(ose) 23
b(memory) h(allo) s(cations,) j(but) 22 b(ma) m(y) i(b) s(e) f
(di\013eren) m(t) g(dep) s(ending) f(on) h(the) g(t) m(yp) s(e) h(of) f
(function) 274 5003 y(that) 31 b(is) g(used) e(to) j(allo) s(cate) g
(the) f(memory) -8 b(.) 219 5159 y(The) 38 b(follo) m(wing) i
(information) f(con) m(tains) h(source) f(\014le) f(details) i(of) f
(where) f(the) g(call) i(to) p Fl 40 w(malloc\(\)) p
Fo 36 w(came) 94 5259 y(from,) 24 b(but) e(is) h(only) g(a) m(v) -5
b(ailable) 25 b(if) e(the) f(source) h(\014le) g(con) m(taining) h(the)
f(call) h(to) p Fl 23 w(malloc\(\)) p Fo 21 w(included) e(`) p
Fl(mpatrol.h) p Fo(';) 94 5358 y(otherwise) 32 b(the) f(\014elds) f
(will) h(all) h(b) s(e) e(`) p Fl(-) p Fo(') p Fh 1411
5325 a(1) p Fo 1449 5358 a(.) 42 b(Because) 32 b(of) f(the) g(con) m(v)
m(oluted) i(w) m(a) m(y) f(this) e(information) i(is) f(obtained) p
94 5462 1200 4 v Fh 143 5522 a(1) p Fg 219 5554 a(This) 25
b(information) h(ma) n(y) f(also) h(b) r(e) e(\014lled) h(in) f(if) i
(the) e(`) p Ff(USEDEBUG) p Fg(') j(option) e(or) g(the) p
Ff 24 w(mpsym) p Fg 26 w(command) f(is) i(used) e(and) g(supp) r
(orted,) 219 5645 y(and) h(if) i(debugging) f(information) h(ab) r(out)
f(the) f(call) i(to) p Ff 25 w(malloc\(\)) p Fg 28 w(is) f(a) n(v) l
(ailable.) p 90 rotate dyy eop
%%Page: 99 105
99 104 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2795
b(99) 94 365 y(for) 23 b(the) h(C) p Fl(++) p Fo 22 w(op) s(erators,) h
(y) m(ou) e(ma) m(y) h(encoun) m(ter) g(some) f(problems) g(in) f
(existing) j(C) p Fl(++) p Fo 22 w(programs) d(when) h(making) 94
465 y(direct) k(calls) h(to) p Fl 27 w(operator) g(new) p
Fo 25 w(for) e(example.) 40 b(Ho) m(w) m(ev) m(er,) 30
b(if) c(y) m(ou) g(w) m(an) m(t) i(to) f(disable) f(the) g
(rede\014nition) g(of) h(the) 94 565 y(C) p Fl(++) p
Fo 23 w(op) s(erators) c(in) h(`) p Fl(mpatrol.h) p Fo(') d(y) m(ou) j
(can) f(de\014ne) g(the) h(prepro) s(cessor) e(macro) p
Fl 24 w(MP_NOCPLUSPLUS) p Fo 20 w(b) s(efore) h(the) 94
664 y(inclusion) 34 b(of) g(that) h(\014le.) 51 b(Alternativ) m(ely) -8
b(,) 38 b(y) m(ou) c(ma) m(y) h(wish) e(to) i(de\014ne) e(the) p
Fl 34 w(MP_NONEWDELETE) p Fo 30 w(prepro) s(cessor) 94
764 y(macro) 42 b(in) e(order) h(to) g(use) p Fl 41 w(MP_NEW) p
Fo(,) p Fl 42 w(MP_NEW_NOTHROW) p Fo 37 w(and) p Fl 40
w(MP_DELETE) p Fo 38 w(instead) g(of) p Fl 41 w(new) p
Fo 40 w(and) p Fl 40 w(delete) p Fo(.) 94 863 y(That) 30
b(w) m(a) m(y) h(y) m(ou) g(can) f(com) m(bine) h(calls) g(to) g
(mpatrol's) g(op) s(erators) f(and) f(the) h(standard) g(op) s
(erators.) 41 b(Just) 29 b(mak) m(e) 94 963 y(sure) h(y) m(ou) h(don't)
f(mix) h(them!) 219 1087 y(If) 38 b(y) m(ou) h(are) f(running) f(on) h
(a) h(system) g(on) f(whic) m(h) g(mpatrol) h(supp) s(orts) d(full) i
(sym) m(b) s(olic) h(stac) m(k) h(tracebac) m(ks) 94
1186 y(the) 30 b(follo) m(wing) i(information) e(ma) m(y) g(still) h(b)
s(e) e(useful) g(if) g(the) h(source) g(\014les) g(w) m(ere) g
(compiled) g(with) g(optimisation) 94 1286 y(turned) k(on.) 52
b(This) 34 b(is) g(b) s(ecause) h(the) f(calling) i(function) e(ma) m
(y) h(ha) m(v) m(e) h(b) s(een) d(inlined,) i(in) f(whic) m(h) g(case) i
(y) m(ou) f(will) 94 1386 y(only) k(see) g(the) f(name) h(of) f(the) g
(function) g(in) m(to) i(whic) m(h) e(the) g(calling) i(function) e(w) m
(as) h(expanded) e(in) h(the) g(stac) m(k) 94 1485 y(tracebac) m(k.) 144
1657 y(6.) 60 b(F) -8 b(unction) 27 b(where) e(call) i(to) p
Fl 27 w(malloc\(\)) p Fo 23 w(to) s(ok) g(place.) 40
b(This) 25 b(information) h(is) g(only) g(a) m(v) -5
b(ailable) 28 b(if) e(the) g(source) 274 1757 y(\014le) 31
b(con) m(taining) h(the) e(call) i(to) p Fl 31 w(malloc\(\)) p
Fo 28 w(w) m(as) f(compiled) g(with) p Fl 30 w(gcc) p
Fo 29 w(or) p Fl 31 w(g++) p Fo(.) 144 1880 y(7.) 60
b(Filename) 32 b(in) e(whic) m(h) g(call) i(to) p Fl
31 w(malloc\(\)) p Fo 28 w(to) s(ok) f(place.) 144 2004
y(8.) 60 b(Line) 31 b(n) m(um) m(b) s(er) e(at) i(whic) m(h) f(call) i
(to) p Fl 31 w(malloc\(\)) p Fo 28 w(to) s(ok) f(place.) 219
2176 y(The) g(follo) m(wing) h(information) f(con) m(tains) i(function)
d(call) j(stac) m(k) f(details) g(of) f(where) g(the) g(call) h(to) p
Fl 32 w(malloc\(\)) p Fo 94 2275 a(came) 25 b(from,) g(but) e(is) h
(only) g(a) m(v) -5 b(ailable) 26 b(if) e(the) g(mpatrol) g(library) f
(has) h(b) s(een) f(built) h(on) f(a) i(platform) e(that) i(supp) s
(orts) 94 2375 y(this.) 53 b(The) 33 b(top-most) i(en) m(try) g(should)
e(b) s(e) h(the) g(function) g(whic) m(h) g(called) p
Fl 35 w(malloc\(\)) p Fo 32 w(and) g(the) g(b) s(ottom-most) 94
2474 y(en) m(try) d(should) e(b) s(e) h(the) h(en) m(try-p) s(oin) m(t)
g(for) f(the) h(pro) s(cess.) 144 2598 y(9.) 60 b(Address) 32
b(of) g(function) g(call.) 48 b(This) 32 b(is) g(normally) g(the) h
(address) e(of) i(the) f(mac) m(hine) h(instruction) g(immedi-) 274
2698 y(ately) f(after) f(the) g(function) f(call) h(instruction,) g
(also) g(kno) m(wn) f(as) h(the) f(return) g(address.) 98
2821 y(10.) 61 b(F) -8 b(unction) 27 b(where) e(call) i(to) s(ok) g
(place.) 40 b(This) 25 b(information) h(is) g(only) g(a) m(v) -5
b(ailable) 28 b(if) e(the) g(mpatrol) g(library) f(has) 274
2921 y(b) s(een) 33 b(built) h(on) f(a) h(platform) g(that) g(supp) s
(orts) e(reading) h(sym) m(b) s(ol) h(table) g(information) g(from) f
(executable) 274 3021 y(\014les,) 42 b(and) c(then) g(only) h(if) g
(there) g(is) g(an) f(en) m(try) h(in) g(the) g(sym) m(b) s(ol) f
(table) i(corresp) s(onding) e(to) h(the) g(return) 274
3120 y(address.) 64 b(C) p Fl(++) p Fo 37 w(function) 38
b(names) g(ma) m(y) g(still) i(b) s(e) d(in) h(their) g(mangled) g
(form,) i(but) e(this) g(can) g(b) s(e) g(easily) 274
3220 y(recti\014ed) 31 b(b) m(y) f(pro) s(cessing) f(the) h(log) h
(\014le) f(with) g(a) g(C) p Fl(++) p Fo 29 w(name) g(demangler.) 41
b(The) 30 b(n) m(um) m(b) s(er) e(after) j(the) f(plus) 274
3320 y(sign) h(is) f(the) h(o\013set) g(in) f(b) m(ytes) h(from) f(the)
h(b) s(eginning) e(of) i(the) f(function.) 219 3467 y(The) g(follo) m
(wing) i(information) g(is) e(only) h(a) m(v) -5 b(ailable) 33
b(when) d(the) h(allo) s(cation) i(t) m(yp) s(e) e(is) g(`) p
Fl(ALLOC) p Fo(') f(or) g(`) p Fl(REALLOC) p Fo(') 94
3567 y(since) h(it) g(mak) m(es) g(no) g(sense) f(when) f(applied) i
(to) g(`) p Fl(FREE) p Fo('.) 98 3691 y(11.) 61 b(The) 30
b(address) g(of) g(the) h(new) f(memory) g(blo) s(c) m(k) h(that) g
(has) f(b) s(een) g(allo) s(cated) i(b) m(y) p Fl 30
w(malloc\(\)) p Fo(.) 219 3838 y(As) h(y) m(ou) h(can) f(see,) i(there)
f(is) f(quite) h(a) g(lot) g(of) f(information) h(that) g(can) f(b) s
(e) g(displa) m(y) m(ed) h(from) f(a) g(simple) h(call) 94
3938 y(to) p Fl 35 w(malloc\(\)) p Fo(,) f(and) h(hop) s(efully) f
(this) h(information) h(has) f(b) s(een) f(presen) m(ted) h(in) g(a) h
(clear) g(and) e(concise) j(format) 94 4037 y(in) 31
b(the) f(log) i(\014le.) 219 4161 y(The) e(next) i(en) m(tries) f(in) g
(the) g(log) h(\014le) f(corresp) s(ond) f(to) i(the) f(call) h(to) p
Fl 32 w(free\(\)) p Fo(,) d(whic) m(h) i(attempts) h(to) g(free) f(the)
94 4261 y(memory) g(allo) s(cated) h(b) m(y) p Fl 30
w(malloc\(\)) p Fo(,) d(but) g(supplies) h(the) g(wrong) g(address.) 219
4384 y(The) 39 b(\014rst) f(four) h(lines) g(should) f(b) s(e) h
(self-explanatory) i(as) e(they) h(are) f(v) m(ery) h(similar) f(to) h
(those) g(describ) s(ed) 94 4484 y(ab) s(o) m(v) m(e) d(for) p
Fl 36 w(malloc\(\)) p Fo(.) 54 b(Ho) m(w) m(ev) m(er,) 39
b(the) d(next) g(lines) g(signal) g(that) h(a) f(terminal) g(error) f
(has) g(o) s(ccurred) g(in) h(the) 94 4584 y(program,) 31
b(so) f(I'v) m(e) i(annotated) f(them) f(as) h(b) s(efore.) p
Fl 334 4711 a(FREE:) 47 b(free) f(\(0x080620E9\)) f([main|test1.c|37])
716 4815 y(0x08049457) g(main+71) 716 4919 y(0x4007C9CB) g
(__libc_start_main+255) 716 5023 y(0x08049381) g(_start+33) 382
5230 y(\(1\)) 238 b(\(2\)) 286 b(\(3\)) 430 5334 y(|) 334
b(|) 381 b(|) 430 5438 y(V) 334 b(V) 381 b(V) 334 5542
y(ERROR:) 47 b([MISMAT]:) e(free:) h(0x080620E9) f(does) i(not) g
(match) f(allocation) f(of) i(0x080620E8) 669 5645 y(\(4\)) 381
b(\(5\)) 333 b(\(6\)) 94 b(\(7\)\(8\)) g(\(9\)) 190 b(\(10\)) 47
b(\(11\)) p 90 rotate dyy eop
%%Page: 100 106
100 105 bop Fo 94 -116 a(100) 3332 b(mpatrol) p Fl 716
365 a(|) 477 b(|) 430 b(|) 190 b(|) 95 b(|) 191 b(|) 286
b(|) 191 b(|) 716 469 y(V) 477 b(V) 430 b(V) 190 b(V) 95
b(V) 191 b(V) 286 b(V) 191 b(V) 525 573 y(0x080620E8) 45
b(\(16) i(bytes\)) f({malloc:52:0}) f([main|test1.c|36]) 334
677 y(\(12\)) i(->) g(0x0804942F) e(main+31) 716 780
y(0x4007C9CB) g(__libc_start_main+255) 716 884 y(0x08049381) g
(_start+33) p Fo 144 1054 a(1.) 60 b(Error) 41 b(sev) m(erit) m(y) -8
b(.) 75 b(The) 40 b(mpatrol) i(library) e(has) h(t) m(w) m(o) i
(di\013eren) m(t) e(sev) m(erities) i(of) e(error:) 62
b(`) p Fl(WARNING) p Fo(') 40 b(and) 274 1154 y(`) p
Fl(ERROR) p Fo('.) 48 b(The) 32 b(\014rst) g(is) h(alw) m(a) m(ys) i
(reco) m(v) m(erable,) h(and) c(serv) m(es) h(only) g(to) h(indicate) g
(that) f(something) h(is) f(not) 274 1253 y(quite) 27
b(righ) m(t,) h(and) d(so) i(ma) m(y) f(b) s(e) g(useful) f(in) h
(determining) g(where) g(something) g(started) h(to) g(go) g(wrong.) 38
b(The) 274 1353 y(second) 28 b(ma) m(y) f(or) g(ma) m(y) h(not) f(b) s
(e) f(reco) m(v) m(erable,) 31 b(and) 26 b(the) h(library) g
(terminates) h(the) f(program) g(if) g(it) g(is) g(fatal,) 274
1453 y(displa) m(ying) k(an) m(y) g(relev) -5 b(an) m(t) 32
b(information) e(as) h(it) g(do) s(es) f(this.) 144 1576
y(2.) 60 b(Error) 42 b(abbreviation) h(co) s(de.) 77
b(This) 42 b(is) h(a) f(co) s(de) h(that) g(is) g(di\013eren) m(t) g
(for) f(eac) m(h) h(t) m(yp) s(e) g(of) g(error) f(that) h(is) 274
1675 y(detected) 32 b(b) m(y) e(the) h(mpatrol) g(library) -8
b(.) 40 b(Some) 31 b(w) m(arnings) f(and) g(errors) g(that) g(are) h
(not) g(directly) g(related) g(to) 274 1775 y(the) f(program) e(b) s
(eing) h(run) e(will) i(not) g(con) m(tain) i(this) d(\014eld.) 40
b(See) 29 b(the) g(app) s(endix) f(on) h(diagnostic) h(messages) 274
1875 y(\(see) 36 b(App) s(endix) d(D) i([Diagnostic) j(messages],) f
(page) e(167\)) i(for) d(a) h(complete) h(list) g(of) f(all) g(p) s
(ossible) f(error) 274 1974 y(abbreviation) e(co) s(des) e(and) g
(their) g(descriptions.) 144 2097 y(3.) 60 b(Allo) s(cation) 39
b(function.) 61 b(This) 36 b(is) h(the) g(name) g(of) g(the) g
(function) g(used) f(to) i(allo) s(cate,) j(reallo) s(cate) f(or) d
(free) 274 2197 y(memory) 24 b(where) f(the) h(error) f(w) m(as) h
(detected.) 40 b(This) 23 b(ma) m(y) h(b) s(e) f(omitted) i(if) e(an) h
(error) f(is) h(detected) h(elsewhere) 274 2297 y(in) 31
b(the) f(library) -8 b(.) 219 2443 y(The) 27 b(follo) m(wing) j
(information) e(is) g(related) h(to) f(the) g(information) h(that) f
(the) g(library) g(has) f(stored) h(ab) s(out) g(the) 94
2543 y(relev) -5 b(an) m(t) 30 b(memory) e(allo) s(cation.) 43
b(This) 27 b(information) i(is) f(alw) m(a) m(ys) i(displa) m(y) m(ed) f
(in) f(this) g(format) h(when) e(details) j(of) 94 2642
y(individual) g(memory) g(allo) s(cations) i(are) f(required.) 40
b(If) 30 b(an) m(y) g(information) h(is) f(missing) g(then) g(it) g
(simply) g(means) 94 2742 y(that) h(the) g(library) f(w) m(as) h(not) f
(able) h(to) g(determine) g(it) g(when) e(the) i(memory) f(blo) s(c) m
(k) h(w) m(as) g(\014rst) e(allo) s(cated.) 144 2865
y(4.) 60 b(Address) 30 b(of) g(memory) h(allo) s(cation.) 144
2988 y(5.) 60 b(Size) 31 b(of) g(memory) f(allo) s(cation.) 144
3111 y(6.) 60 b(Allo) s(cation) 26 b(function.) 38 b(This) 23
b(is) g(the) h(name) f(of) h(the) g(function) f(that) h(w) m(as) g
(called) g(to) g(allo) s(cate) i(the) e(memory) 274 3211
y(blo) s(c) m(k,) 40 b(in) d(this) g(case) h(`) p Fl(malloc) p
Fo('.) 60 b(If) 36 b(the) h(memory) g(allo) s(cation) j(has) d(b) s
(een) f(resized) h(then) g(this) g(will) h(b) s(e) 274
3311 y(either) 31 b(`) p Fl(realloc) p Fo(',) e(`) p
Fl(reallocf) p Fo(',) g(`) p Fl(recalloc) p Fo(',) g(`) p
Fl(expand) p Fo(') g(or) i(`) p Fl(xrealloc) p Fo('.) 144
3434 y(7.) 60 b(Allo) s(cation) 33 b(index.) 144 3557
y(8.) 60 b(Reallo) s(cation) 41 b(index.) 62 b(This) 37
b(is) h(used) f(to) h(coun) m(t) h(the) f(n) m(um) m(b) s(er) e(of) i
(times) g(a) h(memory) e(allo) s(cation) j(has) 274 3656
y(b) s(een) 30 b(resized) h(with) p Fl 30 w(realloc\(\)) p
Fo 28 w(and) f(its) g(related) i(functions.) 144 3779
y(9.) 60 b(F) -8 b(unction) 38 b(where) f(original) h(call) h(to) p
Fl 38 w(malloc\(\)) p Fo 34 w(to) s(ok) f(place.) 62
b(If) 37 b(the) g(memory) g(allo) s(cation) j(has) d(b) s(een) 274
3879 y(resized) 24 b(then) e(this) h(will) g(b) s(e) f(the) h(name) g
(of) g(the) g(function) g(whic) m(h) f(last) i(called) p
Fl 24 w(realloc\(\)) p Fo 21 w(and) e(its) h(related) 274
3979 y(functions.) 98 4102 y(10.) 61 b(Filename) 31 b(in) e(whic) m(h) g
(original) i(call) f(to) p Fl 30 w(malloc\(\)) p Fo 27
w(to) s(ok) g(place.) 42 b(If) 28 b(the) i(memory) f(allo) s(cation) j
(has) d(b) s(een) 274 4201 y(resized) 37 b(then) f(this) h(will) f(b) s
(e) g(the) h(\014lename) g(in) f(whic) m(h) g(the) g(last) i(call) f
(to) p Fl 38 w(realloc\(\)) p Fo 33 w(and) f(its) h(related) 274
4301 y(functions) 30 b(to) s(ok) h(place.) 98 4424 y(11.) 61
b(Line) 34 b(n) m(um) m(b) s(er) f(at) h(whic) m(h) f(original) i(call)
g(to) p Fl 35 w(malloc\(\)) p Fo 31 w(to) s(ok) g(place.) 51
b(If) 34 b(the) g(memory) f(allo) s(cation) j(has) 274
4524 y(b) s(een) c(resized) h(then) f(this) h(will) g(b) s(e) e(the) i
(line) g(n) m(um) m(b) s(er) e(at) i(whic) m(h) g(the) f(last) i(call) f
(to) p Fl 34 w(realloc\(\)) p Fo 30 w(and) f(its) 274
4623 y(related) g(functions) e(to) s(ok) h(place.) 98
4746 y(12.) 61 b(F) -8 b(unction) 25 b(call) h(stac) m(k) g(of) e
(original) h(memory) f(allo) s(cation.) 41 b(If) 24 b(the) h(memory) f
(allo) s(cation) i(has) e(b) s(een) g(resized) 274 4846
y(then) 31 b(this) f(will) h(b) s(e) e(the) i(call) h(stac) m(k) f(of) g
(the) f(last) i(call) f(to) p Fl 31 w(realloc\(\)) p
Fo 28 w(and) f(related) h(functions.) 219 4993 y(So,) 36
b(the) g(mpatrol) f(library) g(detected) h(the) g(error) e(in) h(the) g
(ab) s(o) m(v) m(e) i(program) e(and) f(terminated) i(it.) 55
b(When) 94 5092 y(the) 29 b(library) e(terminates) i(it) f(alw) m(a) m
(ys) i(displa) m(ys) e(a) g(summary) f(of) h(v) -5 b(arious) 28
b(memory) g(allo) s(cation) i(statistics) g(and) 94 5192
y(settings) i(that) f(w) m(ere) g(used) e(during) g(the) i(execution) g
(of) g(the) g(program.) 219 5315 y(The) e(v) -5 b(arious) 29
b(settings) i(and) d(statistics) k(displa) m(y) m(ed) e(b) m(y) f(the) h
(library) f(for) g(the) g(ab) s(o) m(v) m(e) i(example) f(ha) m(v) m(e)
h(b) s(een) 94 5414 y(n) m(um) m(b) s(ered) e(and) h(their) h
(descriptions) f(app) s(ear) g(b) s(elo) m(w.) p Fl 382
5542 a(1) 95 b(system) 46 b(page) h(size:) 94 b(4096) 47
b(bytes) 382 5645 y(2) 95 b(default) 46 b(alignment:) f(4) j(bytes) p
90 rotate dyy eop
%%Page: 101 107
101 106 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(101) p Fl 382 365 a(3) 95 b(overflow) 46 b(size:) 237
b(0) 48 b(bytes) 382 469 y(4) 95 b(overflow) 46 b(byte:) 237
b(0xAA) 382 573 y(5) 95 b(allocation) 45 b(byte:) 142
b(0xFF) 382 677 y(6) 95 b(free) 47 b(byte:) 428 b(0x55) 382
780 y(7) 95 b(allocation) 45 b(stop:) 142 b(0) 382 884
y(8) 95 b(reallocation) 45 b(stop:) h(0) 382 988 y(9) 95
b(free) 47 b(stop:) 428 b(0) 334 1092 y(10) 95 b(unfreed) 46
b(abort:) 237 b(0) 334 1196 y(11) 95 b(small) 47 b(boundary:) 188
b(32) 47 b(bytes) 334 1299 y(12) 95 b(medium) 46 b(boundary:) 141
b(256) 47 b(bytes) 334 1403 y(13) 95 b(large) 47 b(boundary:) 188
b(2048) 47 b(bytes) 334 1507 y(14) 95 b(lower) 47 b(check) f(range:) g
(0) 334 1611 y(15) 95 b(upper) 47 b(check) f(range:) g(0) 334
1714 y(16) 95 b(check) 47 b(frequency:) 140 b(1) 334
1818 y(17) 95 b(failure) 46 b(frequency:) f(0) 334 1922
y(18) 95 b(failure) 46 b(seed:) 285 b(972951591) 334
2026 y(19) 95 b(prologue) 46 b(function:) f(<unset>) 334
2130 y(20) 95 b(epilogue) 46 b(function:) f(<unset>) 334
2233 y(21) 95 b(handler) 46 b(function:) 93 b(<unset>) 334
2337 y(22) i(log) 47 b(file:) 476 b(mpatrol.log) 334
2441 y(23) 95 b(profiling) 46 b(file:) 189 b(mpatrol.out) 334
2545 y(24) 95 b(tracing) 46 b(file:) 285 b(mpatrol.trace) 334
2648 y(25) 95 b(program) 46 b(filename:) 93 b(./test1) 334
2752 y(26) i(symbols) 46 b(read:) 285 b(5764) 334 2856
y(27) 95 b(autosave) 46 b(count:) 189 b(0) 334 2960 y(28) 95
b(freed) 47 b(queue) f(size:) 94 b(0) 334 3064 y(29) h(allocation) 45
b(count:) 94 b(52) 334 3167 y(30) h(allocation) 45 b(peak:) 142
b(20) 47 b(\(427512) f(bytes\)) 334 3271 y(31) 95 b(allocation) 45
b(limit:) 94 b(0) 48 b(bytes) 334 3375 y(32) 95 b(allocated) 46
b(blocks:) 93 b(7) 48 b(\(1528) e(bytes\)) 334 3479 y(33) 95
b(marked) 46 b(blocks:) 237 b(0) 48 b(\(0) f(bytes\)) 334
3582 y(34) 95 b(freed) 47 b(blocks:) 284 b(0) 48 b(\(0) f(bytes\)) 334
3686 y(35) 95 b(free) 47 b(blocks:) 332 b(4) 48 b(\(432648) d(bytes\))
334 3790 y(36) 95 b(internal) 46 b(blocks:) 141 b(33) 47
b(\(540672) f(bytes\)) 334 3894 y(37) 95 b(total) 47
b(heap) f(usage:) 94 b(974848) 46 b(bytes) 334 3998 y(38) 95
b(total) 47 b(compared:) 188 b(0) 48 b(bytes) 334 4101
y(39) 95 b(total) 47 b(located:) 236 b(2) 48 b(bytes) 334
4205 y(40) 95 b(total) 47 b(copied:) 284 b(32176) 47
b(bytes) 334 4309 y(41) 95 b(total) 47 b(set:) 428 b(582856) 46
b(bytes) 334 4413 y(42) 95 b(total) 47 b(warnings:) 188
b(0) 334 4516 y(43) 95 b(total) 47 b(errors:) 284 b(1) p
Fo 144 4670 a(1.) 60 b(System) 39 b(page) h(size.) 66
b(This) 38 b(v) -5 b(alue) 39 b(is) g(used) f(on) h(some) g(platforms) g
(when) f(allo) s(cating) j(and) d(protecting) 274 4770
y(system) 31 b(memory) -8 b(.) 144 4909 y(2.) 60 b(Default) 46
b(alignmen) m(t.) 83 b(This) 43 b(v) -5 b(alue) 45 b(is) f(the) h
(minim) m(um) e(alignmen) m(t) i(required) f(for) g(general) h(purp) s
(ose) 274 5008 y(memory) 29 b(allo) s(cations,) i(and) c(is) i(usually)
e(the) i(alignmen) m(t) g(required) f(b) m(y) g(the) g(most) h
(restrictiv) m(e) h(datat) m(yp) s(e) 274 5108 y(on) j(a) g(giv) m(en) h
(system.) 47 b(It) 33 b(is) g(used) f(when) f(allo) s(cating) k(memory)
e(that) g(has) f(no) h(sp) s(eci\014ed) f(alignmen) m(t.) 49
b(It) 274 5208 y(can) 36 b(b) s(e) e(c) m(hanged) h(at) h(run-time) e
(using) h(the) g(`) p Fl(DEFALIGN) p Fo(') e(option,) k(but) d(setting)
i(this) f(v) -5 b(alue) 35 b(to) s(o) g(small) 274 5307
y(ma) m(y) 40 b(cause) f(the) f(program) h(to) g(crash) f(due) g(to) h
(bus) e(errors) h(whic) m(h) h(are) f(caused) h(b) m(y) f(reading) h
(from) f(or) 274 5407 y(writing) 31 b(to) g(misaligned) g(data.) 144
5546 y(3.) 60 b(Ov) m(er\015o) m(w) 36 b(size.) 55 b(This) 34
b(v) -5 b(alue) 36 b(is) f(the) g(size) h(used) e(b) m(y) h(one) g(o) m
(v) m(er\015o) m(w) i(bu\013er.) 53 b(If) 35 b(this) g(is) g(non-zero) g
(then) 274 5645 y(ev) m(ery) h(memory) e(allo) s(cation) j(will) e(ha) m
(v) m(e) h(t) m(w) m(o) g(o) m(v) m(er\015o) m(w) g(bu\013ers;) g(one) f
(on) f(either) h(side.) 54 b(These) 34 b(bu\013ers) p
90 rotate dyy eop
%%Page: 102 108
102 107 bop Fo 94 -116 a(102) 3332 b(mpatrol) 274 365
y(are) 34 b(used) e(b) m(y) g(the) h(library) g(to) g(detect) h(if) f
(the) g(program) f(has) h(written) g(to) s(o) g(man) m(y) g(b) m(ytes) g
(to) h(a) f(memory) 274 465 y(allo) s(cation,) 38 b(th) m(us) c(o) m(v)
m(er\015o) m(wing) i(in) m(to) g(one) f(of) f(the) h(bu\013ers,) f(but)
g(these) h(extra) g(c) m(hec) m(ks) h(can) e(slo) m(w) h(do) m(wn) 274
565 y(execution) d(sp) s(eed.) 40 b(It) 30 b(can) h(b) s(e) f(c) m
(hanged) h(at) g(run-time) f(using) g(the) g(`) p Fl(OFLOWSIZE) p
Fo(') f(option.) 144 686 y(4.) 60 b(Ov) m(er\015o) m(w) 31
b(b) m(yte.) 144 808 y(5.) 60 b(Allo) s(cation) 33 b(b) m(yte.) 144
930 y(6.) 60 b(F) -8 b(ree) 37 b(b) m(yte.) 57 b(These) 35
b(v) -5 b(alues) 36 b(are) g(used) e(b) m(y) i(the) f(library) h(to) g
(pre-\014ll) f(blo) s(c) m(ks) h(of) g(memory) f(for) g(c) m(hec) m
(king) 274 1029 y(purp) s(oses.) j(The) 26 b(o) m(v) m(er\015o) m(w) i
(b) m(yte) f(is) g(used) e(to) i(\014ll) g(o) m(v) m(er\015o) m(w) h
(bu\013ers,) e(the) h(allo) s(cation) h(b) m(yte) g(is) e(used) g(to) h
(\014ll) 274 1129 y(newly-allo) s(cated) 33 b(memory) d(\(except) h
(from) p Fl 29 w(calloc\(\)) p Fo 28 w(or) p Fl 30 w(recalloc\(\)) p
Fo(\),) d(and) i(the) g(free) g(b) m(yte) h(is) f(used) 274
1229 y(to) g(\014ll) f(free) g(blo) s(c) m(ks) g(or) g(freed) f(memory)
h(allo) s(cations.) 42 b(These) 29 b(can) g(b) s(e) f(c) m(hanged) h
(at) h(run-time) e(using) h(the) 274 1328 y(`) p Fl(OFLOWBYTE) p
Fo(',) g(`) p Fl(ALLOCBYTE) p Fo(') f(and) i(`) p Fl(FREEBYTE) p
Fo(') f(options.) 144 1450 y(7.) 60 b(Allo) s(cation) 33
b(stop.) 144 1572 y(8.) 60 b(Reallo) s(cation) 33 b(stop.) 144
1694 y(9.) 60 b(F) -8 b(ree) 41 b(stop.) 70 b(These) 39
b(v) -5 b(alues) 40 b(are) g(used) f(b) m(y) h(the) g(library) f(to) i
(halt) f(the) g(program) g(when) f(run) f(inside) i(a) 274
1793 y(debugger) 28 b(whenev) m(er) g(a) g(sp) s(eci\014ed) f(allo) s
(cation) j(index) d(is) h(allo) s(cated,) i(reallo) s(cated) g(or) e
(freed.) 39 b(These) 28 b(can) 274 1893 y(b) s(e) i(c) m(hanged) h(at) g
(run-time) f(using) g(the) h(`) p Fl(ALLOCSTOP) p Fo(',) d(`) p
Fl(REALLOCSTOP) p Fo(') g(and) i(`) p Fl(FREESTOP) p
Fo(') f(options.) 98 2015 y(10.) 61 b(Unfreed) 30 b(ab) s(ort.) 41
b(This) 30 b(v) -5 b(alue) 31 b(is) f(used) g(when) f(the) i(program) f
(terminates) h(and) f(is) h(used) e(b) m(y) i(the) f(library) 274
2114 y(to) 39 b(c) m(hec) m(k) h(if) e(there) g(are) g(more) h(than) e
(a) i(giv) m(en) g(n) m(um) m(b) s(er) e(of) h(unfreed) e(memory) i
(allo) s(cations.) 66 b(If) 38 b(there) 274 2214 y(are) e(then) e(the) h
(library) g(will) g(cause) g(the) g(program) g(to) g(ab) s(ort) g(with)
f(an) h(error.) 54 b(It) 35 b(can) g(b) s(e) f(c) m(hanged) h(at) 274
2314 y(run-time) 30 b(using) g(the) h(`) p Fl(UNFREEDABORT) p
Fo(') c(option.) 98 2435 y(11.) 61 b(Small) 31 b(b) s(oundary) -8
b(.) 98 2557 y(12.) 61 b(Medium) 31 b(b) s(oundary) -8
b(.) 98 2679 y(13.) 61 b(Large) 44 b(b) s(oundary) -8
b(.) 78 b(These) 42 b(v) -5 b(alues) 44 b(are) f(used) g(in) g(memory) g
(allo) s(cation) i(pro\014ling) e(and) f(sp) s(ecify) h(the) 274
2778 y(b) s(oundaries) 34 b(in) g(b) m(ytes) h(b) s(et) m(w) m(een) g
(small,) h(medium,) f(large) h(and) e(extra) h(large) h(allo) s
(cations.) 55 b(These) 35 b(can) 274 2878 y(b) s(e) 30
b(c) m(hanged) h(at) g(run-time) f(using) g(the) h(`) p
Fl(SMALLBOUND) p Fo(',) d(`) p Fl(MEDIUMBOUND) p Fo(') g(and) i(`) p
Fl(LARGEBOUND) p Fo(') e(options.) 98 3000 y(14.) 61
b(Lo) m(w) m(er) 32 b(c) m(hec) m(k) g(range.) 98 3122
y(15.) 61 b(Upp) s(er) 30 b(c) m(hec) m(k) h(range.) 98
3243 y(16.) 61 b(Chec) m(k) 38 b(frequency) -8 b(.) 62
b(These) 37 b(v) -5 b(alues) 38 b(sp) s(ecify) f(the) h(range) g(of) f
(allo) s(cation) j(indices) e(through) f(whic) m(h) g(the) 274
3343 y(library) 29 b(will) f(ph) m(ysically) i(c) m(hec) m(k) g(ev) m
(ery) f(area) h(of) e(free) h(memory) f(and) g(ev) m(ery) i(o) m(v) m
(er\015o) m(w) f(bu\013er) f(for) g(errors,) 274 3443
y(along) 40 b(with) f(the) g(frequency) g(at) g(whic) m(h) g(to) g(mak)
m(e) h(the) f(c) m(hec) m(ks.) 68 b(A) 39 b(dash) f(sp) s(eci\014es) h
(that) g(either) h(the) 274 3542 y(lo) m(w) m(er) 29
b(or) e(upp) s(er) e(range) j(is) f(in\014nite,) h(but) e(if) h(they) h
(are) f(b) s(oth) g(zero) g(then) g(no) g(suc) m(h) g(c) m(hec) m(king)
i(will) f(ev) m(er) g(b) s(e) 274 3642 y(p) s(erformed,) 33
b(th) m(us) f(sp) s(eeding) g(up) g(execution) i(sp) s(eed) e
(dramatically) -8 b(.) 51 b(The) 32 b(c) m(hec) m(k) j(frequency) d
(indicates) 274 3742 y(the) 39 b(n) m(um) m(b) s(er) e(of) i(memory) f
(allo) s(cation) j(ev) m(en) m(ts) f(that) f(m) m(ust) f(o) s(ccur) h
(in) f(b) s(et) m(w) m(een) h(c) m(hec) m(king) h(the) f(heap.) 274
3841 y(The) 31 b(library) g(defaults) g(to) g(p) s(erforming) f(no) h
(suc) m(h) g(c) m(hec) m(ks.) 44 b(This) 30 b(can) h(b) s(e) f(c) m
(hanged) i(at) g(run-time) e(using) 274 3941 y(the) h(`) p
Fl(CHECK) p Fo(') e(option.) 98 4063 y(17.) 61 b(F) -8
b(ailure) 32 b(frequency) -8 b(.) 98 4184 y(18.) 61 b(F) -8
b(ailure) 32 b(seed.) 41 b(These) 30 b(v) -5 b(alues) 30
b(are) h(used) e(to) i(sp) s(ecify) f(if) g(random) f(memory) h(allo) s
(cation) j(failures) d(should) 274 4284 y(o) s(ccur) f(during) e
(program) h(execution,) i(for) e(the) g(purp) s(oses) f(of) h(stress) h
(testing) g(a) g(program.) 39 b(If) 28 b(the) h(failure) 274
4384 y(frequency) h(is) h(zero) g(then) f(no) g(random) g(failures) g
(will) h(o) s(ccur,) f(but) g(if) g(it) h(is) g(greater) g(than) g
(zero) g(then) f(the) 274 4483 y(higher) g(the) g(n) m(um) m(b) s(er,) f
(the) h(less) h(frequen) m(t) e(the) i(failures.) 40
b(The) 30 b(failure) g(seed) g(is) g(used) f(in) m(ternally) i(b) m(y) f
(the) 274 4583 y(mpatrol) 38 b(library) e(when) g(generating) i(random)
e(n) m(um) m(b) s(ers.) 58 b(If) 36 b(it) i(is) e(zero) i(then) e(the) h
(seed) g(will) g(b) s(e) f(set) 274 4682 y(randomly) -8
b(,) 24 b(but) e(if) g(it) h(is) f(greater) h(than) f(zero) h(then) f
(it) g(will) h(b) s(e) e(used) h(to) h(generate) g(a) g(predictable) g
(sequence) 274 4782 y(of) 37 b(random) f(n) m(um) m(b) s(ers;) j(i.e.) e
(t) m(w) m(o) h(runs) d(of) i(the) g(same) g(program) f(with) g(the) h
(same) g(failure) g(frequencies) 274 4882 y(and) 30 b(the) h(same) g
(failure) f(seeds) g(will) h(generate) h(exactly) g(the) f(same) g
(sequence) f(of) h(failures.) 98 5003 y(19.) 61 b(Prologue) 32
b(function.) 98 5125 y(20.) 61 b(Epilogue) 31 b(function.) 98
5247 y(21.) 61 b(Handler) 40 b(function.) 68 b(These) 40
b(v) -5 b(alues) 40 b(con) m(tain) h(addresses) e(or) h(names) f(of) h
(functions) f(that) i(ha) m(v) m(e) g(b) s(een) 274 5347
y(installed) 27 b(as) f(callbac) m(k) j(functions) c(for) h(the) g
(library) -8 b(.) 39 b(These) 26 b(functions,) h(if) f(set,) h(will) g
(b) s(e) e(called) i(from) f(the) 274 5446 y(library) 36
b(at) g(appropriate) g(times) h(during) d(program) i(execution) h(in) e
(order) h(to) g(handle) g(sp) s(eci\014c) f(ev) m(en) m(ts.) 274
5546 y(These) 29 b(can) g(b) s(e) f(c) m(hanged) i(at) f(compile-time) i
(using) e(the) p Fl 29 w(__mp_prologue\(\)) p Fo(,) p
Fl 25 w(__mp_epilogue\(\)) p Fo 25 w(and) p Fl 274 5645
a(__mp_nomemory\(\)) p Fo 27 w(functions.) p 90 rotate
dyy eop
%%Page: 103 109
103 108 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(103) 98 365 y(22.) 61 b(Log) 34 b(\014le.) 50 b(Simply) 33
b(con) m(tains) h(the) g(name) f(of) h(the) f(\014le) h(where) e(all) j
(mpatrol) e(library) g(diagnostics) i(go) f(to.) 274
465 y(It) d(can) g(b) s(e) e(c) m(hanged) i(at) h(run-time) d(using) h
(the) h(`) p Fl(LOGFILE) p Fo(') e(option.) 98 586 y(23.) 61
b(Pro\014ling) 38 b(\014le.) 62 b(Con) m(tains) 37 b(the) h(name) f(of)
h(the) f(\014le) h(where) f(all) h(of) g(the) f(mpatrol) h(library) f
(memory) g(al-) 274 686 y(lo) s(cation) i(pro\014ling) d(information) g
(go) s(es) i(when) d(the) i(`) p Fl(PROF) p Fo(') f(option) h(is) f
(used.) 59 b(It) 36 b(can) h(b) s(e) f(c) m(hanged) h(at) 274
785 y(run-time) 30 b(using) g(the) h(`) p Fl(PROFFILE) p
Fo(') e(option.) 98 906 y(24.) 61 b(T) -8 b(racing) 23
b(\014le.) 38 b(Con) m(tains) 21 b(the) h(name) g(of) f(the) h(\014le) g
(where) f(all) h(of) g(the) f(mpatrol) h(library) f(memory) h(allo) s
(cation) 274 1006 y(tracing) 36 b(information) g(go) s(es) f(when) f
(the) h(`) p Fl(TRACE) p Fo(') f(option) i(is) f(used.) 53
b(It) 35 b(can) h(b) s(e) e(c) m(hanged) i(at) f(run-time) 274
1105 y(using) 30 b(the) h(`) p Fl(TRACEFILE) p Fo(') d(option.) 98
1226 y(25.) 61 b(Program) 23 b(\014lename.) 39 b(Con) m(tains) 23
b(the) g(full) f(pathname) h(to) g(the) g(program's) g(executable) h
(\014le.) 38 b(This) 22 b(is) h(used) 274 1326 y(b) m(y) 34
b(the) h(mpatrol) f(library) g(to) g(read) g(the) g(sym) m(b) s(ol) g
(table) h(in) f(order) f(to) i(pro) m(vide) f(sym) m(b) s(olic) h
(information) 274 1426 y(in) c(function) f(call) h(stac) m(ks.) 42
b(It) 31 b(can) f(b) s(e) g(c) m(hanged) h(at) g(run-time) f(using) g
(the) h(`) p Fl(PROGFILE) p Fo(') d(option.) 98 1547
y(26.) 61 b(Sym) m(b) s(ols) 41 b(read.) 72 b(This) 40
b(v) -5 b(alue) 41 b(con) m(tains) i(the) e(total) h(n) m(um) m(b) s
(er) e(of) h(sym) m(b) s(ols) g(read) f(from) h(a) g(program's) 274
1646 y(executable) 32 b(\014le) f(and/or) f(the) h(dynamic) f(link) m
(er,) h(if) f(applicable.) 98 1767 y(27.) 61 b(Autosa) m(v) m(e) 42
b(coun) m(t.) 69 b(This) 38 b(v) -5 b(alue) 40 b(con) m(tains) h(the) e
(frequency) g(at) h(whic) m(h) g(the) f(mpatrol) h(library) f(should)
274 1867 y(p) s(erio) s(dically) 31 b(write) g(the) g(pro\014ling) f
(data) h(to) g(the) g(pro\014ling) f(output) g(\014le.) 41
b(When) 31 b(the) f(total) j(n) m(um) m(b) s(er) c(of) 274
1966 y(pro\014led) e(memory) h(allo) s(cations) h(and) e(deallo) s
(cations) j(is) d(a) h(m) m(ultiple) g(of) g(this) f(n) m(um) m(b) s
(er) f(then) h(the) h(curren) m(t) 274 2066 y(pro\014ling) 43
b(information) h(will) g(b) s(e) e(written) i(to) g(the) f(pro\014ling)
g(output) g(\014le.) 80 b(It) 43 b(can) h(b) s(e) e(c) m(hanged) i(at)
274 2166 y(run-time) 30 b(using) g(the) h(`) p Fl(AUTOSAVE) p
Fo(') e(option.) 98 2287 y(28.) 61 b(F) -8 b(reed) 36
b(queue) g(size.) 56 b(This) 35 b(v) -5 b(alue) 36 b(con) m(tains) g
(the) g(maxim) m(um) f(n) m(um) m(b) s(er) f(of) i(freed) f(memory) g
(allo) s(cations) 274 2386 y(that) d(will) g(b) s(e) f(stored) g(in) g
(the) h(freed) f(queue) g(if) g(the) g(`) p Fl(NOFREE) p
Fo(') g(option) g(is) h(used.) 42 b(Once) 32 b(the) f(freed) g(queue)
274 2486 y(b) s(ecomes) 22 b(full) g(then) f(the) h(oldest) g(freed) f
(allo) s(cation) j(in) e(the) f(queue) h(will) g(b) s(e) f(returned) f
(to) j(the) e(free) h(memory) 274 2586 y(p) s(o) s(ol) 32
b(for) g(reuse) g(ev) m(ery) h(time) g(an) f(existing) h(memory) f
(allo) s(cation) j(is) d(freed.) 46 b(If) 31 b(this) h(v) -5
b(alue) 33 b(is) f(zero) h(then) 274 2685 y(the) 40 b(freed) f(queue) g
(will) h(nev) m(er) f(con) m(tain) i(an) m(y) f(freed) f(allo) s
(cations.) 69 b(It) 40 b(can) g(b) s(e) e(c) m(hanged) i(at) g
(run-time) 274 2785 y(using) 30 b(the) h(`) p Fl(NOFREE) p
Fo(') e(option.) 98 2906 y(29.) 61 b(Allo) s(cation) 39
b(coun) m(t.) 60 b(This) 36 b(v) -5 b(alue) 37 b(con) m(tains) h(the) f
(total) h(n) m(um) m(b) s(er) d(of) i(memory) g(allo) s(cations) h
(that) f(w) m(ere) 274 3005 y(created) 25 b(b) m(y) e(the) h(mpatrol) g
(library) -8 b(.) 38 b(This) 23 b(v) -5 b(alue) 23 b(ma) m(y) h(b) s(e)
f(more) h(than) f(exp) s(ected) h(if) f(the) h(mpatrol) f(library) 274
3105 y(mak) m(es) 32 b(an) m(y) e(memory) h(allo) s(cations) h(during) d
(initialisation.) 98 3226 y(30.) 61 b(Allo) s(cation) 29
b(p) s(eak.) 39 b(This) 25 b(v) -5 b(alue) 26 b(con) m(tains) i(the) e
(p) s(eak) g(memory) g(usage) g(set) h(b) m(y) f(the) g(program) g
(when) f(run-) 274 3326 y(ning;) k(the) g(p) s(eak) f(n) m(um) m(b) s
(er) f(of) i(memory) f(allo) s(cations,) j(and) d(also) i(the) e(p) s
(eak) g(n) m(um) m(b) s(er) f(of) i(b) m(ytes) g(allo) s(cated) 274
3425 y(in) f(paren) m(theses) f(\(the) i(t) m(w) m(o) f(n) m(um) m(b) s
(ers) f(ma) m(y) h(p) s(eak) f(at) h(di\013eren) m(t) g(times) g
(throughout) f(the) h(lifetime) h(of) f(the) 274 3525
y(program\).) 40 b(This) 25 b(v) -5 b(alue) 26 b(ma) m(y) g(b) s(e) f
(more) h(than) g(exp) s(ected) g(if) f(the) h(mpatrol) g(library) f
(mak) m(es) i(an) m(y) f(memory) 274 3625 y(allo) s(cations) 33
b(during) c(initialisation.) 98 3745 y(31.) 61 b(Allo) s(cation) 36
b(limit.) 51 b(This) 32 b(v) -5 b(alue) 34 b(is) g(used) e(to) j(limit)
f(the) g(amoun) m(t) f(of) h(memory) f(that) h(can) g(b) s(e) f(allo) s
(cated) 274 3845 y(b) m(y) h(a) h(program,) f(whic) m(h) g(can) g(b) s
(e) f(useful) h(for) f(stress-testing) j(in) d(sim) m(ulated) i(lo) m
(w) f(memory) g(conditions.) 274 3945 y(It) d(can) g(b) s(e) e(c) m
(hanged) i(at) h(run-time) d(using) h(the) h(`) p Fl(LIMIT) p
Fo(') e(option.) 98 4066 y(32.) 61 b(Allo) s(cated) 33
b(blo) s(c) m(ks.) 98 4187 y(33.) 61 b(Mark) m(ed) 32
b(blo) s(c) m(ks.) 98 4308 y(34.) 61 b(F) -8 b(reed) 31
b(blo) s(c) m(ks.) 98 4429 y(35.) 61 b(F) -8 b(ree) 40
b(blo) s(c) m(ks.) 64 b(These) 38 b(v) -5 b(alues) 39
b(con) m(tain) g(the) g(total) g(n) m(um) m(b) s(er) e(of) i(allo) s
(cated,) j(mark) m(ed,) e(freed) e(and) g(free) 274 4528
y(blo) s(c) m(ks) 45 b(at) f(the) g(time) g(the) g(summary) f(w) m(as) h
(pro) s(duced.) 79 b(A) 43 b(mark) m(ed) h(blo) s(c) m(k) g(is) g(an) g
(allo) s(cated) h(blo) s(c) m(k) 274 4628 y(that) 29
b(the) g(user) f(has) g(instructed) g(\(via) h(the) p
Fl 29 w(__mp_setmark\(\)) p Fo 24 w(function\)) g(the) f(mpatrol) h
(library) f(should) 274 4728 y(remain) 36 b(allo) s(cated) i(for) e
(the) g(rest) g(of) g(the) g(lifetime) i(of) e(the) g(program) g(and) f
(should) g(nev) m(er) h(b) s(e) f(freed) h(or) 274 4827
y(coun) m(ted) k(as) f(a) g(memory) g(leak.) 67 b(A) 39
b(freed) g(blo) s(c) m(k) g(is) g(an) g(allo) s(cated) i(blo) s(c) m(k)
e(that) g(has) g(b) s(een) f(freed) h(but) 274 4927 y(has) f(not) f(b) s
(een) g(returned) f(to) i(the) g(free) f(memory) g(list) h(for) f
(later) i(allo) s(cation.) 64 b(These) 37 b(v) -5 b(alues) 38
b(ma) m(y) g(b) s(e) 274 5026 y(di\013eren) m(t) 33 b(from) f(those) h
(exp) s(ected) g(if) f(the) g(mpatrol) h(library) f(mak) m(es) h(an) m
(y) g(memory) f(allo) s(cations) i(during) 274 5126 y(initialisation.)
49 b(In) 32 b(this) g(example) h(a) g(large) g(amoun) m(t) g(of) f
(memory) h(is) f(used) g(b) m(y) g(the) g(system) h(ob) 5
b(ject) 33 b(\014le) 274 5226 y(access) d(library) e(whic) m(h) g(is) h
(used) f(for) g(reading) g(the) h(sym) m(b) s(ols) f(from) g(the) h
(program's) f(executable) i(\014le) f(and) 274 5325 y(an) m(y) i
(shared) f(libraries) g(that) h(it) g(requires.) 98 5446
y(36.) 61 b(In) m(ternal) 34 b(blo) s(c) m(ks.) 48 b(This) 31
b(v) -5 b(alue) 34 b(con) m(tains) g(the) e(total) j(n) m(um) m(b) s
(er) c(of) i(memory) g(blo) s(c) m(ks) g(\(of) g(v) -5
b(arying) 33 b(sizes\)) 274 5546 y(that) h(ha) m(v) m(e) h(b) s(een) d
(allo) s(cated) j(from) e(the) h(system) f(for) g(the) g(mpatrol) h
(library) f(to) h(use) f(in) m(ternally) -8 b(.) 50 b(These) 274
5645 y(memory) 26 b(blo) s(c) m(ks) g(will) g(b) s(e) f
(write-protected) i(on) f(systems) f(that) i(supp) s(ort) d(memory) h
(protection) i(in) e(order) p 90 rotate dyy eop
%%Page: 104 110
104 109 bop Fo 94 -116 a(104) 3332 b(mpatrol) 274 365
y(to) 22 b(prev) m(en) m(t) g(the) f(program) g(from) g(corrupting) f
(the) h(library's) g(data) h(structures.) 37 b(This) 20
b(can) h(b) s(e) g(o) m(v) m(erridden) 274 465 y(at) 32
b(run-time) e(using) f(the) i(`) p Fl(NOPROTECT) p Fo(') d(option) j
(in) f(order) g(to) h(sp) s(eed) f(up) f(program) h(execution) i(sligh)
m(tly) -8 b(.) 98 589 y(37.) 61 b(T) -8 b(otal) 36 b(heap) d(usage.) 52
b(This) 32 b(v) -5 b(alue) 35 b(con) m(tains) g(the) e(total) j(amoun) m
(t) e(of) g(system) g(heap) f(memory) h(that) g(has) 274
688 y(b) s(een) c(allo) s(cated) j(b) m(y) d(the) g(mpatrol) h(library)
-8 b(.) 98 812 y(38.) 61 b(T) -8 b(otal) 32 b(compared.) 98
936 y(39.) 61 b(T) -8 b(otal) 32 b(lo) s(cated.) 98 1060
y(40.) 61 b(T) -8 b(otal) 32 b(copied.) 98 1184 y(41.) 61
b(T) -8 b(otal) 38 b(set.) 56 b(These) 35 b(v) -5 b(alues) 36
b(con) m(tain) h(the) f(total) h(n) m(um) m(b) s(er) d(of) i(b) m(ytes)
g(that) g(ha) m(v) m(e) h(b) s(een) d(trac) m(k) m(ed) j(b) m(y) f(the)
274 1284 y(mpatrol) 26 b(library) f(in) f(b) m(yte) i(comparison) g(op)
s(erations) f(\(suc) m(h) g(as) p Fl 26 w(memcmp\(\)) p
Fo(\),) f(b) m(yte) i(lo) s(cation) h(op) s(erations) 274
1384 y(\(suc) m(h) i(as) p Fl 29 w(memchr\(\)) p Fo(,) f(b) m(yte) h
(cop) m(y) h(op) s(erations) f(\(suc) m(h) g(as) p Fl
29 w(memcpy\(\)) p Fo(\)) e(and) h(b) m(yte) h(set) h(op) s(erations) f
(\(suc) m(h) 274 1483 y(as) p Fl 35 w(memset\(\)) p Fo(\)) j(resp) s
(ectiv) m(ely) -8 b(.) 53 b(They) 33 b(do) h(not) g(tak) m(e) i(in) m
(to) f(accoun) m(t) g(an) m(y) f(other) h(suc) m(h) e(op) s(erations) h
(that) 274 1583 y(o) s(ccur) d(out) m(with) g(these) f(functions,) h
(suc) m(h) f(as) g(loading) h(and) f(storing) h(from) f(mac) m(hine) h
(instructions.) 98 1707 y(42.) 61 b(T) -8 b(otal) 32
b(w) m(arnings.) 98 1831 y(43.) 61 b(T) -8 b(otal) 36
b(errors.) 50 b(The) 34 b(library) f(k) m(eeps) h(a) g(coun) m(t) h(of)
f(the) g(total) h(n) m(um) m(b) s(er) e(of) h(w) m(arnings) f(and) h
(errors) f(it) h(has) 274 1930 y(displa) m(y) m(ed) d(so) g(that) g(y) m
(ou) g(can) f(quic) m(kly) i(w) m(ork) e(out) h(this) f(information) h
(at) g(program) f(termination.) p Fn 94 2186 a(16.2) 69
b(Detecting) 46 b(incorrect) f(reuse) h(of) f(freed) g(memory) p
Fo 219 2368 a(The) f(next) h(example) g(uses) g(`) p
Fl(tests/fail/test2.c) p Fo(') 40 b(to) 45 b(illustrate) h(ho) m(w) f
(the) f(mpatrol) h(library) g(can) 94 2468 y(detect) 32
b(whereab) s(outs) e(on) g(the) h(heap) f(an) g(address) g(b) s
(elongs.) p Fl 334 2596 a(23) 95 b(/*) 334 2699 y(24) 143
b(*) 48 b(Allocates) d(a) i(block) g(of) g(16) g(bytes) f(and) h(then) g
(immediately) e(frees) h(it.) 95 b(An) 334 2803 y(25) 143
b(*) 48 b(attempt) d(is) j(then) e(made) h(to) g(double) f(the) h(size)
g(of) g(the) g(original) e(block.) 334 2907 y(26) 143
b(*/) 334 3218 y(29) 95 b(#include) 46 b("mpatrol.h") 334
3530 y(32) 95 b(int) 47 b(main\(void\)) 334 3633 y(33) 95
b({) 334 3737 y(34) 286 b(char) 47 b(*p;) 334 3945 y(36) 286
b(if) 47 b(\(p) h(=) f(\(char) f(*\)) i(malloc\(16\)\)) 334
4049 y(37) 286 b({) 334 4152 y(38) 477 b(free\(p\);) 334
4256 y(39) g(p) 48 b(=) f(\(char) f(*\)) i(realloc\(p,) d(32\);) 334
4360 y(40) 286 b(}) 334 4464 y(41) g(return) 46 b(EXIT_SUCCESS;) 334
4567 y(42) 95 b(}) p Fo 219 4691 a(The) 38 b(relev) -5
b(an) m(t) 39 b(excerpts) g(from) e(`) p Fl(mpatrol.log) p
Fo(') f(app) s(ear) i(b) s(elo) m(w.) 64 b(The) 38 b(format) g(of) g
(the) h(log) g(messages) 94 4791 y(should) 30 b(b) s(e) g(familiar) h
(to) g(y) m(ou) g(no) m(w.) p Fl 334 4919 a(ALLOC:) 47
b(malloc) f(\(52,) g(16) h(bytes,) g(4) g(bytes\)) f([main|test2.c|36])
716 5023 y(0x0804942F) f(main+31) 716 5127 y(0x4007C9CB) g
(__libc_start_main+255) 716 5230 y(0x08049381) g(_start+33) 334
5438 y(returns) h(0x080620E8) 334 5645 y(FREE:) h(free) f
(\(0x080620E8\)) f([main|test2.c|38]) p 90 rotate dyy
eop
%%Page: 105 111
105 110 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(105) p Fl 716 365 a(0x08049456) 45 b(main+70) 716 469
y(0x4007C9CB) g(__libc_start_main+255) 716 573 y(0x08049381) g
(_start+33) 525 780 y(0x080620E8) g(\(16) i(bytes\)) f({malloc:52:0}) f
([main|test2.c|36]) 716 884 y(0x0804942F) g(main+31) 716
988 y(0x4007C9CB) g(__libc_start_main+255) 716 1092 y(0x08049381) g
(_start+33) 334 1299 y(REALLOC:) h(realloc) g(\(0x080620E8,) e(32) j
(bytes,) g(4) g(bytes\)) f([main|test2.c|39]) 716 1403
y(0x08049476) f(main+102) 716 1507 y(0x4007C9CB) g
(__libc_start_main+255) 716 1611 y(0x08049381) g(_start+33) 334
1818 y(ERROR:) i([NOTALL]:) e(realloc:) g(0x080620E8) g(has) i(not) g
(been) g(allocated) 334 2026 y(returns) f(0x00000000) p
Fo 219 2171 a(The) 38 b(mpatrol) h(library) f(stores) h(all) g(of) g
(its) g(information) g(ab) s(out) f(allo) s(cated) i(and) e(free) h
(memory) f(in) g(tree) 94 2271 y(structures) 27 b(so) h(that) h(it) f
(can) g(quic) m(kly) g(determine) g(if) f(an) h(address) e(b) s(elongs)
i(to) g(allo) s(cated) i(or) d(free) h(memory) -8 b(,) 29
b(or) 94 2370 y(if) k(it) h(ev) m(en) g(exists) f(in) g(the) g(heap) g
(that) g(is) g(managed) h(b) m(y) f(mpatrol.) 48 b(The) 33
b(ab) s(o) m(v) m(e) h(example) g(should) e(illustrate) 94
2470 y(this) e(since) g(after) h(the) f(allo) s(cation) i(had) d(b) s
(een) g(freed,) h(the) g(library) g(recognised) g(this) g(and) f(rep) s
(orted) g(an) h(error.) 94 2570 y(It) h(w) m(as) g(p) s(ossible) f(for)
h(the) f(program) h(to) g(con) m(tin) m(ue) h(execution) f(ev) m(en) h
(after) f(that) g(error) f(since) h(mpatrol) g(could) 94
2669 y(reco) m(v) m(er) i(from) c(it) i(and) f(return) f(`) p
Fl(NULL) p Fo('.) 219 2814 y(It) e(is) g(p) s(ossible) g(for) g
(mpatrol) g(to) h(giv) m(e) h(ev) m(en) f(more) f(useful) f
(diagnostics) j(in) e(the) g(ab) s(o) m(v) m(e) h(situation) g(b) m(y) f
(using) 94 2914 y(the) 34 b(`) p Fl(NOFREE) p Fo(') d(option.) 49
b(This) 32 b(prev) m(en) m(ts) h(the) g(library) g(from) f(returning) g
(an) m(y) i(freed) e(allo) s(cations) j(to) f(the) f(free) 94
3014 y(memory) 38 b(p) s(o) s(ol,) g(b) m(y) f(preserving) g(an) m(y) h
(information) f(ab) s(out) g(them) g(and) g(marking) g(them) g(as) g
(freed.) 61 b(If) 37 b(y) m(ou) 94 3113 y(add) h(the) g(`) p
Fl(NOFREE=1) p Fo(') e(option) i(to) h(the) p Fl 38 w(MPATROL_OPTIONS) p
Fo 33 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 38 b(y) m(ou) h(should)
d(see) j(the) 94 3213 y(follo) m(wing) 32 b(en) m(tries) f(in) g(`) p
Fl(mpatrol.log) p Fo(') c(instead.) p Fl 334 3362 a(ALLOC:) 47
b(malloc) f(\(52,) g(16) h(bytes,) g(4) g(bytes\)) f([main|test2.c|36])
716 3466 y(0x0804942F) f(main+31) 716 3570 y(0x4007C9CB) g
(__libc_start_main+255) 716 3674 y(0x08049381) g(_start+33) 334
3881 y(returns) h(0x08062F54) 334 4089 y(FREE:) h(free) f
(\(0x08062F54\)) f([main|test2.c|38]) 716 4193 y(0x08049456) g(main+70)
716 4296 y(0x4007C9CB) g(__libc_start_main+255) 716 4400
y(0x08049381) g(_start+33) 525 4608 y(0x08062F54) g(\(16) i(bytes\)) f
({malloc:52:0}) f([main|test2.c|36]) 716 4711 y(0x0804942F) g(main+31)
716 4815 y(0x4007C9CB) g(__libc_start_main+255) 716 4919
y(0x08049381) g(_start+33) 334 5127 y(REALLOC:) h(realloc) g
(\(0x08062F54,) e(32) j(bytes,) g(4) g(bytes\)) f([main|test2.c|39]) 716
5230 y(0x08049476) f(main+102) 716 5334 y(0x4007C9CB) g
(__libc_start_main+255) 716 5438 y(0x08049381) g(_start+33) 334
5645 y(ERROR:) i([PRVFRD]:) e(realloc:) g(0x08062F54) g(was) i(freed) g
(with) f(free) p 90 rotate dyy eop
%%Page: 106 112
106 111 bop Fo 94 -116 a(106) 3332 b(mpatrol) p Fl 525
365 a(0x08062F54) 45 b(\(16) i(bytes\)) f({free:52:0}) f
([main|test2.c|38]) 716 469 y(0x08049456) g(main+70) 716
573 y(0x4007C9CB) g(__libc_start_main+255) 716 677 y(0x08049381) g
(_start+33) 334 884 y(returns) h(0x00000000) p Fo 219
1013 a(Note) 32 b(the) f(extra) h(information) f(rep) s(orted) f(b) m
(y) p Fl 30 w(realloc\(\)) p Fo 28 w(since) i(the) f(library) f(kno) m
(ws) g(all) i(of) f(the) g(details) 94 1113 y(ab) s(out) g(the) f
(freed) g(memory) g(allo) s(cation) j(and) d(when) f(it) i(w) m(as) g
(freed.) 219 1242 y(The) h(`) p Fl(NOFREE) p Fo(') f(option) h(can) h
(p) s(oten) m(tially) h(use) e(up) f(m) m(uc) m(h) h(more) g(system) h
(memory) f(than) g(normal) g(if) g(it) h(is) 94 1341
y(giv) m(en) 25 b(a) f(large) h(n) m(umerical) g(argumen) m(t) f(since)
g(it) g(e\013ectiv) m(ely) j(instructs) c(the) h(mpatrol) g(library) g
(to) g(allo) s(cate) i(new) 94 1441 y(memory) j(for) g(ev) m(ery) g
(single) g(memory) g(allo) s(cation) i(or) e(reallo) s(cation.) 42
b(It) 29 b(can) g(also) h(slo) m(w) f(do) m(wn) f(program) h(exe-) 94
1541 y(cution) g(when) e(o) m(v) m(er\015o) m(w) j(bu\013ers) d(are) i
(used,) f(since) g(with) g(eac) m(h) i(new) d(memory) i(allo) s(cation)
h(the) f(library) e(needs) 94 1640 y(to) k(c) m(hec) m(k) h(more) e
(and) f(more) h(o) m(v) m(er\015o) m(w) i(bu\013ers) d(ev) m(ery) h
(time) h(it) f(is) g(called.) 42 b(Ho) m(w) m(ev) m(er,) 33
b(with) c(a) i(lo) m(w) f(n) m(umerical) 94 1740 y(argumen) m(t) 24
b(it) g(can) f(b) s(e) g(quite) g(useful) g(for) g(problems) f(suc) m
(h) h(as) g(this) g(one.) 39 b(The) 23 b(test) h(in) e(`) p
Fl(tests/fail/test3.c) p Fo(') 94 1839 y(has) 31 b(a) f(similar) h
(situation.) 219 1968 y(The) 26 b(n) m(umerical) g(argumen) m(t) h(sp) s
(eci\014ed) f(with) g(the) g(`) p Fl(NOFREE) p Fo(') f(option) i
(indicates) g(the) f(n) m(um) m(b) s(er) f(of) h(recen) m(tly-) 94
2068 y(freed) 32 b(memory) g(allo) s(cations) i(that) e(are) g(to) h(b)
s(e) e(dela) m(y) m(ed) i(from) f(b) s(eing) f(returned) g(to) h(the) g
(free) g(memory) g(p) s(o) s(ol,) 94 2168 y(with) 42
b(a) g(v) -5 b(alue) 42 b(of) g(zero) h(meaning) f(that) g(all) g
(freed) g(memory) f(allo) s(cations) j(will) e(immediately) h(b) s(e) e
(reused.) 94 2267 y(Ob) m(viously) -8 b(,) 40 b(in) d(an) g(ideal) h(w)
m(orld) g(it) f(w) m(ould) g(b) s(e) g(nice) h(to) g(b) s(e) f(able) g
(to) i(sp) s(ecify) d(`) p Fl(NOFREE=) p Fo(') p Fi(huge-numb) -5
b(er) p Fo 46 w(all) 94 2367 y(the) 32 b(time,) g(but) f(this) g(will) g
(gradually) h(use) f(up) f(more) h(and) g(more) g(memory) g(since) h
(no) f(system) g(heap) g(memory) 94 2466 y(will) 40 b(ev) m(er) g(b) s
(e) e(reused.) 66 b(Supplying) 37 b(a) j(smaller) f(n) m(um) m(b) s(er)
f(to) i(the) f(`) p Fl(NOFREE) p Fo(') f(option) h(allo) m(ws) i(y) m
(ou) e(to) h(mak) m(e) 94 2566 y(a) 35 b(compromise) g(b) m(y) f
(storing) h(the) g(details) g(of) g(only) g(the) f(most) h(recen) m
(tly-freed) h(memory) e(allo) s(cations.) 55 b(Ho) m(w) 94
2666 y(man) m(y) 31 b(details) g(y) m(ou) g(wish) f(to) h(store) g(is) f
(up) f(to) j(y) m(ou.) 219 2795 y(Normally) -8 b(,) 51
b(the) 45 b(`) p Fl(NOFREE) p Fo(') f(option) i(will) f(cause) h(the) g
(library) e(to) i(\014ll) g(all) g(freed) f(memory) g(allo) s(cations)
94 2894 y(with) 39 b(the) g(free) g(b) m(yte.) 66 b(Ho) m(w) m(ev) m
(er,) 43 b(the) c(original) h(con) m(ten) m(ts) g(of) f(suc) m(h) f
(allo) s(cations) j(can) e(b) s(e) f(preserv) m(ed) g(with) 94
2994 y(the) d(`) p Fl(PRESERVE) p Fo(') f(option.) 54
b(This) 34 b(could) h(help) f(in) h(situations) g(when) f(y) m(ou) h
(need) g(to) g(determine) g(exactly) i(if) e(a) 94 3094
y(program) c(is) f(relying) h(on) f(the) h(con) m(ten) m(ts) h(of) e
(freed) g(memory) -8 b(.) p Fn 94 3362 a(16.3) 69 b(Detecting) 46
b(use) f(of) g(free) h(memory) p Fo 219 3549 a(This) 29
b(next) h(example) g(illustrates) h(ho) m(w) f(the) g(mpatrol) g
(library) f(is) h(able) g(to) g(c) m(hec) m(k) i(to) e(see) g(if) g(an)
m(ything) g(has) 94 3649 y(b) s(een) f(written) g(in) m(to) h(free) g
(memory) -8 b(.) 40 b(The) 29 b(test) h(is) f(lo) s(cated) i(in) e(`) p
Fl(tests/fail/test4.c) p Fo(') c(and) j(simply) h(writes) 94
3748 y(a) i(single) g(b) m(yte) g(in) m(to) h(free) e(memory) -8
b(.) p Fl 334 3881 a(23) 95 b(/*) 334 3985 y(24) 143
b(*) 48 b(Allocates) d(a) i(block) g(of) g(16) g(bytes) f(and) h(then) g
(immediately) e(frees) h(it.) 95 b(A) 334 4089 y(25) 143
b(*) 48 b(NULL) e(character) f(is) j(written) d(into) i(the) g(middle) f
(of) h(the) g(freed) g(memory.) 334 4193 y(26) 143 b(*/) 334
4504 y(29) 95 b(#include) 46 b("mpatrol.h") 334 4815
y(32) 95 b(int) 47 b(main\(void\)) 334 4919 y(33) 95
b({) 334 5023 y(34) 286 b(char) 47 b(*p;) 334 5230 y(36) 286
b(if) 47 b(\(p) h(=) f(\(char) f(*\)) i(malloc\(16\)\)) 334
5334 y(37) 286 b({) 334 5438 y(38) 477 b(free\(p\);) 334
5542 y(39) g(p[8]) 47 b(=) g('\\0';) 334 5645 y(40) 286
b(}) p 90 rotate dyy eop
%%Page: 107 113
107 112 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(107) p Fl 334 365 a(41) 286 b(return) 46 b(EXIT_SUCCESS;) 334
469 y(42) 95 b(}) p Fo 219 598 a(The) 35 b(follo) m(wing) i(output) d
(w) m(as) i(pro) s(duced) e(as) h(part) g(of) h(`) p
Fl(mpatrol.log) p Fo('.) 53 b(Note) 36 b(that) g(this) g(test) g(w) m
(as) f(run) 94 698 y(using) e(the) f(same) p Fl 33 w(MPATROL_OPTIONS) p
Fo 29 w(settings) h(as) g(the) g(last) g(example,) h(but) e(mak) m(e) i
(sure) e(that) h(`) p Fl(PRESERVE) p Fo(') 94 798 y(is) e(not) g(set.) p
Fl 334 931 a(ERROR:) 47 b([FRDCOR]:) e(freed) h(allocation) f
(0x08062F54) g(has) i(memory) f(corruption) f(at) i(0x08062F5C) 716
1035 y(0x08062F5C) 93 b(00555555) 46 b(55555555) 952
b(.UUUUUUU) 525 1242 y(0x08062F54) 45 b(\(16) i(bytes\)) f({free:52:0})
f([main|test4.c|38]) 716 1346 y(0x08049456) g(main+70) 716
1450 y(0x4007C9CB) g(__libc_start_main+255) 716 1554
y(0x08049381) g(_start+33) p Fo 219 1683 a(The) 29 b(library) f(w) m
(as) i(able) f(to) h(detect) h(that) e(something) h(had) f(b) s(een) f
(written) h(in) m(to) h(free) f(memory) g(and) g(could) 94
1782 y(rep) s(ort) 22 b(on) g(the) h(memory) f(allo) s(cation) j(that) e
(w) m(as) f(o) m(v) m(erwritten.) 40 b(Ho) m(w) m(ev) m(er,) 26
b(these) d(c) m(hec) m(ks) g(are) g(only) f(p) s(erformed) 94
1882 y(whenev) m(er) 31 b(a) h(function) e(in) h(the) g(mpatrol) g
(library) g(is) g(called) h(if) f(the) g(`) p Fl(CHECK) p
Fo(') f(option) h(is) g(used,) g(or) g(at) g(the) h(end) 94
1982 y(of) 27 b(program) g(execution.) 41 b(In) 26 b(the) h(example) g
(ab) s(o) m(v) m(e,) i(the) e(co) s(de) h(whic) m(h) e(wrote) h(in) m
(to) h(free) f(memory) g(could) g(ha) m(v) m(e) 94 2081
y(b) s(een) k(miles) h(a) m(w) m(a) m(y) i(from) d(where) g(the) h
(library) f(detected) i(the) f(error) f(since) h(w) m(e) g(w) m(ere) g
(not) g(using) f(the) h(`) p Fl(CHECK) p Fo(') 94 2181
y(option.) 40 b(Ho) m(w) m(ev) m(er,) 27 b(adding) d(`) p
Fl(CHECK=-) p Fo(') f(to) h(the) p Fl 25 w(MPATROL_OPTIONS) p
Fo 20 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 25 b(do) s(esn't) f
(really) 94 2281 y(help) 40 b(m) m(uc) m(h) f(since) h(the) g(next) g
(mpatrol) g(function) f(that) i(is) e(called) i(is) f(the) g(one) f(to)
i(terminate) g(the) e(library) 94 2380 y(an) m(yw) m(a) m(y) -8
b(.) 219 2509 y(Note) 29 b(that) f(using) f(the) g(`) p
Fl(CHECK) p Fo(') g(option) g(is) h(equiv) -5 b(alen) m(t) 29
b(to) f(calling) p Fl 29 w(__mp_check\(\)) p Fo 24 w(when) e(eac) m(h) j
(mpatrol) 94 2609 y(library) 37 b(function) g(is) h(called,) i(or) d
(at) h(the) g(range) f(and) g(frequency) g(sp) s(eci\014ed) f(in) h
(the) g(v) -5 b(alues) 38 b(passed) f(to) h(the) 94 2709
y(`) p Fl(CHECK) p Fo(') c(option.) 53 b(If) 34 b(y) m(ou) h(susp) s
(ect) f(that) h(heap) f(corruption) g(is) h(o) s(ccurring) f(in) g(a) h
(part) f(of) g(y) m(our) h(co) s(de) f(where) 94 2808
y(there) e(is) f(a) h(large) g(gap) g(b) s(et) m(w) m(een) g(mpatrol) g
(library) f(calls,) i(y) m(ou) e(can) h(try) f(to) h(narro) m(w) f(the)
g(problem) g(do) m(wn) g(b) m(y) 94 2908 y(adding) f(a) h(few) f(calls)
i(to) p Fl 31 w(__mp_check\(\)) p Fo(.) 219 3037 y(On) 39
b(platforms) h(that) h(supp) s(ort) d(memory) h(protection,) 44
b(the) c(library) g(also) h(supp) s(orts) d(the) i(`) p
Fl(PAGEALLOC) p Fo(') 94 3137 y(option.) 76 b(This) 42
b(option) g(instructs) f(the) i(library) e(to) i(force) f(ev) m(ery) h
(single) g(memory) e(allo) s(cation) k(to) d(ha) m(v) m(e) i(a) 94
3236 y(size) 37 b(whic) m(h) f(is) g(a) g(m) m(ultiple) g(of) g(the) g
(system) g(page) h(size.) 57 b(Although) 36 b(the) g(library) g(still) h
(stores) f(the) g(original) 94 3336 y(requested) i(size,) j(it) e
(e\013ectiv) m(ely) h(means) e(that) h(no) f(t) m(w) m(o) h(memory) f
(allo) s(cations) i(o) s(ccup) m(y) e(the) g(same) g(page) h(of) 94
3436 y(memory) -8 b(.) 43 b(It) 31 b(can) g(then) g(use) g(page) g
(protection) h(\(whic) m(h) f(only) g(op) s(erates) h(on) f(pages) g
(of) g(memory\)) g(to) h(protect) 94 3535 y(all) i(free) e(memory) g
(from) g(b) s(eing) g(read) g(from) g(or) g(written) g(to,) i(and) e
(uses) f(similar) i(features) f(to) h(install) h(a) e(page) 94
3635 y(of) f(o) m(v) m(er\015o) m(w) h(bu\013er) d(on) h(either) h
(side) g(of) f(the) h(allo) s(cation.) 219 3764 y(Ho) m(w) m(ev) m(er,)
i(if) d(the) g(requested) g(size) i(for) e(the) g(memory) g(allo) s
(cation) j(w) m(as) d(not) h(a) f(m) m(ultiple) h(of) g(the) f(page) h
(size) 94 3864 y(this) j(means) f(that) h(there) g(will) g(still) g(b) s
(e) f(un) m(used) f(space) i(left) g(o) m(v) m(er) h(in) e(the) h(allo)
s(cated) h(pages.) 51 b(This) 33 b(problem) 94 3963 y(is) i(solv) m(ed)
f(b) m(y) g(turning) g(the) g(un) m(used) f(space) h(in) m(to) h(o) m
(v) m(er\015o) m(w) h(bu\013ers) d(that) h(will) h(b) s(e) e(c) m(hec) m
(k) m(ed) j(in) e(the) g(normal) 94 4063 y(w) m(a) m(y) -8
b(.) 47 b(The) 31 b(p) s(ositioning) h(of) g(the) h(allo) s(cation) h
(within) d(its) h(pages) h(is) e(also) i(imp) s(ortan) m(t.) 46
b(If) 31 b(y) m(ou) h(w) m(an) m(t) h(to) f(c) m(hec) m(k) 94
4163 y(for) h(illegal) i(reads) d(from) g(the) g(b) s(orders) f(of) i
(the) g(memory) f(allo) s(cation,) k(unless) c(it) h(\014ts) f(exactly)
i(in) m(to) f(its) g(pages) 94 4262 y(then) 43 b(there) h(is) f(a) h(c)
m(hance) g(that) g(a) g(program) f(could) g(illegally) j(read) d(the) g
(righ) m(t-most) i(o) m(v) m(er\015o) m(w) g(bu\013er) d(if) 94
4362 y(the) 35 b(allo) s(cation) i(w) m(as) e(left-aligned,) i(or) e
(vice-v) m(ersa.) 55 b(Tw) m(o) 34 b(settings) i(therefore) f(exist) g
(for) f(the) h(`) p Fl(PAGEALLOC) p Fo(') 94 4461 y(option:) 41
b(`) p Fl(LOWER) p Fo(') 27 b(and) h(`) p Fl(UPPER) p
Fo('.) 39 b(They) 28 b(refer) g(to) h(the) g(placemen) m(t) h(of) e(ev)
m(ery) i(memory) e(allo) s(cation) j(within) d(its) 94
4561 y(constituen) m(t) k(pages.) 219 4690 y(The) g(follo) m(wing) j
(diagram) e(illustrates) h(the) f(`) p Fl(PAGEALLOC) p
Fo(') e(option.) 49 b(In) 32 b(the) h(diagram,) h(the) f(system) g
(page) 94 4790 y(size) 28 b(is) f(assumed) f(to) i(b) s(e) e(16) i(b) m
(ytes) f(\(v) m(ery) h(unlik) m(ely) -8 b(,) 29 b(but) d(will) h(serv) m
(e) h(for) e(this) h(example\)) h(and) e(eac) m(h) i(c) m(haracter) 94
4889 y(represen) m(ts) j(1) g(b) m(yte.) p Fl 334 5023
a(x) 48 b(=) f(allocated) f(memory) 334 5127 y(o) i(=) f(overflow) f
(buffer) g(\(filled) g(with) g(the) h(overflow) f(byte\)) 334
5230 y(.) i(=) f(overflow) f(buffer) g(page) h(\(read) f(and) h(write) f
(protected\)) 334 5438 y(PAGEALLOC=LOWER,) e(allocation) h(size) h(is) i
(16) f(bytes) f(or) 334 5542 y(PAGEALLOC=UPPER,) e(allocation) h(size) h
(is) i(16) f(bytes:) 525 5645 y(................xxxxxxxxxx) o(xxx) o
(xxx.) o(....) o(...) o(....) o(....) p 90 rotate dyy
eop
%%Page: 108 114
108 113 bop Fo 94 -116 a(108) 3332 b(mpatrol) p Fl 334
469 a(PAGEALLOC=LOWER,) 44 b(allocation) h(size) h(is) i(8) f(bytes:)
525 573 y(................xxxxxxxxoo) o(ooo) o(ooo.) o(....) o(...) o
(....) o(....) 334 780 y(PAGEALLOC=UPPER,) d(allocation) h(size) h(is) i
(8) f(bytes:) 525 884 y(................ooooooooxx) o(xxx) o(xxx.) o
(....) o(...) o(....) o(....) p Fo 219 1020 a(In) 30
b(our) h(original) h(example,) g(if) f(the) g(`) p Fl(PAGEALLOC=LOWER) p
Fo(') c(option) 32 b(is) f(added) f(to) i(the) p Fl 31
w(MPATROL_OPTIONS) p Fo 94 1119 a(en) m(vironmen) m(t) f(v) -5
b(ariable) 32 b(then) e(the) g(follo) m(wing) i(error) e(will) h(b) s
(e) f(pro) s(duced) e(instead) j(of) f(the) h(original) h(error.) p
Fl 334 1259 a(ERROR:) 47 b([ILLMEM]:) e(illegal) h(memory) g(access) g
(at) h(address) f(0x081C6008) 525 1363 y(0x081C6000) f(\(16) i(bytes\))
f({free:52:0}) f([main|test4.c|38]) 716 1466 y(0x08049456) g(main+70)
716 1570 y(0x4007C9CB) g(__libc_start_main+255) 716 1674
y(0x08049381) g(_start+33) 525 1881 y(call) i(stack) 716
1985 y(0x0804945F) e(main+79) 716 2089 y(0x4007C9CB) g
(__libc_start_main+255) 716 2193 y(0x08049381) g(_start+33) p
Fo 219 2328 a(On) 22 b(systems) h(that) h(supp) s(ort) e(memory) h
(protection,) j(the) d(mpatrol) h(library) e(has) h(a) h(built-in) f
(signal) h(handler) 94 2428 y(whic) m(h) 43 b(catc) m(hes) i(illegal) g
(memory) d(accesses) j(and) d(terminates) i(the) f(program.) 77
b(In) 43 b(the) g(ab) s(o) m(v) m(e) h(case,) j(the) 94
2528 y(freed) 28 b(memory) f(w) m(as) h(made) g(write-protected) h(and)
e(so) h(could) g(not) g(b) s(e) f(written) g(to.) 41
b(The) 27 b(underlying) g(virtual) 94 2627 y(memory) d(system) g(in) f
(the) h(op) s(erating) g(system) g(noticed) h(this) e(and) g(signaled) i
(this) e(to) i(the) e(library) h(immediately) 94 2727
y(after) 31 b(it) g(happ) s(ened.) 219 2862 y(Along) g(with) e(the) h
(details) h(of) f(the) g(freed) f(memory) h(allo) s(cation) i(that) e
(w) m(as) g(b) s(eing) g(written) g(to,) g(the) g(library) 94
2962 y(also) i(attempts) f(to) g(displa) m(y) f(the) g(function) g
(call) h(stac) m(k) h(for) e(the) g(lo) s(cation) i(in) e(the) g
(program) g(that) h(caused) f(the) 94 3061 y(illegal) i(memory) e
(access,) i(although) e(this) f(can) h(b) s(e) g(quite) g(unreliable.)
40 b(A) 30 b(b) s(etter) g(solution) g(w) m(ould) g(b) s(e) f(to) h
(run) 94 3161 y(the) h(program) f(in) g(a) h(debugger) f(to) h(catc) m
(h) h(the) f(illegal) h(memory) f(access.) 219 3296 y(Note) c(that) f
(the) f(`) p Fl(PAGEALLOC) p Fo(') f(option) h(also) i(mo) s(di\014es) d
(the) i(b) s(eha) m(viour) f(of) g(the) h(`) p Fl(NOFREE) p
Fo(') e(and) h(`) p Fl(PRESERVE) p Fo(') 94 3396 y(options) 40
b(when) f(used) f(together.) 70 b(The) 38 b(memory) i(allo) s(cation) h
(b) s(eing) e(freed) g(will) h(alw) m(a) m(ys) h(b) s(e) e(made) g
(write-) 94 3496 y(protected) 32 b(when) e(the) h(`) p
Fl(PRESERVE) p Fo(') f(option) h(is) g(used,) g(otherwise) g(it) h
(will) f(also) h(b) s(e) e(made) h(read-protected) h(to) 94
3595 y(prev) m(en) m(t) f(further) f(accesses.) 219 3731
y(Note) 39 b(also) f(that) g(the) f(`) p Fl(PAGEALLOC=UPPER) p
Fo(') d(option) k(is) f(p) s(oten) m(tially) i(m) m(uc) m(h) f(less) f
(e\016cien) m(t) i(at) f(catc) m(hing) 94 3830 y(illegal) d(memory) d
(accesses) i(than) e(the) h(`) p Fl(PAGEALLOC=LOWER) p
Fo(') c(option.) 47 b(This) 31 b(is) i(due) e(to) i(alignmen) m(t) h
(require-) 94 3930 y(men) m(ts,) e(since) e(an) h(allo) s(cation) i(of)
d(1) h(b) m(yte) g(requiring) f(an) h(alignmen) m(t) h(of) e(16) i(b) m
(ytes) f(cannot) g(b) s(e) f(placed) h(at) g(the) 94
4030 y(v) m(ery) 38 b(end) e(of) h(a) g(page) g(of) g(size) h(4096) g
(b) m(ytes.) 60 b(The) 37 b(follo) m(wing) h(diagram) f(illustrates) h
(this,) g(using) f(the) g(same) 94 4129 y(page) 32 b(size) f(as) f(the)
h(last) g(diagram.) p Fl 334 4269 a(x) 48 b(=) f(allocated) f(memory)
334 4373 y(o) i(=) f(overflow) f(buffer) g(\(filled) g(with) g(the) h
(overflow) f(byte\)) 334 4476 y(.) i(=) f(overflow) f(buffer) g(page) h
(\(read) f(and) h(write) f(protected\)) 334 4684 y(PAGEALLOC=UPPER,) e
(allocation) h(size) h(is) i(16) f(bytes,) f(alignment) f(is) i(8) h
(bytes:) 525 4788 y(................xxxxxxxxxx) o(xxx) o(xxx.) o(....) o
(...) o(....) o(....) 334 4995 y(PAGEALLOC=UPPER,) c(allocation) h
(size) h(is) i(3) f(bytes,) f(alignment) f(is) j(1) f(byte:) 525
5099 y(................oooooooooo) o(ooo) o(xxx.) o(....) o(...) o
(....) o(....) 334 5307 y(PAGEALLOC=UPPER,) d(allocation) h(size) h(is)
i(3) f(bytes,) f(alignment) f(is) j(8) f(bytes:) 525
5410 y(................ooooooooxx) o(xoo) o(ooo.) o(....) o(...) o
(....) o(....) p Fo 219 5546 a(Ev) m(erything) 24 b(is) g(OK) f(un) m
(til) g(the) h(last) h(allo) s(cation,) i(where) c(the) h(alignmen) m
(t) h(requiremen) m(t) f(means) g(that) g(there) 94 5645
y(m) m(ust) 31 b(b) s(e) f(t) m(w) m(o) i(o) m(v) m(er\015o) m(w) g
(bu\013ers.) 40 b(This) 30 b(slo) m(ws) h(do) m(wn) g(program) f
(execution) i(since) f(the) g(library) f(m) m(ust) g(c) m(hec) m(k) p
90 rotate dyy eop
%%Page: 109 115
109 114 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(109) 94 365 y(an) 37 b(additional) g(o) m(v) m(er\015o) m(w) h
(bu\013er,) g(and) e(also) h(means) g(that) g(the) g(program) f(w) m
(ould) g(ha) m(v) m(e) i(to) f(read) g(six) f(b) m(ytes) 94
465 y(b) s(ey) m(ond) 30 b(the) h(end) e(of) i(the) g(allo) s(cation) h
(b) s(efore) e(the) h(illegal) h(memory) f(access) g(w) m(ould) f(b) s
(e) g(detected.) p Fn 94 717 a(16.4) 69 b(Using) 45 b(o) l(v) l
(er\015o) l(w) i(bu\013ers) p Fo 219 898 a(This) h(example) h
(illustrates) h(the) f(use) g(of) g(o) m(v) m(er\015o) m(w) h
(bu\013ers) d(and) i(so) g(the) p Fl 49 w(MPATROL_OPTIONS) p
Fo 44 w(en) m(vi-) 94 998 y(ronmen) m(t) 54 b(v) -5 b(ariable) 55
b(should) e(ha) m(v) m(e) i(`) p Fl(OFLOWSIZE=2) p Fo(') d(and) h(`) p
Fl(CHECK=-) p Fo(') g(added) g(to) i(it.) 112 b(Ho) m(w) m(ev) m(er,) 62
b(turn) 94 1098 y(o\013) e(an) m(y) f(`) p Fl(PAGEALLOC) p
Fo(') e(options) i(for) g(the) g(purp) s(oses) e(of) j(this) e
(example.) 128 b(The) 58 b(test) i(is) f(lo) s(cated) h(in) 94
1197 y(`) p Fl(tests/fail/test5.c) p Fo(',) 27 b(and) i(`) p
Fl(tests/fail/test6.c) p Fo(') d(is) 31 b(v) m(ery) f(similar.) p
Fl 334 1324 a(23) 95 b(/*) 334 1428 y(24) 143 b(*) 48
b(Allocates) d(a) i(block) g(of) g(16) g(bytes) f(and) h(then) g
(copies) f(a) h(string) g(of) g(16) 334 1532 y(25) 143
b(*) 48 b(bytes) e(into) h(the) f(block.) 94 b(However,) 46
b(the) h(string) f(is) h(copied) f(to) h(1) h(byte) 334
1636 y(26) 143 b(*) 48 b(before) e(the) h(allocated) e(block) h(which) h
(writes) f(before) g(the) h(start) f(of) h(the) 334 1739
y(27) 143 b(*) 48 b(block.) 93 b(This) 47 b(test) g(must) f(be) h(run) g
(with) g(an) g(OFLOWSIZE) e(greater) h(than) h(0.) 334
1843 y(28) 143 b(*/) 334 2154 y(31) 95 b(#include) 46
b("mpatrol.h") 334 2466 y(34) 95 b(int) 47 b(main\(void\)) 334
2570 y(35) 95 b({) 334 2673 y(36) 286 b(char) 47 b(*p;) 334
2881 y(38) 286 b(if) 47 b(\(p) h(=) f(\(char) f(*\)) i(malloc\(16\)\))
334 2985 y(39) 286 b({) 334 3088 y(40) 477 b(strcpy\(p) 46
b(-) h(1,) g("this) g(test) f(fails!"\);) 334 3192 y(41) 477
b(free\(p\);) 334 3296 y(42) 286 b(}) 334 3400 y(43) g(return) 46
b(EXIT_SUCCESS;) 334 3504 y(44) 95 b(}) p Fo 219 3626
a(The) 30 b(follo) m(wing) i(error) e(should) f(b) s(e) h(pro) s(duced)
f(in) h(`) p Fl(mpatrol.log) p Fo('.) p Fl 334 3753 a(ERROR:) 47
b([ALLOVF]:) e(allocation) g(0x08062FB8) g(has) i(a) g(corrupted) e
(overflow) h(buffer) g(at) 1146 3857 y(0x08062FB7) 716
3961 y(0x08062FB6) 93 b(AA74) 1574 b(.t) 525 4169 y(0x08062FB8) 45
b(\(16) i(bytes\)) f({malloc:52:0}) f([main|test5.c|38]) 716
4272 y(0x0804942F) g(main+31) 716 4376 y(0x4007C9CB) g
(__libc_start_main+255) 716 4480 y(0x08049381) g(_start+33) p
Fo 219 4603 a(Once) 37 b(again,) j(the) d(library) g(attempts) h(to) f
(sho) m(w) g(y) m(ou) g(as) h(m) m(uc) m(h) f(detail) h(as) f(p) s
(ossible) g(ab) s(out) f(where) h(the) 94 4702 y(corruption) c(o) s
(ccurred.) 47 b(Along) 33 b(with) g(sho) m(wing) f(y) m(ou) h(a) g
(memory) g(dump) e(of) i(the) g(o) m(v) m(er\015o) m(w) h(bu\013er) d
(that) j(w) m(as) 94 4802 y(corrupted,) c(it) h(also) h(sho) m(ws) e(y)
m(ou) g(the) h(allo) s(cation) i(to) e(whic) m(h) f(the) g(o) m(v) m
(er\015o) m(w) i(bu\013er) e(b) s(elongs.) 219 4925 y(Using) i(o) m(v) m
(er\015o) m(w) g(bu\013ers) e(and) h(the) h(`) p Fl(CHECK=-) p
Fo(') e(option) h(can) h(reduce) f(the) h(sp) s(eed) e(of) i(program) f
(execution) 94 5024 y(since) c(the) f(library) g(has) f(to) i(c) m(hec)
m(k) h(ev) m(ery) e(bu\013er) f(whenev) m(er) h(it) h(is) f(called,) i
(and) d(if) h(the) g(bu\013ers) f(are) i(larger) f(then) 94
5124 y(they'll) 36 b(tak) m(e) g(longer) g(to) f(c) m(hec) m(k) h(and) f
(will) g(use) f(up) g(more) h(memory) -8 b(.) 54 b(Ho) m(w) m(ev) m
(er,) 38 b(larger) d(bu\013ers) f(mean) g(that) 94 5224
y(there) d(is) f(less) h(c) m(hance) h(of) e(the) h(program) f(writing)
g(past) h(one) f(memory) h(allo) s(cation) h(in) m(to) g(another.) 219
5347 y(Alternativ) m(ely) -8 b(,) 34 b(the) e(`) p Fl(CHECK) p
Fo(') e(option) h(can) h(b) s(e) e(used) g(to) i(limit) g(the) f(n) m
(um) m(b) s(er) f(of) h(c) m(hec) m(ks) h(that) g(the) f(library) 94
5446 y(has) d(to) h(p) s(erform,) f(th) m(us) g(sp) s(eeding) f(up) h
(program) g(execution.) 41 b(This) 27 b(option) i(sp) s(eci\014es) f(a)
h(range) f(of) h(allo) s(cation) 94 5546 y(indices) 37
b(through) e(whic) m(h) h(the) h(library) f(will) g(c) m(hec) m(k) i(o)
m(v) m(er\015o) m(w) g(bu\013ers) d(and) h(free) g(memory) g(for) g
(corruption.) 94 5645 y(Suc) m(h) 43 b(c) m(hec) m(ks) h(o) s(ccur) e
(when) g(they) h(normally) g(w) m(ould,) j(but) c(only) h(if) g(the) f
(curren) m(t) h(allo) s(cation) i(index) d(falls) p 90 rotate
dyy eop
%%Page: 110 116
110 115 bop Fo 94 -116 a(110) 3332 b(mpatrol) 94 365
y(within) 28 b(the) g(sp) s(eci\014ed) f(range.) 40 b(This) 27
b(feature) h(can) g(b) s(e) f(used) g(when) g(there) h(is) f(a) i
(suspicion) e(that) h(free) g(memory) 94 465 y(corruption) d(or) h(o) m
(v) m(er\015o) m(w) g(bu\013er) f(corruption) g(o) s(ccurs) g(at) h(a) f
(certain) h(p) s(oin) m(t) g(during) e(program) h(execution,) j(but) 94
565 y(c) m(hec) m(king) 39 b(them) d(at) h(ev) m(ery) g(library) f
(call) i(w) m(ould) e(tak) m(e) i(to) s(o) f(long.) 60
b(Y) -8 b(ou) 36 b(can) h(also) h(sp) s(ecify) e(a) g(frequency) g(at)
94 664 y(whic) m(h) 28 b(to) g(c) m(hec) m(k) h(the) f(heap) g(using) f
(the) h(`) p Fl(CHECK) p Fo(') e(option.) 41 b(This) 27
b(can) g(b) s(e) g(used) g(when) g(attempting) i(to) f(narro) m(w) 94
764 y(do) m(wn) i(the) h(searc) m(h) g(for) f(where) g(heap) g
(corruption) g(o) s(ccurs.) 219 896 y(On) 22 b(systems) g(whic) m(h) g
(supp) s(ort) f(soft) m(w) m(are) j(w) m(atc) m(h) f(p) s(oin) m(ts,) h
(there) f(is) f(an) h(extra) g(option) g(called) g(`) p
Fl(OFLOWWATCH) p Fo(') 94 996 y(whic) m(h) 40 b(allo) m(ws) h
(additional) g(memory) f(protection.) 70 b(W) -8 b(atc) m(h) 42
b(p) s(oin) m(ts) e(allo) m(w) h(individual) f(b) m(ytes) g(to) h(b) s
(e) e(read) 94 1095 y(and/or) i(write) f(protected) h(as) g(opp) s
(osed) e(to) i(just) f(pages.) 71 b(The) 40 b(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(installs) f(soft) m(w) m(are) 94 1195
y(w) m(atc) m(h) d(p) s(oin) m(ts) e(at) g(ev) m(ery) h(o) m(v) m
(er\015o) m(w) h(bu\013er) d(instead) h(of) g(requiring) f(the) i
(library) e(to) i(c) m(hec) m(k) h(the) e(in) m(tegrit) m(y) i(of) 94
1295 y(the) 24 b(o) m(v) m(er\015o) m(w) h(bu\013ers,) f(and) e(can) i
(b) s(e) e(used) h(in) g(com) m(bination) i(with) e(`) p
Fl(PAGEALLOC) p Fo('.) 36 b(Ho) m(w) m(ev) m(er,) 27
b(soft) m(w) m(are) e(w) m(atc) m(h) 94 1394 y(p) s(oin) m(ts) h(slo) m
(w) h(do) m(wn) e(program) h(execution) h(to) g(a) f(cra) m(wl) h
(since) f(ev) m(ery) g(mac) m(hine) h(instruction) f(m) m(ust) g(b) s
(e) f(c) m(hec) m(k) m(ed) 94 1494 y(individually) 33
b(b) m(y) g(the) g(system) f(to) i(see) f(if) g(it) g(accesses) i(a) e
(w) m(atc) m(h) h(p) s(oin) m(t) f(area.) 49 b(Slo) m(wing) 33
b(the) g(program) f(do) m(wn) 94 1593 y(b) m(y) e(a) h(factor) g(of) f
(10,000) i(is) e(not) g(uncommon) f(on) h(some) h(systems) e(when) g
(the) i(`) p Fl(OFLOWWATCH) p Fo(') c(option) k(is) e(used.) p
Fn 94 1870 a(16.5) 69 b(Chec) l(king) 45 b(memory) h(accesses) p
Fo 219 2061 a(F) -8 b(or) 45 b(the) g(ultimate) g(in) f(heap) g(c) m
(hec) m(king,) 50 b(if) 45 b(y) m(ou) f(are) h(using) f(the) g(GNU) h
(compiler) g(y) m(ou) g(can) g(use) f(the) 94 2160 y(`) p
Fl(-fcheck-memory-usage) p Fo(') 19 b(option.) 39 b(This) 24
b(instructs) f(the) h(compiler) h(to) g(place) f(error-c) m(hec) m
(king) i(calls) f(b) s(efore) 94 2260 y(eac) m(h) 42
b(read) f(or) f(write) h(to) g(memory) -8 b(.) 72 b(The) 40
b(functions) g(that) h(are) g(called) h(then) e(c) m(hec) m(k) i(to) g
(ensure) e(that) h(the) 94 2359 y(memory) 31 b(access) g(do) s(es) f
(not) h(o) m(v) m(er\015o) m(w) h(a) f(heap) f(memory) g(allo) s
(cation) j(or) d(access) i(free) e(memory) -8 b(.) 219
2492 y(The) 26 b(follo) m(wing) h(test) g(\(whic) m(h) g(can) f(b) s(e)
g(found) f(in) g(`) p Fl(tests/fail/test17.c) p Fo('\)) d(has) k(an) g
(example) h(of) f(a) h(read) 94 2591 y(from) j(memory) h(whic) m(h) f
(o) m(v) m(er\015o) m(ws) h(a) g(memory) f(allo) s(cation's) j(b) s
(oundaries.) p Fl 334 2728 a(23) 95 b(/*) 334 2832 y(24) 143
b(*) 48 b(Allocates) d(a) i(single) f(byte) h(of) g(memory) f(and) h
(then) g(attempts) e(to) j(read) e(the) 334 2935 y(25) 143
b(*) 48 b(byte) e(as) h(a) h(word,) e(resulting) f(in) j(some) e
(uninitialised) e(bytes) j(being) f(read.) 334 3039 y(26) 143
b(*) 48 b(This) e(can) h(sometimes) e(be) j(detected) d(with) i
(PAGEALLOC=UPPER) c(but) k(can) g(always) 334 3143 y(27) 143
b(*) 48 b(be) f(detected) e(with) i(OFLOWWATCH) e(or) i(by) g(using) g
(the) g(-fcheck-memory-usage) 334 3247 y(28) 143 b(*) 48
b(option) e(of) h(gcc.) 334 3350 y(29) 143 b(*/) 334
3662 y(32) 95 b(#include) 46 b("mpatrol.h") 334 3973
y(35) 95 b(int) 47 b(main\(void\)) 334 4077 y(36) 95
b({) 334 4181 y(37) 286 b(int) 47 b(*p;) 334 4284 y(38) 286
b(int) 47 b(r;) 334 4492 y(40) 286 b(if) 47 b(\(p) h(=) f(\(int) g(*\))
g(calloc\(1,) e(1\)\)) 334 4596 y(41) 286 b({) 334 4700
y(42) 477 b(r) 48 b(=) f(p[0];) 334 4803 y(43) 477 b(free\(p\);) 334
4907 y(44) 286 b(}) 334 5011 y(45) g(return) 46 b(EXIT_SUCCESS;) 334
5115 y(46) 95 b(}) p Fo 219 5247 a(F) -8 b(or) 104 b(this) g(example,)
122 b(the) 104 b(ab) s(o) m(v) m(e) h(test) f(m) m(ust) f(b) s(e) g
(compiled) h(with) p Fl 103 w(gcc) p Fo 103 w(with) f(the) 94
5347 y(`) p Fl(-fcheck-memory-usage) p Fo(') 70 b(option) 76
b(on) f(the) g(compiler) g(command) g(line) g(and) g(link) m(ed) g
(with) g(the) 94 5446 y(mpatrol) 38 b(library) -8 b(.) 63
b(Normally) -8 b(,) 40 b(the) e(test) h(will) e(pass) h(and) f(not) g
(cause) h(an) m(y) g(problems,) h(since) f(most) g(mallo) s(c) 94
5546 y(libraries) 33 b(will) f(allo) s(cate) j(at) e(least) h(one) e(w)
m(ord) g(an) m(yw) m(a) m(y) -8 b(.) 48 b(Ho) m(w) m(ev) m(er,) 35
b(there) e(are) f(some) h(instances) g(where) e(that) 94
5645 y(will) k(not) g(b) s(e) f(the) h(case,) h(esp) s(ecially) g(on) e
(systems) h(where) f(misaligned) h(memory) f(accesses) i(are) f(legal.)
55 b(Also,) p 90 rotate dyy eop
%%Page: 111 117
111 116 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(111) 94 365 y(if) 46 b(the) f(implemen) m(tation) h(of) p
Fl 46 w(calloc\(\)) p Fo 43 w(only) f(initialised) h(the) f(n) m(um) m
(b) s(er) f(of) h(b) m(ytes) h(requested) f(then) g(the) 94
465 y(n) m(um) m(b) s(er) 30 b(read) g(bac) m(k) h(migh) m(t) g(not) g
(b) s(e) e(zero.) 219 604 y(If) i(y) m(ou) g(no) m(w) h(run) d(the) j
(program) f(it) h(should) e(ab) s(ort) h(and) g(pro) s(duce) f
(something) h(similar) h(to) g(the) f(follo) m(wing) 94
703 y(in) g(the) f(resulting) h(`) p Fl(mpatrol.log) p
Fo('.) p Fl 334 846 a(ERROR:) 47 b([RNGOVF]:) e(range) h
([0x00022568,0x0002256B]) c(overflows) 1146 950 y
([0x00022568,0x00022568]) 525 1054 y(0x00022568) j(\(1) j(byte\)) e
({calloc:19:0}) e([main|test17.c|40]) 716 1158 y(0x00010A0C) h(main+96)
716 1261 y(0x0001087C) g(_start+100) p Fo 219 1400 a(As) 33
b(y) m(ou) g(can) g(see,) h(the) f(mpatrol) g(library) f(detected) i(a)
g(read) e(b) s(ey) m(ond) g(the) h(b) s(oundaries) e(of) i(the) g(one) g
(b) m(yte) 94 1500 y(memory) e(allo) s(cation) h(starting) g(at) f(`) p
Fl(0x00022568) p Fo('.) p Fn 94 1793 a(16.6) 69 b(Bad) 44
b(memory) i(op) t(erations) p Fo 219 1990 a(In) 23 b(C) f(there) i(are)
f(sev) m(eral) i(basic) f(memory) f(op) s(eration) g(functions) g(that)
h(are) g(often) f(called) i(to) f(p) s(erform) e(tasks) 94
2089 y(suc) m(h) 43 b(as) h(clearing) h(memory) -8 b(,) 47
b(cop) m(ying) d(memory) -8 b(,) 47 b(etc.) 81 b(The) 43
b(mpatrol) g(library) g(con) m(tains) i(replacemen) m(ts) 94
2189 y(for) d(these) f(whic) m(h) g(allo) m(w) i(for) e(b) s(etter) g
(c) m(hec) m(king) j(of) d(their) g(argumen) m(ts) h(to) g(prev) m(en) m
(t) g(reading) f(and) g(writing) 94 2288 y(past) k(the) g(b) s
(oundaries) e(of) i(existing) g(memory) g(allo) s(cations.) 85
b(The) 44 b(follo) m(wing) i(source) f(can) g(b) s(e) f(found) f(in) 94
2388 y(`) p Fl(tests/fail/test9.c) p Fo('.) p Fl 334
2531 a(23) 95 b(/*) 334 2635 y(24) 143 b(*) 48 b(Allocates) d(a) i
(block) g(of) g(16) g(bytes) f(and) h(then) g(attempts) e(to) j(zero) e
(the) h(contents) f(of) 334 2739 y(25) 143 b(*) 48 b(the) e(block.) 94
b(However,) 46 b(a) h(zero) g(byte) g(is) g(also) f(written) g(1) i
(byte) e(before) g(and) h(1) 334 2842 y(26) 143 b(*) 48
b(byte) e(after) h(the) f(allocated) g(block,) g(resulting) f(in) i(an)
g(error) g(in) g(the) g(log) g(file.) 334 2946 y(27) 143
b(*/) 334 3257 y(30) 95 b(#include) 46 b("mpatrol.h") 334
3569 y(33) 95 b(int) 47 b(main\(void\)) 334 3673 y(34) 95
b({) 334 3776 y(35) 286 b(char) 47 b(*p;) 334 3984 y(37) 286
b(if) 47 b(\(p) h(=) f(\(char) f(*\)) i(malloc\(16\)\)) 334
4088 y(38) 286 b({) 334 4191 y(39) 477 b(memset\(p) 46
b(-) h(1,) g(0,) h(18\);) 334 4295 y(40) 477 b(free\(p\);) 334
4399 y(41) 286 b(}) 334 4503 y(42) g(return) 46 b(EXIT_SUCCESS;) 334
4607 y(43) 95 b(}) p Fo 219 4745 a(When) 30 b(this) g(is) h(compiled) g
(and) e(run,) h(the) g(follo) m(wing) i(should) d(app) s(ear) h(in) g
(the) h(log) g(\014le.) p Fl 334 4888 a(ERROR:) 47 b([RNGOVF]:) e
(memset:) h(range) g([0x08062FB7,0x08062FC8]) 41 b(overflows) 1146
4992 y([0x08062FB8,0x08062FC7]) 525 5096 y(0x08062FB8) k(\(16) i
(bytes\)) f({malloc:52:0}) f([main|test9.c|37]) 716 5200
y(0x0804942F) g(main+31) 716 5303 y(0x4007C9CB) g
(__libc_start_main+255) 716 5407 y(0x08049381) g(_start+33) p
Fo 219 5546 a(As) 27 b(y) m(ou) h(can) g(see,) g(the) g(library) f
(detected) i(that) f(the) p Fl 27 w(memset\(\)) p Fo
25 w(function) f(w) m(ould) g(ha) m(v) m(e) i(written) e(past) h(the) 94
5645 y(b) s(oundaries) i(of) h(the) g(memory) f(allo) s(cation) j(and) e
(rep) s(orted) f(this) g(to) i(y) m(ou.) 42 b(It) 31
b(then) f(pro) s(ceeded) h(to) g(ignore) h(the) p 90 rotate
dyy eop
%%Page: 112 118
112 117 bop Fo 94 -116 a(112) 3332 b(mpatrol) 94 365
y(request) 32 b(to) f(cop) m(y) h(the) f(memory) g(and) f(con) m(tin) m
(ued) i(with) f(the) g(execution) h(of) f(the) h(program) p
Fh 3205 332 a(2) p Fo 3242 365 a(.) 42 b(Note) 32 b(that) g(this) 94
465 y(will) j(only) g(b) s(e) f(done) g(for) g(kno) m(wn) g(memory) h
(allo) s(cations.) 55 b(Reading) 35 b(and) f(writing) g(past) h(the) g
(b) s(oundaries) e(of) 94 565 y(static) f(and) e(stac) m(k) i(memory) e
(allo) s(cations) j(cannot) e(b) s(e) f(detected) h(in) f(this) h(w) m
(a) m(y) -8 b(.) 219 691 y(If) 39 b(the) h(`) p Fl(LOGMEMORY) p
Fo(') d(option) j(is) g(added) f(to) h(the) p Fl 39 w(MPATROL_OPTIONS) p
Fo 36 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 40 b(then) f(it) 94
791 y(is) 34 b(p) s(ossible) g(to) g(see) h(a) f(log) h(of) f(all) h
(the) f(mpatrol) g(library) f(memory) h(op) s(eration) h(functions) e
(that) h(w) m(ere) h(called) 94 890 y(during) j(program) h(execution.)
67 b(F) -8 b(or) 39 b(example,) j(adding) c(this) h(option) g(and) f
(running) f(the) i(ab) s(o) m(v) m(e) h(program) 94 990
y(again) 32 b(will) f(pro) s(duce) e(something) i(similar) f(to) i(the)
e(follo) m(wing.) p Fl 334 1121 a(MEMSET:) 46 b(memset) g
(\(0x08062FB7,) f(18) i(bytes,) f(0x00\)) g([main|test9.c|39]) 716
1224 y(0x0804945B) f(main+75) 716 1328 y(0x4007C9CB) g
(__libc_start_main+255) 716 1432 y(0x08049381) g(_start+33) p
Fo 219 1559 a(This) c(is) h(similar) g(to) h(the) f(tracing) g(pro) s
(duced) f(for) g(memory) h(allo) s(cation) i(functions,) h(except) d
(that) h(the) 94 1658 y(argumen) m(ts) 29 b(in) e(paren) m(theses) h
(mean) g(di\013eren) m(t) g(things.) 40 b(F) -8 b(or) 28
b(`) p Fl(MEMSET) p Fo(',) g(the) g(\014rst) f(argumen) m(t) h
(represen) m(ts) g(the) 94 1758 y(start) 37 b(of) g(the) f(memory) g
(blo) s(c) m(k) h(to) g(set,) h(the) f(second) f(argumen) m(t) h
(represen) m(ts) f(the) g(n) m(um) m(b) s(er) f(of) i(b) m(ytes) f(to) h
(set) 94 1858 y(and) 30 b(the) h(third) e(argumen) m(t) i(represen) m
(ts) f(the) h(actual) h(b) m(yte) f(to) g(set.) 219 1984
y(F) -8 b(or) 31 b(`) p Fl(MEMCOPY) p Fo(',) d(the) j(\014rst) e
(argumen) m(t) h(represen) m(ts) g(the) g(source) g(memory) g(blo) s(c)
m(k,) g(the) h(second) f(argumen) m(t) 94 2084 y(represen) m(ts) f(the)
g(destination) h(memory) e(blo) s(c) m(k,) i(the) f(third) f(argumen) m
(t) h(represen) m(ts) g(the) g(n) m(um) m(b) s(er) e(of) i(b) m(ytes) g
(to) 94 2183 y(cop) m(y) e(and) f(the) g(fourth) f(argumen) m(t) i
(represen) m(ts) f(a) g(b) m(yte) h(to) g(cop) m(y) g(up) e(to) i(if) p
Fl 26 w(memccpy\(\)) p Fo 23 w(is) g(b) s(eing) e(called.) 41
b(This) 94 2283 y(is) 31 b(similar) g(for) f(`) p Fl(MEMCMP) p
Fo('.) 219 2410 y(F) -8 b(or) 39 b(`) p Fl(MEMFIND) p
Fo(',) g(the) f(\014rst) f(and) h(second) g(argumen) m(ts) h(represen) m
(t) f(the) g(source) g(memory) g(blo) s(c) m(k) h(and) f(its) 94
2509 y(length,) 33 b(while) f(the) g(third) f(and) g(fourth) g(argumen)
m(ts) h(represen) m(t) f(the) h(memory) g(blo) s(c) m(k) g(to) h(searc)
m(h) f(for) f(and) h(its) 94 2609 y(length.) 40 b(In) 25
b(the) h(implemen) m(tation) i(for) p Fl 25 w(memchr\(\)) p
Fo(,) d(the) h(b) m(yte) g(to) h(searc) m(h) f(for) g(is) g(copied) g
(to) g(a) g(one) h(b) m(yte) f(bu\013er) 94 2708 y(and) k(the) h
(address) e(of) i(that) g(bu\013er) e(is) i(used) e(as) i(the) f
(memory) h(blo) s(c) m(k) g(to) g(searc) m(h) g(for.) 219
2835 y(Note) 47 b(that) g(as) f(with) g(the) g(memory) g(allo) s
(cation) j(functions,) g(`) p Fl(MEMCMP) p Fo(',) g(`) p
Fl(MEMFIND) p Fo(',) g(`) p Fl(MEMCOPY) p Fo(') c(and) 94
2935 y(`) p Fl(MEMSET) p Fo(') 39 b(are) h(used) f(to) h(generalise) h
(the) f(t) m(yp) s(es) f(of) h(op) s(erations) g(b) s(eing) f(p) s
(erformed) f(and) h(are) h(follo) m(w) m(ed) h(b) m(y) 94
3034 y(the) 34 b(names) g(of) f(the) h(actual) h(functions) e(b) s
(eing) g(used.) 49 b(In) 33 b(some) g(cases) i(the) e(functions) g(ma) m
(y) h(use) g(a) f(di\013eren) m(t) 94 3134 y(ordering) e(of) f
(parameters) h(than) f(that) h(sho) m(wn.) p Fn 94 3396
a(16.7) 69 b(Incompatible) 46 b(function) f(calls) p
Fo 219 3581 a(This) j(example) h(illustrates) h(ho) m(w) e(the) h
(mpatrol) g(library) f(c) m(hec) m(ks) i(for) f(calls) g(to) h
(incompatible) f(pairs) 94 3681 y(of) k(memory) g(allo) s(cation) i
(functions.) 107 b(It) 53 b(requires) f(the) h(use) f(of) h(C) p
Fl(++) p Fo(,) 58 b(although) 53 b(do) s(es) f(not) h(use) g(an) m(y) 94
3780 y(C) p Fl(++) p Fo 42 w(features) 42 b(except) i(for) e(o) m(v) m
(erloaded) i(op) s(erators.) 76 b(The) 42 b(source) g(is) h(in) f(`) p
Fl(tests/fail/test7.c) p Fo(',) f(and) 94 3880 y(`) p
Fl(tests/fail/test8.c) p Fo(') 26 b(is) 31 b(similar.) p
Fl 334 4011 a(23) 95 b(/*) 334 4114 y(24) 143 b(*) 48
b(Allocates) d(a) i(block) g(of) g(16) g(bytes) f(using) h(C++) g
(operator) e(new[]) i(and) f(then) 334 4218 y(25) 143
b(*) 48 b(attempts) d(to) i(free) g(it) g(using) f(C++) h(operator) f
(delete.) 334 4322 y(26) 143 b(*/) 334 4633 y(29) 95
b(#include) 46 b("mpatrol.h") 334 4945 y(32) 95 b(int) 47
b(main\(void\)) 334 5048 y(33) 95 b({) 334 5152 y(34) 286
b(char) 47 b(*p;) 334 5360 y(36) 286 b(p) 48 b(=) f(new) g(char[16];) p
94 5462 1200 4 v Fh 143 5522 a(2) p Fg 219 5554 a(The) 29
b(error) g(can) f(b) r(e) g(turned) g(in) n(to) g(a) h(w) n(arning) g
(with) f(the) g(`) p Ff(ALLOWOFLOW) p Fg(') k(option) c(whic) n(h) h
(will) g(also) h(force) f(the) f(op) r(eration) i(to) 219
5645 y(b) r(e) c(p) r(erformed.) p 90 rotate dyy eop
%%Page: 113 119
113 118 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(113) p Fl 334 365 a(37) 286 b(delete) 46 b(p;) 334
469 y(38) 286 b(return) 46 b(EXIT_SUCCESS;) 334 573 y(39) 95
b(}) p Fo 219 695 a(The) 30 b(relev) -5 b(an) m(t) 32
b(parts) e(of) g(`) p Fl(mpatrol.log) p Fo(') e(are) j(sho) m(wn) f(b) s
(elo) m(w.) p Fl 334 821 a(ALLOC:) 47 b(operator) e(new[]) h(\(74,) h
(16) g(bytes,) f(4) i(bytes\)) e([int) h(main\(\)|test7.c|36]) 716
925 y(0x0804955D) e(main+13) 716 1029 y(0x400DB9CB) g
(__libc_start_main+255) 716 1133 y(0x080494C1) g(_start+33) 334
1340 y(returns) h(0x08062FC0) 334 1548 y(FREE:) h(operator) e(delete) h
(\(0x08062FC0\)) f([int) i(main\(\)|test7.c|37]) 716
1652 y(0x0804956E) e(main+30) 716 1755 y(0x400DB9CB) g
(__libc_start_main+255) 716 1859 y(0x080494C1) g(_start+33) 334
2067 y(ERROR:) i([INCOMP]:) e(operator) g(delete:) h(0x08062FC0) f(was)
i(allocated) e(with) i(operator) f(new[]) 525 2171 y(0x08062FC0) f
(\(16) i(bytes\)) f({operator) g(new[]:74:0}) e([int) j
(main\(\)|test7.c|36]) 716 2274 y(0x0804955D) e(main+13) 716
2378 y(0x400DB9CB) g(__libc_start_main+255) 716 2482
y(0x080494C1) g(_start+33) p Fo 219 2604 a(This) 32 b(sho) m(ws) g(a) h
(call) h(to) p Fl 33 w(operator) 28 b(new[]) p Fo(,) k(closely) i
(follo) m(w) m(ed) h(b) m(y) d(a) h(call) h(to) p Fl
33 w(operator) 28 b(delete) p Fo(.) 46 b(Ho) m(w-) 94
2704 y(ev) m(er,) 31 b(in) e(C) p Fl(++) p Fo 28 w(calls) h(to) p
Fl 30 w(operator) e(new[]) p Fo 28 w(m) m(ust) h(b) s(e) f(matc) m(hed)
i(b) m(y) f(calls) h(to) p Fl 30 w(operator) e(delete[]) p
Fo 27 w(and) h(not) p Fl 94 2803 a(operator) g(delete) p
Fo(.) 61 b(Hence,) 41 b(the) d(library) g(rep) s(orts) f(this) h(as) g
(an) f(error) h(and) f(do) s(es) h(not) g(free) g(the) g(memory) 94
2903 y(allo) s(cation.) p Fn 94 3153 a(16.8) 69 b(The) p
Fb 44 w(alloca\(\)) p Fn 41 w(functions) p Fo 219 3334
a(There) 22 b(are) h(t) m(w) m(o) i(examples) e(of) g(using) p
Fl 22 w(alloca\(\)) p Fo 21 w(and) f(its) h(related) h(functions) e(in)
g(`) p Fl(tests/pass/test8.c) p Fo(') 94 3433 y(and) 39
b(`) p Fl(tests/fail/test16.c) p Fo('.) 62 b(Both) 39
b(rely) g(on) g(mpatrol) h(ha) m(ving) f(full) g(call) h(stac) m(k) h
(tracebac) m(k) f(supp) s(ort,) 94 3533 y(although) 31
b(they) g(will) g(w) m(ork) f(\(alb) s(eit) h(with) f(sligh) m(tly) i
(di\013eren) m(t) f(results\)) g(on) f(systems) g(that) h(do) f(not.)
219 3655 y(The) 25 b(\014rst) f(test) i(simply) e(illustrates) i(the) f
(use) g(of) p Fl 25 w(alloca\(\)) p Fo 23 w(and) f(ho) m(w) h(its) h
(memory) f(allo) s(cations) i(are) e(freed) 94 3755 y(when) 30
b(they) g(are) h(no) f(longer) h(in) f(use.) p Fl 382
3881 a(23) 95 b(/*) 382 3985 y(24) 143 b(*) 47 b(Tests) g(alloca\(\)) e
(and) i(related) f(functions) f(via) i(nested) f(function) g(calls.) 382
4089 y(25) 143 b(*) 47 b(The) g(final) g(output) f(should) g(be) h(a) g
(horizontal) e(pyramid) h(of) h(plus) g(signs) 382 4193
y(26) 143 b(*) 47 b(followed) f(by) h(a) g(horizontal) e(pyramid) h(of)
h(minus) g(signs.) 382 4296 y(27) 143 b(*/) 382 4608
y(30) 95 b(#include) 46 b("mpatrol.h") 382 4711 y(31) 95
b(#include) 46 b(<stdio.h>) 382 5023 y(34) 95 b(char) 47
b(*f1\(char) e(*s\)) 382 5127 y(35) 95 b({) 382 5230
y(36) 286 b(char) 47 b(*t;) 382 5334 y(37) 286 b(size_t) 46
b(l;) 382 5542 y(39) 286 b(l) 47 b(=) h(strlen\(s\)) d(+) j(1;) 382
5645 y(40) 286 b(if) 47 b(\(\(t) g(=) h(\(char) e(*\)) h(alloca\(l) f
(+) h(1\)\)) g(==) g(NULL\)) p 90 rotate dyy eop
%%Page: 114 120
114 119 bop Fo 94 -116 a(114) 3332 b(mpatrol) p Fl 382
365 a(41) 477 b(return) 46 b(NULL;) 382 469 y(42) 286
b(memcpy\(t,) 45 b(s,) i(l\);) 382 573 y(43) 286 b(t[l) 47
b(-) g(1]) h(=) f(t[l) g(-) g(2];) 382 677 y(44) 286
b(t[l]) 47 b(=) g('\\0';) 382 780 y(45) 286 b(return) 46
b(strdup\(t\);) 382 884 y(46) 95 b(}) 382 1196 y(49) g(char) 47
b(*f2\(char) e(*s\)) 382 1299 y(50) 95 b({) 382 1403
y(51) 286 b(char) 47 b(*t;) 382 1507 y(52) 286 b(size_t) 46
b(l;) 382 1714 y(54) 286 b(l) 47 b(=) h(strlen\(s\)) d(-) j(1;) 382
1818 y(55) 286 b(if) 47 b(\(\(t) g(=) h(\(char) e(*\)) h(alloca\(l) f
(+) h(1\)\)) g(==) g(NULL\)) 382 1922 y(56) 477 b(return) 46
b(NULL;) 382 2026 y(57) 286 b(memcpy\(t,) 45 b(s,) i(l) h(+) f(1\);) 382
2130 y(58) 286 b(t[l]) 47 b(=) g('\\0';) 382 2233 y(59) 286
b(return) 46 b(strdup\(t\);) 382 2337 y(60) 95 b(}) 382
2648 y(63) g(int) 47 b(f\(char) f(*s,) h(size_t) f(l\)) 382
2752 y(64) 95 b({) 382 2856 y(65) 286 b(char) 47 b(*t;) 382
2960 y(66) 286 b(size_t) 46 b(i;) 382 3167 y(68) 286
b(puts\(s\);) 382 3271 y(69) g(for) 47 b(\(i) g(=) h(0;) f(i) g(<) h
(l;) f(i++\)) 382 3375 y(70) 286 b({) 382 3479 y(71) 477
b(if) 47 b(\(\(\(t) g(=) g(f1\(s\)\)) f(==) h(NULL\)) g(||) 382
3582 y(72) 668 b(\(\(s) 47 b(=) g(\(char) g(*\)) g(alloca\(strlen\(t\))
c(+) 48 b(1\)\)) e(==) i(NULL\)\)) 382 3686 y(73) 668
b(return) 46 b(0;) 382 3790 y(74) 477 b(strcpy\(s,) 45
b(t\);) 382 3894 y(75) 477 b(free\(t\);) 382 3998 y(76) g(puts\(s\);)
382 4101 y(77) 286 b(}) 382 4205 y(78) g(for) 47 b(\(i) g(=) h(0;) f(i)
g(<) h(l;) f(i++\)) 382 4309 y(79) 286 b({) 382 4413
y(80) 477 b(if) 47 b(\(\(\(t) g(=) g(f2\(s\)\)) f(==) h(NULL\)) g(||)
382 4516 y(81) 668 b(\(\(s) 47 b(=) g(\(char) g(*\)) g
(alloca\(strlen\(t\)) c(+) 48 b(1\)\)) e(==) i(NULL\)\)) 382
4620 y(82) 668 b(return) 46 b(0;) 382 4724 y(83) 477
b(strcpy\(s,) 45 b(t\);) 382 4828 y(84) 477 b(free\(t\);) 382
4932 y(85) g(puts\(s\);) 382 5035 y(86) 286 b(}) 382
5139 y(87) g(return) 46 b(1;) 382 5243 y(88) 95 b(}) 382
5554 y(91) g(int) 47 b(main\(void\)) p 90 rotate dyy
eop
%%Page: 115 121
115 120 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(115) p Fl 382 365 a(92) 95 b({) 382 469 y(93) 286 b(char) 47
b(*s;) 382 677 y(95) 286 b(s) 47 b(=) h(strdupa\("+"\);) 382
780 y(96) 286 b(if) 47 b(\(!f\(s,) f(4\)\)) 382 884 y(97) 477
b(exit\(EXIT_FAILURE\);) 382 988 y(98) 286 b(dealloca\(s\);) 382
1092 y(99) g(s) 47 b(=) h(strdupa\("-"\);) 334 1196 y(100) 286
b(if) 47 b(\(!f\(s,) f(4\)\)) 334 1299 y(101) 477 b
(exit\(EXIT_FAILURE\);) 334 1403 y(102) 286 b(dealloca\(s\);) 334
1507 y(103) g(return) 46 b(EXIT_SUCCESS;) 334 1611 y(104) 95
b(}) p Fo 219 1737 a(When) 30 b(compiled) h(and) f(run,) f(y) m(ou) i
(should) e(get) j(the) e(follo) m(wing) i(output.) p
Fl 334 1868 a(+) 334 1972 y(++) 334 2076 y(+++) 334 2179
y(++++) 334 2283 y(+++++) 334 2387 y(++++) 334 2491 y(+++) 334
2594 y(++) 334 2698 y(+) 334 2802 y(-) 334 2906 y(--) 334
3010 y(---) 334 3113 y(----) 334 3217 y(-----) 334 3321
y(----) 334 3425 y(---) 334 3528 y(--) 334 3632 y(-) p
Fo 219 3759 a(If) 52 b(y) m(ou) g(run) e(it) j(again,) 58
b(this) 52 b(time) h(with) f(the) p Fl 52 w(MPATROL_OPTIONS) p
Fo 47 w(en) m(vironmen) m(t) h(v) -5 b(ariable) 53 b(set) f(to) 94
3858 y(`) p Fl(LOGALLOCS) p Fo(') 24 b(and) g(`) p Fl(LOGFREES) p
Fo(',) h(y) m(ou) h(should) e(see) i(the) f(follo) m(wing) i(in) e(the)
g(newly-generated) i(`) p Fl(mpatrol.log) p Fo(') 94
3958 y(\014le.) 41 b(Note) 32 b(that) f(the) g(`) p Fl(...) p
Fo -1 w(') g(marks) e(text) j(that) f(has) f(b) s(een) g(remo) m(v) m
(ed.) p Fl 334 4089 a(ALLOC:) 47 b(strdupa) e(\(1,) i(2) h(bytes,) e(1)
h(byte\)) g([main|test8.c|95]) c(\(char) j(x) i(2\)) 716
4193 y(0x000138F0) d(main+52) 716 4296 y(0x00013350) g(_start+100) 334
4504 y(returns) h(0x0008C000) 334 4711 y(ALLOC:) h(alloca) f(\(2,) h(3)
g(bytes,) f(8) i(bytes\)) e([f1|test8.c|40]) 716 4815
y(0x000134CC) f(f1+76) 716 4919 y(0x000136D8) g(f+68) 716
5023 y(0x00013904) g(main+72) 716 5127 y(0x00013350) g(_start+100) 334
5334 y(returns) h(0x0008C008) 334 5542 y(ALLOC:) h(strdup) f(\(3,) h(3)
g(bytes,) f(1) i(byte\)) e([f1|test8.c|45]) e(\(char) i(x) h(3\)) 716
5645 y(0x00013584) e(f1+260) p 90 rotate dyy eop
%%Page: 116 122
116 121 bop Fo 94 -116 a(116) 3332 b(mpatrol) p Fl 716
365 a(0x000136D8) 45 b(f+68) 716 469 y(0x00013904) g(main+72) 716
573 y(0x00013350) g(_start+100) 334 780 y(returns) h(0x0008C002) 334
988 y(FREE:) h(alloca) f(\(0x0008C008\)) e([f|test8.c|72]) 716
1092 y(0x00013728) h(f+148) 716 1196 y(0x00013904) g(main+72) 716
1299 y(0x00013350) g(_start+100) 525 1507 y(0x0008C008) g(\(3) j
(bytes\)) e({alloca:2:0}) e([f1|test8.c|40]) 716 1611
y(0x000134CC) h(f1+76) 716 1714 y(0x000136D8) g(f+68) 716
1818 y(0x00013904) g(main+72) 716 1922 y(0x00013350) g(_start+100) 334
2130 y(ALLOC:) i(alloca) f(\(4,) h(3) g(bytes,) f(8) i(bytes\)) e
([f|test8.c|72]) 716 2233 y(0x00013728) f(f+148) 716
2337 y(0x00013904) g(main+72) 716 2441 y(0x00013350) g(_start+100) 334
2648 y(returns) h(0x0008C008) 334 2856 y(...) 334 3064
y(FREE:) h(alloca) f(\(0x0008C040\)) e([main|test8.c|102]) 716
3167 y(0x000139C8) h(main+268) 716 3271 y(0x00013350) g(_start+100) 525
3479 y(0x0008C040) g(\(2) j(bytes\)) e({alloca:50:0}) e([f|test8.c|81])
716 3582 y(0x00013828) h(f+404) 716 3686 y(0x00013988) g(main+204) 716
3790 y(0x00013350) g(_start+100) 334 3998 y(FREE:) i(alloca) f
(\(0x0008C038\)) e([main|test8.c|102]) 716 4101 y(0x000139C8) h
(main+268) 716 4205 y(0x00013350) g(_start+100) 525 4413
y(0x0008C038) g(\(3) j(bytes\)) e({alloca:47:0}) e([f|test8.c|81]) 716
4516 y(0x00013828) h(f+404) 716 4620 y(0x00013988) g(main+204) 716
4724 y(0x00013350) g(_start+100) 334 4932 y(...) 334
5139 y(FREE:) i(alloca) f(\(0x0008C010\)) e([main|test8.c|102]) 716
5243 y(0x000139C8) h(main+268) 716 5347 y(0x00013350) g(_start+100) 525
5554 y(0x0008C010) g(\(4) j(bytes\)) e({alloca:32:0}) e([f|test8.c|72])
p 90 rotate dyy eop
%%Page: 117 123
117 122 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(117) p Fl 716 365 a(0x00013728) 45 b(f+148) 716 469
y(0x00013988) g(main+204) 716 573 y(0x00013350) g(_start+100) 334
780 y(FREE:) i(alloca) f(\(0x0008C008\)) e([main|test8.c|102]) 716
884 y(0x000139C8) h(main+268) 716 988 y(0x00013350) g(_start+100) 525
1196 y(0x0008C008) g(\(3) j(bytes\)) e({alloca:29:0}) e([f|test8.c|72])
716 1299 y(0x00013728) h(f+148) 716 1403 y(0x00013988) g(main+204) 716
1507 y(0x00013350) g(_start+100) 334 1714 y(FREE:) i(dealloca) e
(\(0x0008C000\)) g([main|test8.c|102]) 716 1818 y(0x000139C8) g
(main+268) 716 1922 y(0x00013350) g(_start+100) 525 2130
y(0x0008C000) g(\(2) j(bytes\)) e({strdupa:26:0}) e([main|test8.c|99]) f
(\(char) j(x) h(2\)) 716 2233 y(0x00013974) e(main+184) 716
2337 y(0x00013350) g(_start+100) p Fo 219 2477 a(After) 30
b(the) f(\014rst) g(call) h(to) p Fl 30 w(strdupa\(\)) p
Fo(,) e(there) h(is) h(a) f(call) i(to) p Fl 30 w(alloca\(\)) p
Fo 27 w(follo) m(w) m(ed) g(b) m(y) e(a) h(call) h(to) p
Fl 30 w(strdup\(\)) p Fo(.) 94 2577 y(Because) f(the) f(memory) f(allo)
s(cation) j(made) d(b) m(y) p Fl 28 w(strdupa\(\)) p
Fo 26 w(is) h(at) g(the) f(top) h(lev) m(el) h(of) f(the) f(program) g
(it) h(cannot) 94 2676 y(automatically) k(b) s(e) c(freed) h(un) m(til)
p Fl 30 w(main\(\)) p Fo 28 w(returns.) 39 b(Ho) m(w) m(ev) m(er,) 32
b(at) f(the) f(next) g(call) h(to) p Fl 30 w(alloca\(\)) p
Fo 28 w(in) p Fl 29 w(f\(\)) p Fo(,) f(the) 94 2776 y(mpatrol) 38
b(library) f(notices) i(that) f(the) f(memory) h(allo) s(cation) h
(that) g(w) m(as) e(made) h(b) m(y) p Fl 37 w(alloca\(\)) p
Fo 35 w(in) p Fl 37 w(f1\(\)) p Fo 37 w(can) 94 2876
y(b) s(e) 32 b(freed) f(since) p Fl 32 w(f1\(\)) p Fo
31 w(has) h(returned.) 44 b(The) 31 b(relev) -5 b(an) m(t) 33
b(allo) s(cation) h(is) e(then) g(freed) f(b) s(efore) h(making) g(the)
g(next) 94 2975 y(memory) k(allo) s(cation.) 59 b(Y) -8
b(ou) 36 b(can) g(see) g(ho) m(w) g(it) g(mak) m(es) h(its) f(decision)
g(b) m(y) f(examining) h(the) g(call) h(stac) m(k) g(at) g(the) 94
3075 y(p) s(oin) m(t) 31 b(of) f(deallo) s(cation.) 219
3215 y(Ho) m(w) m(ev) m(er,) j(all) f(of) f(the) g(memory) g(allo) s
(cations) i(made) e(b) m(y) p Fl 31 w(alloca\(\)) p Fo
29 w(in) p Fl 30 w(f\(\)) p Fo 30 w(cannot) h(b) s(e) e(freed) h(un) m
(til) p Fl 31 w(f\(\)) p Fo 94 3315 a(returns.) 38 b(This) 22
b(can) h(b) s(e) f(seen) h(in) g(the) g(t) m(w) m(o) i(sets) e(of) g
(eigh) m(t) i(consecutiv) m(e) f(deallo) s(cations) h(in) e(the) g(log)
h(\014le,) h(eac) m(h) f(set) 94 3414 y(follo) m(w) m(ed) j(b) m(y) f
(a) f(call) i(to) p Fl 26 w(dealloca\(\)) p Fo(.) 36
b(The) p Fl 25 w(dealloca\(\)) p Fo 23 w(function) 25
b(explicitly) h(frees) g(a) f(memory) h(allo) s(cation) 94
3514 y(that) 40 b(w) m(as) g(made) f(b) m(y) g(the) p
Fl 39 w(alloca\(\)) p Fo 37 w(family) h(of) f(functions,) i(but) e
(these) g(calls) i(are) e(not) h(really) g(necessary) 94
3614 y(as) e(all) h(of) f(these) g(memory) f(allo) s(cations) j(w) m
(ould) e(b) s(e) f(freed) g(an) m(yw) m(a) m(y) i(when) p
Fl 37 w(main\(\)) p Fo 36 w(returns.) 61 b(The) 37 b(call) i(to) p
Fl 94 3713 a(dealloca\(\)) p Fo 33 w(is) d(really) h(only) f(necessary)
g(to) h(force) f(a) g(deallo) s(cation) i(for) e(a) g(sp) s(eci\014c) f
(purp) s(ose) f(at) j(a) f(certain) 94 3813 y(p) s(oin) m(t) d(in) f
(the) g(program.) 46 b(Note) 34 b(that) e(implicit) i(deallo) s
(cations) g(are) e(mark) m(ed) h(as) f(b) s(eing) g(done) g(b) m(y) p
Fl 32 w(alloca\(\)) p Fo 94 3912 a(while) f(explicit) h(deallo) s
(cations) g(are) f(mark) m(ed) f(as) h(b) s(eing) f(done) g(b) m(y) p
Fl 30 w(dealloca\(\)) p Fo(.) 219 4053 y(The) 20 b(second) h(test) h
(illustrates) g(ho) m(w) f(the) g(mpatrol) g(library) f(can) h(help) g
(debug) p Fl 20 w(alloca\(\)) p Fo(-related) f(problems) 94
4152 y(b) m(y) 31 b(treating) g(suc) m(h) f(memory) h(allo) s(cations) h
(as) f(normal) f(heap) g(allo) s(cations.) p Fl 334 4296
a(23) 95 b(/*) 334 4400 y(24) 143 b(*) 48 b(Duplicates) d(a) i(string) f
(using) g(alloca\(\)) g(and) h(then) g(returns) e(the) i(address) 334
4504 y(25) 143 b(*) 48 b(of) f(the) g(allocation.) 92
b(This) 47 b(is) g(illegal) f(since) g(the) h(memory) f(allocated) 334
4608 y(26) 143 b(*) 48 b(by) f(alloca\(\)) e(will) i(be) g(freed) f
(when) h(the) g(function) f(returns.) 93 b(The) 47 b(call) 334
4711 y(27) 143 b(*) 48 b(to) f(memcpy\(\)) e(will) i(then) g(corrupt) e
(free) i(memory) f(and) h(the) g(call) g(to) g(free\(\)) 334
4815 y(28) 143 b(*) 48 b(will) e(attempt) g(to) h(free) g(an) g
(invalid) f(pointer.) 334 4919 y(29) 143 b(*/) 334 5230
y(32) 95 b(#include) 46 b("mpatrol.h") 334 5334 y(33) 95
b(#include) 46 b(<stdio.h>) 334 5645 y(36) 95 b(char) 47
b(*f\(size_t) e(l\)) p 90 rotate dyy eop
%%Page: 118 124
118 123 bop Fo 94 -116 a(118) 3332 b(mpatrol) p Fl 334
365 a(37) 95 b({) 334 469 y(38) 286 b(return) 46 b(\(char) h(*\)) g
(alloca\(l\);) 334 573 y(39) 95 b(}) 334 884 y(42) g(char) 47
b(*g\(char) f(*s\)) 334 988 y(43) 95 b({) 334 1092 y(44) 286
b(char) 47 b(*t;) 334 1196 y(45) 286 b(size_t) 46 b(l;) 334
1403 y(47) 286 b(l) 48 b(=) f(strlen\(s\)) e(+) j(1;) 334
1507 y(48) 286 b(if) 47 b(\(t) h(=) f(f\(l\)\)) 334 1611
y(49) 477 b(memcpy\(t,) 45 b(s,) j(l\);) 334 1714 y(50) 286
b(return) 46 b(t;) 334 1818 y(51) 95 b(}) 334 2130 y(54) g(int) 47
b(main\(void\)) 334 2233 y(55) 95 b({) 334 2337 y(56) 286
b(char) 47 b(*s;) 334 2545 y(58) 286 b(s) 48 b(=) f(g\("test"\);) 334
2648 y(59) 286 b(free\(s\);) 334 2752 y(60) g(return) 46
b(EXIT_SUCCESS;) 334 2856 y(61) 95 b(}) p Fo 219 3005
a(If) 33 b(y) m(ou) i(compile) f(and) g(run) e(this) i(example) g(with)
g(the) p Fl 34 w(MPATROL_OPTIONS) p Fo 29 w(en) m(vironmen) m(t) h(v) -5
b(ariable) 34 b(con-) 94 3105 y(taining) e(the) e(options) h(`) p
Fl(LOGALL) p Fo(') e(and) h(`) p Fl(NOFREE=1) p Fo(') e(y) m(ou) j
(should) e(see) i(the) g(follo) m(wing) h(in) p Fl 30
w(mpatrol.log) p Fo(.) p Fl 334 3259 a(ALLOC:) 47 b(alloca) f(\(1,) h
(5) g(bytes,) f(8) i(bytes\)) e([f|test16.c|38]) 716
3362 y(0x0001346C) f(f+52) 716 3466 y(0x000134A8) g(g+40) 716
3570 y(0x00013524) g(main+20) 716 3674 y(0x00013308) g(_start+100) 334
3881 y(returns) h(0x0008C000) 334 4089 y(FREE:) h(alloca) f
(\(0x0008C000\)) e([g|test16.c|49]) 716 4193 y(0x000134F8) h(g+120) 716
4296 y(0x00013524) g(main+20) 716 4400 y(0x00013308) g(_start+100) 525
4608 y(0x0008C000) g(\(5) j(bytes\)) e({alloca:1:0}) e([f|test16.c|38])
716 4711 y(0x0001346C) h(f+52) 716 4815 y(0x000134A8) g(g+40) 716
4919 y(0x00013524) g(main+20) 716 5023 y(0x00013308) g(_start+100) 334
5230 y(MEMCOPY:) h(memcpy) g(\(0x0001F760,) f(0x0008C000,) f(5) k
(bytes,) e(0x00\)) g([g|test16.c|49]) 716 5334 y(0x000134F8) f(g+120)
716 5438 y(0x00013524) g(main+20) 716 5542 y(0x00013308) g(_start+100) p
90 rotate dyy eop
%%Page: 119 125
119 124 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(119) p Fl 334 365 a(ERROR:) 47 b([FRDOPN]:) e(memcpy:) h(attempt) f
(to) j(perform) d(operation) h(on) h(freed) f(memory) 525
469 y(0x0008C000) f(\(5) j(bytes\)) e({alloca:1:0}) e([g|test16.c|49])
716 573 y(0x000134F8) h(g+120) 716 677 y(0x00013524) g(main+20) 716
780 y(0x00013308) g(_start+100) 334 988 y(returns) h(0x0008C000) 334
1196 y(FREE:) h(free) f(\(0x0008C000\)) f([main|test16.c|59]) 716
1299 y(0x00013550) g(main+64) 716 1403 y(0x00013308) g(_start+100) 334
1611 y(ERROR:) i([PRVFRD]:) e(free:) h(0x0008C000) f(was) i(freed) f
(with) h(alloca) 525 1714 y(0x0008C000) e(\(5) j(bytes\)) e
({alloca:1:0}) e([g|test16.c|49]) 716 1818 y(0x000134F8) h(g+120) 716
1922 y(0x00013524) g(main+20) 716 2026 y(0x00013308) g(_start+100) p
Fo 219 2160 a(As) 39 b(y) m(ou) g(can) g(see,) j(memory) d(allo) s
(cations) i(made) e(b) m(y) p Fl 39 w(alloca\(\)) p Fo
36 w(are) h(treated) g(in) e(almost) i(exactly) h(the) 94
2260 y(same) 32 b(w) m(a) m(y) f(as) g(normal) g(memory) f(allo) s
(cations,) j(with) e(the) f(result) h(that) g(errors) f(similar) h(to) h
(those) f(ab) s(o) m(v) m(e) h(can) 94 2359 y(b) s(e) g(detected) h(b) m
(y) f(the) g(mpatrol) g(library) -8 b(.) 46 b(The) 32
b(only) g(real) g(di\013erence) h(b) s(et) m(w) m(een) f(the) h(t) m(w)
m(o) g(t) m(yp) s(es) f(of) g(memory) 94 2459 y(allo) s(cations) j(is) d
(that) h(allo) s(cations) i(made) d(b) m(y) g(the) p
Fl 33 w(alloca\(\)) p Fo 30 w(family) g(of) h(functions) f(will) g(nev)
m(er) h(sho) m(w) f(up) f(in) 94 2559 y(the) g(list) g(of) g(unfreed) e
(memory) h(allo) s(cations.) p Fn 94 2840 a(16.9) 69
b(The) p Fb 44 w(MP_MALLOC\(\)) p Fn 40 w(functions) p
Fo 219 3033 a(The) 25 b(mpatrol) i(library) e(comes) i(with) f(a) g
(set) g(of) h(alternativ) m(e) h(dynamic) e(memory) f(allo) s(cation) k
(functions) c(for) 94 3133 y(C.) e(These) f(allo) m(w) i(it) f(to) g
(record) f(the) h(t) m(yp) s(e) g(and) e(t) m(yp) s(e) i(size) g(of) g
(ev) m(ery) g(memory) g(allo) s(cation) h(made) f(through) e(these) 94
3232 y(functions,) 35 b(whic) m(h) f(can) h(b) s(e) e(v) m(ery) i
(useful) e(for) h(debugging) g(purp) s(oses.) 50 b(It) 34
b(also) i(means) e(that) g(the) h(alignmen) m(t) 94 3332
y(for) c(eac) m(h) h(memory) f(allo) s(cation) i(can) e(b) s(e) f
(determined) h(according) g(to) h(its) f(t) m(yp) s(e.) 42
b(The) 31 b(follo) m(wing) h(test) f(can) h(b) s(e) 94
3431 y(found) e(in) g(`) p Fl(tests/pass/test9.c) p Fo('.) p
Fl 334 3570 a(23) 95 b(/*) 334 3674 y(24) 143 b(*) 48
b(Allocates) d(16) i(floats) f(and) h(then) g(resizes) e(the) i
(allocation) e(to) j(8) f(floats) f(and) 334 3778 y(25) 143
b(*) 48 b(frees) e(them.) 94 b(Then) 47 b(allocates) e(16) i(integers) f
(and) h(resizes) e(the) i(allocation) 334 3881 y(26) 143
b(*) 48 b(to) f(32) g(integers) e(before) i(freeing) e(them.) 94
b(Finally,) 46 b(duplicates) f(a) i(string) 334 3985
y(27) 143 b(*) 48 b(and) e(then) h(frees) f(it.) 334
4089 y(28) 143 b(*/) 334 4400 y(31) 95 b(#include) 46
b("mpatrol.h") 334 4711 y(34) 95 b(int) 47 b(main\(void\)) 334
4815 y(35) 95 b({) 334 4919 y(36) 286 b(float) 47 b(*f;) 334
5023 y(37) 286 b(int) 47 b(*i;) 334 5127 y(38) 286 b(char) 47
b(*s;) 334 5334 y(40) 286 b(MP_MALLOC\(f,) 45 b(16,) i(float\);) 334
5438 y(41) 286 b(MP_REALLOC\(f,) 44 b(8,) k(float\);) 334
5542 y(42) 286 b(MP_FREE\(f\);) 334 5645 y(43) g(MP_CALLOC\(i,) 45
b(16,) i(int\);) p 90 rotate dyy eop
%%Page: 120 126
120 125 bop Fo 94 -116 a(120) 3332 b(mpatrol) p Fl 334
365 a(44) 286 b(MP_REALLOC\(i,) 44 b(32,) j(int\);) 334
469 y(45) 286 b(MP_FREE\(i\);) 334 573 y(46) g(MP_STRDUP\(s,) 45
b("test"\);) 334 677 y(47) 286 b(MP_FREE\(s\);) 334 780
y(48) g(return) 46 b(EXIT_SUCCESS;) 334 884 y(49) 95
b(}) p Fo 219 1034 a(If) 32 b(this) h(test) g(is) g(compiled) g(and) f
(link) m(ed) h(with) f(the) h(mpatrol) g(library) f(and) g(then) g(run)
f(with) h(the) h(`) p Fl(LOGALL) p Fo(') 94 1133 y(option,) f(the) e
(follo) m(wing) i(output) e(will) h(b) s(e) e(seen) i(in) f(the) h
(mpatrol) f(log) i(\014le.) p Fl 334 1287 a(ALLOC:) 47
b(xmalloc) e(\(84,) i(64) g(bytes,) f(4) i(bytes\)) e
([main|test9.c|40]) d(\(float) j(x) h(16\)) 716 1391
y(0x0804AC36) e(main+38) 716 1494 y(0x400A09CB) g
(__libc_start_main+255) 716 1598 y(0x0804AB81) g(_start+33) 334
1806 y(returns) h(0x080510E8) 334 2013 y(REALLOC:) g(xrealloc) g
(\(0x080510E8,) e(32) j(bytes,) f(4) i(bytes\)) e([main|test9.c|41]) d
(\(float) j(x) h(8\)) 716 2117 y(0x0804AC60) e(main+80) 716
2221 y(0x400A09CB) g(__libc_start_main+255) 716 2325
y(0x0804AB81) g(_start+33) 525 2532 y(0x080510E8) g(\(64) i(bytes\)) f
({xmalloc:84:0}) e([main|test9.c|40]) f(\(float) j(x) i(16\)) 716
2636 y(0x0804AC36) d(main+38) 716 2740 y(0x400A09CB) g
(__libc_start_main+255) 716 2844 y(0x0804AB81) g(_start+33) 334
3051 y(returns) h(0x080510E8) 334 3259 y(FREE:) h(xfree) f
(\(0x080510E8\)) f([main|test9.c|42]) 716 3362 y(0x0804AC7F) g
(main+111) 716 3466 y(0x400A09CB) g(__libc_start_main+255) 716
3570 y(0x0804AB81) g(_start+33) 525 3778 y(0x080510E8) g(\(32) i
(bytes\)) f({xrealloc:84:1}) e([main|test9.c|41]) f(\(float) j(x) i
(8\)) 716 3881 y(0x0804AC60) d(main+80) 716 3985 y(0x400A09CB) g
(__libc_start_main+255) 716 4089 y(0x0804AB81) g(_start+33) 334
4296 y(ALLOC:) i(xcalloc) e(\(85,) i(64) g(bytes,) f(4) i(bytes\)) e
([main|test9.c|43]) d(\(int) k(x) g(16\)) 716 4400 y(0x0804ACB2) e
(main+162) 716 4504 y(0x400A09CB) g(__libc_start_main+255) 716
4608 y(0x0804AB81) g(_start+33) 334 4815 y(returns) h(0x080510E8) 334
5023 y(REALLOC:) g(xrealloc) g(\(0x080510E8,) e(128) j(bytes,) f(4) h
(bytes\)) g([main|test9.c|44]) c(\(int) j(x) i(32\)) 716
5127 y(0x0804ACDF) d(main+207) 716 5230 y(0x400A09CB) g
(__libc_start_main+255) 716 5334 y(0x0804AB81) g(_start+33) 525
5542 y(0x080510E8) g(\(64) i(bytes\)) f({xcalloc:85:0}) e
([main|test9.c|43]) f(\(int) k(x) g(16\)) 716 5645 y(0x0804ACB2) e
(main+162) p 90 rotate dyy eop
%%Page: 121 127
121 126 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(121) p Fl 716 365 a(0x400A09CB) 45 b(__libc_start_main+255) 716
469 y(0x0804AB81) g(_start+33) 334 677 y(returns) h(0x080510E8) 334
884 y(FREE:) h(xfree) f(\(0x080510E8\)) f([main|test9.c|45]) 716
988 y(0x0804ACFE) g(main+238) 716 1092 y(0x400A09CB) g
(__libc_start_main+255) 716 1196 y(0x0804AB81) g(_start+33) 525
1403 y(0x080510E8) g(\(128) i(bytes\)) f({xrealloc:85:1}) e
([main|test9.c|44]) f(\(int) j(x) i(32\)) 716 1507 y(0x0804ACDF) d
(main+207) 716 1611 y(0x400A09CB) g(__libc_start_main+255) 716
1714 y(0x0804AB81) g(_start+33) 334 1922 y(ALLOC:) i(xstrdup) e(\(86,) i
(5) g(bytes,) g(1) g(byte\)) f([main|test9.c|46]) d(\(char) k(x) g(5\))
716 2026 y(0x0804AD2E) e(main+286) 716 2130 y(0x400A09CB) g
(__libc_start_main+255) 716 2233 y(0x0804AB81) g(_start+33) 334
2441 y(returns) h(0x080510E5) 334 2648 y(FREE:) h(xfree) f
(\(0x080510E5\)) f([main|test9.c|47]) 716 2752 y(0x0804AD4F) g
(main+319) 716 2856 y(0x400A09CB) g(__libc_start_main+255) 716
2960 y(0x0804AB81) g(_start+33) 525 3167 y(0x080510E5) g(\(5) j
(bytes\)) e({xstrdup:86:0}) e([main|test9.c|46]) f(\(char) j(x) h(5\))
716 3271 y(0x0804AD2E) e(main+286) 716 3375 y(0x400A09CB) g
(__libc_start_main+255) 716 3479 y(0x0804AB81) g(_start+33) p
Fo 219 3611 a(As) 27 b(y) m(ou) g(can) g(see,) h(the) f(t) m(yp) s(e) f
(and) g(n) m(um) m(b) s(er) g(of) h(items) g(allo) s(cated) h(of) f
(that) g(t) m(yp) s(e) g(are) g(asso) s(ciated) h(with) f(eac) m(h) 94
3711 y(memory) f(allo) s(cation.) 42 b(The) 26 b(function) f(names) h
(that) h(are) f(logged) i(as) e(ha) m(ving) h(made) f(the) g(memory) g
(allo) s(cations) 94 3811 y(are) c(from) g(the) p Fl
21 w(xmalloc\(\)) p Fo 19 w(family) g(of) g(functions) f(since) h(that)
g(is) g(ho) m(w) f(the) p Fl 22 w(MP_MALLOC\(\)) p Fo
19 w(family) h(of) f(functions) 94 3910 y(are) 31 b(implemen) m(ted.) p
Fn 94 4188 a(16.10) 69 b(Additional) 46 b(useful) f(information) p
Fo 219 4379 a(This) g(last) h(example) g(illustrates) g(the) g(v) -5
b(arious) 45 b(`) p Fl(SHOW) p Fo(') g(options) g(that) h(are) g(a) m
(v) -5 b(ailable) 47 b(for) f(displa) m(ying) 94 4479
y(additional) c(information) e(from) g(the) h(mpatrol) f(library) g(at)
h(program) g(termination.) 71 b(It) 41 b(also) g(sho) m(ws) f(ho) m(w)
94 4579 y(to) 33 b(easily) h(detect) f(memory) g(leaks.) 47
b(Use) 32 b(the) h(`) p Fl(OFLOWSIZE=16) p Fo(',) d(`) p
Fl(NOFREE=16) p Fo(') g(and) i(`) p Fl(SHOWALL) p Fo(') f(options) h
(in) p Fl 94 4678 a(MPATROL_OPTIONS) p Fo 27 w(b) s(efore) e(running.) p
Fl 382 4815 a(1) 95 b(/*) 382 4919 y(2) 143 b(*) 48 b(Introduces) d(a) i
(memory) f(leak) h(by) g(clobbering) e(a) i(pointer) f(with) h(a) g
(new) 382 5023 y(3) 143 b(*) 48 b(memory) e(allocation.) 92
b(Use) 47 b(with) g(SHOWUNFREED) d(to) k(display) d(it.) 382
5127 y(4) 143 b(*/) 382 5438 y(7) 95 b(#include) 46 b("mpatrol.h") p
90 rotate dyy eop
%%Page: 122 128
122 127 bop Fo 94 -116 a(122) 3332 b(mpatrol) p Fl 334
365 a(10) 95 b(int) 47 b(main\(void\)) 334 469 y(11) 95
b({) 334 573 y(12) 286 b(void) 47 b(*p;) 334 780 y(14) 286
b(p) 48 b(=) f(malloc\(4\);) 334 884 y(15) 286 b(p) 48
b(=) f(malloc\(4\);) 334 988 y(16) 286 b(if) 47 b(\(p) h(!=) f(NULL\))
334 1092 y(17) 477 b(free\(p\);) 334 1196 y(18) 286 b(return) 46
b(EXIT_SUCCESS;) 334 1299 y(19) 95 b(}) p Fo 219 1440
a(The) 44 b(information) h(that) g(w) m(e) g(are) g(in) m(terested) g
(in) f(comes) h(after) g(the) g(summary) e(of) i(library) f(statistics)
94 1540 y(generated) 31 b(in) e(the) g(log) h(\014le.) 41
b(The) 28 b(\014rst) h(blo) s(c) m(k) h(of) f(data) h(sho) m(ws) f(a) h
(memory) f(map) g(of) g(the) g(heap) g(that) h(is) f(b) s(eing) 94
1640 y(handled) c(b) m(y) f(mpatrol.) 40 b(This) 24 b(can) h(b) s(e) f
(used) h(to) g(see) h(graphically) g(where) e(a) i(particular) f(allo) s
(cation) i(is) e(lo) s(cated,) 94 1739 y(or) 31 b(to) g(lo) s(ok) g
(for) f(memory) g(fragmen) m(tation.) 43 b(The) 30 b(`) p
Fl(SHOWMAP) p Fo(') f(option) h(also) i(displa) m(ys) e(this) g
(information.) 219 1880 y(Note) 41 b(that) f(gaps) g(in) g(the) g
(memory) f(map) h(can) g(either) g(b) s(e) f(due) g(to) i(space) f
(used) f(b) m(y) h(in) m(ternal) g(memory) 94 1980 y(blo) s(c) m(ks) 30
b(or) f(to) h(some) g(other) f(memory) h(allo) s(cation) h(library) e
(using) g(up) f(space.) 41 b(On) 28 b(some) i(systems) f(that) h(don't)
94 2080 y(ha) m(v) m(e) 38 b(virtual) e(memory) -8 b(,) 38
b(gaps) f(are) f(lik) m(ely) i(to) f(b) s(e) e(o) m(wned) h(b) m(y) g
(other) h(pro) s(cesses) e(or) i(b) s(elong) f(to) h(the) f(system) 94
2179 y(free) 31 b(memory) f(list.) 42 b(The) 29 b(`) p
Fl(...) p Fo(') h(marks) g(text) i(that) f(has) f(b) s(een) g(remo) m
(v) m(ed.) p Fl 334 2325 a(memory) 47 b(map:) 525 2428
y(...) 430 2532 y(/) g(0x0002FDD0-0x0002FDDF) 42 b(overflow) k(\(16) h
(bytes\)) 382 2636 y(|+) g(0x0002FDE0-0x0002FE03) 42
b(allocated) k(\(36) h(bytes\)) f({calloc:13:0}) e([-|-|-]) 430
2740 y(\\) j(0x0002FE04-0x0002FE13) 42 b(overflow) k(\(16) h(bytes\))
334 2844 y(---) g(0x0002FE14-0x0002FE17) 42 b(free) 47
b(\(4) g(bytes\)) 430 2947 y(/) g(0x0002FE18-0x0002FE27) 42
b(overflow) k(\(16) h(bytes\)) 382 3051 y(|+) g(0x0002FE28-0x0002FF18)
42 b(allocated) k(\(241) g(bytes\)) g({calloc:15:0}) f([-|-|-]) 430
3155 y(\\) i(0x0002FF19-0x0002FF28) 42 b(overflow) k(\(16) h(bytes\))
334 3259 y(---) g(0x0002FF29-0x0002FF2F) 42 b(free) 47
b(\(7) g(bytes\)) 430 3362 y(/) g(0x0002FF30-0x0002FF3F) 42
b(overflow) k(\(16) h(bytes\)) 382 3466 y(|+) g(0x0002FF40-0x0002FF93)
42 b(allocated) k(\(84) h(bytes\)) f({calloc:16:0}) e([-|-|-]) 430
3570 y(\\) j(0x0002FF94-0x0002FFA3) 42 b(overflow) k(\(16) h(bytes\))
334 3674 y(---) g(0x0002FFA4-0x0002FFA7) 42 b(free) 47
b(\(4) g(bytes\)) 430 3778 y(/) g(0x0002FFA8-0x0002FFB7) 42
b(overflow) k(\(16) h(bytes\)) 382 3881 y(|+) g(0x0002FFB8-0x0002FFC4)
42 b(allocated) k(\(13) h(bytes\)) f({calloc:17:0}) e([-|-|-]) 430
3985 y(\\) j(0x0002FFC5-0x0002FFD4) 42 b(overflow) k(\(16) h(bytes\))
334 4089 y(---) g(0x0002FFD5-0x0002FFD7) 42 b(free) 47
b(\(3) g(bytes\)) 430 4193 y(/) g(0x0002FFD8-0x0002FFE7) 42
b(overflow) k(\(16) h(bytes\)) 382 4296 y(|+) g(0x0002FFE8-0x0002FFEB)
42 b(allocated) k(\(4) h(bytes\)) f({malloc:19:0}) e([main|test.c|14])
430 4400 y(\\) j(0x0002FFEC-0x0002FFFB) 42 b(overflow) k(\(16) h
(bytes\)) 334 4504 y(---) g(0x0002FFFC-0x0002FFFF) 42
b(free) 47 b(\(4) g(bytes\)) 525 4608 y(---------------------) 42
b(gap) 47 b(\(57344) f(bytes\)) 430 4711 y(/) h(0x0003E000-0x0003E00F)
42 b(overflow) k(\(16) h(bytes\)) 382 4815 y(|+) g
(0x0003E010-0x0003EFFF) 42 b(freed) 47 b(\(4080) f(bytes\)) g
({free:6:0}) f([-|-|-]) 430 4919 y(\\) i(0x0003F000-0x0003F00F) 42
b(overflow) k(\(16) h(bytes\)) 430 5023 y(/) g(0x0003F010-0x0003F01F) 42
b(overflow) k(\(16) h(bytes\)) 382 5127 y(|+) g(0x0003F020-0x0003F707)
42 b(freed) 47 b(\(1768) f(bytes\)) g({free:12:0}) f([-|-|-]) 430
5230 y(\\) i(0x0003F708-0x0003F717) 42 b(overflow) k(\(16) h(bytes\))
334 5334 y(---) g(0x0003F718-0x0003FFFF) 42 b(free) 47
b(\(2280) f(bytes\)) 525 5438 y(---------------------) c(gap) 47
b(\(16384) f(bytes\)) 430 5542 y(/) h(0x00044000-0x0004400F) 42
b(overflow) k(\(16) h(bytes\)) 382 5645 y(|+) g(0x00044010-0x00045197)
42 b(freed) 47 b(\(4488) f(bytes\)) g({free:8:0}) f([-|-|-]) p
90 rotate dyy eop
%%Page: 123 129
123 128 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(123) p Fl 430 365 a(\\) 47 b(0x00045198-0x000451A7) 42
b(overflow) k(\(16) h(bytes\)) 430 469 y(/) g(0x000451A8-0x000451B7) 42
b(overflow) k(\(16) h(bytes\)) 382 573 y(|+) g(0x000451B8-0x000459AF) 42
b(freed) 47 b(\(2040) f(bytes\)) g({free:10:0}) f([-|-|-]) 430
677 y(\\) i(0x000459B0-0x000459BF) 42 b(overflow) k(\(16) h(bytes\)) 430
780 y(/) g(0x000459C0-0x000459CF) 42 b(overflow) k(\(16) h(bytes\)) 382
884 y(|+) g(0x000459D0-0x00045D93) 42 b(allocated) k(\(964) g(bytes\)) g
({calloc:14:0}) f([-|-|-]) 430 988 y(\\) i(0x00045D94-0x00045DA3) 42
b(overflow) k(\(16) h(bytes\)) 430 1092 y(/) g(0x00045DA4-0x00045DB3) 42
b(overflow) k(\(16) h(bytes\)) 382 1196 y(|+) g(0x00045DB4-0x00045DCE)
42 b(allocated) k(\(27) h(bytes\)) f({strdup:18:0}) e([-|-|-]) 430
1299 y(\\) j(0x00045DCF-0x00045DDE) 42 b(overflow) k(\(16) h(bytes\))
334 1403 y(---) g(0x00045DDF-0x00045DDF) 42 b(free) 47
b(\(1) g(byte\)) 430 1507 y(/) g(0x00045DE0-0x00045DEF) 42
b(overflow) k(\(16) h(bytes\)) 382 1611 y(|+) g(0x00045DF0-0x00045DF3)
42 b(freed) 47 b(\(4) g(bytes\)) f({free:20:0}) f([main|test.c|17]) 430
1714 y(\\) i(0x00045DF4-0x00045E03) 42 b(overflow) k(\(16) h(bytes\))
334 1818 y(---) g(0x00045E04-0x00045FFF) 42 b(free) 47
b(\(508) g(bytes\)) p Fo 219 1957 a(The) 38 b(next) h(blo) s(c) m(k) g
(of) g(data) g(sho) m(ws) f(a) h(summary) e(of) i(all) h(the) e(sym) m
(b) s(ols) h(that) g(could) f(b) s(e) g(read) h(from) f(the) 94
2056 y(program's) e(executable) i(\014le) e(and/or) g(an) m(y) h
(shared) e(libraries) h(that) h(the) f(program) g(requires.) 57
b(This) 35 b(can) i(b) s(e) 94 2156 y(useful) 28 b(to) h(see) f(whic) m
(h) g(sym) m(b) s(ols) f(ha) m(v) m(e) j(actually) f(b) s(een) f(read) g
(b) m(y) f(the) i(mpatrol) f(library) -8 b(.) 40 b(The) 28
b(`) p Fl(SHOWSYMBOLS) p Fo(') 94 2255 y(option) j(also) h(displa) m
(ys) e(this) g(information.) 219 2394 y(Note) h(that) f(the) g(follo) m
(wing) h(data) f(has) g(b) s(een) e(dramatically) k(cut) e(do) m(wn) f
(in) g(size) h(for) g(the) g(purp) s(oses) d(of) j(this) 94
2493 y(example.) 42 b(The) 30 b(`) p Fl(...) p Fo -1
w(') h(marks) f(text) h(that) g(has) f(b) s(een) g(remo) m(v) m(ed.) p
Fl 334 2636 a(symbols) 46 b(read:) h(3300) 1050 2740
y(0x000108B0) e(_ex_text0) h([a.out]) f(\(0) j(bytes\)) 525
2844 y(0x000108B0-0x0001097F) 42 b(_start) k([a.out]) g(\(208) h
(bytes\)) 525 2947 y(0x00010990-0x00010A27) 42 b(main) 47
b([a.out]) f(\(152) g(bytes\)) 1050 3051 y(0x00010A28) f(_ex_text1) h
([a.out]) f(\(0) j(bytes\)) 525 3155 y(0x00010A28-0x00010A77) 42
b(_init) 47 b([a.out]) f(\(80) g(bytes\)) 525 3259 y
(0x00010A78-0x00010AC7) c(_fini) 47 b([a.out]) f(\(80) g(bytes\)) 1050
3362 y(0x7FA1FFF8) f(_ex_text0) h([/usr/lib/libc.so.1]) c(\(0) 47
b(bytes\)) 525 3466 y(0x7FA1FFF8-0x7FA2005F) 42 b(atexit) k
([/usr/lib/libc.so.1]) d(\(104) j(bytes\)) 525 3570 y
(0x7FA20060-0x7FA200EF) c(_exithandle) j([/usr/lib/libc.so.1]) d(\(144)
47 b(bytes\)) 525 3674 y(0x7FA20470-0x7FA204EB) 42 b(__dtou) k
([/usr/lib/libc.so.1]) d(\(124) j(bytes\)) 525 3778 y
(0x7FA20500-0x7FA20577) c(__ftou) k([/usr/lib/libc.so.1]) d(\(120) j
(bytes\)) 525 3881 y(0x7FA2083C-0x7FA20B2F) c(__div64) k
([/usr/lib/libc.so.1]) c(\(756) 47 b(bytes\)) 525 3985
y(0x7FA20B30-0x7FA20DEB) 42 b(__rem64) k([/usr/lib/libc.so.1]) c(\(700)
47 b(bytes\)) 525 4089 y(...) 525 4193 y(0x7FA96858-0x7FA96867) 42
b(getpid) k([/usr/lib/libc.so.1]) d(\(16) k(bytes\)) 525
4296 y(0x7FA96858-0x7FA96867) 42 b(_getpid) k([/usr/lib/libc.so.1]) c
(\(16) 47 b(bytes\)) 525 4400 y(0x7FA96868-0x7FA9689F) 42
b(_kill) 47 b([/usr/lib/libc.so.1]) 42 b(\(56) 47 b(bytes\)) 525
4504 y(0x7FA96868-0x7FA9689F) 42 b(_libc_kill) j([/usr/lib/libc.so.1]) e
(\(56) k(bytes\)) 1050 4608 y(0x7FA968A0) e(_ex_text1) h
([/usr/lib/libc.so.1]) c(\(0) 47 b(bytes\)) 525 4711
y(0x7FA968A0-0x7FA968DF) 42 b(_init) 47 b([/usr/lib/libc.so.1]) 42
b(\(64) 47 b(bytes\)) 525 4815 y(0x7FA968E0-0x7FA9691F) 42
b(_fini) 47 b([/usr/lib/libc.so.1]) 42 b(\(64) 47 b(bytes\)) 525
4919 y(0x7FB105E4-0x7FB1069F) 42 b(memmove) k([/usr/lib/libc_psr.so.1])
41 b(\(188) 47 b(bytes\)) 525 5023 y(0x7FB105E4-0x7FB1069F) 42
b(_memmove) k([/usr/lib/libc_psr.so.1]) 41 b(\(188) 47
b(bytes\)) 1050 5127 y(0x7FB106A0) e(forcpy) h
([/usr/lib/libc_psr.so.1]) c(\(0) 47 b(bytes\)) 525 5230
y(0x7FB106A0-0x7FB1190B) 42 b(memcpy) k([/usr/lib/libc_psr.so.1]) c
(\(4716) k(bytes\)) 525 5334 y(0x7FB106A0-0x7FB1190B) c(_memcpy) k
([/usr/lib/libc_psr.so.1]) 41 b(\(4716) 47 b(bytes\)) 525
5438 y(0x7FB106A0-0x7FB1190B) 42 b(__align_cpy_1) j
([/usr/lib/libc_psr.so.1) o(]) d(\(4716) k(bytes\)) 525
5542 y(...) 525 5645 y(0x7FB135B0-0x7FB135D3) c(__div64) k
([/usr/lib/libc_psr.so.1]) 41 b(\(36) 47 b(bytes\)) p
90 rotate dyy eop
%%Page: 124 130
124 129 bop Fo 94 -116 a(124) 3332 b(mpatrol) p Fl 525
365 a(0x7FB135D4-0x7FB135F7) 42 b(__udiv64) k([/usr/lib/libc_psr.so.1])
41 b(\(36) 47 b(bytes\)) 525 469 y(0x7FB135F8-0x7FB1362B) 42
b(__umul64) k([/usr/lib/libc_psr.so.1]) 41 b(\(52) 47
b(bytes\)) 525 573 y(0x7FB135F8-0x7FB1362B) 42 b(__mul64) k
([/usr/lib/libc_psr.so.1]) 41 b(\(52) 47 b(bytes\)) 525
677 y(0x7FB1362C-0x7FB13657) 42 b(__urem64) k([/usr/lib/libc_psr.so.1])
41 b(\(44) 47 b(bytes\)) 525 780 y(0x7FB13658-0x7FB13683) 42
b(__rem64) k([/usr/lib/libc_psr.so.1]) 41 b(\(44) 47
b(bytes\)) 1050 884 y(0x7FB333F8) e(_ex_text0) h
([/usr/lib/libelf.so.1]) 41 b(\(0) 48 b(bytes\)) 525
988 y(0x7FB333F8-0x7FB3346F) 42 b(_elf32_entsz) j
([/usr/lib/libelf.so.1]) d(\(120) k(bytes\)) 525 1092
y(0x7FB33470-0x7FB334EB) c(elf32_fsize) j([/usr/lib/libelf.so.1]) d
(\(124) k(bytes\)) 525 1196 y(0x7FB33470-0x7FB334EB) c(_elf32_fsize) j
([/usr/lib/libelf.so.1]) d(\(124) k(bytes\)) 525 1299
y(0x7FB334EC-0x7FB3352F) c(_elf32_msize) j([/usr/lib/libelf.so.1]) d
(\(68) k(bytes\)) 525 1403 y(0x7FB33530-0x7FB335D3) c(_elf32_mtype) j
([/usr/lib/libelf.so.1]) d(\(164) k(bytes\)) 525 1507
y(...) 525 1611 y(0x7FB49054-0x7FB4921F) c(_elf_nlist) j
([/usr/lib/libelf.so.1]) d(\(460) 47 b(bytes\)) 525 1714
y(0x7FB49220-0x7FB4932F) 42 b(nlist) 47 b([/usr/lib/libelf.so.1]) 41
b(\(272) 47 b(bytes\)) 525 1818 y(0x7FB49330-0x7FB493E3) 42
b(_elf_findop) j([/usr/lib/libelf.so.1]) d(\(180) k(bytes\)) 1050
1922 y(0x7FB493E4) f(_ex_text1) h([/usr/lib/libelf.so.1]) 41
b(\(0) 48 b(bytes\)) 525 2026 y(0x7FB493E4-0x7FB4941B) 42
b(_init) 47 b([/usr/lib/libelf.so.1]) 41 b(\(56) 47 b(bytes\)) 525
2130 y(0x7FB4941C-0x7FB49453) 42 b(_fini) 47 b([/usr/lib/libelf.so.1])
41 b(\(56) 47 b(bytes\)) 525 2233 y(0x7FB65818-0x7FB6582F) 42
b(__mp_newlist) j([/usr/lib/libmpatrol.so.) o(1.3) o(]) d(\(24) 47
b(bytes\)) 525 2337 y(0x7FB65830-0x7FB65853) 42 b(__mp_addhead) j
([/usr/lib/libmpatrol.so.) o(1.3) o(]) d(\(36) 47 b(bytes\)) 525
2441 y(0x7FB65854-0x7FB6587B) 42 b(__mp_addtail) j
([/usr/lib/libmpatrol.so.) o(1.3) o(]) d(\(40) 47 b(bytes\)) 525
2545 y(0x7FB6587C-0x7FB6589F) 42 b(__mp_prepend) j
([/usr/lib/libmpatrol.so.) o(1.3) o(]) d(\(36) 47 b(bytes\)) 525
2648 y(0x7FB658A0-0x7FB658C3) 42 b(__mp_insert) j
([/usr/lib/libmpatrol.so.1) o(.3]) c(\(36) 47 b(bytes\)) 525
2752 y(0x7FB658C4-0x7FB658EB) 42 b(__mp_remove) j
([/usr/lib/libmpatrol.so.1) o(.3]) c(\(40) 47 b(bytes\)) 525
2856 y(...) 525 2960 y(0x7FB725F4-0x7FB7262B) 42 b(memmem) k
([/usr/lib/libmpatrol.so.1.) o(3]) c(\(56) k(bytes\)) 525
3064 y(0x7FB7262C-0x7FB72663) c(_memmem) k([/usr/lib/libmpatrol.so.1) o
(.3]) 41 b(\(56) 47 b(bytes\)) 525 3167 y(0x7FB72664-0x7FB72697) 42
b(memcmp) k([/usr/lib/libmpatrol.so.1.) o(3]) c(\(52) k(bytes\)) 525
3271 y(0x7FB72698-0x7FB726CB) c(_memcmp) k([/usr/lib/libmpatrol.so.1) o
(.3]) 41 b(\(52) 47 b(bytes\)) 525 3375 y(0x7FB726CC-0x7FB726FF) 42
b(bcmp) 47 b([/usr/lib/libmpatrol.so.) o(1.3]) 41 b(\(52) 47
b(bytes\)) 525 3479 y(0x7FB72700-0x7FB72733) 42 b(_bcmp) 47
b([/usr/lib/libmpatrol.so) o(.1.3) o(]) 42 b(\(52) 47
b(bytes\)) 525 3582 y(0x7FB9085C-0x7FB90863) 42 b(dlinfo) k
([/usr/lib/libdl.so.1]) c(\(8) 48 b(bytes\)) 525 3686
y(0x7FB9085C-0x7FB90863) 42 b(_dlinfo) k([/usr/lib/libdl.so.1]) c(\(8)
47 b(bytes\)) 525 3790 y(0x7FB90864-0x7FB9086B) 42 b(dlmap) 47
b([/usr/lib/libdl.so.1]) 42 b(\(8) 47 b(bytes\)) 525
3894 y(0x7FB90864-0x7FB9086B) 42 b(_dlmap) k([/usr/lib/libdl.so.1]) c
(\(8) 48 b(bytes\)) 525 3998 y(0x7FB9086C-0x7FB90873) 42
b(dlmopen) k([/usr/lib/libdl.so.1]) c(\(8) 47 b(bytes\)) 525
4101 y(0x7FB9086C-0x7FB90873) 42 b(_dlmopen) k([/usr/lib/libdl.so.1]) c
(\(8) 47 b(bytes\)) 525 4205 y(...) 525 4309 y(0x7FB90894-0x7FB9089B) 42
b(dladdr) k([/usr/lib/libdl.so.1]) c(\(8) 48 b(bytes\)) 525
4413 y(0x7FB90894-0x7FB9089B) 42 b(_dladdr) k([/usr/lib/libdl.so.1]) c
(\(8) 47 b(bytes\)) 525 4516 y(0x7FB9089C-0x7FB908A3) 42
b(dldump) k([/usr/lib/libdl.so.1]) c(\(8) 48 b(bytes\)) 525
4620 y(0x7FB9089C-0x7FB908A3) 42 b(_dldump) k([/usr/lib/libdl.so.1]) c
(\(8) 47 b(bytes\)) 525 4724 y(0x7FB908A4-0x7FB908AB) 42
b(_ld_concurrency) i([/usr/lib/libdl.so.1]) e(\(8) 47
b(bytes\)) 525 4828 y(0x7FB908AC-0x7FB908B3) 42 b(bind_guard) j
([/usr/lib/libdl.so.1]) d(\(8) 48 b(bytes\)) p Fo 219
4985 a(The) 27 b(next) g(table) h(is) f(really) h(only) f(useful) g
(for) g(seeing) h(ho) m(w) f(m) m(uc) m(h) g(memory) g(fragmen) m
(tation) i(has) e(o) s(ccurred) 94 5085 y(in) j(the) g(memory) g(map.)
40 b(It) 30 b(sho) m(ws) g(a) g(breakdo) m(wn) g(of) g(the) g(free) g
(memory) g(blo) s(c) m(ks) g(that) h(ha) m(v) m(e) g(either) f
(resulted) 94 5185 y(from) h(the) f(mpatrol) h(library) g(allo) s
(cating) h(uninitialised) f(memory) g(from) f(the) h(system) f(heap) h
(or) f(from) h(freeing) 94 5284 y(existing) 36 b(memory) f(allo) s
(cations.) 56 b(The) 34 b(column) h(on) f(the) h(left) h(sho) m(ws) e
(the) h(size) h(of) f(the) g(free) g(blo) s(c) m(k) g(in) f(b) m(ytes)
94 5384 y(and) i(the) g(column) g(on) g(the) h(righ) m(t) g(sho) m(ws) e
(the) i(n) m(um) m(b) s(er) e(of) h(blo) s(c) m(ks) h(of) f(that) h
(size) g(that) f(are) h(a) m(v) -5 b(ailable.) 60 b(The) 94
5484 y(`) p Fl(SHOWFREE) p Fo(') 29 b(option) i(also) g(displa) m(ys) g
(this) f(information.) p Fl 334 5645 a(free) 47 b(blocks:) f(10) h
(\(2919) f(bytes\)) p 90 rotate dyy eop
%%Page: 125 131
125 130 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(125) p Fl 669 365 a(2280:) 46 b(1) 716 469 y(508:) h(1) 764
573 y(76:) g(1) 764 677 y(32:) g(1) 812 780 y(7:) g(1) 812
884 y(4:) g(3) 812 988 y(3:) g(1) 812 1092 y(1:) g(1) p
Fo 219 1229 a(The) 22 b(next) g(blo) s(c) m(k) h(of) f(data) h(sho) m
(ws) f(a) h(summary) e(of) h(all) h(freed) f(memory) g(allo) s
(cations.) 40 b(This) 22 b(is) g(only) g(p) s(ossible) 94
1328 y(b) s(ecause) i(the) g(`) p Fl(NOFREE) p Fo(') f(option) h(w) m
(as) h(also) f(giv) m(en,) j(otherwise) d(there) g(w) m(ould) g(b) s(e)
f(no) h(details) h(on) f(freed) f(memory) 94 1428 y(allo) s(cations.) 43
b(All) 31 b(of) f(these) g(en) m(tries) h(sho) m(w) f(where) f(the) h
(allo) s(cation) i(w) m(as) f(freed,) e(whic) m(h) h(can) g(b) s(e) g
(useful) f(if) h(y) m(ou) 94 1528 y(quic) m(kly) i(needed) f(to) h(see)
f(where) g(an) g(allo) s(cation) i(w) m(as) f(freed.) 42
b(The) 30 b(`) p Fl(SHOWFREED) p Fo(') f(option) j(also) g(displa) m
(ys) f(this) 94 1627 y(information.) 41 b(Note) 32 b(that) e(the) h
(list) f(will) h(b) s(e) e(limited) i(to) g(the) f(size) h(of) f(the) h
(freed) e(queue) h(and) f(will) i(sho) m(w) f(only) 94
1727 y(the) h(most) g(recen) m(tly-freed) g(items.) 219
1864 y(As) d(this) g(example) h(w) m(as) f(run) f(on) g(UNIX,) i(the) f
(mpatrol) h(library) e(replaces) i(the) f(default) g(implemen) m
(tations) 94 1963 y(of) p Fl 46 w(malloc\(\)) p Fo(,) p
Fl 46 w(free\(\)) p Fo(,) 47 b(etc.) 85 b(As) 45 b(can) h(b) s(e) e
(seen) h(b) s(elo) m(w,) k(this) c(allo) m(ws) h(the) f(library) f(to) i
(trace) g(all) g(calls) 94 2063 y(to) c(allo) s(cate) h(dynamic) e
(memory) f(in) h(a) g(pro) s(cess,) i(ev) m(en) f(from) e(functions) g
(that) i(w) m(ere) f(not) g(compiled) g(with) 94 2163
y(mpatrol.) k(F) -8 b(our) 32 b(of) f(the) h(\014v) m(e) g(functions) f
(sho) m(wn) g(b) s(elo) m(w) g(w) m(ere) h(called) h(b) m(y) e(the) h
(mpatrol) g(library) f(in) g(order) g(to) 94 2262 y(read) 36
b(the) g(sym) m(b) s(ols) f(from) g(ELF) g(ob) 5 b(ject) 37
b(\014les.) 56 b(Ho) m(w) m(ev) m(er,) 39 b(they) c(are) h(lo) s(cated)
h(in) e(the) h(ELF) g(access) g(library) 94 2362 y(whic) m(h) 31
b(w) m(as) f(not) h(compiled) g(with) f(mpatrol.) 219
2499 y(Note) 25 b(that) g(the) f(follo) m(wing) i(data) e(has) g(again)
h(b) s(een) e(cut) i(do) m(wn) e(in) h(size) h(for) f(the) g(purp) s
(oses) e(of) i(this) g(example.) 94 2599 y(The) 30 b(`) p
Fl(...) p Fo(') g(marks) g(text) i(that) f(has) f(b) s(een) f(remo) m
(v) m(ed.) p Fl 334 2740 a(freed) 47 b(allocations:) d(13) j(\(19756) g
(bytes\)) 525 2844 y(0x0002E010) e(\(232) i(bytes\)) f({free:1:0}) f
([-|-|-]) 716 2947 y(0x7FB3E5BC) g(_elf_end+776) 716
3051 y(0x7FB6B3D4) g(__mp_addsymbols+440) 716 3155 y(0x7FB6FF5C) g
(__mp_init+208) 716 3259 y(0x7FB701FC) g(__mp_alloc+84) 716
3362 y(0x000109B8) g(main+40) 716 3466 y(0x00010970) g(_start+192) 525
3674 y(0x0002E118) g(\(3536) i(bytes\)) f({free:2:0}) f([-|-|-]) 716
3778 y(0x7FB3E450) g(_elf_end+412) 716 3881 y(0x7FB6B3D4) g
(__mp_addsymbols+440) 716 3985 y(0x7FB6FF5C) g(__mp_init+208) 716
4089 y(0x7FB701FC) g(__mp_alloc+84) 716 4193 y(0x000109B8) g(main+40)
716 4296 y(0x00010970) g(_start+192) 525 4504 y(0x0002EF08) g(\(232) i
(bytes\)) f({free:3:0}) f([-|-|-]) 716 4608 y(0x7FB3E5BC) g
(_elf_end+776) 716 4711 y(0x7FB6B3D4) g(__mp_addsymbols+440) 716
4815 y(0x7FB6B4B4) g(__mp_addextsymbols+208) 716 4919
y(0x7FB6FF64) g(__mp_init+216) 716 5023 y(0x7FB701FC) g(__mp_alloc+84)
716 5127 y(0x000109B8) g(main+40) 716 5230 y(0x00010970) g(_start+192)
525 5438 y(0x0002F010) g(\(2448) i(bytes\)) f({free:4:0}) f([-|-|-]) 716
5542 y(0x7FB3E450) g(_elf_end+412) 716 5645 y(0x7FB6B3D4) g
(__mp_addsymbols+440) p 90 rotate dyy eop
%%Page: 126 132
126 131 bop Fo 94 -116 a(126) 3332 b(mpatrol) p Fl 716
365 a(0x7FB6B4B4) 45 b(__mp_addextsymbols+208) 716 469
y(0x7FB6FF64) g(__mp_init+216) 716 573 y(0x7FB701FC) g(__mp_alloc+84)
716 677 y(0x000109B8) g(main+40) 716 780 y(0x00010970) g(_start+192) 525
988 y(...) 525 1196 y(0x00045DF0) g(\(4) j(bytes\)) e({free:20:0}) e
([main|test.c|17]) 716 1299 y(0x00010A14) h(main+132) 716
1403 y(0x00010970) g(_start+192) p Fo 219 1536 a(The) 22
b(\014nal) h(blo) s(c) m(k) h(of) f(data) g(sho) m(ws) g(a) g(summary) f
(of) h(all) h(unfreed) e(memory) g(allo) s(cations.) 41
b(This) 22 b(can) h(sho) m(w) g(up) 94 1636 y(memory) h(leaks,) h
(although) f(all) g(but) e(one) i(of) f(the) g(unfreed) f(memory) h
(allo) s(cations) j(in) c(this) h(example) h(come) g(from) 94
1735 y(the) k(standard) f(C) g(library) -8 b(.) 40 b(On) 26
b(systems) i(suc) m(h) f(as) h(UNIX) f(it) i(do) s(es) e(not) g(really)
i(matter) f(ab) s(out) f(these) h(unfreed) 94 1835 y(allo) s(cations) 33
b(since) e(they) f(will) h(automatically) i(b) s(e) d(returned) f(to) i
(the) g(system) f(on) h(pro) s(cess) f(termination.) 219
1968 y(Ho) m(w) m(ev) m(er,) f(the) c(other) g(unfreed) f(allo) s
(cation) k(sho) m(ws) d(an) g(example) h(of) f(a) h(memory) f(leak,) i
(where) e(no) g(p) s(oin) m(ters) 94 2067 y(referencing) 30
b(that) f(allo) s(cation) i(remain) e(in) g(the) g(program) g(to) g
(free) g(it) h(with.) 40 b(If) 28 b(this) h(w) m(as) g(within) g(a) g
(lo) s(op) g(then) 94 2167 y(the) k(program) f(could) h(quic) m(kly) g
(run) e(a) m(w) m(a) m(y) j(with) e(memory) -8 b(,) 34
b(causing) e(at) h(least) h(a) f(decrease) g(in) f(p) s(erformance,) 94
2267 y(and) 37 b(at) h(most) g(a) f(memory) g(shortage.) 62
b(The) 37 b(mpatrol) g(library) g(mak) m(es) h(it) g(easier) g(to) g
(sp) s(ot) f(memory) g(leaks,) 94 2366 y(esp) s(ecially) 32
b(if) e(the) h(`) p Fl(PROF) p Fo(') f(pro\014ling) g(option) g(is) h
(used.) 219 2499 y(The) f(`) p Fl(SHOWUNFREED) p Fo(') e(option) j
(also) g(displa) m(ys) f(this) h(information.) p Fl 334
2636 a(unfreed) 46 b(allocations:) f(7) i(\(1369) g(bytes\)) 525
2740 y(0x0002FDE0) e(\(36) i(bytes\)) f({calloc:13:0}) f([-|-|-]) 716
2844 y(0x7FA54B7C) g(_tzload+56) 716 2947 y(0x7FA53990) g
(_ltzset_u+444) 716 3051 y(0x7FA52D98) g(localtime_u+28) 716
3155 y(0x7FA3AF20) g(ctime+12) 716 3259 y(0x7FB6D05C) g
(__mp_printversion+184) 716 3362 y(0x7FB6FFA0) g(__mp_init+276) 716
3466 y(0x7FB701FC) g(__mp_alloc+84) 716 3570 y(0x000109B8) g(main+40)
716 3674 y(0x00010970) g(_start+192) 525 3881 y(0x0002FE28) g(\(241) i
(bytes\)) f({calloc:15:0}) e([-|-|-]) 716 3985 y(0x7FA54E3C) h
(_tzload+760) 716 4089 y(0x7FA53990) g(_ltzset_u+444) 716
4193 y(0x7FA52D98) g(localtime_u+28) 716 4296 y(0x7FA3AF20) g(ctime+12)
716 4400 y(0x7FB6D05C) g(__mp_printversion+184) 716 4504
y(0x7FB6FFA0) g(__mp_init+276) 716 4608 y(0x7FB701FC) g(__mp_alloc+84)
716 4711 y(0x000109B8) g(main+40) 716 4815 y(0x00010970) g(_start+192)
525 5023 y(0x0002FF40) g(\(84) i(bytes\)) f({calloc:16:0}) f([-|-|-])
716 5127 y(0x7FA54E64) g(_tzload+800) 716 5230 y(0x7FA53990) g
(_ltzset_u+444) 716 5334 y(0x7FA52D98) g(localtime_u+28) 716
5438 y(0x7FA3AF20) g(ctime+12) 716 5542 y(0x7FB6D05C) g
(__mp_printversion+184) 716 5645 y(0x7FB6FFA0) g(__mp_init+276) p
90 rotate dyy eop
%%Page: 127 133
127 132 bop Fo 94 -116 a(Chapter) 30 b(16:) 42 b(Examples) 2750
b(127) p Fl 716 365 a(0x7FB701FC) 45 b(__mp_alloc+84) 716
469 y(0x000109B8) g(main+40) 716 573 y(0x00010970) g(_start+192) 525
780 y(0x0002FFB8) g(\(13) i(bytes\)) f({calloc:17:0}) f([-|-|-]) 716
884 y(0x7FA54EE8) g(_tzload+932) 716 988 y(0x7FA53990) g(_ltzset_u+444)
716 1092 y(0x7FA52D98) g(localtime_u+28) 716 1196 y(0x7FA3AF20) g
(ctime+12) 716 1299 y(0x7FB6D05C) g(__mp_printversion+184) 716
1403 y(0x7FB6FFA0) g(__mp_init+276) 716 1507 y(0x7FB701FC) g
(__mp_alloc+84) 716 1611 y(0x000109B8) g(main+40) 716
1714 y(0x00010970) g(_start+192) 525 1922 y(0x0002FFE8) g(\(4) j
(bytes\)) e({malloc:19:0}) e([main|test.c|14]) 716 2026
y(0x000109B8) h(main+40) 716 2130 y(0x00010970) g(_start+192) 525
2337 y(...) p Fo 219 2462 a(Beginning) 34 b(with) f(mpatrol) h(release)
h(1.4.2,) h(the) d(`) p Fl(LEAKTABLE) p Fo(') f(option) i(is) f(a) m(v)
-5 b(ailable) 36 b(to) e(summarise) f(the) 94 2561 y(ab) s(o) m(v) m(e)
e(unfreed) d(memory) h(allo) s(cations) i(without) e(including) g(the) g
(in) m(ternal) h(memory) f(allo) s(cations) j(that) d(w) m(ere) 94
2661 y(made) 47 b(when) e(the) h(mpatrol) h(library) e(w) m(as) i
(initialised.) 89 b(If) 46 b(y) m(ou) g(add) g(the) g(`) p
Fl(LEAKTABLE) p Fo(') e(option) j(to) g(the) p Fl 94
2760 a(MPATROL_OPTIONS) p Fo 35 w(en) m(vironmen) m(t) 39
b(v) -5 b(ariable) 40 b(and) e(then) g(re-run) f(the) i(program) g(y) m
(ou) g(should) e(see) i(the) g(fol-) 94 2860 y(lo) m(wing) 32
b(in) e(the) g(mpatrol) h(log) h(\014le:) p Fl 334 2989
a(top) 47 b(1) h(unfreed) e(memory) g(entry) g(in) h(leak) g(table:) 669
3196 y(bytes) 141 b(count) 94 b(location) 525 3300 y(--------) g
(------) f(--------) 859 3404 y(4) 334 b(1) 95 b(test.c) 47
b(line) f(14) 859 3508 y(4) 334 b(1) 95 b(total) p 90 rotate
dyy eop
%%Page: 128 134
128 133 bop Fo 94 -116 a(128) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 129 135
129 134 bop Fo 94 -116 a(Chapter) 30 b(17:) 42 b(T) -8
b(utorial) 2813 b(129) p Fk 94 365 a(17) 81 b(T) -13
b(utorial) p Fo 219 619 a(In) 27 b(this) h(c) m(hapter) h(w) m(e'll) g
(lo) s(ok) g(at) g(a) f(real) h(example) f(of) h(using) e(the) h
(mpatrol) h(library) e(to) i(debug) f(a) g(program.) 94
718 y(All) 39 b(of) e(the) h(follo) m(wing) h(building) e(and) f
(debugging) i(steps) f(w) m(ere) h(p) s(erformed) e(on) i(an) f(In) m
(tel) h(Lin) m(ux) f(mac) m(hine) 94 818 y(so) k(the) f(details) h(ma) m
(y) g(di\013er) f(sligh) m(tly) h(on) f(y) m(our) g(system,) j(but) d
(the) g(concepts) h(should) e(remain) h(the) g(same.) 94
917 y(Ho) m(w) m(ev) m(er,) 31 b(on) 26 b(systems) i(without) f
(virtual) g(memory) g(some) h(of) f(the) g(steps) g(ma) m(y) h
(actually) g(cause) g(the) f(mac) m(hine) 94 1017 y(to) 36
b(lo) s(c) m(k) g(up) e(or) h(crash) g(so) g(b) s(e) g(a) m(w) m(are) h
(of) f(this) g(if) g(y) m(ou) h(are) f(running) e(suc) m(h) i(a) g
(system) h(|) f(y) m(ou) g(ma) m(y) h(b) s(e) e(safer) 94
1117 y(just) c(reading) h(this) f(tutorial) i(rather) e(than) g
(attempting) i(it!) 219 1251 y(This) 21 b(tutorial) i(will) f(also) h
(mak) m(e) g(use) e(of) h(the) g(option) h(`) p Fl(USEDEBUG) p
Fo(') d(whic) m(h) h(displa) m(ys) h(source-lev) m(el) i(\014le) e
(names) 94 1350 y(and) 35 b(line) h(n) m(um) m(b) s(ers) e(asso) s
(ciated) j(with) e(sym) m(b) s(ols) h(in) f(call) i(stac) m(k) g
(tracebac) m(ks,) h(but) d(only) h(if) f(the) h(underlying) 94
1450 y(ob) 5 b(ject) 31 b(\014le) f(access) h(library) e(supp) s(orts) f
(reading) i(line) g(tables) h(from) e(ob) 5 b(ject) 30
b(\014les) g(and) f(ev) m(en) i(then) e(only) h(if) g(the) 94
1550 y(ob) 5 b(ject) 32 b(\014les) e(w) m(ere) i(compiled) f(with) f
(debugging) g(information) h(enabled.) 42 b(Alternativ) m(ely) -8
b(,) 33 b(y) m(ou) e(ma) m(y) g(b) s(e) f(able) 94 1649
y(to) i(use) e(the) p Fl 30 w(mpsym) p Fo 29 w(command) g(to) h(obtain)
g(suc) m(h) f(information) h(instead.) 219 1784 y(The) 26
b(program) h(w) m(e) g(are) h(going) g(to) f(lo) s(ok) h(at) f(is) g(a)
g(simple) g(\014lter) g(whic) m(h) g(pro) s(cesses) f(its) i(standard) e
(input) g(and) 94 1883 y(displa) m(ys) i(the) f(pro) s(cessed) f
(information) i(on) e(its) i(standard) e(output.) 39
b(In) 27 b(this) g(case) h(the) f(program) g(con) m(v) m(erts) h(all) 94
1983 y(lo) m(w) m(ercase) 36 b(c) m(haracters) e(to) f(upp) s(ercase) f
(and) h(remo) m(v) m(es) h(an) m(y) f(blank) f(lines.) 49
b(The) 32 b(source) h(for) f(the) h(program) g(is) 94
2082 y(giv) m(en) f(b) s(elo) m(w,) f(but) e(can) i(also) g(b) s(e) f
(found) f(in) h(`) p Fl(tests/tutorial/test1.c) p Fo('.) p
Fl 334 2221 a(23) 95 b(/*) 334 2325 y(24) 143 b(*) 48
b(Reads) e(the) h(standard) e(input) i(file) f(stream,) g(converts) g
(all) h(lowercase) 334 2428 y(25) 143 b(*) 48 b(characters) d(to) i
(uppercase,) e(and) i(displays) e(all) i(non-empty) e(lines) i(to) g
(the) 334 2532 y(26) 143 b(*) 48 b(standard) d(output) h(file) h
(stream.) 334 2636 y(27) 143 b(*/) 334 2947 y(30) 95
b(#include) 46 b(<stdio.h>) 334 3051 y(31) 95 b(#include) 46
b(<stdlib.h>) 334 3155 y(32) 95 b(#include) 46 b(<string.h>) 334
3259 y(33) 95 b(#include) 46 b(<ctype.h>) 334 3570 y(36) 95
b(char) 47 b(*strtoupper\(char) c(*s\)) 334 3674 y(37) 95
b({) 334 3778 y(38) 286 b(char) 47 b(*t;) 334 3881 y(39) 286
b(size_t) 46 b(i,) i(l;) 334 4089 y(41) 286 b(l) 48 b(=) f
(strlen\(s\);) 334 4193 y(42) 286 b(t) 48 b(=) f(\(char) g(*\)) g
(malloc\(l\);) 334 4296 y(43) 286 b(for) 47 b(\(i) g(=) h(0;) f(i) g(<)
h(l;) f(i++\)) 334 4400 y(44) 477 b(t[i]) 47 b(=) g(toupper\(s[i]\);)
334 4504 y(45) 286 b(t[i]) 47 b(=) g('\\0';) 334 4608
y(46) 286 b(return) 46 b(t;) 334 4711 y(47) 95 b(}) 334
5023 y(50) g(int) 47 b(main\(void\)) 334 5127 y(51) 95
b({) 334 5230 y(52) 286 b(char) 47 b(*b,) g(*s;) 334
5438 y(54) 286 b(b) 48 b(=) f(\(char) g(*\)) g(malloc\(BUFSIZ\);) 334
5542 y(55) 286 b(while) 47 b(\(gets\(b\)\)) 334 5645
y(56) 286 b({) p 90 rotate dyy eop
%%Page: 130 136
130 135 bop Fo 94 -116 a(130) 3332 b(mpatrol) p Fl 334
365 a(57) 477 b(s) 48 b(=) f(strtoupper\(b\);) 334 469
y(58) 477 b(if) 47 b(\(*s) g(!=) g('\\0'\)) 334 573 y(59) 477
b({) 334 677 y(60) 668 b(puts\(s\);) 334 780 y(61) g(free\(s\);) 334
884 y(62) 477 b(}) 334 988 y(63) 286 b(}) 334 1092 y(64) g(free\(b\);)
334 1196 y(65) g(return) 46 b(EXIT_SUCCESS;) 334 1299
y(66) 95 b(}) p Fo 219 1432 a(If) 24 b(y) m(ou) h(quic) m(kly) g
(skimmed) f(o) m(v) m(er) i(the) f(ab) s(o) m(v) m(e) h(co) s(de) f
(then) f(y) m(ou) h(migh) m(t) g(ha) m(v) m(e) h(noticed) f(some) g
(rather) g(ob) m(vious) 94 1532 y(errors,) f(but) d(there) i(are) f
(also) h(some) g(less) f(ob) m(vious) h(ones) f(hidden) f(there) h(as) g
(w) m(ell.) 39 b(After) 22 b(compiling) h(and) f(linking) 94
1632 y(with) 27 b(the) g(system) h(C) e(compiler) i(and) e(libraries) i
(it) f(successfully) g(runs,) g(ev) m(en) g(when) f(its) i(source) f
(co) s(de) g(is) g(pip) s(ed) 94 1731 y(to) 32 b(it.) 41
b(So) 30 b(if) g(it) h(runs,) e(wh) m(y) h(b) s(other) g(trying) g(to) i
(debug) d(it?) 219 1864 y(The) 35 b(short) h(answ) m(er) g(to) g(that) g
(is) g(that) h(this) e(program) h(do) s(es) f(in) h(fact) h(con) m
(tain) g(one) f(rather) g(ma) 5 b(jor) 35 b(error) 94
1964 y(that) e(is) f(lik) m(ely) i(to) f(prev) m(en) m(t) f(it) h(from)
f(running) e(p) s(ortably) i(on) g(other) g(systems.) 46
b(Ho) m(w) m(ev) m(er,) 35 b(for) d(the) g(purp) s(oses) 94
2064 y(of) d(this) g(tutorial,) i(w) m(e'll) f(pretend) e(that) h(w) m
(e'v) m(e) i(just) d(b) s(een) g(handed) g(the) h(source) g(co) s(de) g
(for) f(this) h(program) g(and) 94 2163 y(ha) m(v) m(e) i(not) f(w) m
(ork) m(ed) g(on) g(it) g(b) s(efore.) 40 b(So) 29 b(let's) i(no) m(w) f
(try) f(to) h(compile) h(and) e(link) g(it) i(with) e(the) h(mpatrol) g
(library) p Fh 3812 2130 a(1) p Fo 3849 2163 a(.) 219
2296 y(First,) 36 b(add) e(the) g(inclusion) h(of) f(`) p
Fl(mpatrol.h) p Fo(') e(to) j(line) g(34) g(so) g(that) g(w) m(e) g
(can) f(replace) i(calls) f(to) p Fl 35 w(malloc\(\)) p
Fo 94 2396 a(and) p Fl 41 w(free\(\)) p Fo 39 w(with) 41
b(their) g(mpatrol) g(equiv) -5 b(alen) m(ts) p Fh 1845
2363 a(2) p Fo 1884 2396 a(.) 72 b(Then,) 43 b(recompile) f(the) f
(program) g(and) f(link) h(it) g(with) 94 2496 y(the) 34
b(mpatrol) g(library) -8 b(.) 51 b(This) 33 b(time,) i(running) d(it) i
(with) g(the) f(`) p Fl(CHECK=-) p Fo(') g(option) h(and) f(ev) m(en) h
(the) g(simplest) g(of) 94 2595 y(non-empt) m(y) d(input) e(lines) i
(should) e(cause) i(it) g(to) g(ab) s(ort!) 219 2728
y(If) h(y) m(ou) h(lo) s(ok) g(at) g(the) g(`) p Fl(mpatrol.log) p
Fo(') d(\014le) i(pro) s(duced,) g(y) m(ou) h(should) e(see) i
(something) g(along) g(the) g(lines) g(of) 94 2828 y(the) e(follo) m
(wing) h(at) f(the) g(end) e(of) i(the) f(log) i(\014le.) p
Fl 334 2965 a(ERROR:) 47 b([FRECOR]:) e(free) h(memory) h(corruption) e
(at) i(0x08067FF6) 716 3069 y(0x08067FF6) 93 b(00555555) 46
b(55555555) f(5555) 715 b(.UUUUUUUUU) p Fo 219 3202 a(This) 60
b(tells) h(us) f(that) g(something) h(has) f(written) h(a) f(zero) h(b)
m(yte) g(in) m(to) h(free) e(memory) g(at) h(lo) s(cation) 94
3302 y(`) p Fl(0x08067FF6) p Fo('.) 45 b(Unfortunately) -8
b(,) 33 b(the) g(library) f(only) g(caugh) m(t) h(it) g(at) g(the) g
(next) f(call) i(to) f(one) f(of) h(its) f(functions) 94
3401 y(so) k(it) g(had) f(already) h(happ) s(ened) e(somewhere) i(in) f
(b) s(et) m(w) m(een) h(the) g(last) g(call) h(and) e(the) g(curren) m
(t) h(call.) 57 b(T) -8 b(urning) 94 3501 y(on) 33 b(the) g(`) p
Fl(LOGALL) p Fo(') e(option) i(in) f(the) p Fl 33 w(MPATROL_OPTIONS) p
Fo 28 w(en) m(vironmen) m(t) h(v) -5 b(ariable) 33 b(allo) m(ws) h(us) e
(to) h(see) g(the) g(last) 94 3601 y(successful) e(function) f(call) h
(to) g(the) g(mpatrol) g(library) -8 b(.) p Fl 334 3738
a(ALLOC:) 47 b(malloc) f(\(56,) g(8192) h(bytes,) f(4) h(bytes\)) g
([main|test1.c|54]) 716 3842 y(0x0804960E) e(main+34) h(at) h
(test1.c:54) 716 3945 y(0x4007C9CB) e(__libc_start_main+255) 716
4049 y(0x080494D1) g(_start+33) 334 4257 y(returns) h(0x080F0B48) 334
4464 y(ALLOC:) h(malloc) f(\(68,) g(2) i(bytes,) e(4) h(bytes\)) f
([strtoupper|test1.c|42]) 716 4568 y(0x08049592) f(strtoupper+50) f(at)
k(test1.c:42) 716 4672 y(0x08049631) d(main+69) h(at) h(test1.c:57) 716
4776 y(0x4007C9CB) e(__libc_start_main+255) 716 4879
y(0x080494D1) g(_start+33) 334 5087 y(returns) h(0x08067FF4) p
94 5182 1200 4 v Fh 143 5243 a(1) p Fg 219 5274 a(On) 33
b(UNIX) f(systems) i(with) g(dynamic) f(linking) h(it) f(migh) n(t) h
(also) h(b) r(e) e(p) r(ossible) i(to) f(run) f(the) g(program) i
(under) d(the) p Ff 33 w(mpatrol) p Fg 219 5366 a(command) 27
b(with) g(its) g(`) p Ff(--dynamic) p Fg(') i(option) e(without) g(ha) n
(ving) g(to) g(recompile) g(or) g(relink,) h(but) e(compiling) h(and) g
(linking) g(with) 219 5457 y(the) e(mpatrol) i(library) f(is) g(a) g
(more) g(generic) g(solution) h(across) g(di\013eren) n(t) e
(platforms.) p Fh 143 5522 a(2) p Fg 219 5554 a(This) i(is) g(not) g
(strictly) g(necessary) g(on) f(UNIX) f(and) h(Windo) n(ws) i
(platforms) g(\(and) e(AmigaOS) g(when) h(using) p Ff
26 w(gcc) p Fg(\),) h(but) e(it) g(do) r(es) 219 5645
y(giv) n(e) g(us) f(more) i(debugging) f(information.) p
90 rotate dyy eop
%%Page: 131 137
131 136 bop Fo 94 -116 a(Chapter) 30 b(17:) 42 b(T) -8
b(utorial) 2813 b(131) 219 365 y(Unfortunately) -8 b(,) 42
b(this) d(only) h(tells) g(us) f(that) g(the) h(last) g(successful) f
(mpatrol) g(library) g(function) g(call) i(w) m(as) p
Fl 94 465 a(malloc\(\)) p Fo 40 w(called) i(from) p Fl
41 w(strtoupper\(\)) p Fo(.) 72 b(If) 42 b(w) m(e) g(add) f(the) h
(option) g(`) p Fl(OFLOWSIZE=8) p Fo(') e(to) i(the) p
Fl 42 w(MPATROL_) 94 565 y(OPTIONS) p Fo 27 w(en) m(vironmen) m(t) 29
b(v) -5 b(ariable) 29 b(then) f(w) m(e) h(get) h(sligh) m(tly) f(more) g
(information) g(ab) s(out) f(whic) m(h) g(memory) g(allo-) 94
664 y(cation) k(w) m(as) f(a\013ected) p Fh 846 631 a(3) p
Fo 885 664 a(.) p Fl 334 790 a(ERROR:) 47 b([ALLOVF]:) e(allocation) g
(0x08071E34) g(has) i(a) g(corrupted) e(overflow) h(buffer) g(at) 1146
894 y(0x08071E36) 716 997 y(0x08071E36) 93 b(00AAAAAA) 46
b(AAAAAAAA) 952 b(........) 525 1205 y(0x08071E34) 45
b(\(2) j(bytes\)) e({malloc:68:0}) e([strtoupper|test1.c|42]) 716
1309 y(0x08049592) h(strtoupper+50) f(at) k(test1.c:42) 716
1412 y(0x08049631) d(main+69) h(at) h(test1.c:57) 716
1516 y(0x4007C9CB) e(__libc_start_main+255) 716 1620
y(0x080494D1) g(_start+33) p Fo 219 1742 a(No) m(w) 28
b(w) m(e) f(can) g(mak) m(e) h(a) f(b) s(etter) g(guess) g(ab) s(out) f
(what) h(is) g(happ) s(ening.) 38 b(Since) 27 b(the) g(start) g(of) g
(the) g(upp) s(er) e(o) m(v) m(er-) 94 1841 y(\015o) m(w) 30
b(bu\013er) f(of) i(allo) s(cation) h(68) f(has) e(b) s(een) h(written)
g(to,) h(w) m(e) f(can) g(assume) g(that) g(something) h(has) f
(written) g(one) 94 1941 y(b) m(yte) g(b) s(ey) m(ond) f(the) h(end) e
(of) i(that) g(memory) f(allo) s(cation.) 42 b(Y) -8
b(ou) 30 b(can) g(probably) e(see) i(where) f(that) h(is) f(happ) s
(ening) 94 2040 y(no) m(w) i(b) m(y) f(lo) s(oking) h(at) g(the) g(co) s
(de,) g(but) f(let's) h(try) f(to) h(b) s(e) f(ev) m(en) h(more) g
(sure) e(that) i(this) g(is) f(what) g(is) h(wrong.) 219
2162 y(The) 38 b(only) g(fo) s(olpro) s(of) h(w) m(a) m(y) g(to) g(do) f
(this) h(is) f(to) h(add) f(a) h(w) m(atc) m(h) g(p) s(oin) m(t) g(to) g
(k) m(eep) g(an) f(ey) m(e) i(on) e(the) h(address) 94
2262 y(that) f(is) e(b) s(eing) g(written) h(to.) 60
b(This) 35 b(can) i(normally) g(only) g(b) s(e) e(done) i(within) f(a) h
(debugger,) h(but) e(on) g(systems) 94 2361 y(that) d(supp) s(ort) e
(programmable) h(soft) m(w) m(are) i(w) m(atc) m(h) f(p) s(oin) m(ts,) g
(the) f(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(can) f(b) s(e) g(used) f
(to) i(do) 94 2461 y(the) 40 b(same) g(thing.) 68 b(F) -8
b(or) 40 b(the) g(sak) m(e) h(of) e(generalit) m(y) -8
b(,) 45 b(w) m(e'll) c(use) e(the) g(debugger) h(w) m(atc) m(h) g(p) s
(oin) m(t) g(approac) m(h,) i(in) 94 2560 y(this) 32
b(case) h(with) p Fl 31 w(gdb) p Fo(.) 43 b(In) 31 b(order) g(for) h
(the) f(follo) m(wing) i(example) g(to) f(w) m(ork) g(correctly) g(y) m
(ou'll) h(need) e(to) i(add) e(the) 94 2660 y(`) p Fl(ALLOCSTOP=68) p
Fo(') e(option) i(to) h(the) p Fl 32 w(MPATROL_OPTIONS) p
Fo 27 w(en) m(vironmen) m(t) f(v) -5 b(ariable) 32 b(so) g(that) f(w) m
(e) h(can) f(stop) h(just) 94 2760 y(after) f(the) g(last) g
(successful) f(memory) h(allo) s(cation.) p Fl 334 2885
a(\(gdb\)) 47 b(break) f(main) 334 2989 y(Breakpoint) f(1) j(at) f
(0x80495f2:) e(file) i(test1.c,) e(line) i(54.) 334 3093
y(\(gdb\)) g(run) g(<test1.c) 334 3197 y(Starting) f(program:) g(a.out)
334 3300 y(Breakpoint) f(1,) j(main\(\)) e(at) h(test1.c:54) 334
3404 y(54) 477 b(b) 48 b(=) f(\(char) f(*\)) i(malloc\(BUFSIZ\);) 334
3508 y(\(gdb\)) f(break) f(__mp_trap) 334 3612 y(Breakpoint) f(2) j(at)
f(0x804f083) 334 3716 y(\(gdb\)) g(continue) 334 3819
y(Continuing.) 334 3923 y(Breakpoint) e(2,) j(0x804f083) d(in) i
(__mp_trap\(\)) 334 4027 y(\(gdb\)) g(backtrace) 334
4131 y(#0) 95 b(0x804f083) 46 b(in) h(__mp_trap\(\)) 334
4234 y(#1) 95 b(0x804c81b) 46 b(in) h(__mp_getmemory\(\)) 334
4338 y(#2) 95 b(0x8049a94) 46 b(in) h(__mp_alloc\(\)) 334
4442 y(#3) 95 b(0x8049592) 46 b(in) h(strtoupper\(s=0x80f0be0) 42
b("/*"\)) k(at) h(test1.c:42) 334 4546 y(#4) 95 b(0x8049631) 46
b(in) h(main\(\)) f(at) h(test1.c:57) 334 4650 y(\(gdb\)) g(step) 334
4753 y(Single) g(stepping) e(until) h(exit) h(from) g(function) e
(__mp_trap,) 334 4857 y(which) i(has) g(no) g(line) g(number) f
(information.) 334 4961 y(0x804c81b) g(in) h(__mp_getmemory\(\)) 334
5065 y(\(gdb\)) g(step) 334 5168 y(Single) g(stepping) e(until) h(exit)
h(from) g(function) e(__mp_getmemory,) 334 5272 y(which) i(has) g(no) g
(line) g(number) f(information.) 334 5376 y(0x8049a94) g(in) h
(__mp_alloc\(\)) p 94 5462 1200 4 v Fh 143 5522 a(3) p
Fg 219 5554 a(Note) 25 b(that) h(the) f(start) h(address) g(of) g(the) f
(allo) r(cation) j(has) e(c) n(hanged) f(sligh) n(tly) h(since) g(w) n
(e) g(added) f(padding) h(around) f(it) h(with) f(the) 219
5645 y(`) p Ff(OFLOWSIZE) p Fg(') j(option.) p 90 rotate
dyy eop
%%Page: 132 138
132 137 bop Fo 94 -116 a(132) 3332 b(mpatrol) p Fl 334
365 a(\(gdb\)) 47 b(step) 334 469 y(Single) g(stepping) e(until) h
(exit) h(from) g(function) e(__mp_alloc,) 334 573 y(which) i(has) g(no)
g(line) g(number) f(information.) 334 677 y(strtoupper\(s=0x80f0be0) c
("/*"\)) 47 b(at) g(test1.c:43) 334 780 y(43) 477 b(for) 47
b(\(i) g(=) h(0;) f(i) g(<) h(l;) f(i++\)) 334 884 y(\(gdb\)) g(watch) f
(*0x8071e36) 334 988 y(Hardware) g(watchpoint) f(3:) i(*134684214) 334
1092 y(\(gdb\)) g(continue) 334 1196 y(Continuing.) 334
1299 y(Hardware) f(watchpoint) f(3:) i(*134684214) 334
1403 y(Old) g(value) g(=) g(-1431655766) 334 1507 y(New) g(value) g(=) g
(-1431655936) 334 1611 y(strtoupper\(s=0x80f0be0) 42
b("/*"\)) 47 b(at) g(test1.c:46) 334 1714 y(46) 477 b(return) 46
b(t;) 334 1818 y(\(gdb\)) h(quit) 334 1922 y(The) g(program) f(is) h
(running.) 94 b(Exit) 46 b(anyway?) g(\(y) h(or) g(n\)) h(y) p
Fo 219 2044 a(After) 38 b(loading) g(the) f(program) h(in) m(to) p
Fl 38 w(gdb) p Fo(,) g(w) m(e) g(need) f(to) h(break) g(at) p
Fl 38 w(main\(\)) p Fo 35 w(so) g(that) g(w) m(e) g(can) g(run) d(to) k
(a) 94 2144 y(p) s(oin) m(t) 31 b(where) e(all) j(of) e(the) g(shared) g
(library) g(sym) m(b) s(ols) g(ha) m(v) m(e) h(b) s(een) f(loaded) g
(in) m(to) h(memory) p Fh 3129 2111 a(4) p Fo 3167 2144
a(.) 41 b(W) -8 b(e) 31 b(can) f(then) g(set) 94 2243
y(another) h(breakp) s(oin) m(t) f(at) p Fl 32 w(__mp_trap\(\)) p
Fo 27 w(and) g(con) m(tin) m(ue) h(un) m(til) g(allo) s(cation) i(68) e
(has) f(b) s(een) g(reac) m(hed.) 219 2365 y(Because) j(the) e(mpatrol)
h(library) f(has) g(not) g(b) s(een) g(built) g(with) g(debugging) g
(information) h(in) f(this) g(example) 94 2465 y(w) m(e) g(can) f(quic)
m(kly) g(step) g(bac) m(k) g(to) h(the) p Fl 30 w(strtoupper\(\)) p
Fo 26 w(function) e(since) p Fl 30 w(gdb) p Fo 29 w(w) m(on't) i(step) e
(through) g(functions) 94 2565 y(that) h(ha) m(v) m(e) h(no) e
(debugging) h(information.) 40 b(W) -8 b(e) 31 b(then) e(set) h(a) g(w)
m(atc) m(h) g(p) s(oin) m(t) g(on) f(address) f(`) p
Fl(0x8071e36) p Fo(',) g(whic) m(h) 94 2664 y(is) e(the) h(address) e
(of) h(the) g(memory) g(lo) s(cation) h(that) g(has) e(b) s(een) h
(causing) g(the) g(problems.) 38 b(After) 27 b(con) m(tin) m(uing,) h
(the) 94 2764 y(debugger) i(stops) g(at) h(line) f(46,) h(but) f(this) g
(is) g(more) g(lik) m(ely) h(to) g(b) s(e) e(line) i(45) g(since) f
(that) h(is) f(where) f(a) h(zero) h(b) m(yte) g(is) 94
2864 y(b) s(eing) f(written) h(to) p Fh 738 2831 a(5) p
Fo 776 2864 a(.) 219 2986 y(So,) e(w) m(e) g(ha) m(v) m(e) h(lo) s
(cated) g(the) e(problem,) h(whic) m(h) f(is) h(simply) f(a) h(case) g
(of) g(not) g(allo) s(cating) i(enough) d(memory) g(to) 94
3085 y(con) m(tain) e(the) e(copied) g(string) p Fi 24
w(and) p Fo 35 w(the) g(terminating) h(zero) g(b) m(yte.) 39
b(W) -8 b(e) 25 b(can) f(also) h(impro) m(v) m(e) g(the) p
Fl 24 w(strtoupper\(\)) p Fo 94 3185 a(function) 36 b(b) m(y) g(c) m
(hec) m(king) i(the) f(p) s(oin) m(ter) f(returned) f(b) m(y) p
Fl 36 w(malloc\(\)) p Fo 34 w(to) i(see) g(if) f(it) h(is) f(`) p
Fl(NULL) p Fo(',) h(and) f(if) g(so) g(simply) 94 3285
y(exit) d(with) f(an) g(error.) 45 b(Y) -8 b(ou) 32 b(can) g(try) g
(running) e(the) i(program) g(with) g(the) g(`) p Fl(FAILFREQ) p
Fo(') e(option) i(to) h(see) f(ho) m(w) g(it) 94 3384
y(w) m(ould) f(originally) g(b) s(eha) m(v) m(e) g(in) f(a) h(lo) m(w) g
(memory) g(situation.) 219 3506 y(The) i(follo) m(wing) i(listing) g
(sho) m(ws) f(the) f(ab) s(o) m(v) m(e) i(mo) s(di\014cations) f(that) h
(w) m(e) f(ha) m(v) m(e) h(made) f(to) g(our) f(program.) 51
b(It) 94 3606 y(can) 31 b(also) g(b) s(e) f(found) f(in) h(`) p
Fl(tests/tutorial/test2.c) p Fo('.) p Fl 334 3732 a(23) 95
b(/*) 334 3836 y(24) 143 b(*) 48 b(Reads) e(the) h(standard) e(input) i
(file) f(stream,) g(converts) g(all) h(lowercase) 334
3940 y(25) 143 b(*) 48 b(characters) d(to) i(uppercase,) e(and) i
(displays) e(all) i(non-empty) e(lines) i(to) g(the) 334
4043 y(26) 143 b(*) 48 b(standard) d(output) h(file) h(stream.) 334
4147 y(27) 143 b(*/) 334 4459 y(30) 95 b(#include) 46
b(<stdio.h>) 334 4562 y(31) 95 b(#include) 46 b(<stdlib.h>) 334
4666 y(32) 95 b(#include) 46 b(<string.h>) 334 4770 y(33) 95
b(#include) 46 b(<ctype.h>) 334 4874 y(34) 95 b(#include) 46
b("mpatrol.h") 334 5185 y(37) 95 b(char) 47 b(*strtoupper\(char) c
(*s\)) p 94 5273 1200 4 v Fh 143 5334 a(4) p Fg 219 5366
a(This) 26 b(is) h(really) f(only) g(necessary) g(when) f(the) h
(mpatrol) g(library) g(has) g(b) r(een) f(built) h(as) g(a) g(shared) g
(library) -6 b(.) p Fh 143 5431 a(5) p Fg 219 5463 a(This) 23
b(is) g(not) g(necessarily) h(the) e(fault) h(of) h(the) e(debugger) h
(or) g(the) f(debugging) h(information) h(generated) f(b) n(y) f(the) g
(compiler) h(since) 219 5554 y(on) 31 b(most) g(platforms) h(suc) n(h) e
(w) n(atc) n(h) h(p) r(oin) n(ts) g(can) g(only) f(b) r(e) h(caugh) n
(t) f(after) i(they) e(o) r(ccur,) i(hence) f(most) g(debuggers) g(sho)
n(w) g(the) 219 5645 y(next) 25 b(statemen) n(t) h(to) f(b) r(e) h
(executed) f(rather) h(than) f(the) g(curren) n(t) g(one.) p
90 rotate dyy eop
%%Page: 133 139
133 138 bop Fo 94 -116 a(Chapter) 30 b(17:) 42 b(T) -8
b(utorial) 2813 b(133) p Fl 334 365 a(38) 95 b({) 334
469 y(39) 286 b(char) 47 b(*t;) 334 573 y(40) 286 b(size_t) 46
b(i,) i(l;) 334 780 y(42) 286 b(l) 48 b(=) f(strlen\(s\);) 334
884 y(43) 286 b(if) 47 b(\(\(t) g(=) h(\(char) e(*\)) h(malloc\(l) f(+)
h(1\)\)) g(==) g(NULL\)) 334 988 y(44) 286 b({) 334 1092
y(45) 477 b(fputs\("strtoupper:) 43 b(out) k(of) g(memory\\n",) e
(stderr\);) 334 1196 y(46) 477 b(exit\(EXIT_FAILURE\);) 334
1299 y(47) 286 b(}) 334 1403 y(48) g(for) 47 b(\(i) g(=) h(0;) f(i) g
(<) h(l;) f(i++\)) 334 1507 y(49) 477 b(t[i]) 47 b(=) g
(toupper\(s[i]\);) 334 1611 y(50) 286 b(t[i]) 47 b(=) g('\\0';) 334
1714 y(51) 286 b(return) 46 b(t;) 334 1818 y(52) 95 b(}) 334
2130 y(55) g(int) 47 b(main\(void\)) 334 2233 y(56) 95
b({) 334 2337 y(57) 286 b(char) 47 b(*b,) g(*s;) 334
2545 y(59) 286 b(b) 48 b(=) f(\(char) g(*\)) g(malloc\(BUFSIZ\);) 334
2648 y(60) 286 b(while) 47 b(\(gets\(b\)\)) 334 2752
y(61) 286 b({) 334 2856 y(62) 477 b(s) 48 b(=) f(strtoupper\(b\);) 334
2960 y(63) 477 b(if) 47 b(\(*s) g(!=) g('\\0'\)) 334
3064 y(64) 477 b({) 334 3167 y(65) 668 b(puts\(s\);) 334
3271 y(66) g(free\(s\);) 334 3375 y(67) 477 b(}) 334
3479 y(68) 286 b(}) 334 3582 y(69) g(free\(b\);) 334
3686 y(70) g(return) 46 b(EXIT_SUCCESS;) 334 3790 y(71) 95
b(}) p Fo 219 3930 a(Lea) m(ving) 27 b(aside) f(the) g(ob) m(vious) h
(problem) e(with) p Fl 26 w(gets\(\)) p Fo 24 w(and) g(the) h(general) h
(ine\016ciency) g(of) f(the) g(algorithm,) 94 4029 y(w) m(e) k(could) f
(assume) g(that) g(our) g(program) g(w) m(orks) g(safely) g(no) m(w) g
(and) g(w) m(e) g(can) h(release) g(it) g(to) f(the) h(outside) f(w) m
(orld.) 94 4129 y(Ho) m(w) m(ev) m(er,) f(a) d(user) e(so) s(on) h(rep)
s(orts) f(a) i(problem) f(with) f(our) h(program) g(steadily) h(using) f
(more) g(and) g(more) g(memory) 94 4229 y(during) 30
b(its) g(execution) i(when) d(pro) s(cessing) h(v) m(ery) h(large) h
(\014les.) 219 4368 y(This) c(is) h(generally) h(attributable) f(to) h
(a) f(memory) g(leak) g(and) g(so) g(w) m(e) g(can) g(use) f(the) h(`) p
Fl(SHOWUNFREED) p Fo(') d(option) 94 4468 y(to) j(try) e(to) h(detect) h
(where) e(the) g(memory) h(leak) g(is) g(coming) g(from.) 39
b(F) -8 b(ollo) m(wing) 30 b(is) d(some) h(example) g(output) f(from) 94
4568 y(the) k(mpatrol) g(log) g(\014le) g(when) e(our) h(program) g(is)
g(run) f(and) h(is) h(giv) m(en) g(a) g(relativ) m(ely) h(small) f
(text) h(\014le) e(as) h(input.) p Fl 334 4711 a(unfreed) 46
b(allocations:) f(10) i(\(185) g(bytes\)) 525 4815 y(0x08062000) e
(\(176) i(bytes\)) f({malloc:1:0}) f([-|-|-]) 716 4919
y(0x400B681B) g(__new_fopen+27) 716 5023 y(0x0804F24E) g
(__mp_openlogfile+70) 716 5127 y(0x080497B5) g(__mp_init+109) 716
5230 y(0x08049973) g(__mp_alloc+31) 716 5334 y(0x0804962E) g(main+34) h
(at) h(test2.c:59) 716 5438 y(0x4007C9CB) e(__libc_start_main+255) 716
5542 y(0x080494D1) g(_start+33) p 90 rotate dyy eop
%%Page: 134 140
134 139 bop Fo 94 -116 a(134) 3332 b(mpatrol) p Fl 525
365 a(0x08067FF4) 45 b(\(1) j(byte\)) e({malloc:83:0}) e
([strtoupper|test2.c|43]) 716 469 y(0x08049593) h(strtoupper+51) f(at) k
(test2.c:43) 716 573 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
677 y(0x4007C9CB) e(__libc_start_main+255) 716 780 y(0x080494D1) g
(_start+33) 525 988 y(0x08067FF8) g(\(1) j(byte\)) e({malloc:89:0}) e
([strtoupper|test2.c|43]) 716 1092 y(0x08049593) h(strtoupper+51) f(at)
k(test2.c:43) 716 1196 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
1299 y(0x4007C9CB) e(__libc_start_main+255) 716 1403
y(0x080494D1) g(_start+33) 525 1611 y(0x08067FFC) g(\(1) j(byte\)) e
({malloc:90:0}) e([strtoupper|test2.c|43]) 716 1714 y(0x08049593) h
(strtoupper+51) f(at) k(test2.c:43) 716 1818 y(0x08049651) d(main+69) h
(at) h(test2.c:62) 716 1922 y(0x4007C9CB) e(__libc_start_main+255) 716
2026 y(0x080494D1) g(_start+33) 525 2233 y(0x0808B304) g(\(1) j(byte\))
e({malloc:95:0}) e([strtoupper|test2.c|43]) 716 2337
y(0x08049593) h(strtoupper+51) f(at) k(test2.c:43) 716
2441 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
2545 y(0x4007C9CB) e(__libc_start_main+255) 716 2648
y(0x080494D1) g(_start+33) 525 2856 y(0x0808B308) g(\(1) j(byte\)) e
({malloc:96:0}) e([strtoupper|test2.c|43]) 716 2960 y(0x08049593) h
(strtoupper+51) f(at) k(test2.c:43) 716 3064 y(0x08049651) d(main+69) h
(at) h(test2.c:62) 716 3167 y(0x4007C9CB) e(__libc_start_main+255) 716
3271 y(0x080494D1) g(_start+33) 525 3479 y(0x0808B30C) g(\(1) j(byte\))
e({malloc:101:0}) e([strtoupper|test2.c|43]) 716 3582
y(0x08049593) h(strtoupper+51) f(at) k(test2.c:43) 716
3686 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
3790 y(0x4007C9CB) e(__libc_start_main+255) 716 3894
y(0x080494D1) g(_start+33) 525 4101 y(0x0808B310) g(\(1) j(byte\)) e
({malloc:113:0}) e([strtoupper|test2.c|43]) 716 4205
y(0x08049593) h(strtoupper+51) f(at) k(test2.c:43) 716
4309 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
4413 y(0x4007C9CB) e(__libc_start_main+255) 716 4516
y(0x080494D1) g(_start+33) 525 4724 y(0x0808B314) g(\(1) j(byte\)) e
({malloc:114:0}) e([strtoupper|test2.c|43]) 716 4828
y(0x08049593) h(strtoupper+51) f(at) k(test2.c:43) 716
4932 y(0x08049651) d(main+69) h(at) h(test2.c:62) 716
5035 y(0x4007C9CB) e(__libc_start_main+255) 716 5139
y(0x080494D1) g(_start+33) 525 5347 y(0x0808B318) g(\(1) j(byte\)) e
({malloc:118:0}) e([strtoupper|test2.c|43]) 716 5450
y(0x08049593) h(strtoupper+51) f(at) k(test2.c:43) 716
5554 y(0x08049651) d(main+69) h(at) h(test2.c:62) p 90 rotate
dyy eop
%%Page: 135 141
135 140 bop Fo 94 -116 a(Chapter) 30 b(17:) 42 b(T) -8
b(utorial) 2813 b(135) p Fl 716 365 a(0x4007C9CB) 45
b(__libc_start_main+255) 716 469 y(0x080494D1) g(_start+33) p
Fo 219 594 a(W) -8 b(e) 28 b(can) f(discoun) m(t) g(the) f(\014rst) g
(en) m(try) h(since) g(that) g(is) g(ob) m(viously) g(coming) h(from) e
(when) g(the) g(mpatrol) h(library) 94 693 y(\014rst) k(initialises) i
(itself.) 45 b(Ho) m(w) m(ev) m(er,) 34 b(all) f(of) e(the) h(other) g
(en) m(tries) g(app) s(ear) f(to) h(b) s(e) f(coming) h(from) f(line) h
(43) g(within) p Fl 94 793 a(strtoupper\(\)) p Fo 37
w(and) 39 b(app) s(ear) g(to) h(b) s(e) f(only) h(1) g(b) m(yte) g(in) g
(length.) 69 b(A) m(t) 40 b(that) h(p) s(oin) m(t) e(in) h(the) g(co) s
(de,) i(the) e(only) 94 892 y(p) s(ossible) 28 b(reason) g(for) f(allo)
s(cating) k(1) d(b) m(yte) g(is) g(when) f(the) h(string) g(is) g(empt)
m(y) g(and) f(so) h(that) g(m) m(ust) g(mean) g(that) g(w) m(e) 94
992 y(are) i(not) e(freeing) h(memory) g(that) g(con) m(tains) h(empt) m
(y) f(strings.) 40 b(Lo) s(oking) 29 b(at) h(line) f(66) g(w) m(e) g
(can) g(see) g(that) p Fl 30 w(free\(\)) p Fo 94 1092
a(is) 38 b(only) f(ev) m(er) g(called) i(for) d(non-empt) m(y) i
(strings) e(and) h(therefore) g(if) g(w) m(e) h(mo) m(v) m(e) g(the) f
(call) i(to) p Fl 37 w(free\(\)) p Fo 36 w(outside) 94
1191 y(the) 34 b(test) g(for) f(an) g(empt) m(y) g(string) g(w) m(e) h
(will) f(\014x) g(the) g(memory) g(leak.) 50 b(The) 32
b(\014le) i(`) p Fl(tests/tutorial/test3.c) p Fo(') 94
1291 y(con) m(tains) e(the) f(source) f(for) g(the) h(\014nal) f
(program.) 219 1416 y(Note) i(that) f(w) m(e) g(can) f(come) i(to) f
(the) g(same) f(conclusion) h(as) g(ab) s(o) m(v) m(e) h(in) e(a) h(m) m
(uc) m(h) f(quic) m(k) m(er) i(manner) d(b) m(y) h(using) 94
1515 y(the) d(`) p Fl(LEAKTABLE) p Fo(') d(option.) 39
b(The) 26 b(follo) m(wing) h(is) f(written) g(to) h(the) f(mpatrol) g
(log) h(\014le) f(when) f(w) m(e) h(use) g(that) g(option) 94
1615 y(on) 41 b(the) f(same) h(program) f(\(note) h(that) g(the) f(in) m
(ternal) h(memory) f(allo) s(cation) j(has) d(not) h(automatically) i
(b) s(een) 94 1714 y(added) 30 b(to) h(the) g(leak) g(table\):) p
Fl 334 1843 a(top) 47 b(1) h(unfreed) e(memory) g(entry) g(in) h(leak) g
(table:) 669 2051 y(bytes) 141 b(count) 94 b(location) 525
2154 y(--------) g(------) f(--------) 859 2258 y(9) 334
b(9) 95 b(test2.c) 46 b(line) h(43) 859 2362 y(9) 334
b(9) 95 b(total) p 90 rotate dyy eop
%%Page: 136 142
136 141 bop Fo 94 -116 a(136) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 137 143
137 142 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(137) p Fk 94 365 a(App) t(endix) 53
b(A) 81 b(F) -13 b(unctions) p Fo 219 585 a(The) 26 b(mpatrol) g
(library) g(con) m(tains) h(implemen) m(tations) g(of) g(dynamic) f
(memory) g(allo) s(cation) i(functions) e(for) f(C) 94
685 y(and) e(C) p Fl(++) p Fo 22 w(suitable) h(for) f(tracing) h(and) e
(debugging.) 38 b(The) 23 b(library) g(is) g(in) m(tended) g(to) h(b) s
(e) e(used) g(without) h(requiring) 94 784 y(an) m(y) 40
b(c) m(hanges) f(to) h(existing) f(user) f(source) h(co) s(de) g
(except) h(the) f(inclusion) g(of) f(the) h(`) p Fl(mpatrol.h) p
Fo(') e(header) i(\014le,) 94 884 y(although) 32 b(additional) g
(functions) e(are) i(supplied) d(for) i(extra) h(tracing) g(and) e(con)
m(trol.) 44 b(Note) 32 b(that) g(the) f(curren) m(t) 94
984 y(v) m(ersion) g(of) g(the) f(mpatrol) h(library) f(is) g(con) m
(tained) i(in) e(the) p Fl 31 w(MPATROL_VERSION) p Fo
26 w(prepro) s(cessor) f(macro.) 219 1107 y(All) f(of) g(the) f
(function) g(de\014nitions) g(in) g(`) p Fl(mpatrol.h) p
Fo(') e(can) j(b) s(e) f(disabled) g(b) m(y) g(de\014ning) f(the) p
Fl 28 w(NDEBUG) p Fo 26 w(prepro-) 94 1207 y(cessor) k(macro,) g(whic) m
(h) f(is) h(the) f(same) h(macro) f(used) g(to) h(con) m(trol) g(the) g
(b) s(eha) m(viour) e(of) i(the) p Fl 29 w(assert\(\)) p
Fo 27 w(function.) 94 1307 y(If) p Fl 29 w(NDEBUG) p
Fo 28 w(is) f(de\014ned) f(then) i(no) f(macro) h(rede\014nition) f(of)
g(functions) g(will) h(tak) m(e) h(place) f(and) f(all) h(sp) s(ecial) g
(mpa-) 94 1406 y(trol) 35 b(library) e(functions) g(will) h(ev) -5
b(aluate) 35 b(to) g(empt) m(y) f(statemen) m(ts.) 52
b(The) 33 b(`) p Fl(mpalloc.h) p Fo(') f(header) h(\014le) h(will) g
(also) 94 1506 y(b) s(e) 27 b(included) f(in) g(this) h(case.) 41
b(It) 27 b(is) g(in) m(tended) f(that) i(the) p Fl 27
w(NDEBUG) p Fo 25 w(prepro) s(cessor) e(macro) h(b) s(e) f(de\014ned) g
(in) h(release) 94 1605 y(builds.) 219 1729 y(The) p
Fl 41 w(MP_MALLOC\(\)) p Fo 37 w(family) 42 b(of) f(functions) g(that) g
(are) h(de\014ned) d(in) i(`) p Fl(mpalloc.h) p Fo(') e(are) j(also) f
(de\014ned) f(in) 94 1829 y(`) p Fl(mpatrol.h) p Fo(') 28
b(when) p Fl 29 w(NDEBUG) p Fo 28 w(is) i(not) g(de\014ned.) 39
b(The) 29 b(mpatrol) h(v) m(ersions) g(of) g(these) g(functions) g(con)
m(tain) h(more) 94 1928 y(debugging) g(information) f(than) g(the) g
(mpallo) s(c) h(v) m(ersions) g(do,) f(but) g(they) g(do) g(not) g
(call) i(the) e(allo) s(cation) j(failure) 94 2028 y(handler) f(when) e
(no) i(more) g(memory) g(is) g(a) m(v) -5 b(ailable) 34
b(\(they) e(cause) h(the) f(`) p Fl(OUTMEM) p Fo(') f(error) g(message)
i(to) g(b) s(e) e(giv) m(en) 94 2128 y(instead\).) p
Fn 94 2382 a(A.1) 68 b(C) 45 b(dynamic) g(memory) g(allo) t(cation) i
(functions) p Fo 219 2564 a(The) 41 b(follo) m(wing) i(19) g(functions)
e(are) h(a) m(v) -5 b(ailable) 44 b(as) e(replacemen) m(ts) h(for) f
(existing) h(C) e(library) g(functions.) 94 2664 y(T) -8
b(o) 42 b(use) f(these) h(y) m(ou) g(m) m(ust) f(include) g(`) p
Fl(mpatrol.h) p Fo(') e(b) s(efore) i(all) h(other) g(header) f
(\014les,) j(although) d(on) h(UNIX) 94 2763 y(and) 31
b(Windo) m(ws) g(platforms) g(\(and) g(AmigaOS) g(when) f(using) p
Fl 31 w(gcc) p Fo(\)) h(they) g(will) g(b) s(e) g(used) f(an) m(yw) m
(a) m(y) -8 b(,) 33 b(alb) s(eit) f(with) 94 2863 y(sligh) m(tly) 41
b(less) f(tracing) h(information.) 69 b(If) p Fl 39 w(alloca\(\)) p
Fo 37 w(is) 40 b(b) s(eing) f(used) g(and) g(`) p Fl(alloca.h) p
Fo(') f(is) h(included) g(then) 94 2963 y(`) p Fl(mpatrol.h) p
Fo(') 33 b(m) m(ust) h(app) s(ear) g(b) s(efore) h(`) p
Fl(alloca.h) p Fo(') d(otherwise) j(the) g(debugging) g(v) m(ersion) g
(of) p Fl 34 w(alloca\(\)) p Fo 33 w(will) 94 3062 y(not) c(b) s(e) f
(used.) p Fl 94 3258 a(void) g(*malloc\(size_t) c(size\)) p
Fo 574 3358 a(Allo) s(cates) p Fe 39 w(size) p Fo 43
w(uninitialised) 36 b(b) m(ytes) i(from) e(the) g(heap) h(and) f
(returns) f(a) i(p) s(oin) m(ter) g(to) g(the) g(\014rst) 574
3457 y(b) m(yte) d(of) e(the) h(allo) s(cation.) 50 b(The) 32
b(p) s(oin) m(ter) g(returned) f(will) i(b) s(e) f(suitably) h(aligned)
g(for) f(casting) i(to) 574 3557 y(an) m(y) g(t) m(yp) s(e) g(and) f
(can) h(b) s(e) f(used) g(to) i(store) f(data) g(of) g(up) f(to) p
Fe 34 w(size) p Fo 40 w(b) m(ytes) h(in) f(length.) 51
b(If) p Fe 33 w(size) p Fo 40 w(is) 34 b(`) p Fl(0) p
Fo(') 574 3656 y(then) 40 b(the) g(memory) f(allo) s(cated) j(will) e
(b) s(e) f(implicitly) i(rounded) d(up) h(to) h(`) p
Fl(1) p Fo(') g(b) m(yte.) 70 b(If) 39 b(there) h(is) 574
3756 y(not) c(enough) g(space) g(in) f(the) h(heap) f(then) h(the) f(`)
p Fl(NULL) p Fo(') g(p) s(oin) m(ter) h(will) g(b) s(e) f(returned) f
(and) p Fl 35 w(errno) p Fo 574 3856 a(will) g(b) s(e) f(set) h(to) p
Fl 34 w(ENOMEM) p Fo(.) 47 b(The) 33 b(allo) s(cated) i(memory) e(m) m
(ust) h(b) s(e) e(deallo) s(cated) j(with) p Fl 33 w(free\(\)) p
Fo 32 w(or) 574 3955 y(reallo) s(cated) e(with) p Fl
30 w(realloc\(\)) p Fo(.) p Fl 94 4103 a(void) d(*calloc\(size_t) c
(nelem,) j(size_t) g(size\)) p Fo 574 4203 a(Allo) s(cates) p
Fe 42 w(nelem) p Fo 39 w(elemen) m(ts) 40 b(of) p Fe
40 w(size) p Fo 45 w(zero-initialised) h(b) m(ytes) f(from) f(the) g
(heap) g(and) f(returns) 574 4302 y(a) d(p) s(oin) m(ter) f(to) h(the) f
(\014rst) g(b) m(yte) g(of) h(the) f(allo) s(cation.) 54
b(The) 34 b(p) s(oin) m(ter) g(returned) f(will) h(b) s(e) g(suitably)
574 4402 y(aligned) 29 b(for) e(casting) h(to) g(an) m(y) g(t) m(yp) s
(e) g(and) e(can) i(b) s(e) f(used) f(to) i(store) g(data) g(of) g(up) e
(to) p Fl 28 w(nelem) j(*) h(size) p Fo 574 4502 a(b) m(ytes) 37
b(in) f(length.) 58 b(If) p Fl 36 w(nelem) 29 b(*) h(size) p
Fo 35 w(is) 36 b(`) p Fl(0) p Fo(') g(then) g(the) h(amoun) m(t) f(of) g
(memory) g(allo) s(cated) j(will) 574 4601 y(b) s(e) 31
b(implicitly) i(rounded) d(up) g(to) i(`) p Fl(1) p Fo(') g(b) m(yte.)
44 b(If) 31 b(there) g(is) h(not) f(enough) h(space) f(in) h(the) f
(heap) g(then) 574 4701 y(the) g(`) p Fl(NULL) p Fo(') f(p) s(oin) m
(ter) h(will) g(b) s(e) f(returned) f(and) p Fl 30 w(errno) p
Fo 30 w(will) i(b) s(e) f(set) h(to) p Fl 31 w(ENOMEM) p
Fo(.) 40 b(The) 30 b(allo) s(cated) 574 4800 y(memory) h(m) m(ust) f(b)
s(e) g(deallo) s(cated) i(with) p Fl 30 w(free\(\)) p
Fo 29 w(or) e(reallo) s(cated) i(with) p Fl 31 w(realloc\(\)) p
Fo(.) p Fl 94 4948 a(void) e(*memalign\(size_t) c(align,) i(size_t) h
(size\)) p Fo 574 5048 a(Allo) s(cates) p Fe 39 w(size) p
Fo 43 w(uninitialised) 36 b(b) m(ytes) i(from) e(the) g(heap) h(and) f
(returns) f(a) i(p) s(oin) m(ter) g(to) g(the) g(\014rst) 574
5147 y(b) m(yte) c(of) f(the) g(allo) s(cation.) 47 b(The) 32
b(p) s(oin) m(ter) f(returned) g(will) h(b) s(e) f(aligned) i(to) p
Fe 32 w(align) p Fo 33 w(b) m(ytes) f(and) g(can) 574
5247 y(b) s(e) f(used) f(to) i(store) f(data) h(of) f(up) f(to) p
Fe 31 w(size) p Fo 37 w(b) m(ytes) i(in) e(length.) 43
b(If) p Fe 31 w(align) p Fo 31 w(is) 31 b(zero) h(then) f(the) g
(default) 574 5347 y(system) c(alignmen) m(t) h(will) f(b) s(e) f
(used.) 39 b(If) p Fe 26 w(align) p Fo 27 w(is) 27 b(not) g(a) g(p) s
(o) m(w) m(er) f(of) h(t) m(w) m(o) h(then) e(it) i(will) f(b) s(e) f
(rounded) 574 5446 y(up) 33 b(to) i(the) g(nearest) f(p) s(o) m(w) m
(er) g(of) g(t) m(w) m(o.) 53 b(If) p Fe 34 w(align) p
Fo 35 w(is) 34 b(greater) h(than) f(the) g(system) h(page) f(size) h
(then) 574 5546 y(it) g(will) f(b) s(e) g(truncated) g(to) h(that) f(v)
-5 b(alue.) 52 b(If) p Fe 34 w(size) p Fo 40 w(is) 34
b(`) p Fl(0) p Fo(') g(then) g(the) g(memory) g(allo) s(cated) i(will) f
(b) s(e) 574 5645 y(implicitly) 40 b(rounded) e(up) f(to) j(`) p
Fl(1) p Fo(') e(b) m(yte.) 67 b(If) 38 b(there) h(is) g(not) g(enough) f
(space) h(in) g(the) g(heap) f(then) p 90 rotate dyy
eop
%%Page: 138 144
138 143 bop Fo 94 -116 a(138) 3332 b(mpatrol) 574 365
y(the) 31 b(`) p Fl(NULL) p Fo(') f(p) s(oin) m(ter) h(will) g(b) s(e) f
(returned) f(and) p Fl 30 w(errno) p Fo 30 w(will) i(b) s(e) f(set) h
(to) p Fl 31 w(ENOMEM) p Fo(.) 40 b(The) 30 b(allo) s(cated) 574
465 y(memory) f(m) m(ust) g(b) s(e) f(deallo) s(cated) i(with) p
Fl 29 w(free\(\)) p Fo 27 w(or) f(reallo) s(cated) h(with) p
Fl 29 w(realloc\(\)) p Fo(,) d(although) 574 565 y(the) k(latter) h
(will) f(not) f(guaran) m(tee) i(the) f(preserv) -5 b(ation) 30
b(of) h(alignmen) m(t.) p Fl 94 704 a(void) f(*valloc\(size_t) c
(size\)) p Fo 574 804 a(Allo) s(cates) p Fe 39 w(size) p
Fo 43 w(uninitialised) 36 b(b) m(ytes) i(from) e(the) g(heap) h(and) f
(returns) f(a) i(p) s(oin) m(ter) g(to) g(the) g(\014rst) 574
903 y(b) m(yte) 30 b(of) g(the) f(allo) s(cation.) 43
b(The) 28 b(p) s(oin) m(ter) i(returned) e(will) h(b) s(e) g(aligned) h
(to) f(the) h(system) f(page) h(size) 574 1003 y(and) k(can) h(b) s(e) e
(used) h(to) h(store) g(data) g(of) f(up) f(to) p Fe
35 w(size) p Fo 41 w(b) m(ytes) h(in) g(length.) 53 b(If) p
Fe 34 w(size) p Fo 40 w(is) 34 b(`) p Fl(0) p Fo(') h(then) f(the) 574
1103 y(memory) f(allo) s(cated) i(will) e(b) s(e) f(implicitly) i
(rounded) d(up) h(to) i(`) p Fl(1) p Fo(') e(b) m(yte.) 49
b(If) 32 b(there) h(is) g(not) g(enough) 574 1202 y(space) e(in) f(the)
h(heap) f(then) g(the) h(`) p Fl(NULL) p Fo(') e(p) s(oin) m(ter) i
(will) f(b) s(e) g(returned) f(and) p Fl 30 w(errno) p
Fo 29 w(will) i(b) s(e) e(set) i(to) p Fl 574 1302 a(ENOMEM) p
Fo(.) 37 b(The) 22 b(allo) s(cated) j(memory) e(m) m(ust) g(b) s(e) f
(deallo) s(cated) j(with) p Fl 22 w(free\(\)) p Fo 22
w(or) d(reallo) s(cated) j(with) p Fl 574 1401 a(realloc\(\)) p
Fo(,) k(although) h(the) h(latter) h(will) e(not) h(guaran) m(tee) h
(the) e(preserv) -5 b(ation) 31 b(of) g(alignmen) m(t.) p
Fl 94 1541 a(void) f(*pvalloc\(size_t) c(size\)) p Fo
574 1641 a(Allo) s(cates) p Fe 39 w(size) p Fo 43 w(uninitialised) 36
b(b) m(ytes) i(from) e(the) g(heap) h(and) f(returns) f(a) i(p) s(oin) m
(ter) g(to) g(the) g(\014rst) 574 1740 y(b) m(yte) 30
b(of) g(the) f(allo) s(cation.) 43 b(The) 28 b(p) s(oin) m(ter) i
(returned) e(will) h(b) s(e) g(aligned) h(to) f(the) h(system) f(page) h
(size) 574 1840 y(and) k(can) h(b) s(e) e(used) h(to) h(store) g(data) g
(of) f(up) f(to) p Fe 35 w(size) p Fo 41 w(b) m(ytes) h(in) g(length.)
53 b(If) p Fe 34 w(size) p Fo 40 w(is) 34 b(`) p Fl(0) p
Fo(') h(then) f(the) 574 1939 y(memory) h(allo) s(cated) h(will) e(b) s
(e) g(implicitly) h(rounded) e(up) g(to) i(`) p Fl(1) p
Fo(') f(page,) i(otherwise) p Fe 35 w(size) p Fo 40 w(will) f(b) s(e)
574 2039 y(implicitly) e(rounded) e(up) f(to) j(a) f(m) m(ultiple) h
(of) f(the) g(system) g(page) g(size.) 46 b(If) 31 b(there) h(is) g
(not) g(enough) 574 2139 y(space) f(in) f(the) h(heap) f(then) g(the) h
(`) p Fl(NULL) p Fo(') e(p) s(oin) m(ter) i(will) f(b) s(e) g(returned)
f(and) p Fl 30 w(errno) p Fo 29 w(will) i(b) s(e) e(set) i(to) p
Fl 574 2238 a(ENOMEM) p Fo(.) 37 b(The) 22 b(allo) s(cated) j(memory) e
(m) m(ust) g(b) s(e) f(deallo) s(cated) j(with) p Fl
22 w(free\(\)) p Fo 22 w(or) d(reallo) s(cated) j(with) p
Fl 574 2338 a(realloc\(\)) p Fo(,) k(although) h(the) h(latter) h(will)
e(not) h(guaran) m(tee) h(the) e(preserv) -5 b(ation) 31
b(of) g(alignmen) m(t.) p Fl 94 2477 a(void) f(*alloca\(size_t) c
(size\)) p Fo 574 2577 a(Allo) s(cates) p Fe 31 w(size) p
Fo 35 w(temp) s(orary) i(uninitialised) h(b) m(ytes) g(from) g(the) f
(heap) h(and) f(returns) f(a) j(p) s(oin) m(ter) e(to) 574
2677 y(the) 38 b(\014rst) f(b) m(yte) h(of) g(the) g(allo) s(cation.) 64
b(The) 37 b(p) s(oin) m(ter) h(returned) e(will) i(b) s(e) f(suitably) h
(aligned) g(for) 574 2776 y(casting) c(to) g(an) m(y) f(t) m(yp) s(e) g
(and) f(can) h(b) s(e) f(used) g(to) h(store) h(data) f(of) g(up) f(to)
p Fe 33 w(size) p Fo 39 w(b) m(ytes) h(in) f(length.) 48
b(If) p Fe 574 2876 a(size) p Fo 41 w(is) 35 b(`) p Fl(0) p
Fo(') g(then) g(the) g(memory) g(allo) s(cated) h(will) g(b) s(e) e
(implicitly) i(rounded) d(up) h(to) i(`) p Fl(1) p Fo(') f(b) m(yte.) 54
b(If) 574 2976 y(there) 30 b(is) g(not) f(enough) h(space) g(in) f(the)
h(heap) f(then) g(the) h(program) f(will) h(b) s(e) f(terminated) h
(and) f(the) 574 3075 y(`) p Fl(OUTMEM) p Fo(') f(error) h(will) g(b) s
(e) f(giv) m(en.) 42 b(The) p Fl 28 w(alloca\(\)) p Fo
27 w(function) 28 b(normally) h(allo) s(cates) j(its) d(memory) 574
3175 y(from) 44 b(the) f(stac) m(k,) 49 b(with) 43 b(the) h(result) f
(that) i(all) f(suc) m(h) f(allo) s(cations) j(will) e(b) s(e) f(freed)
g(when) g(the) 574 3274 y(function) 34 b(returns.) 50
b(This) 33 b(v) m(ersion) h(of) p Fl 34 w(alloca\(\)) p
Fo 31 w(allo) s(cates) j(its) d(memory) f(from) h(the) g(heap) f(in) 574
3374 y(order) d(to) g(pro) m(vide) g(b) s(etter) f(debugging,) h(but) f
(the) h(allo) s(cations) i(ma) m(y) e(not) g(necessarily) g(b) s(e) f
(freed) 574 3474 y(immediately) 34 b(when) d(the) h(function) g
(returns.) 45 b(The) 31 b(allo) s(cated) j(memory) e(can) h(b) s(e) e
(deallo) s(cated) 574 3573 y(explicitly) g(with) p Fl
28 w(dealloca\(\)) p Fo(,) c(but) h(ma) m(y) h(not) g(b) s(e) f(reallo)
s(cated) j(or) e(deallo) s(cated) h(in) f(an) m(y) g(other) 574
3673 y(w) m(a) m(y) -8 b(.) 41 b(This) 23 b(function) h(is) h(a) m(v) -5
b(ailable) 27 b(for) d(bac) m(kw) m(ards) h(compatibilit) m(y) h(with) e
(older) h(C) f(source) h(co) s(de) 574 3773 y(and) 30
b(should) g(not) g(b) s(e) g(used) g(in) g(new) g(co) s(de.) p
Fl 94 3912 a(char) g(*strdup\(const) c(char) k(*str\)) p
Fo 574 4012 a(Allo) s(cates) 45 b(exactly) g(enough) d(memory) g(from) h
(the) f(heap) h(to) g(duplicate) p Fe 43 w(str) p Fo
49 w(\(including) g(the) 574 4111 y(terminating) 34 b(n) m(ul) f(c) m
(haracter\)) i(and) d(returns) g(a) h(p) s(oin) m(ter) g(to) h(the) f
(\014rst) g(b) m(yte) g(of) g(the) h(allo) s(cation) 574
4211 y(after) 29 b(cop) m(ying) p Fe 28 w(str) p Fo 34
w(to) f(the) g(newly-allo) s(cated) h(memory) -8 b(.) 41
b(The) 27 b(p) s(oin) m(ter) g(returned) f(will) i(ha) m(v) m(e) h(no)
574 4311 y(alignmen) m(t) c(constrain) m(ts) f(and) e(can) h(b) s(e) g
(used) f(to) i(store) f(c) m(haracter) i(data) f(up) e(to) h(the) g
(length) h(of) p Fe 23 w(str) p Fo(.) 574 4410 y(If) p
Fe 33 w(str) p Fo 38 w(is) 33 b(`) p Fl(NULL) p Fo(') f(then) g(an) h
(error) f(will) h(b) s(e) e(giv) m(en) j(and) e(the) h(`) p
Fl(NULL) p Fo(') f(p) s(oin) m(ter) g(will) h(b) s(e) f(returned.) 574
4510 y(If) 37 b(there) h(is) f(not) h(enough) f(space) h(in) f(the) g
(heap) g(then) g(the) h(`) p Fl(NULL) p Fo(') e(p) s(oin) m(ter) i
(will) f(b) s(e) g(returned) 574 4609 y(and) p Fl 32
w(errno) p Fo 31 w(will) 32 b(b) s(e) g(set) g(to) p
Fl 33 w(ENOMEM) p Fo(.) 44 b(The) 32 b(allo) s(cated) i(memory) e(m) m
(ust) g(b) s(e) f(deallo) s(cated) j(with) p Fl 574 4709
a(free\(\)) p Fo 29 w(or) d(reallo) s(cated) h(with) p
Fl 30 w(realloc\(\)) p Fo(.) p Fl 94 4848 a(char) e(*strndup\(const) c
(char) j(*str,) g(size_t) g(size\)) p Fo 574 4948 a(Allo) s(cates) 45
b(exactly) g(enough) d(memory) g(from) h(the) f(heap) h(to) g
(duplicate) p Fe 43 w(str) p Fo 49 w(\(including) g(the) 574
5048 y(terminating) 34 b(n) m(ul) f(c) m(haracter\)) i(and) d(returns) g
(a) h(p) s(oin) m(ter) g(to) h(the) f(\014rst) g(b) m(yte) g(of) g(the)
h(allo) s(cation) 574 5147 y(after) 29 b(cop) m(ying) p
Fe 28 w(str) p Fo 34 w(to) f(the) g(newly-allo) s(cated) h(memory) -8
b(.) 41 b(The) 27 b(p) s(oin) m(ter) g(returned) f(will) i(ha) m(v) m
(e) h(no) 574 5247 y(alignmen) m(t) c(constrain) m(ts) f(and) e(can) h
(b) s(e) g(used) f(to) i(store) f(c) m(haracter) i(data) f(up) e(to) h
(the) g(length) h(of) p Fe 23 w(str) p Fo(.) 574 5347
y(If) p Fe 25 w(str) p Fo 31 w(is) i(`) p Fl(NULL) p
Fo(') e(and) p Fe 25 w(size) p Fo 31 w(is) h(non-zero) g(then) g(an) g
(error) g(will) g(b) s(e) g(giv) m(en) h(and) e(the) i(`) p
Fl(NULL) p Fo(') e(p) s(oin) m(ter) 574 5446 y(will) 34
b(b) s(e) f(returned.) 49 b(If) 32 b(the) i(length) g(of) p
Fe 33 w(str) p Fo 40 w(is) f(greater) i(than) p Fe 33
w(size) p Fo 40 w(then) e(only) p Fe 33 w(size) p Fo
39 w(c) m(haracters) 574 5546 y(will) 28 b(b) s(e) e(allo) s(cated) i
(and) f(copied,) h(with) e(one) h(additional) h(b) m(yte) f(for) g(the)
g(n) m(ul) f(c) m(haracter.) 41 b(If) 27 b(there) 574
5645 y(is) j(not) f(enough) g(space) h(in) f(the) g(heap) g(then) g
(the) g(`) p Fl(NULL) p Fo(') g(p) s(oin) m(ter) g(will) g(b) s(e) g
(returned) f(and) p Fl 28 w(errno) p 90 rotate dyy eop
%%Page: 139 145
139 144 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(139) 574 365 y(will) 34 b(b) s(e) f(set) h(to) p
Fl 34 w(ENOMEM) p Fo(.) 47 b(The) 33 b(allo) s(cated) i(memory) e(m) m
(ust) h(b) s(e) e(deallo) s(cated) j(with) p Fl 33 w(free\(\)) p
Fo 32 w(or) 574 465 y(reallo) s(cated) e(with) p Fl 30
w(realloc\(\)) p Fo(.) 38 b(This) 29 b(function) h(is) h(a) m(v) -5
b(ailable) 32 b(for) e(bac) m(kw) m(ards) h(compatibilit) m(y) 574
565 y(with) g(older) f(C) g(libraries) h(and) e(should) h(not) g(b) s
(e) g(used) g(in) g(new) g(co) s(de.) p Fl 94 714 a(char) g
(*strsave\(const) c(char) j(*str\)) p Fo 574 814 a(Allo) s(cates) 45
b(exactly) g(enough) d(memory) g(from) h(the) f(heap) h(to) g
(duplicate) p Fe 43 w(str) p Fo 49 w(\(including) g(the) 574
913 y(terminating) 34 b(n) m(ul) f(c) m(haracter\)) i(and) d(returns) g
(a) h(p) s(oin) m(ter) g(to) h(the) f(\014rst) g(b) m(yte) g(of) g(the)
h(allo) s(cation) 574 1013 y(after) 29 b(cop) m(ying) p
Fe 28 w(str) p Fo 34 w(to) f(the) g(newly-allo) s(cated) h(memory) -8
b(.) 41 b(The) 27 b(p) s(oin) m(ter) g(returned) f(will) i(ha) m(v) m
(e) h(no) 574 1112 y(alignmen) m(t) c(constrain) m(ts) f(and) e(can) h
(b) s(e) g(used) f(to) i(store) f(c) m(haracter) i(data) f(up) e(to) h
(the) g(length) h(of) p Fe 23 w(str) p Fo(.) 574 1212
y(If) p Fe 33 w(str) p Fo 38 w(is) 33 b(`) p Fl(NULL) p
Fo(') f(then) g(an) h(error) f(will) h(b) s(e) e(giv) m(en) j(and) e
(the) h(`) p Fl(NULL) p Fo(') f(p) s(oin) m(ter) g(will) h(b) s(e) f
(returned.) 574 1312 y(If) 37 b(there) h(is) f(not) h(enough) f(space) h
(in) f(the) g(heap) g(then) g(the) h(`) p Fl(NULL) p
Fo(') e(p) s(oin) m(ter) i(will) f(b) s(e) g(returned) 574
1411 y(and) p Fl 32 w(errno) p Fo 31 w(will) 32 b(b) s(e) g(set) g(to) p
Fl 33 w(ENOMEM) p Fo(.) 44 b(The) 32 b(allo) s(cated) i(memory) e(m) m
(ust) g(b) s(e) f(deallo) s(cated) j(with) p Fl 574 1511
a(free\(\)) p Fo 40 w(or) 41 b(reallo) s(cated) i(with) p
Fl 40 w(realloc\(\)) p Fo(.) 70 b(This) 40 b(function) h(is) g(a) m(v)
-5 b(ailable) 43 b(for) e(bac) m(kw) m(ards) 574 1611
y(compatibilit) m(y) 33 b(with) d(older) h(C) f(libraries) g(and) g
(should) f(not) i(b) s(e) f(used) f(in) h(new) g(co) s(de.) p
Fl 94 1760 a(char) g(*strnsave\(const) c(char) j(*str,) g(size_t) g
(size\)) p Fo 574 1860 a(Allo) s(cates) 45 b(exactly) g(enough) d
(memory) g(from) h(the) f(heap) h(to) g(duplicate) p
Fe 43 w(str) p Fo 49 w(\(including) g(the) 574 1959 y(terminating) 34
b(n) m(ul) f(c) m(haracter\)) i(and) d(returns) g(a) h(p) s(oin) m(ter)
g(to) h(the) f(\014rst) g(b) m(yte) g(of) g(the) h(allo) s(cation) 574
2059 y(after) 29 b(cop) m(ying) p Fe 28 w(str) p Fo 34
w(to) f(the) g(newly-allo) s(cated) h(memory) -8 b(.) 41
b(The) 27 b(p) s(oin) m(ter) g(returned) f(will) i(ha) m(v) m(e) h(no)
574 2159 y(alignmen) m(t) c(constrain) m(ts) f(and) e(can) h(b) s(e) g
(used) f(to) i(store) f(c) m(haracter) i(data) f(up) e(to) h(the) g
(length) h(of) p Fe 23 w(str) p Fo(.) 574 2258 y(If) p
Fe 25 w(str) p Fo 31 w(is) i(`) p Fl(NULL) p Fo(') e(and) p
Fe 25 w(size) p Fo 31 w(is) h(non-zero) g(then) g(an) g(error) g(will) g
(b) s(e) g(giv) m(en) h(and) e(the) i(`) p Fl(NULL) p
Fo(') e(p) s(oin) m(ter) 574 2358 y(will) 34 b(b) s(e) f(returned.) 49
b(If) 32 b(the) i(length) g(of) p Fe 33 w(str) p Fo 40
w(is) f(greater) i(than) p Fe 33 w(size) p Fo 40 w(then) e(only) p
Fe 33 w(size) p Fo 39 w(c) m(haracters) 574 2457 y(will) 28
b(b) s(e) e(allo) s(cated) i(and) f(copied,) h(with) e(one) h
(additional) h(b) m(yte) f(for) g(the) g(n) m(ul) f(c) m(haracter.) 41
b(If) 27 b(there) 574 2557 y(is) j(not) f(enough) g(space) h(in) f(the)
g(heap) g(then) g(the) g(`) p Fl(NULL) p Fo(') g(p) s(oin) m(ter) g
(will) g(b) s(e) g(returned) f(and) p Fl 28 w(errno) p
Fo 574 2657 a(will) 34 b(b) s(e) f(set) h(to) p Fl 34
w(ENOMEM) p Fo(.) 47 b(The) 33 b(allo) s(cated) i(memory) e(m) m(ust) h
(b) s(e) e(deallo) s(cated) j(with) p Fl 33 w(free\(\)) p
Fo 32 w(or) 574 2756 y(reallo) s(cated) e(with) p Fl
30 w(realloc\(\)) p Fo(.) 38 b(This) 29 b(function) h(is) h(a) m(v) -5
b(ailable) 32 b(for) e(bac) m(kw) m(ards) h(compatibilit) m(y) 574
2856 y(with) g(older) f(C) g(libraries) h(and) e(should) h(not) g(b) s
(e) g(used) g(in) g(new) g(co) s(de.) p Fl 94 3005 a(char) g
(*strdupa\(const) c(char) j(*str\)) p Fo 574 3105 a(Allo) s(cates) 42
b(exactly) g(enough) e(temp) s(orary) f(memory) h(from) f(the) h(heap) g
(to) g(duplicate) p Fe 41 w(str) p Fo 46 w(\(in-) 574
3205 y(cluding) 29 b(the) g(terminating) g(n) m(ul) g(c) m(haracter\)) h
(and) e(returns) g(a) h(p) s(oin) m(ter) f(to) i(the) f(\014rst) f(b) m
(yte) h(of) g(the) 574 3304 y(allo) s(cation) 38 b(after) e(cop) m
(ying) p Fe 36 w(str) p Fo 42 w(to) g(the) f(newly-allo) s(cated) i
(memory) -8 b(.) 56 b(The) 35 b(p) s(oin) m(ter) g(returned) 574
3404 y(will) i(ha) m(v) m(e) g(no) g(alignmen) m(t) g(constrain) m(ts) g
(and) f(can) h(b) s(e) e(used) h(to) g(store) h(c) m(haracter) h(data) f
(up) e(to) 574 3504 y(the) d(length) f(of) p Fe 32 w(str) p
Fo(.) 42 b(If) p Fe 31 w(str) p Fo 37 w(is) 32 b(`) p
Fl(NULL) p Fo(') e(then) h(an) g(error) g(will) g(b) s(e) g(giv) m(en) h
(and) e(the) h(`) p Fl(NULL) p Fo(') g(p) s(oin) m(ter) 574
3603 y(will) g(b) s(e) e(returned.) 40 b(If) 29 b(there) h(is) g(not) h
(enough) e(space) i(in) f(the) g(heap) g(then) f(the) h(program) g
(will) h(b) s(e) 574 3703 y(terminated) f(and) f(the) h(`) p
Fl(OUTMEM) p Fo(') e(error) h(will) g(b) s(e) g(giv) m(en.) 41
b(The) p Fl 29 w(strdupa\(\)) p Fo 27 w(function) 29
b(normally) 574 3802 y(allo) s(cates) h(its) e(memory) f(from) g(the) g
(stac) m(k,) j(with) d(the) g(result) h(that) f(all) i(suc) m(h) e
(allo) s(cations) i(will) f(b) s(e) 574 3902 y(freed) 36
b(when) g(the) g(function) g(returns.) 57 b(This) 35
b(v) m(ersion) i(of) p Fl 36 w(strdupa\(\)) p Fo 34 w(allo) s(cates) h
(its) f(memory) 574 4002 y(from) h(the) g(heap) f(in) h(order) f(to) i
(pro) m(vide) f(b) s(etter) f(debugging,) j(but) d(the) h(allo) s
(cations) i(ma) m(y) f(not) 574 4101 y(necessarily) g(b) s(e) e(freed) g
(immediately) h(when) f(the) h(function) f(returns.) 60
b(The) 37 b(allo) s(cated) j(mem-) 574 4201 y(ory) 35
b(can) f(b) s(e) g(deallo) s(cated) i(explicitly) f(with) p
Fl 34 w(dealloca\(\)) p Fo(,) e(but) g(ma) m(y) i(not) f(b) s(e) g
(reallo) s(cated) i(or) 574 4301 y(deallo) s(cated) 29
b(in) d(an) m(y) h(other) f(w) m(a) m(y) -8 b(.) 41 b(This) 26
b(function) g(is) g(a) m(v) -5 b(ailable) 29 b(for) d(bac) m(kw) m
(ards) h(compatibilit) m(y) 574 4400 y(with) k(older) f(C) g(source) h
(co) s(de) f(and) g(should) f(not) i(b) s(e) f(used) f(in) h(new) g(co)
s(de.) p Fl 94 4550 a(char) g(*strndupa\(const) c(char) j(*str,) g
(size_t) g(size\)) p Fo 574 4649 a(Allo) s(cates) 42
b(exactly) g(enough) e(temp) s(orary) f(memory) h(from) f(the) h(heap) g
(to) g(duplicate) p Fe 41 w(str) p Fo 46 w(\(in-) 574
4749 y(cluding) 29 b(the) g(terminating) g(n) m(ul) g(c) m(haracter\)) h
(and) e(returns) g(a) h(p) s(oin) m(ter) f(to) i(the) f(\014rst) f(b) m
(yte) h(of) g(the) 574 4848 y(allo) s(cation) 38 b(after) e(cop) m
(ying) p Fe 36 w(str) p Fo 42 w(to) g(the) f(newly-allo) s(cated) i
(memory) -8 b(.) 56 b(The) 35 b(p) s(oin) m(ter) g(returned) 574
4948 y(will) i(ha) m(v) m(e) g(no) g(alignmen) m(t) g(constrain) m(ts) g
(and) f(can) h(b) s(e) e(used) h(to) g(store) h(c) m(haracter) h(data) f
(up) e(to) 574 5048 y(the) i(length) g(of) p Fe 37 w(str) p
Fo(.) 59 b(If) p Fe 36 w(str) p Fo 43 w(is) 37 b(`) p
Fl(NULL) p Fo(') f(and) p Fe 36 w(size) p Fo 42 w(is) h(non-zero) g
(then) f(an) h(error) f(will) h(b) s(e) f(giv) m(en) 574
5147 y(and) 27 b(the) f(`) p Fl(NULL) p Fo(') g(p) s(oin) m(ter) h
(will) g(b) s(e) f(returned.) 38 b(If) 26 b(the) h(length) g(of) p
Fe 27 w(str) p Fo 33 w(is) f(greater) i(than) p Fe 27
w(size) p Fo 32 w(then) 574 5247 y(only) p Fe 35 w(size) p
Fo 40 w(c) m(haracters) 36 b(will) f(b) s(e) e(allo) s(cated) k(and) d
(copied,) i(with) e(one) g(additional) i(b) m(yte) f(for) f(the) 574
5347 y(n) m(ul) j(c) m(haracter.) 61 b(If) 36 b(there) h(is) g(not) g
(enough) g(space) g(in) f(the) h(heap) g(then) f(the) h(program) g
(will) g(b) s(e) 574 5446 y(terminated) 26 b(and) e(the) h(`) p
Fl(OUTMEM) p Fo(') e(error) h(will) h(b) s(e) f(giv) m(en.) 40
b(The) p Fl 25 w(strndupa\(\)) p Fo 21 w(function) 25
b(normally) 574 5546 y(allo) s(cates) 30 b(its) e(memory) f(from) g
(the) g(stac) m(k,) j(with) d(the) g(result) h(that) f(all) i(suc) m(h)
e(allo) s(cations) i(will) f(b) s(e) 574 5645 y(freed) 33
b(when) e(the) i(function) f(returns.) 46 b(This) 32
b(v) m(ersion) h(of) p Fl 33 w(strndupa\(\)) p Fo 29
w(allo) s(cates) i(its) e(memory) p 90 rotate dyy eop
%%Page: 140 146
140 145 bop Fo 94 -116 a(140) 3332 b(mpatrol) 574 365
y(from) 38 b(the) g(heap) f(in) h(order) f(to) i(pro) m(vide) f(b) s
(etter) f(debugging,) j(but) d(the) h(allo) s(cations) i(ma) m(y) f
(not) 574 465 y(necessarily) g(b) s(e) e(freed) g(immediately) h(when) f
(the) h(function) f(returns.) 60 b(The) 37 b(allo) s(cated) j(mem-) 574
565 y(ory) 35 b(can) f(b) s(e) g(deallo) s(cated) i(explicitly) f(with)
p Fl 34 w(dealloca\(\)) p Fo(,) e(but) g(ma) m(y) i(not) f(b) s(e) g
(reallo) s(cated) i(or) 574 664 y(deallo) s(cated) 29
b(in) d(an) m(y) h(other) f(w) m(a) m(y) -8 b(.) 41 b(This) 26
b(function) g(is) g(a) m(v) -5 b(ailable) 29 b(for) d(bac) m(kw) m
(ards) h(compatibilit) m(y) 574 764 y(with) k(older) f(C) g(source) h
(co) s(de) f(and) g(should) f(not) i(b) s(e) f(used) f(in) h(new) g(co)
s(de.) p Fl 94 913 a(void) g(*realloc\(void) c(*ptr,) j(size_t) g
(size\)) p Fo 574 1013 a(Resizes) 24 b(the) e(memory) g(allo) s(cation)
j(b) s(eginning) c(at) p Fe 23 w(ptr) p Fo 29 w(to) p
Fe 23 w(size) p Fo 28 w(b) m(ytes) i(and) e(returns) g(a) i(p) s(oin) m
(ter) f(to) 574 1112 y(the) k(\014rst) e(b) m(yte) i(of) f(the) g(new) g
(allo) s(cation) i(after) e(cop) m(ying) p Fe 26 w(ptr) p
Fo 31 w(to) h(the) f(newly-allo) s(cated) i(memory) -8
b(,) 574 1212 y(whic) m(h) 34 b(will) f(b) s(e) g(truncated) g(if) p
Fe 34 w(size) p Fo 39 w(is) g(smaller) h(than) f(the) h(original) g
(allo) s(cation.) 52 b(The) 33 b(p) s(oin) m(ter) 574
1312 y(returned) h(will) h(b) s(e) e(suitably) i(aligned) g(for) g
(casting) g(to) g(an) m(y) g(t) m(yp) s(e) g(and) f(can) h(b) s(e) e
(used) h(to) h(store) 574 1411 y(data) g(of) g(up) e(to) p
Fe 35 w(size) p Fo 40 w(b) m(ytes) i(in) e(length.) 53
b(If) p Fe 34 w(ptr) p Fo 40 w(is) 34 b(`) p Fl(NULL) p
Fo(') g(then) g(the) g(call) h(will) g(b) s(e) e(equiv) -5
b(alen) m(t) 574 1511 y(to) p Fl 39 w(malloc\(\)) p Fo(.) 61
b(If) p Fe 37 w(size) p Fo 44 w(is) 37 b(`) p Fl(0) p
Fo(') h(then) g(the) g(existing) g(memory) g(allo) s(cation) i(will) e
(b) s(e) f(freed) h(and) 574 1611 y(the) g(`) p Fl(NULL) p
Fo(') f(p) s(oin) m(ter) g(will) h(b) s(e) f(returned.) 61
b(If) p Fe 37 w(size) p Fo 43 w(is) 38 b(greater) g(than) f(the) h
(original) h(allo) s(cation) 574 1710 y(then) d(the) g(extra) g(space) g
(will) g(b) s(e) f(\014lled) h(with) f(uninitialised) h(b) m(ytes.) 57
b(If) 36 b(there) g(is) f(not) h(enough) 574 1810 y(space) j(in) e(the)
h(heap) g(then) f(the) h(`) p Fl(NULL) p Fo(') f(p) s(oin) m(ter) h
(will) g(b) s(e) f(returned) g(and) p Fl 37 w(errno) p
Fo 36 w(will) h(b) s(e) f(set) 574 1910 y(to) p Fl 41
w(ENOMEM) p Fo(.) 65 b(The) 39 b(allo) s(cated) i(memory) f(m) m(ust) f
(b) s(e) f(deallo) s(cated) k(with) p Fl 39 w(free\(\)) p
Fo 37 w(and) d(can) h(b) s(e) 574 2009 y(reallo) s(cated) 33
b(again) e(with) p Fl 30 w(realloc\(\)) p Fo(.) p Fl
94 2159 a(void) f(*reallocf\(void) c(*ptr,) j(size_t) g(size\)) p
Fo 574 2258 a(Resizes) 24 b(the) e(memory) g(allo) s(cation) j(b) s
(eginning) c(at) p Fe 23 w(ptr) p Fo 29 w(to) p Fe 23
w(size) p Fo 28 w(b) m(ytes) i(and) e(returns) g(a) i(p) s(oin) m(ter) f
(to) 574 2358 y(the) k(\014rst) e(b) m(yte) i(of) f(the) g(new) g(allo)
s(cation) i(after) e(cop) m(ying) p Fe 26 w(ptr) p Fo
31 w(to) h(the) f(newly-allo) s(cated) i(memory) -8 b(,) 574
2457 y(whic) m(h) 34 b(will) f(b) s(e) g(truncated) g(if) p
Fe 34 w(size) p Fo 39 w(is) g(smaller) h(than) f(the) h(original) g
(allo) s(cation.) 52 b(The) 33 b(p) s(oin) m(ter) 574
2557 y(returned) h(will) h(b) s(e) e(suitably) i(aligned) g(for) g
(casting) g(to) g(an) m(y) g(t) m(yp) s(e) g(and) f(can) h(b) s(e) e
(used) h(to) h(store) 574 2657 y(data) g(of) g(up) e(to) p
Fe 35 w(size) p Fo 40 w(b) m(ytes) i(in) e(length.) 53
b(If) p Fe 34 w(ptr) p Fo 40 w(is) 34 b(`) p Fl(NULL) p
Fo(') g(then) g(the) g(call) h(will) g(b) s(e) e(equiv) -5
b(alen) m(t) 574 2756 y(to) p Fl 29 w(malloc\(\)) p Fo(.) 37
b(If) p Fe 28 w(size) p Fo 33 w(is) 28 b(`) p Fl(0) p
Fo(') g(then) f(the) h(existing) h(memory) e(allo) s(cation) j(will) e
(b) s(e) f(freed) h(and) f(the) 574 2856 y(`) p Fl(NULL) p
Fo(') 34 b(p) s(oin) m(ter) g(will) g(b) s(e) g(returned.) 51
b(If) p Fe 33 w(size) p Fo 40 w(is) 34 b(greater) i(than) d(the) i
(original) g(allo) s(cation) h(then) 574 2956 y(the) 27
b(extra) g(space) g(will) g(b) s(e) f(\014lled) g(with) g
(uninitialised) h(b) m(ytes.) 40 b(If) 25 b(there) i(is) g(not) f
(enough) g(space) h(in) 574 3055 y(the) c(heap) g(then) g(the) f(`) p
Fl(NULL) p Fo(') h(p) s(oin) m(ter) f(will) i(b) s(e) e(returned,) h
(the) g(original) h(allo) s(cation) h(will) e(b) s(e) f(freed) 574
3155 y(and) p Fl 32 w(errno) p Fo 31 w(will) 32 b(b) s(e) g(set) g(to) p
Fl 33 w(ENOMEM) p Fo(.) 44 b(The) 32 b(allo) s(cated) i(memory) e(m) m
(ust) g(b) s(e) f(deallo) s(cated) j(with) p Fl 574 3254
a(free\(\)) p Fo 27 w(and) 27 b(can) h(b) s(e) f(reallo) s(cated) j
(again) f(with) p Fl 27 w(realloc\(\)) p Fo(.) 38 b(This) 27
b(function) g(is) h(a) m(v) -5 b(ailable) 30 b(for) 574
3354 y(bac) m(kw) m(ards) f(compatibilit) m(y) g(with) f(older) g(C) f
(libraries) h(and) f(should) g(not) h(b) s(e) f(used) g(in) g(new) g
(co) s(de.) p Fl 94 3504 a(void) j(*recalloc\(void) c(*ptr,) j(size_t) g
(nelem,) f(size_t) h(size\)) p Fo 574 3603 a(Resizes) g(the) f(memory) f
(allo) s(cation) j(b) s(eginning) d(at) p Fe 28 w(ptr) p
Fo 33 w(to) p Fe 29 w(nelem) p Fo 28 w(elemen) m(ts) h(of) p
Fe 28 w(size) p Fo 34 w(b) m(ytes) g(and) 574 3703 y(returns) 38
b(a) i(p) s(oin) m(ter) f(to) h(the) f(\014rst) g(b) m(yte) g(of) h
(the) f(new) g(allo) s(cation) i(after) f(cop) m(ying) p
Fe 40 w(ptr) p Fo 45 w(to) g(the) 574 3802 y(newly-allo) s(cated) g
(memory) -8 b(,) 40 b(whic) m(h) e(will) g(b) s(e) f(truncated) h(if) p
Fl 38 w(nelem) 29 b(*) h(size) p Fo 36 w(is) 38 b(smaller) g(than) 574
3902 y(the) i(original) h(allo) s(cation.) 71 b(The) 39
b(p) s(oin) m(ter) h(returned) e(will) i(b) s(e) f(suitably) h(aligned)
g(for) g(casting) 574 4002 y(to) c(an) m(y) e(t) m(yp) s(e) h(and) f
(can) h(b) s(e) f(used) f(to) i(store) h(data) f(of) f(up) g(to) p
Fl 35 w(nelem) 29 b(*) h(size) p Fo 33 w(b) m(ytes) 35
b(in) f(length.) 574 4101 y(If) p Fe 40 w(ptr) p Fo 46
w(is) 39 b(`) p Fl(NULL) p Fo(') h(then) f(the) h(call) h(will) f(b) s
(e) f(equiv) -5 b(alen) m(t) 42 b(to) p Fl 40 w(calloc\(\)) p
Fo(.) 67 b(If) p Fl 39 w(nelem) 29 b(*) h(size) p Fo
39 w(is) 574 4201 y(`) p Fl(0) p Fo(') 40 b(then) g(the) g(existing) h
(memory) f(allo) s(cation) i(will) e(b) s(e) f(freed) g(and) h(the) g
(`) p Fl(NULL) p Fo(') f(p) s(oin) m(ter) h(will) 574
4301 y(b) s(e) 32 b(returned.) 46 b(If) p Fl 32 w(nelem) 29
b(*) h(size) p Fo 32 w(is) i(greater) i(than) e(the) h(original) h
(allo) s(cation) g(then) f(the) f(extra) 574 4400 y(space) 37
b(will) f(b) s(e) f(\014lled) h(with) f(zero-initialised) k(b) m(ytes.)
57 b(If) 35 b(there) h(is) g(not) g(enough) g(space) g(in) g(the) 574
4500 y(heap) 28 b(then) g(the) g(`) p Fl(NULL) p Fo(') g(p) s(oin) m
(ter) g(will) g(b) s(e) f(returned) g(and) p Fl 28 w(errno) p
Fo 26 w(will) i(b) s(e) e(set) h(to) p Fl 29 w(ENOMEM) p
Fo(.) 38 b(The) 574 4599 y(allo) s(cated) h(memory) e(m) m(ust) g(b) s
(e) f(deallo) s(cated) i(with) p Fl 37 w(free\(\)) p
Fo 35 w(and) e(can) h(b) s(e) f(reallo) s(cated) j(again) 574
4699 y(with) p Fl 33 w(realloc\(\)) p Fo(.) 45 b(This) 32
b(function) g(is) g(a) m(v) -5 b(ailable) 35 b(for) e(bac) m(kw) m
(ards) g(compatibilit) m(y) h(with) f(older) 574 4799
y(C) d(libraries) h(and) p Fl 30 w(calloc\(\)) p Fo 28
w(and) f(should) f(not) i(b) s(e) e(used) h(in) g(new) g(co) s(de.) p
Fl 94 4948 a(void) g(*expand\(void) d(*ptr,) i(size_t) f(size\)) p
Fo 574 5048 a(A) m(ttempts) k(to) e(resize) h(the) f(memory) g(allo) s
(cation) i(b) s(eginning) e(at) p Fe 30 w(ptr) p Fo 36
w(to) p Fe 31 w(size) p Fo 36 w(b) m(ytes) g(and) f(either) 574
5147 y(returns) p Fe 34 w(ptr) p Fo 40 w(if) 35 b(there) g(w) m(as) g
(enough) f(space) h(to) g(resize) h(it,) g(or) f(`) p
Fl(NULL) p Fo(') f(if) g(the) h(blo) s(c) m(k) g(could) g(not) 574
5247 y(b) s(e) g(resized) h(for) f(a) h(particular) f(reason.) 56
b(If) p Fe 35 w(ptr) p Fo 41 w(is) 35 b(`) p Fl(NULL) p
Fo(') g(then) g(the) h(call) g(will) g(b) s(e) e(equiv) -5
b(alen) m(t) 574 5347 y(to) p Fl 39 w(malloc\(\)) p Fo(.) 61
b(If) p Fe 37 w(size) p Fo 44 w(is) 37 b(`) p Fl(0) p
Fo(') h(then) g(the) g(existing) g(memory) g(allo) s(cation) i(will) e
(b) s(e) f(freed) h(and) 574 5446 y(the) g(`) p Fl(NULL) p
Fo(') f(p) s(oin) m(ter) g(will) h(b) s(e) f(returned.) 61
b(If) p Fe 37 w(size) p Fo 43 w(is) 38 b(greater) g(than) f(the) h
(original) h(allo) s(cation) 574 5546 y(then) e(the) h(extra) f(space) h
(will) g(b) s(e) e(\014lled) h(with) g(uninitialised) g(b) m(ytes) h
(and) e(if) p Fe 38 w(size) p Fo 43 w(is) h(less) g(than) 574
5645 y(the) k(original) h(allo) s(cation) h(then) d(the) g(memory) h
(blo) s(c) m(k) g(will) g(b) s(e) e(truncated.) 71 b(If) 41
b(there) f(is) h(not) p 90 rotate dyy eop
%%Page: 141 147
141 146 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(141) 574 365 y(enough) 35 b(space) h(in) e(the) h
(heap) g(then) f(the) i(`) p Fl(NULL) p Fo(') e(p) s(oin) m(ter) h
(will) g(b) s(e) f(returned) g(and) p Fl 34 w(errno) p
Fo 34 w(will) 574 465 y(b) s(e) 41 b(set) h(to) p Fl
41 w(ENOMEM) p Fo(.) 71 b(The) 41 b(allo) s(cated) i(memory) e(m) m
(ust) g(b) s(e) f(deallo) s(cated) j(with) p Fl 41 w(free\(\)) p
Fo 40 w(and) 574 565 y(can) 33 b(b) s(e) e(reallo) s(cated) j(again) f
(with) p Fl 32 w(realloc\(\)) p Fo(.) 43 b(This) 32 b(function) f(is) h
(a) m(v) -5 b(ailable) 35 b(for) d(bac) m(kw) m(ards) 574
664 y(compatibilit) m(y) h(with) d(older) h(C) f(libraries) g(and) g
(should) f(not) i(b) s(e) f(used) f(in) h(new) g(co) s(de.) p
Fl 94 814 a(void) g(free\(void) e(*ptr\)) p Fo 574 914
a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s(cation) i(b) s(eginning) e
(at) p Fe 43 w(ptr) p Fo 49 w(so) h(the) f(memory) g(can) g(b) s(e) g
(reused) f(b) m(y) 574 1014 y(another) 31 b(call) h(to) f(allo) s(cate)
i(memory) -8 b(.) 41 b(If) p Fe 30 w(ptr) p Fo 37 w(is) 30
b(`) p Fl(NULL) p Fo(') g(then) g(no) h(memory) f(will) h(b) s(e) f
(freed.) 40 b(All) 574 1113 y(of) 31 b(the) g(previous) e(con) m(ten) m
(ts) k(will) d(b) s(e) g(destro) m(y) m(ed.) p Fl 94
1263 a(void) g(cfree\(void) d(*ptr,) i(size_t) g(nelem,) g(size_t) f
(size\)) p Fo 574 1363 a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s
(cation) i(b) s(eginning) e(at) p Fe 43 w(ptr) p Fo 49
w(so) h(the) f(memory) g(can) g(b) s(e) g(reused) f(b) m(y) 574
1463 y(another) 24 b(call) h(to) f(allo) s(cate) i(memory) -8
b(.) 39 b(If) p Fe 23 w(ptr) p Fo 29 w(is) 24 b(`) p
Fl(NULL) p Fo(') e(then) h(no) h(memory) f(will) h(b) s(e) f(freed.) 38
b(All) 24 b(of) 574 1562 y(the) k(previous) f(con) m(ten) m(ts) i(will)
e(b) s(e) g(destro) m(y) m(ed.) 41 b(The) p Fe 26 w(nelem) p
Fo 28 w(and) p Fe 26 w(size) p Fo 34 w(parameters) 27
b(are) h(ignored) 574 1662 y(in) h(this) g(implemen) m(tation.) 42
b(This) 29 b(function) g(is) g(a) m(v) -5 b(ailable) 31
b(for) e(bac) m(kw) m(ards) h(compatibilit) m(y) h(with) 574
1762 y(older) g(C) f(libraries) g(and) p Fl 30 w(calloc\(\)) p
Fo 28 w(and) g(should) g(not) g(b) s(e) g(used) f(in) h(new) g(co) s
(de.) p Fl 94 1912 a(void) g(dealloca\(void) c(*ptr\)) p
Fo 574 2011 a(Explicitly) 35 b(frees) e(the) g(temp) s(orary) f(memory)
h(allo) s(cation) j(b) s(eginning) c(at) p Fe 34 w(ptr) p
Fo 39 w(so) h(the) g(memory) 574 2111 y(can) f(b) s(e) e(reused) g(b) m
(y) g(another) h(call) h(to) g(allo) s(cate) h(memory) -8
b(.) 42 b(If) p Fe 30 w(ptr) p Fo 37 w(is) 31 b(`) p
Fl(NULL) p Fo(') f(then) g(no) h(memory) 574 2211 y(will) 42
b(b) s(e) e(freed.) 71 b(All) 41 b(of) g(the) g(previous) f(con) m(ten)
m(ts) j(will) e(b) s(e) f(destro) m(y) m(ed.) 72 b(This) 40
b(function) h(can) 574 2310 y(only) 28 b(b) s(e) f(used) g(to) i(free) f
(memory) f(that) i(w) m(as) f(allo) s(cated) i(with) d(the) p
Fl 28 w(alloca\(\)) p Fo(,) p Fl 26 w(strdupa\(\)) p
Fo 26 w(and) p Fl 574 2410 a(strndupa\(\)) p Fo 36 w(functions,) 40
b(but) d(is) h(only) g(really) h(required) f(if) g(the) g(mpatrol) g
(library) g(do) s(es) g(not) 574 2509 y(automatically) j(free) d(suc) m
(h) g(memory) f(allo) s(cations) j(when) d(the) h(allo) s(cating) i
(function) e(returns.) 574 2609 y(This) 30 b(function) g(is) h
(mpatrol-sp) s(eci\014c) f(and) g(should) g(not) g(b) s(e) g(used) f
(in) i(release) g(co) s(de.) p Fn 94 2868 a(A.2) 68 b(C) 45
b(dynamic) g(memory) g(extension) h(functions) p Fo 219
3052 a(The) 27 b(follo) m(wing) j(5) e(functions) f(are) h(a) m(v) -5
b(ailable) 31 b(as) d(replacemen) m(ts) h(for) e(existing) i(C) f
(library) f(extension) i(func-) 94 3151 y(tions) e(that) f(alw) m(a) m
(ys) i(ab) s(ort) e(and) f(nev) m(er) i(return) e(`) p
Fl(NULL) p Fo(') g(if) h(there) g(is) g(insu\016cien) m(t) g(memory) g
(to) h(ful\014l) e(a) i(request.) 94 3251 y(T) -8 b(o) 42
b(use) f(these) h(y) m(ou) g(m) m(ust) f(include) g(`) p
Fl(mpatrol.h) p Fo(') e(b) s(efore) i(all) h(other) g(header) f
(\014les,) j(although) d(on) h(UNIX) 94 3350 y(and) 31
b(Windo) m(ws) g(platforms) g(\(and) g(AmigaOS) g(when) f(using) p
Fl 31 w(gcc) p Fo(\)) h(they) g(will) g(b) s(e) g(used) f(an) m(yw) m
(a) m(y) -8 b(,) 33 b(alb) s(eit) f(with) 94 3450 y(sligh) m(tly) g
(less) f(tracing) g(information.) p Fl 94 3652 a(void) f
(*xmalloc\(size_t) c(size\)) p Fo 574 3751 a(Allo) s(cates) p
Fe 39 w(size) p Fo 43 w(uninitialised) 36 b(b) m(ytes) i(from) e(the) g
(heap) h(and) f(returns) f(a) i(p) s(oin) m(ter) g(to) g(the) g
(\014rst) 574 3851 y(b) m(yte) d(of) e(the) h(allo) s(cation.) 50
b(The) 32 b(p) s(oin) m(ter) g(returned) f(will) i(b) s(e) f(suitably) h
(aligned) g(for) f(casting) i(to) 574 3950 y(an) m(y) g(t) m(yp) s(e) g
(and) f(can) h(b) s(e) f(used) g(to) i(store) f(data) g(of) g(up) f(to)
p Fe 34 w(size) p Fo 40 w(b) m(ytes) h(in) f(length.) 51
b(If) p Fe 33 w(size) p Fo 40 w(is) 34 b(`) p Fl(0) p
Fo(') 574 4050 y(then) c(the) f(memory) h(allo) s(cated) h(will) f(b) s
(e) f(implicitly) i(rounded) d(up) g(to) j(`) p Fl(1) p
Fo(') e(b) m(yte.) 41 b(If) 29 b(there) h(is) g(not) 574
4150 y(enough) 39 b(space) g(in) f(the) h(heap) f(then) g(the) h
(program) f(will) h(b) s(e) f(terminated) h(and) e(the) i(`) p
Fl(OUTMEM) p Fo(') 574 4249 y(error) f(will) g(b) s(e) f(giv) m(en.) 65
b(The) 37 b(allo) s(cated) j(memory) e(m) m(ust) f(b) s(e) h(deallo) s
(cated) h(with) p Fl 38 w(xfree\(\)) p Fo 36 w(or) 574
4349 y(reallo) s(cated) 33 b(with) p Fl 30 w(xrealloc\(\)) p
Fo(.) p Fl 94 4499 a(void) d(*xcalloc\(size_t) c(nelem,) j(size_t) f
(size\)) p Fo 574 4599 a(Allo) s(cates) p Fe 42 w(nelem) p
Fo 39 w(elemen) m(ts) 40 b(of) p Fe 40 w(size) p Fo 45
w(zero-initialised) h(b) m(ytes) f(from) f(the) g(heap) g(and) f
(returns) 574 4698 y(a) d(p) s(oin) m(ter) f(to) h(the) f(\014rst) g(b)
m(yte) g(of) h(the) f(allo) s(cation.) 54 b(The) 34 b(p) s(oin) m(ter) g
(returned) f(will) h(b) s(e) g(suitably) 574 4798 y(aligned) 29
b(for) e(casting) h(to) g(an) m(y) g(t) m(yp) s(e) g(and) e(can) i(b) s
(e) f(used) f(to) i(store) g(data) g(of) g(up) e(to) p
Fl 28 w(nelem) j(*) h(size) p Fo 574 4898 a(b) m(ytes) 37
b(in) f(length.) 58 b(If) p Fl 36 w(nelem) 29 b(*) h(size) p
Fo 35 w(is) 36 b(`) p Fl(0) p Fo(') g(then) g(the) h(amoun) m(t) f(of) g
(memory) g(allo) s(cated) j(will) 574 4997 y(b) s(e) 31
b(implicitly) i(rounded) d(up) g(to) i(`) p Fl(1) p Fo(') g(b) m(yte.)
44 b(If) 31 b(there) g(is) h(not) f(enough) h(space) f(in) h(the) f
(heap) g(then) 574 5097 y(the) f(program) f(will) g(b) s(e) f
(terminated) i(and) e(the) i(`) p Fl(OUTMEM) p Fo(') e(error) g(will) i
(b) s(e) e(giv) m(en.) 41 b(The) 29 b(allo) s(cated) 574
5196 y(memory) i(m) m(ust) f(b) s(e) g(deallo) s(cated) i(with) p
Fl 30 w(xfree\(\)) p Fo 28 w(or) f(reallo) s(cated) h(with) p
Fl 30 w(xrealloc\(\)) p Fo(.) p Fl 94 5347 a(char) e(*xstrdup\(const) c
(char) j(*str\)) p Fo 574 5446 a(Allo) s(cates) 45 b(exactly) g(enough)
d(memory) g(from) h(the) f(heap) h(to) g(duplicate) p
Fe 43 w(str) p Fo 49 w(\(including) g(the) 574 5546 y(terminating) 34
b(n) m(ul) f(c) m(haracter\)) i(and) d(returns) g(a) h(p) s(oin) m(ter)
g(to) h(the) f(\014rst) g(b) m(yte) g(of) g(the) h(allo) s(cation) 574
5645 y(after) 29 b(cop) m(ying) p Fe 28 w(str) p Fo 34
w(to) f(the) g(newly-allo) s(cated) h(memory) -8 b(.) 41
b(The) 27 b(p) s(oin) m(ter) g(returned) f(will) i(ha) m(v) m(e) h(no) p
90 rotate dyy eop
%%Page: 142 148
142 147 bop Fo 94 -116 a(142) 3332 b(mpatrol) 574 365
y(alignmen) m(t) 25 b(constrain) m(ts) f(and) e(can) h(b) s(e) g(used) f
(to) i(store) f(c) m(haracter) i(data) f(up) e(to) h(the) g(length) h
(of) p Fe 23 w(str) p Fo(.) 574 465 y(If) p Fe 33 w(str) p
Fo 38 w(is) 33 b(`) p Fl(NULL) p Fo(') f(then) g(an) h(error) f(will) h
(b) s(e) e(giv) m(en) j(and) e(the) h(`) p Fl(NULL) p
Fo(') f(p) s(oin) m(ter) g(will) h(b) s(e) f(returned.) 574
565 y(If) i(there) g(is) g(not) g(enough) g(space) g(in) g(the) g(heap)
f(then) h(the) g(program) g(will) g(b) s(e) f(terminated) i(and) 574
664 y(the) g(`) p Fl(OUTMEM) p Fo(') e(error) h(will) h(b) s(e) f(giv) m
(en.) 54 b(The) 34 b(allo) s(cated) i(memory) f(m) m(ust) f(b) s(e) g
(deallo) s(cated) i(with) p Fl 574 764 a(xfree\(\)) p
Fo 29 w(or) 30 b(reallo) s(cated) j(with) p Fl 30 w(xrealloc\(\)) p
Fo(.) p Fl 94 908 a(void) d(*xrealloc\(void) c(*ptr,) j(size_t) g
(size\)) p Fo 574 1008 a(Resizes) j(the) e(memory) g(allo) s(cation) j
(b) s(eginning) c(at) p Fe 31 w(ptr) p Fo 36 w(to) p
Fe 31 w(size) p Fo 36 w(b) m(ytes) i(and) e(returns) g(a) i(p) s(oin) m
(ter) 574 1107 y(to) 46 b(the) f(\014rst) f(b) m(yte) i(of) f(the) g
(new) f(allo) s(cation) j(after) f(cop) m(ying) p Fe
45 w(ptr) p Fo 51 w(to) g(the) f(newly-allo) s(cated) 574
1207 y(memory) -8 b(,) 31 b(whic) m(h) e(will) h(b) s(e) f(truncated) g
(if) p Fe 29 w(size) p Fo 36 w(is) g(smaller) h(than) f(the) h
(original) h(allo) s(cation.) 42 b(The) 574 1307 y(p) s(oin) m(ter) 37
b(returned) e(will) h(b) s(e) g(suitably) g(aligned) h(for) f(casting) i
(to) f(an) m(y) f(t) m(yp) s(e) h(and) f(can) g(b) s(e) g(used) 574
1406 y(to) k(store) g(data) f(of) g(up) f(to) p Fe 40
w(size) p Fo 45 w(b) m(ytes) h(in) f(length.) 67 b(If) p
Fe 39 w(ptr) p Fo 44 w(is) 39 b(`) p Fl(NULL) p Fo(') g(then) f(the) h
(call) h(will) g(b) s(e) 574 1506 y(equiv) -5 b(alen) m(t) 35
b(to) p Fl 35 w(xmalloc\(\)) p Fo(.) 47 b(If) p Fe 33
w(size) p Fo 40 w(is) 33 b(`) p Fl(0) p Fo(') h(then) f(it) h(will) g
(b) s(e) f(implicitly) i(rounded) d(up) g(to) j(`) p
Fl(1) p Fo('.) 574 1605 y(If) p Fe 29 w(size) p Fo 35
w(is) 29 b(greater) i(than) e(the) g(original) h(allo) s(cation) i
(then) c(the) i(extra) g(space) f(will) h(b) s(e) e(\014lled) h(with)
574 1705 y(uninitialised) k(b) m(ytes.) 47 b(If) 31 b(there) i(is) f
(not) g(enough) g(space) h(in) f(the) g(heap) g(then) g(the) h(program)
f(will) 574 1805 y(b) s(e) c(terminated) h(and) f(the) h(`) p
Fl(OUTMEM) p Fo(') e(error) h(will) h(b) s(e) f(giv) m(en.) 41
b(The) 28 b(allo) s(cated) i(memory) e(m) m(ust) h(b) s(e) 574
1904 y(deallo) s(cated) k(with) p Fl 30 w(xfree\(\)) p
Fo 28 w(and) d(can) h(b) s(e) e(reallo) s(cated) k(again) e(with) p
Fl 30 w(xrealloc\(\)) p Fo(.) p Fl 94 2049 a(void) f(xfree\(void) d
(*ptr\)) p Fo 574 2148 a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s
(cation) i(b) s(eginning) e(at) p Fe 43 w(ptr) p Fo 49
w(so) h(the) f(memory) g(can) g(b) s(e) g(reused) f(b) m(y) 574
2248 y(another) 31 b(call) h(to) f(allo) s(cate) i(memory) -8
b(.) 41 b(If) p Fe 30 w(ptr) p Fo 37 w(is) 30 b(`) p
Fl(NULL) p Fo(') g(then) g(no) h(memory) f(will) h(b) s(e) f(freed.) 40
b(All) 574 2347 y(of) 31 b(the) g(previous) e(con) m(ten) m(ts) k(will)
d(b) s(e) g(destro) m(y) m(ed.) p Fn 94 2597 a(A.3) 68
b(C) 45 b(dynamic) g(memory) g(alternativ) l(e) j(functions) p
Fo 219 2777 a(The) 37 b(follo) m(wing) i(6) e(functions) g(are) h(pro) m
(vided) f(as) g(con) m(v) m(enien) m(t) i(alternativ) m(es) h(to) e
(the) f(ANSI) g(C) g(dynamic) 94 2877 y(memory) 29 b(allo) s(cation) h
(functions) e(\(although) p Fl 29 w(strdup\(\)) p Fo
26 w(is) g(not) h(strictly) g(an) f(ANSI) g(C) g(function\).) 40
b(They) 28 b(are) 94 2976 y(implemen) m(ted) 37 b(as) f(prepro) s
(cessor) e(macro) j(functions) e(whic) m(h) g(ma) m(y) h(ev) -5
b(aluate) 38 b(their) d(argumen) m(ts) h(more) g(than) 94
3076 y(once,) h(so) e(extra) g(care) g(should) f(b) s(e) f(tak) m(en) j
(to) f(a) m(v) m(oid) h(passing) f(argumen) m(ts) f(with) g
(side-e\013ects.) 55 b(None) 35 b(of) g(the) 94 3176
y(functions) e(return) f(`) p Fl(NULL) p Fo(') h(if) g(no) g(memory) g
(is) g(a) m(v) -5 b(ailable) 36 b(and) c(instead) i(ab) s(ort) f(the) g
(program) g(with) g(a) h(useful) 94 3275 y(error) 42
b(message) h(indicating) f(where) f(the) h(call) h(to) f(allo) s(cate) i
(memory) e(came) h(from) e(and) g(what) g(w) m(as) h(b) s(eing) 94
3375 y(allo) s(cated.) h(T) -8 b(o) 31 b(use) f(these) h(y) m(ou) g
(should) e(include) h(the) h(`) p Fl(mpatrol.h) p Fo(') d(or) i(`) p
Fl(mpalloc.h) p Fo(') f(header) h(\014les.) p Fl 94 3564
a(void) g(*MP_MALLOC\(void) c(*ptr,) j(size_t) g(count,) f(typename) g
(type\)) p Fo 574 3663 a(Allo) s(cates) p Fe 28 w(coun) m(t) p
Fo 29 w(uninitialised) e(items) g(of) g(t) m(yp) s(e) p
Fe 26 w(t) m(yp) s(e) p Fo 31 w(from) f(the) h(heap,) h(sets) p
Fe 26 w(ptr) p Fo 32 w(to) f(the) g(result) 574 3763
y(and) 33 b(returns) f(a) h(suitably-cast) i(p) s(oin) m(ter) e(to) h
(the) f(\014rst) g(item) g(of) h(the) f(allo) s(cation.) 51
b(The) 33 b(p) s(oin) m(ter) 574 3863 y(returned) 28
b(will) i(b) s(e) e(suitably) i(aligned) g(for) f(holding) g(items) g
(of) h(t) m(yp) s(e) p Fe 29 w(t) m(yp) s(e) p Fo(.) 40
b(If) p Fe 29 w(coun) m(t) p Fo 32 w(is) 29 b(`) p Fl(0) p
Fo(') g(then) 574 3962 y(it) g(will) f(b) s(e) f(implicitly) i(rounded)
d(up) h(to) h(`) p Fl(1) p Fo('.) 40 b(If) 28 b(there) g(is) f(not) h
(enough) g(space) g(in) g(the) g(heap) f(then) 574 4062
y(the) 38 b(program) e(will) i(b) s(e) e(ab) s(orted) h(after) g
(calling) i(the) e(allo) s(cation) i(failure) e(handler,) h(whic) m(h) f
(b) m(y) 574 4161 y(default) c(writes) g(an) f(appropriate) g(error) h
(message) g(to) g(the) g(standard) f(error) g(\014le) g(stream.) 47
b(The) 574 4261 y(allo) s(cated) 38 b(memory) d(in) p
Fe 35 w(ptr) p Fo 41 w(m) m(ust) g(b) s(e) g(deallo) s(cated) i(with) p
Fl 35 w(MP_FREE\(\)) p Fo 33 w(or) e(reallo) s(cated) i(with) p
Fl 574 4361 a(MP_REALLOC\(\)) p Fo(.) p Fl 94 4505 a(void) 30
b(*MP_CALLOC\(void) c(*ptr,) j(size_t) g(count,) f(typename) g(type\)) p
Fo 574 4605 a(Allo) s(cates) p Fe 40 w(coun) m(t) p Fo
41 w(zero-initialised) 40 b(items) e(of) g(t) m(yp) s(e) p
Fe 38 w(t) m(yp) s(e) p Fo 43 w(from) g(the) g(heap,) h(sets) p
Fe 39 w(ptr) p Fo 43 w(to) g(the) 574 4704 y(result) f(and) e(returns) g
(a) h(suitably-cast) i(p) s(oin) m(ter) e(to) h(the) f(\014rst) g(item)
h(of) f(the) g(allo) s(cation.) 63 b(The) 574 4804 y(p) s(oin) m(ter) 37
b(returned) f(will) h(b) s(e) g(suitably) g(aligned) g(for) g(holding) g
(items) g(of) g(t) m(yp) s(e) p Fe 37 w(t) m(yp) s(e) p
Fo(.) 61 b(If) p Fe 36 w(coun) m(t) p Fo 574 4903 a(is) 43
b(`) p Fl(0) p Fo(') g(then) f(it) h(will) f(b) s(e) g(implicitly) i
(rounded) d(up) g(to) i(`) p Fl(1) p Fo('.) 77 b(If) 42
b(there) h(is) g(not) f(enough) g(space) 574 5003 y(in) f(the) g(heap) f
(then) h(the) g(program) f(will) h(b) s(e) f(ab) s(orted) g(after) i
(calling) g(the) f(allo) s(cation) i(failure) 574 5103
y(handler,) 27 b(whic) m(h) g(b) m(y) f(default) h(writes) g(an) f
(appropriate) h(error) f(message) i(to) g(the) e(standard) g(error) 574
5202 y(\014le) 35 b(stream.) 53 b(The) 34 b(allo) s(cated) i(memory) e
(in) p Fe 35 w(ptr) p Fo 40 w(m) m(ust) g(b) s(e) g(deallo) s(cated) i
(with) p Fl 34 w(MP_FREE\(\)) p Fo 32 w(or) 574 5302
y(reallo) s(cated) d(with) p Fl 30 w(MP_REALLOC\(\)) p
Fo(.) p Fl 94 5446 a(char) d(*MP_STRDUP\(char) c(*ptr,) j(const) g
(char) g(*str\)) p Fo 574 5546 a(Allo) s(cates) 45 b(exactly) g(enough)
d(memory) g(from) h(the) f(heap) h(to) g(duplicate) p
Fe 43 w(str) p Fo 49 w(\(including) g(the) 574 5645 y(terminating) 28
b(n) m(ul) e(c) m(haracter\),) j(sets) p Fe 27 w(ptr) p
Fo 32 w(to) e(the) f(result) h(and) e(returns) g(a) i(suitably-cast) h
(p) s(oin) m(ter) p 90 rotate dyy eop
%%Page: 143 149
143 148 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(143) 574 365 y(to) 33 b(the) f(\014rst) g(b) m(yte) g
(of) g(the) h(allo) s(cation) h(after) e(cop) m(ying) p
Fe 33 w(str) p Fo 38 w(to) h(the) f(newly-allo) s(cated) i(memory) -8
b(.) 574 465 y(The) 35 b(p) s(oin) m(ter) g(returned) f(will) h(ha) m
(v) m(e) h(no) f(alignmen) m(t) h(constrain) m(ts) g(and) e(can) h(b) s
(e) g(used) f(to) h(store) 574 565 y(c) m(haracter) 30
b(data) e(up) e(to) j(the) e(length) h(of) p Fe 28 w(str) p
Fo(.) 39 b(If) 28 b(there) f(is) h(not) g(enough) f(space) h(in) f(the)
h(heap) f(then) 574 664 y(the) 38 b(program) e(will) i(b) s(e) e(ab) s
(orted) h(after) g(calling) i(the) e(allo) s(cation) i(failure) e
(handler,) h(whic) m(h) f(b) m(y) 574 764 y(default) c(writes) g(an) f
(appropriate) g(error) h(message) g(to) g(the) g(standard) f(error) g
(\014le) g(stream.) 47 b(The) 574 863 y(allo) s(cated) 38
b(memory) d(in) p Fe 35 w(ptr) p Fo 41 w(m) m(ust) g(b) s(e) g(deallo) s
(cated) i(with) p Fl 35 w(MP_FREE\(\)) p Fo 33 w(or) e(reallo) s(cated)
i(with) p Fl 574 963 a(MP_REALLOC\(\)) p Fo(.) p Fl 94
1099 a(void) 30 b(*MP_REALLOC\(void) c(*ptr,) j(size_t) f(count,) h
(typename) f(type\)) p Fo 574 1199 a(Resizes) 40 b(the) e(memory) h
(allo) s(cation) h(b) s(eginning) e(at) p Fe 39 w(ptr) p
Fo 44 w(to) p Fe 39 w(coun) m(t) p Fo 41 w(items) h(of) f(t) m(yp) s(e)
p Fe 39 w(t) m(yp) s(e) p Fo 44 w(and) 574 1299 y(returns) 20
b(a) h(suitably-cast) i(p) s(oin) m(ter) e(to) g(the) g(\014rst) f
(item) i(of) f(the) g(new) f(allo) s(cation) j(after) f(cop) m(ying) p
Fe 22 w(ptr) p Fo 574 1398 a(to) 29 b(the) f(newly-allo) s(cated) i
(memory) -8 b(,) 29 b(whic) m(h) e(will) i(b) s(e) e(truncated) h(if) p
Fe 28 w(coun) m(t) p Fo 30 w(is) g(smaller) g(than) g(the) 574
1498 y(original) k(n) m(um) m(b) s(er) d(of) i(items.) 42
b(The) 30 b(p) s(oin) m(ter) g(returned) f(will) i(b) s(e) f(suitably) h
(aligned) g(for) f(holding) 574 1598 y(items) g(of) f(t) m(yp) s(e) p
Fe 29 w(t) m(yp) s(e) p Fo(.) 40 b(If) p Fe 28 w(ptr) p
Fo 35 w(is) 29 b(`) p Fl(NULL) p Fo(') f(then) h(the) g(call) h(will) f
(b) s(e) f(equiv) -5 b(alen) m(t) 30 b(to) p Fl 30 w(MP_MALLOC\(\)) p
Fo(.) 574 1697 y(If) p Fe 33 w(coun) m(t) p Fo 36 w(is) j(`) p
Fl(0) p Fo(') g(then) g(it) h(will) f(b) s(e) g(implicitly) h(rounded) d
(up) h(to) i(`) p Fl(1) p Fo('.) 49 b(If) p Fe 33 w(coun) m(t) p
Fo 36 w(is) 33 b(greater) h(than) 574 1797 y(the) k(original) g(n) m
(um) m(b) s(er) d(of) i(items) h(then) e(the) i(extra) f(space) h(will)
f(b) s(e) f(\014lled) h(with) g(uninitialised) 574 1896
y(b) m(ytes.) 57 b(If) 35 b(there) g(is) h(not) f(enough) g(space) h
(in) f(the) h(heap) f(then) g(the) h(program) f(will) g(b) s(e) g(ab) s
(orted) 574 1996 y(after) g(calling) h(the) e(allo) s(cation) j
(failure) d(handler,) g(whic) m(h) g(b) m(y) g(default) h(writes) f(an)
g(appropriate) 574 2096 y(error) 40 b(message) h(to) g(the) f(standard)
f(error) g(\014le) h(stream.) 70 b(The) 39 b(allo) s(cated) j(memory) e
(m) m(ust) g(b) s(e) 574 2195 y(deallo) s(cated) 33 b(with) p
Fl 30 w(MP_FREE\(\)) p Fo 28 w(and) c(can) i(b) s(e) f(reallo) s(cated)
i(again) g(with) p Fl 30 w(MP_REALLOC\(\)) p Fo(.) p
Fl 94 2332 a(void) e(MP_FREE\(void) d(*ptr\)) p Fo 574
2431 a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s(cation) i(b) s
(eginning) e(at) p Fe 43 w(ptr) p Fo 49 w(so) h(the) f(memory) g(can) g
(b) s(e) g(reused) f(b) m(y) 574 2531 y(another) 30 b(call) g(to) f
(allo) s(cate) j(memory) -8 b(,) 30 b(and) e(sets) p
Fe 29 w(ptr) p Fo 35 w(to) i(`) p Fl(NULL) p Fo(') e(after) h(freeing) h
(the) f(memory) -8 b(.) 40 b(If) p Fe 574 2631 a(ptr) p
Fo 37 w(is) 30 b(`) p Fl(NULL) p Fo(') g(then) g(no) g(memory) h(will) f
(b) s(e) g(freed.) p Fl 94 2767 a(__mp_failhandler) c
(MP_FAILURE\(__mp_failhandle) o(r) e(func\)) p Fo 574
2867 a(Installs) 45 b(an) f(allo) s(cation) j(failure) e(handler) e(sp)
s(eci\014cally) i(for) g(use) f(with) p Fl 44 w(MP_MALLOC\(\)) p
Fo(,) p Fl 45 w(MP_) 574 2966 y(CALLOC\(\)) p Fo(,) p
Fl 27 w(MP_STRDUP\(\)) p Fo 24 w(and) p Fl 28 w(MP_REALLOC\(\)) p
Fo 24 w(and) 27 b(returns) g(a) h(p) s(oin) m(ter) g(to) g(the) g
(previously) 574 3066 y(installed) 38 b(handler,) g(normally) g(the) f
(default) g(handler) f(if) h(no) g(handler) f(had) h(b) s(een) f
(previously) 574 3166 y(installed.) 41 b(This) 26 b(will) i(b) s(e) f
(called) h(b) m(y) f(the) h(ab) s(o) m(v) m(e) g(functions) f(when) f
(there) i(is) f(not) g(enough) g(space) 574 3265 y(in) c(the) g(heap) g
(for) g(them) f(to) i(satisfy) g(their) f(allo) s(cation) i(request.) 38
b(The) 22 b(default) i(allo) s(cation) h(failure) 574
3365 y(handler) 32 b(will) g(terminate) h(the) f(program) g(after) h
(writing) f(an) g(error) g(message) h(to) g(the) f(standard) 574
3464 y(error) 23 b(\014le) g(stream) h(indicating) g(where) f(the) g
(original) h(allo) s(cation) i(request) d(to) s(ok) g(place) i(and) d
(what) 574 3564 y(w) m(as) 31 b(b) s(eing) f(allo) s(cated.) p
Fn 94 3802 a(A.4) 68 b(C) p Fb(++) p Fn 44 w(dynamic) 45
b(memory) g(allo) t(cation) i(functions) p Fo 219 3978
a(The) 24 b(follo) m(wing) h(5) g(functions) e(are) i(a) m(v) -5
b(ailable) 26 b(as) e(replacemen) m(ts) i(for) e(existing) h(C) p
Fl(++) p Fo 23 w(library) f(functions,) h(but) 94 4078
y(the) 36 b(replacemen) m(ts) g(in) e(`) p Fl(mpatrol.h) p
Fo(') f(will) j(only) f(b) s(e) f(used) g(if) h(the) p
Fl 35 w(MP_NOCPLUSPLUS) p Fo 31 w(prepro) s(cessor) f(macro) 94
4177 y(is) 43 b(not) g(de\014ned.) 76 b(The) 42 b(replacemen) m(t) i
(op) s(erators) e(mak) m(e) i(use) e(of) h(the) f(prepro) s(cessor) g
(in) g(order) g(to) h(obtain) 94 4277 y(source-lev) m(el) c
(information.) 58 b(If) 36 b(this) g(causes) g(problems) g(then) g(y) m
(ou) g(should) f(de\014ne) h(the) p Fl 36 w(MP_NONEWDELETE) p
Fo 94 4376 a(prepro) s(cessor) 25 b(macro) i(and) e(use) g(the) p
Fl 26 w(MP_NEW) p Fo(,) p Fl 25 w(MP_NEW_NOTHROW) p Fo
22 w(and) p Fl 25 w(MP_DELETE) p Fo 24 w(macros) h(instead) g(of) p
Fl 26 w(new) p Fo 94 4476 a(and) p Fl 33 w(delete) p
Fo 31 w(directly) -8 b(.) 50 b(T) -8 b(o) 34 b(use) f(these) g(C) p
Fl(++) p Fo 32 w(features) h(y) m(ou) f(m) m(ust) g(include) g(`) p
Fl(mpatrol.h) p Fo(') e(b) s(efore) i(all) h(other) 94
4576 y(header) g(\014les,) h(although) f(on) g(UNIX) g(and) f(Windo) m
(ws) h(platforms) g(\(and) f(AmigaOS) h(when) f(using) p
Fl 34 w(gcc) p Fo(\)) g(they) 94 4675 y(will) e(b) s(e) f(used) g(an) m
(yw) m(a) m(y) -8 b(,) 32 b(alb) s(eit) f(with) f(sligh) m(tly) i(less)
e(tracing) i(information.) p Fl 94 4848 a(void) e(*operator) e
(new\(size_t) f(size\)) p Fo 574 4948 a(Allo) s(cates) p
Fe 39 w(size) p Fo 43 w(uninitialised) 36 b(b) m(ytes) i(from) e(the) g
(heap) h(and) f(returns) f(a) i(p) s(oin) m(ter) g(to) g(the) g
(\014rst) 574 5048 y(b) m(yte) d(of) e(the) h(allo) s(cation.) 50
b(The) 32 b(p) s(oin) m(ter) g(returned) f(will) i(b) s(e) f(suitably) h
(aligned) g(for) f(casting) i(to) 574 5147 y(an) m(y) 41
b(t) m(yp) s(e) g(and) e(can) i(b) s(e) e(used) h(to) h(store) g(data) g
(of) f(up) f(to) p Fe 41 w(size) p Fo 46 w(b) m(ytes) i(in) f(length.)
71 b(If) p Fe 40 w(size) p Fo 46 w(is) 574 5247 y(`) p
Fl(0) p Fo(') 38 b(then) f(the) h(memory) f(allo) s(cated) i(will) f(b)
s(e) f(implicitly) i(rounded) c(up) i(to) h(`) p Fl(1) p
Fo(') f(b) m(yte.) 63 b(If) 37 b(there) 574 5347 y(is) 32
b(not) g(enough) g(space) g(in) g(the) g(heap) g(then) f(either) h(the)
p Fl 32 w(std::bad_alloc) p Fo 28 w(exception) h(will) g(b) s(e) 574
5446 y(thro) m(wn) e(or) f(the) h(n) m(ull) g(p) s(oin) m(ter) g(will) g
(b) s(e) f(returned) f(and) p Fl 30 w(errno) p Fo 29
w(will) j(b) s(e) e(set) h(to) p Fl 31 w(ENOMEM) p Fo
29 w(|) g(the) 574 5546 y(b) s(eha) m(viour) 39 b(dep) s(ends) d(on) i
(whether) g(the) p Fi 39 w(nothr) -5 b(ow) p Fo 51 w(v) m(ersion) 39
b(of) f(the) h(op) s(erator) g(is) f(used.) 64 b(The) 574
5645 y(allo) s(cated) 33 b(memory) d(m) m(ust) g(b) s(e) g(deallo) s
(cated) i(with) p Fl 30 w(operator) d(delete) p Fo(.) p
90 rotate dyy eop
%%Page: 144 150
144 149 bop Fo 94 -116 a(144) 3332 b(mpatrol) p Fl 94
365 a(void) 30 b(*operator) e(new[]\(size_t) f(size\)) p
Fo 574 465 a(Allo) s(cates) p Fe 39 w(size) p Fo 43 w(uninitialised) 36
b(b) m(ytes) i(from) e(the) g(heap) h(and) f(returns) f(a) i(p) s(oin) m
(ter) g(to) g(the) g(\014rst) 574 565 y(b) m(yte) d(of) e(the) h(allo) s
(cation.) 50 b(The) 32 b(p) s(oin) m(ter) g(returned) f(will) i(b) s(e)
f(suitably) h(aligned) g(for) f(casting) i(to) 574 664
y(an) m(y) 41 b(t) m(yp) s(e) g(and) e(can) i(b) s(e) e(used) h(to) h
(store) g(data) g(of) f(up) f(to) p Fe 41 w(size) p Fo
46 w(b) m(ytes) i(in) f(length.) 71 b(If) p Fe 40 w(size) p
Fo 46 w(is) 574 764 y(`) p Fl(0) p Fo(') 38 b(then) f(the) h(memory) f
(allo) s(cated) i(will) f(b) s(e) f(implicitly) i(rounded) c(up) i(to) h
(`) p Fl(1) p Fo(') f(b) m(yte.) 63 b(If) 37 b(there) 574
863 y(is) 32 b(not) g(enough) g(space) g(in) g(the) g(heap) g(then) f
(either) h(the) p Fl 32 w(std::bad_alloc) p Fo 28 w(exception) h(will) g
(b) s(e) 574 963 y(thro) m(wn) e(or) f(the) h(n) m(ull) g(p) s(oin) m
(ter) g(will) g(b) s(e) f(returned) f(and) p Fl 30 w(errno) p
Fo 29 w(will) j(b) s(e) e(set) h(to) p Fl 31 w(ENOMEM) p
Fo 29 w(|) g(the) 574 1063 y(b) s(eha) m(viour) 39 b(dep) s(ends) d(on)
i(whether) g(the) p Fi 39 w(nothr) -5 b(ow) p Fo 51 w(v) m(ersion) 39
b(of) f(the) h(op) s(erator) g(is) f(used.) 64 b(The) 574
1162 y(allo) s(cated) 33 b(memory) d(m) m(ust) g(b) s(e) g(deallo) s
(cated) i(with) p Fl 30 w(operator) d(delete[]) p Fo(.) p
Fl 94 1312 a(void) h(operator) e(delete\(void) f(*ptr\)) p
Fo 574 1412 a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s(cation) i(b) s
(eginning) e(at) p Fe 43 w(ptr) p Fo 49 w(so) h(the) f(memory) g(can) g
(b) s(e) g(reused) f(b) m(y) 574 1512 y(another) 31 b(call) h(to) f
(allo) s(cate) i(memory) -8 b(.) 41 b(If) p Fe 30 w(ptr) p
Fo 37 w(is) 30 b(`) p Fl(NULL) p Fo(') g(then) g(no) h(memory) f(will) h
(b) s(e) f(freed.) 40 b(All) 574 1611 y(of) d(the) f(previous) f(con) m
(ten) m(ts) j(will) e(b) s(e) g(destro) m(y) m(ed.) 58
b(This) 35 b(function) h(m) m(ust) g(only) g(b) s(e) f(used) g(with) 574
1711 y(memory) c(allo) s(cated) h(b) m(y) p Fl 30 w(operator) c(new) p
Fo(.) p Fl 94 1861 a(void) i(operator) e(delete[]\(void) f(*ptr\)) p
Fo 574 1961 a(F) -8 b(rees) 45 b(the) e(memory) g(allo) s(cation) i(b) s
(eginning) e(at) p Fe 43 w(ptr) p Fo 49 w(so) h(the) f(memory) g(can) g
(b) s(e) g(reused) f(b) m(y) 574 2060 y(another) 31 b(call) h(to) f
(allo) s(cate) i(memory) -8 b(.) 41 b(If) p Fe 30 w(ptr) p
Fo 37 w(is) 30 b(`) p Fl(NULL) p Fo(') g(then) g(no) h(memory) f(will) h
(b) s(e) f(freed.) 40 b(All) 574 2160 y(of) d(the) f(previous) f(con) m
(ten) m(ts) j(will) e(b) s(e) g(destro) m(y) m(ed.) 58
b(This) 35 b(function) h(m) m(ust) g(only) g(b) s(e) f(used) g(with) 574
2260 y(memory) c(allo) s(cated) h(b) m(y) p Fl 30 w(operator) c(new[]) p
Fo(.) p Fl 94 2410 a(std::new_handler) e(std::set_new_handler\(std::) o
(new) o(_han) o(dler) e(func\)) p Fo 574 2509 a(Installs) j(a) f(lo) m
(w-memory) h(handler) e(sp) s(eci\014cally) i(for) e(use) h(with) p
Fl 26 w(operator) i(new) p Fo 25 w(and) p Fl 25 w(operator) 574
2609 y(new[]) p Fo 29 w(and) i(returns) f(a) i(p) s(oin) m(ter) f(to) h
(the) g(previously) f(installed) h(handler,) f(or) g(the) h(n) m(ull) f
(p) s(oin) m(ter) 574 2709 y(if) i(no) g(handler) f(had) g(b) s(een) g
(previously) g(installed.) 45 b(This) 31 b(will) h(b) s(e) f(called) i
(rep) s(eatedly) f(b) m(y) g(b) s(oth) 574 2808 y(functions) c(when) f
(they) h(w) m(ould) f(normally) i(return) d(`) p Fl(NULL) p
Fo(',) i(and) g(this) f(lo) s(op) h(will) h(con) m(tin) m(ue) g(un) m
(til) 574 2908 y(they) k(manage) h(to) f(allo) s(cate) i(the) d
(requested) h(space.) 48 b(Note) 33 b(that) g(this) g(function) f(is) h
(equiv) -5 b(alen) m(t) 574 3008 y(to) p Fl 32 w(__mp_nomemory\(\)) p
Fo 26 w(and) 30 b(will) g(replace) i(the) e(handler) g(installed) h(b) m
(y) f(that) h(function.) p Fn 94 3267 a(A.5) 68 b(C) 45
b(memory) g(op) t(eration) h(functions) p Fo 219 3450
a(The) 24 b(follo) m(wing) i(10) f(functions) f(are) g(a) m(v) -5
b(ailable) 27 b(as) e(replacemen) m(ts) g(for) f(existing) i(C) e
(library) g(memory) g(op) s(era-) 94 3550 y(tion) i(functions.) 39
b(T) -8 b(o) 26 b(use) f(these) h(y) m(ou) g(m) m(ust) f(include) g(`) p
Fl(mpatrol.h) p Fo(') f(b) s(efore) h(all) h(other) g(header) f
(\014les,) i(although) 94 3649 y(on) 36 b(UNIX) h(and) e(Windo) m(ws) h
(platforms) g(\(and) g(AmigaOS) g(when) f(using) p Fl
35 w(gcc) p Fo(\)) h(they) g(will) g(b) s(e) g(used) f(an) m(yw) m(a) m
(y) -8 b(,) 94 3749 y(alb) s(eit) 32 b(with) e(sligh) m(tly) h(less) g
(tracing) g(information.) p Fl 94 3950 a(void) f(*memset\(void) d
(*ptr,) i(int) g(byte,) g(size_t) g(size\)) p Fo 574
4050 a(W) -8 b(rites) p Fe 28 w(size) p Fo 32 w(b) m(ytes) 26
b(of) g(v) -5 b(alue) p Fe 27 w(b) m(yte) p Fo 32 w(to) 26
b(the) g(memory) g(lo) s(cation) i(b) s(eginning) d(at) p
Fe 27 w(ptr) p Fo 32 w(and) g(returns) p Fe 574 4150
a(ptr) p Fo(.) 83 b(If) p Fe 44 w(size) p Fo 51 w(is) 44
b(`) p Fl(0) p Fo(') h(then) f(no) h(b) m(ytes) g(will) g(b) s(e) f
(written.) 83 b(If) 44 b(the) h(op) s(eration) g(w) m(ould) f(a\013ect)
574 4249 y(an) i(existing) g(memory) f(allo) s(cation) j(in) d(the) g
(heap) g(but) g(w) m(ould) g(straddle) g(that) h(allo) s(cation's) 574
4349 y(b) s(oundaries) 28 b(then) h(an) g(error) g(message) i(will) e
(b) s(e) g(generated) h(in) f(the) g(log) i(\014le) e(and) g(no) g(b) m
(ytes) h(will) 574 4449 y(b) s(e) g(written.) p Fl 94
4599 a(void) g(bzero\(void) d(*ptr,) i(size_t) g(size\)) p
Fo 574 4698 a(W) -8 b(rites) p Fe 28 w(size) p Fo 32
w(zero) 26 b(b) m(ytes) h(to) g(the) f(memory) g(lo) s(cation) h(b) s
(eginning) e(at) p Fe 27 w(ptr) p Fo(.) 39 b(If) p Fe
25 w(size) p Fo 32 w(is) 26 b(`) p Fl(0) p Fo(') g(then) g(no) 574
4798 y(b) m(ytes) h(will) f(b) s(e) f(written.) 39 b(If) 25
b(the) h(op) s(eration) g(w) m(ould) f(a\013ect) j(an) d(existing) i
(memory) e(allo) s(cation) j(in) 574 4898 y(the) g(heap) f(but) f(w) m
(ould) h(straddle) g(that) g(allo) s(cation's) j(b) s(oundaries) 25
b(then) i(an) g(error) f(message) j(will) 574 4997 y(b) s(e) i
(generated) i(in) e(the) g(log) i(\014le) e(and) g(no) g(b) m(ytes) h
(will) g(b) s(e) f(written.) 43 b(This) 31 b(function) g(is) h(a) m(v)
-5 b(ailable) 574 5097 y(for) 35 b(bac) m(kw) m(ards) h(compatibilit) m
(y) h(with) e(older) g(C) g(libraries) g(and) f(should) h(not) g(b) s
(e) f(used) h(in) f(new) 574 5196 y(co) s(de.) p Fl 94
5347 a(void) c(*memccpy\(void) c(*dest,) j(const) g(void) g(*src,) g
(int) h(byte,) f(size_t) f(size\)) p Fo 574 5446 a(Copies) p
Fe 28 w(size) p Fo 33 w(b) m(ytes) g(from) p Fe 27 w(src) p
Fo 33 w(to) p Fe 28 w(dest) p Fo 30 w(and) f(returns) f(`) p
Fl(NULL) p Fo(',) h(or) h(copies) g(the) g(n) m(um) m(b) s(er) e(of) h
(b) m(ytes) 574 5546 y(up) 34 b(to) i(and) e(including) g(the) h
(\014rst) f(o) s(ccurrence) h(of) p Fe 35 w(b) m(yte) p
Fo 41 w(if) p Fe 34 w(b) m(yte) p Fo 41 w(exists) g(within) g(the) g
(sp) s(eci\014ed) 574 5645 y(range) 24 b(and) f(returns) f(a) h(p) s
(oin) m(ter) h(to) g(the) f(\014rst) g(b) m(yte) h(after) p
Fe 23 w(b) m(yte) p Fo(.) 39 b(If) p Fe 23 w(size) p
Fo 29 w(is) 24 b(`) p Fl(0) p Fo(') f(or) p Fe 23 w(src) p
Fo 29 w(is) g(the) h(same) p 90 rotate dyy eop
%%Page: 145 151
145 150 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(145) 574 365 y(as) p Fe 31 w(dest) p
Fo 31 w(then) 30 b(no) g(b) m(ytes) g(will) g(b) s(e) g(copied.) 41
b(The) 29 b(source) h(and) f(destination) i(ranges) f(should) f(not) 574
465 y(o) m(v) m(erlap,) 35 b(otherwise) e(a) g(w) m(arning) f(will) h
(b) s(e) e(written) i(to) g(the) g(log) g(\014le.) 47
b(If) 32 b(the) g(op) s(eration) h(w) m(ould) 574 565
y(a\013ect) 26 b(an) d(existing) i(memory) e(allo) s(cation) j(in) d
(the) h(heap) g(but) e(w) m(ould) i(straddle) f(that) i(allo) s
(cation's) 574 664 y(b) s(oundaries) j(then) h(an) g(error) g(message) i
(will) e(b) s(e) g(generated) h(in) f(the) g(log) i(\014le) e(and) g
(no) g(b) m(ytes) h(will) 574 764 y(b) s(e) g(copied.) p
Fl 94 920 a(void) g(*memcpy\(void) d(*dest,) h(const) h(void) h(*src,) e
(size_t) h(size\)) p Fo 574 1020 a(Copies) p Fe 31 w(size) p
Fo 37 w(b) m(ytes) j(from) p Fe 30 w(src) p Fo 37 w(to) p
Fe 31 w(dest) p Fo 33 w(and) f(returns) p Fe 29 w(dest) p
Fo(.) 43 b(If) p Fe 30 w(size) p Fo 37 w(is) 31 b(`) p
Fl(0) p Fo(') g(or) p Fe 31 w(src) p Fo 36 w(is) g(the) h(same) 574
1120 y(as) p Fe 31 w(dest) p Fo 31 w(then) e(no) g(b) m(ytes) g(will) g
(b) s(e) g(copied.) 41 b(The) 29 b(source) h(and) f(destination) i
(ranges) f(should) f(not) 574 1219 y(o) m(v) m(erlap,) 35
b(otherwise) e(a) g(w) m(arning) f(will) h(b) s(e) e(written) i(to) g
(the) g(log) g(\014le.) 47 b(If) 32 b(the) g(op) s(eration) h(w) m
(ould) 574 1319 y(a\013ect) 26 b(an) d(existing) i(memory) e(allo) s
(cation) j(in) d(the) h(heap) g(but) e(w) m(ould) i(straddle) f(that) i
(allo) s(cation's) 574 1418 y(b) s(oundaries) j(then) h(an) g(error) g
(message) i(will) e(b) s(e) g(generated) h(in) f(the) g(log) i(\014le) e
(and) g(no) g(b) m(ytes) h(will) 574 1518 y(b) s(e) g(copied.) p
Fl 94 1675 a(void) g(*memmove\(void) c(*dest,) j(const) g(void) g
(*src,) g(size_t) g(size\)) p Fo 574 1774 a(Copies) p
Fe 25 w(size) p Fo 31 w(b) m(ytes) d(from) p Fe 24 w(src) p
Fo 30 w(to) p Fe 26 w(dest) p Fo 27 w(and) e(returns) p
Fe 24 w(dest) p Fo(.) 39 b(If) p Fe 24 w(size) p Fo 31
w(is) 25 b(`) p Fl(0) p Fo(') g(or) p Fe 25 w(src) p
Fo 30 w(is) g(the) g(same) h(as) p Fe 574 1874 a(dest) p
Fo 31 w(then) i(no) g(b) m(ytes) h(will) f(b) s(e) g(copied.) 41
b(If) 27 b(the) i(op) s(eration) g(w) m(ould) f(a\013ect) i(an) e
(existing) h(memory) 574 1974 y(allo) s(cation) h(in) c(the) h(heap) g
(but) f(w) m(ould) h(straddle) g(that) g(allo) s(cation's) j(b) s
(oundaries) 25 b(then) i(an) f(error) 574 2073 y(message) 32
b(will) f(b) s(e) e(generated) j(in) e(the) g(log) i(\014le) e(and) g
(no) g(b) m(ytes) h(will) g(b) s(e) f(copied.) p Fl 94
2230 a(void) g(bcopy\(const) d(void) i(*src,) g(void) g(*dest,) g
(size_t) g(size\)) p Fo 574 2329 a(Copies) p Fe 34 w(size) p
Fo 39 w(b) m(ytes) k(from) p Fe 33 w(src) p Fo 38 w(to) p
Fe 34 w(dest) p Fo(.) 49 b(If) p Fe 33 w(size) p Fo 39
w(is) 33 b(`) p Fl(0) p Fo(') g(or) p Fe 33 w(src) p
Fo 39 w(is) g(the) g(same) h(as) p Fe 33 w(dest) p Fo
35 w(then) f(no) 574 2429 y(b) m(ytes) d(will) e(b) s(e) g(copied.) 41
b(If) 28 b(the) h(op) s(eration) g(w) m(ould) f(a\013ect) i(an) e
(existing) i(memory) e(allo) s(cation) j(in) 574 2529
y(the) d(heap) f(but) f(w) m(ould) h(straddle) g(that) g(allo) s
(cation's) j(b) s(oundaries) 25 b(then) i(an) g(error) f(message) j
(will) 574 2628 y(b) s(e) k(generated) i(in) e(the) h(log) g(\014le) g
(and) f(no) g(b) m(ytes) h(will) g(b) s(e) f(copied.) 50
b(This) 33 b(function) g(is) h(a) m(v) -5 b(ailable) 574
2728 y(for) 35 b(bac) m(kw) m(ards) h(compatibilit) m(y) h(with) e
(older) g(C) g(libraries) g(and) f(should) h(not) g(b) s(e) f(used) h
(in) f(new) 574 2827 y(co) s(de.) p Fl 94 2984 a(int) c(memcmp\(const) d
(void) i(*ptr1,) g(const) g(void) g(*ptr2,) g(size_t) f(size\)) p
Fo 574 3084 a(Compares) p Fe 45 w(size) p Fo 50 w(b) m(ytes) 45
b(from) p Fe 44 w(ptr1) p Fo 51 w(and) p Fe 44 w(ptr2) p
Fo 51 w(and) f(returns) f(`) p Fl(0) p Fo(') i(if) f(all) i(of) e(the) h
(b) m(ytes) g(are) 574 3183 y(iden) m(tical,) 38 b(or) c(returns) g
(the) g(b) m(yte) i(di\013erence) e(of) h(the) g(\014rst) e
(di\013ering) i(b) m(ytes.) 53 b(If) p Fe 34 w(size) p
Fo 41 w(is) 34 b(`) p Fl(0) p Fo(') h(or) p Fe 574 3283
a(ptr1) p Fo 31 w(is) 24 b(the) f(same) h(as) p Fe 24
w(ptr2) p Fo 31 w(then) f(no) h(b) m(ytes) g(will) f(b) s(e) g
(compared.) 39 b(If) 23 b(the) h(op) s(eration) g(w) m(ould) f(read) 574
3383 y(from) j(an) g(existing) h(memory) f(allo) s(cation) j(in) c(the)
i(heap) f(but) f(w) m(ould) h(straddle) g(that) h(allo) s(cation's) 574
3482 y(b) s(oundaries) h(then) h(an) g(error) g(message) i(will) e(b) s
(e) g(generated) h(in) f(the) g(log) i(\014le) e(and) g(no) g(b) m
(ytes) h(will) 574 3582 y(b) s(e) g(compared.) p Fl 94
3738 a(int) g(bcmp\(const) e(void) h(*ptr1,) f(const) h(void) h(*ptr2,)
e(size_t) h(size\)) p Fo 574 3838 a(Compares) p Fe 45
w(size) p Fo 50 w(b) m(ytes) 45 b(from) p Fe 44 w(ptr1) p
Fo 51 w(and) p Fe 44 w(ptr2) p Fo 51 w(and) f(returns) f(`) p
Fl(0) p Fo(') i(if) f(all) i(of) e(the) h(b) m(ytes) g(are) 574
3938 y(iden) m(tical,) 38 b(or) c(returns) g(the) g(b) m(yte) i
(di\013erence) e(of) h(the) g(\014rst) e(di\013ering) i(b) m(ytes.) 53
b(If) p Fe 34 w(size) p Fo 41 w(is) 34 b(`) p Fl(0) p
Fo(') h(or) p Fe 574 4037 a(ptr1) p Fo 31 w(is) 24 b(the) f(same) h(as)
p Fe 24 w(ptr2) p Fo 31 w(then) f(no) h(b) m(ytes) g(will) f(b) s(e) g
(compared.) 39 b(If) 23 b(the) h(op) s(eration) g(w) m(ould) f(read) 574
4137 y(from) j(an) g(existing) h(memory) f(allo) s(cation) j(in) c(the)
i(heap) f(but) f(w) m(ould) h(straddle) g(that) h(allo) s(cation's) 574
4236 y(b) s(oundaries) h(then) h(an) g(error) g(message) i(will) e(b) s
(e) g(generated) h(in) f(the) g(log) i(\014le) e(and) g(no) g(b) m
(ytes) h(will) 574 4336 y(b) s(e) 35 b(compared.) 54
b(This) 34 b(function) h(is) g(a) m(v) -5 b(ailable) 37
b(for) e(bac) m(kw) m(ards) g(compatibilit) m(y) j(with) c(older) h(C)
574 4436 y(libraries) c(and) f(should) f(not) i(b) s(e) e(used) h(in) g
(new) g(co) s(de.) p Fl 94 4592 a(void) g(*memchr\(const) c(void) k
(*ptr,) f(int) g(byte,) g(size_t) g(size\)) p Fo 574
4692 a(Searc) m(hes) d(up) e(to) p Fe 26 w(size) p Fo
31 w(b) m(ytes) h(in) p Fe 25 w(ptr) p Fo 31 w(for) g(the) g(\014rst) f
(o) s(ccurrence) h(of) p Fe 26 w(b) m(yte) p Fo 30 w(and) g(returns) f
(a) h(p) s(oin) m(ter) 574 4792 y(to) 35 b(it) f(or) g(`) p
Fl(NULL) p Fo(') f(if) g(no) h(suc) m(h) f(b) m(yte) h(o) s(ccurs.) 50
b(If) p Fe 33 w(size) p Fo 40 w(is) 34 b(`) p Fl(0) p
Fo(') f(then) h(no) f(b) m(ytes) h(will) g(b) s(e) f(searc) m(hed.) 574
4891 y(If) f(the) h(op) s(eration) f(w) m(ould) g(a\013ect) i(an) e
(existing) h(memory) f(allo) s(cation) j(in) c(the) i(heap) f(but) f(w)
m(ould) 574 4991 y(straddle) d(that) g(allo) s(cation's) i(b) s
(oundaries) c(then) h(an) g(error) g(message) i(will) e(b) s(e) g
(generated) i(in) e(the) 574 5090 y(log) 32 b(\014le) e(and) g(no) g(b)
m(ytes) h(will) g(b) s(e) f(searc) m(hed.) p Fl 94 5247
a(void) g(*memmem\(const) c(void) k(*ptr1,) e(size_t) h(size1,) g
(const) g(void) g(*ptr2,) f(size_t) h(size2\)) p Fo 574
5347 a(Searc) m(hes) j(up) d(to) p Fe 31 w(size1) p Fo
40 w(b) m(ytes) i(in) p Fe 30 w(ptr1) p Fo 38 w(for) f(the) h(\014rst) f
(o) s(ccurrence) g(of) p Fe 31 w(ptr2) p Fo 38 w(\(whic) m(h) h(is) f
(exactly) p Fe 574 5446 a(size2) p Fo 45 w(b) m(ytes) 36
b(in) g(length\)) g(and) g(returns) e(a) j(p) s(oin) m(ter) e(to) i(it)
f(or) g(`) p Fl(NULL) p Fo(') f(if) h(no) g(suc) m(h) g(sequence) g(of)
574 5546 y(b) m(ytes) c(o) s(ccur.) 43 b(If) p Fe 31
w(size1) p Fo 40 w(or) p Fe 31 w(size2) p Fo 39 w(is) 32
b(`) p Fl(0) p Fo(') f(then) g(no) g(b) m(ytes) h(will) f(b) s(e) g
(searc) m(hed.) 43 b(If) 31 b(the) g(op) s(eration) 574
5645 y(w) m(ould) 42 b(a\013ect) g(an) g(existing) g(memory) f(allo) s
(cation) j(in) d(the) g(heap) g(but) g(w) m(ould) g(straddle) g(that) p
90 rotate dyy eop
%%Page: 146 152
146 151 bop Fo 94 -116 a(146) 3332 b(mpatrol) 574 365
y(allo) s(cation's) 36 b(b) s(oundaries) c(then) i(an) f(error) g
(message) i(will) f(b) s(e) f(generated) h(in) g(the) f(log) i(\014le) f
(and) 574 465 y(no) d(b) m(ytes) g(will) f(b) s(e) g(searc) m(hed.) p
Fn 94 747 a(A.6) 68 b(mpatrol) 46 b(library) f(functions) p
Fo 219 939 a(The) 24 b(follo) m(wing) h(42) g(functions) f(are) h(a) m
(v) -5 b(ailable) 26 b(as) e(supp) s(ort) f(routines) h(for) g
(additional) h(con) m(trol) g(and) f(tracing) 94 1039
y(in) 32 b(the) g(mpatrol) g(library) -8 b(.) 45 b(Although) 32
b(they) g(are) g(do) s(cumen) m(ted) g(here) g(as) g(b) s(eing) f
(pre\014xed) g(b) m(y) g(`) p Fl(__mp_) p Fo(',) h(their) 94
1139 y(equiv) -5 b(alen) m(t) 24 b(functions) e(that) h(are) g
(pre\014xed) e(b) m(y) h(`) p Fl(mpatrol_) p Fo(') e(are) j(also) g
(de\014ned) e(as) i(aliases) h(in) e(the) g(`) p Fl(mpatrol.h) p
Fo(') 94 1238 y(header) 31 b(\014le.) 40 b(T) -8 b(o) 31
b(use) f(these) h(y) m(ou) g(should) e(include) h(the) h(`) p
Fl(mpatrol.h) p Fo(') d(header) j(\014le.) p Fl 94 1402
a(int) f(__mp_atexit\(void) c(\(*func\)\(void\)\)) p
Fo 574 1502 a(Installs) 44 b(a) f(function) g(to) g(b) s(e) g(called) h
(when) e(the) h(mpatrol) g(library) g(terminates.) 79
b(Up) 42 b(to) i(32) 574 1602 y(suc) m(h) 33 b(functions) g(can) g(b) s
(e) g(registered) g(and) g(will) g(b) s(e) g(called) h(in) f(rev) m
(erse) g(order) g(of) g(registration.) 574 1701 y(Returns) d(`) p
Fl(1) p Fo(') g(on) h(success) f(or) h(`) p Fl(0) p Fo(') f(if) p
Fe 31 w(func) p Fo 35 w(could) g(not) h(b) s(e) e(registered.) p
Fl 94 1860 a(unsigned) g(long) g(__mp_setoption\(long) c(opt,) k
(unsigned) f(long) h(val\)) p Fo 574 1960 a(Sets) 34
b(the) g(v) -5 b(alue) 35 b(of) f(an) f(mpatrol) h(option) h(after) f
(the) g(library) f(has) h(b) s(een) f(initialised.) 52
b(Options) 574 2060 y(that) 43 b(require) e(v) -5 b(alues) 42
b(are) g(listed) g(in) f(`) p Fl(mpatrol.h) p Fo(') f(pre\014xed) g
(with) h(`) p Fl(MP_OPT_*) p Fo('.) 73 b(The) p Fe 41
w(opt) p Fo 574 2159 a(argumen) m(t) 30 b(should) e(b) s(e) g(set) i
(to) f(one) h(of) f(these) g(macros,) h(and) e(the) p
Fe 30 w(v) -5 b(al) p Fo 33 w(argumen) m(t) 29 b(should) f(b) s(e) g
(set) 574 2259 y(to) 39 b(the) f(option) g(v) -5 b(alue,) 41
b(cast) e(to) f(an) g(unsigned) f(in) m(teger.) 64 b(The) 38
b(return) e(v) -5 b(alue) 39 b(will) f(b) s(e) f(`) p
Fl(0) p Fo(') h(on) 574 2359 y(success) 32 b(and) f(`) p
Fl(1) p Fo(') g(on) h(failure.) 44 b(Options) 31 b(that) h(are) f
(\015ags) h(are) g(listed) g(in) f(`) p Fl(mpatrol.h) p
Fo(') e(pre\014xed) 574 2458 y(with) 43 b(`) p Fl(MP_FLG_*) p
Fo('.) 77 b(Multiple) 43 b(\015ags) g(can) g(b) s(e) g(set) g(or) g
(unset) f(at) i(once) f(using) g(the) p Fl 43 w(MP_OPT_) 574
2558 y(SETFLAGS) p Fo 40 w(and) p Fl 41 w(MP_OPT_UNSETFLAGS) p
Fo 37 w(options) f(resp) s(ectiv) m(ely) -8 b(,) 46 b(with) c(the) g
(necessary) g(\015ags) 574 2657 y(sp) s(eci\014ed) 31
b(in) p Fe 31 w(v) -5 b(al) p Fo(.) 44 b(The) 30 b(return) g(v) -5
b(alue) 32 b(will) f(b) s(e) g(`) p Fl(0) p Fo(') g(on) g(success) h
(and) e(a) i(com) m(bination) g(of) g(all) g(of) 574
2757 y(the) f(\015ags) g(that) g(could) f(not) h(b) s(e) e(set) i(or) g
(unset) f(on) g(failure.) p Fl 94 2916 a(int) g(__mp_getoption\(long) 25
b(opt,) k(unsigned) f(long) i(*val\)) p Fo 574 3016 a(Gets) 39
b(the) g(v) -5 b(alue) 38 b(of) g(an) g(mpatrol) g(option) h(after) f
(the) h(library) e(has) h(b) s(een) f(initialised.) 65
b(If) p Fe 38 w(opt) p Fo 574 3116 a(is) 33 b(a) h(v) -5
b(alid) 33 b(option) g(listed) g(in) g(`) p Fl(mpatrol.h) p
Fo(') e(then) h(`) p Fl(1) p Fo(') h(will) g(b) s(e) g(returned) e(and)
h(the) h(asso) s(ciated) 574 3215 y(v) -5 b(alue) 34
b(will) f(b) s(e) g(returned) f(in) p Fe 33 w(v) -5 b(al) p
Fo 37 w(and) 32 b(cast) i(to) g(an) f(unsigned) f(in) m(teger,) j
(otherwise) f(`) p Fl(0) p Fo(') f(will) h(b) s(e) 574
3315 y(returned.) 49 b(If) p Fe 33 w(opt) p Fo 35 w(is) p
Fl 33 w(MP_OPT_SETFLAGS) p Fo 30 w(then) 33 b(all) h(of) f(the) h
(mpatrol) f(library) g(\015ags) h(that) g(are) 574 3414
y(set) k(will) g(b) s(e) f(returned) f(in) p Fe 37 w(v) -5
b(al) p Fo(.) 63 b(If) p Fe 37 w(opt) p Fo 40 w(is) p
Fl 37 w(MP_OPT_UNSETFLAGS) p Fo 33 w(then) 37 b(all) h(of) g(the) g
(mpatrol) 574 3514 y(library) 30 b(\015ags) h(that) g(are) g(not) f
(set) h(will) g(b) s(e) f(returned) f(in) p Fe 30 w(v) -5
b(al) p Fo(.) p Fl 94 3673 a(unsigned) 29 b(long) g
(__mp_libversion\(void\)) p Fo 574 3773 a(Returns) g(the) h(v) m
(ersion) g(n) m(um) m(b) s(er) e(of) h(the) h(mpatrol) g(library) -8
b(.) 40 b(This) 29 b(can) h(b) s(e) e(useful) h(for) g(v) m(erifying)
574 3873 y(that) 41 b(the) g(v) m(ersion) g(of) f(the) h(mpatrol) g
(library) f(that) h(a) f(program) g(is) h(link) m(ed) g(with) f(is) g
(the) h(one) 574 3972 y(exp) s(ected) 31 b(at) g(compile-time.) p
Fl 94 4131 a(const) e(char) h(*__mp_strerror\(__mp_err) o(orty) o(pe) 24
b(err\)) p Fo 574 4231 a(Returns) 32 b(the) g(error) g(message) h
(corresp) s(onding) e(to) i(the) f(error) g(co) s(de) p
Fe 32 w(err) p Fo 39 w(or) g(`) p Fl(NULL) p Fo(') f(if) h(no) g(suc) m
(h) 574 4331 y(error) h(co) s(de) g(exists.) 50 b(The) 32
b(most) i(recen) m(t) g(error) e(co) s(de) i(recorded) f(b) m(y) f(the)
i(mpatrol) f(library) g(can) 574 4430 y(b) s(e) d(obtained) h(b) m(y) f
(examining) p Fl 31 w(__mp_errno) p Fo(.) p Fl 94 4590
a(const) f(char) h(*__mp_function\(__mp_all) o(octy) o(pe) 24
b(func\)) p Fo 574 4689 a(Returns) f(the) g(name) h(of) f(the) h
(function) f(corresp) s(onding) f(to) i(the) f(allo) s(cation) j(t) m
(yp) s(e) p Fe 23 w(func) p Fo 28 w(or) e(`) p Fl(NULL) p
Fo(') 574 4789 y(if) 31 b(no) f(suc) m(h) g(allo) s(cation) j(t) m(yp) s
(e) d(exists.) p Fl 94 4948 a(int) g(__mp_setuser\(const) 25
b(void) 30 b(*ptr,) f(const) f(void) i(*data\)) p Fo
574 5048 a(Sets) j(the) g(user) f(data) h(for) f(the) h(memory) f(allo)
s(cation) j(con) m(taining) p Fe 34 w(ptr) p Fo(.) 46
b(The) 32 b(con) m(ten) m(ts) j(of) p Fe 32 w(data) p
Fo 574 5147 a(are) 30 b(en) m(tirely) g(application-sp) s(eci\014c) g
(as) f(user) f(data) i(will) f(nev) m(er) g(b) s(e) f(examined) h(b) m
(y) g(the) g(mpatrol) 574 5247 y(library) -8 b(.) 75
b(Suc) m(h) 41 b(data) h(is) g(asso) s(ciated) h(with) e(a) h(memory) g
(allo) s(cation) i(for) d(its) h(en) m(tire) h(lifetime) 574
5347 y(unless) 31 b(o) m(v) m(erridden) h(b) m(y) f(a) g(subsequen) m
(t) g(call) i(to) p Fl 32 w(__mp_setuser\(\)) p Fo(.) 39
b(As) 32 b(suc) m(h,) f(the) h(user) e(data) 574 5446
y(m) m(ust) 36 b(b) s(e) f(v) -5 b(alid) 35 b(for) h(the) f(en) m(tire)
i(lifetime) g(of) e(the) h(memory) f(allo) s(cation,) 40
b(p) s(erhaps) 33 b(ev) m(en) j(after) 574 5546 y(the) j(allo) s
(cation) i(has) d(b) s(een) g(freed) g(if) h(the) f(`) p
Fl(NOFREE) p Fo(') g(option) h(is) f(b) s(eing) g(used.) 65
b(This) 37 b(function) 574 5645 y(returns) 30 b(`) p
Fl(1) p Fo(') g(if) g(there) h(is) f(an) h(allo) s(cated) h(memory) e
(blo) s(c) m(k) h(con) m(taining) p Fe 32 w(ptr) p Fo(,) f(and) g(`) p
Fl(0) p Fo(') h(otherwise.) p 90 rotate dyy eop
%%Page: 147 153
147 152 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(147) p Fl 94 365 a(int) 30 b(__mp_setmark\(const) 25
b(void) 30 b(*ptr\)) p Fo 574 465 a(Sets) j(the) g(mark) m(ed) f
(\015ag) h(for) f(the) h(memory) f(allo) s(cation) j(con) m(taining) p
Fe 34 w(ptr) p Fo(,) d(indicating) i(that) f(the) 574
565 y(memory) 38 b(allo) s(cation) h(cannot) f(b) s(e) f(freed) g
(\(but) g(can) h(b) s(e) f(reallo) s(cated\)) i(and) e(th) m(us) g
(will) h(not) g(b) s(e) 574 664 y(listed) c(as) g(a) f(memory) h(leak.)
50 b(This) 32 b(function) h(returns) f(`) p Fl(1) p Fo(') i(if) f
(there) g(is) h(an) f(allo) s(cated) i(memory) 574 764
y(blo) s(c) m(k) j(con) m(taining) p Fe 39 w(ptr) p Fo(,) g(and) f(`) p
Fl(0) p Fo(') g(otherwise.) 62 b(Note) 38 b(that) g(a) f(memory) g
(allo) s(cation) j(made) d(b) m(y) p Fl 574 863 a(alloca\(\)) p
Fo(,) p Fl 29 w(strdupa\(\)) p Fo 28 w(or) p Fl 30 w(strndupa\(\)) p
Fo 28 w(ma) m(y) 31 b(not) f(b) s(e) g(mark) m(ed.) p
Fl 94 1003 a(int) g(__mp_info\(const) c(void) j(*ptr,) g
(__mp_allocinfo) e(*info\)) p Fo 574 1103 a(Obtains) j(information) g
(ab) s(out) f(a) h(sp) s(eci\014c) g(memory) f(allo) s(cation) j(b) m
(y) e(placing) h(statistics) g(ab) s(out) p Fe 574 1202
a(ptr) p Fo 29 w(in) p Fe 21 w(info) p Fo(.) 38 b(If) p
Fe 22 w(ptr) p Fo 28 w(do) s(es) 22 b(not) g(b) s(elong) h(to) g(a) f
(previously) g(allo) s(cated) i(memory) e(allo) s(cation) j(or) d(free)
574 1302 y(memory) 30 b(blo) s(c) m(k) f(then) g(`) p
Fl(0) p Fo(') g(will) h(b) s(e) e(returned,) h(otherwise) g(`) p
Fl(1) p Fo(') h(will) f(b) s(e) g(returned) e(and) p
Fe 29 w(info) p Fo 34 w(will) 574 1401 y(con) m(tain) 33
b(the) e(follo) m(wing) i(information) e(\(note) h(that) g(a) f(free) g
(memory) g(blo) s(c) m(k) h(will) f(only) h(con) m(tain) 574
1501 y(the) p Fl 34 w(block) p Fo 32 w(and) p Fl 33 w(size) p
Fo 32 w(\014elds) g(and) h(can) h(b) s(e) e(iden) m(ti\014ed) i(b) m(y)
f(not) g(ha) m(ving) h(the) p Fl 34 w(allocated) p Fo
31 w(\015ag) 574 1601 y(set\):) p Fi 574 1720 a(Field) 658
b(Description) p Fl 574 1820 a(block) p Fo 616 w(P) m(oin) m(ter) 32
b(to) f(\014rst) e(b) m(yte) i(of) g(allo) s(cation.) p
Fl 574 1919 a(size) p Fo 664 w(Size) g(of) f(allo) s(cation) j(in) d(b)
m(ytes.) p Fl 574 2019 a(type) p Fo 664 w(T) m(yp) s(e) g(of) g
(function) g(whic) m(h) h(allo) s(cated) h(memory) -8
b(.) p Fl 574 2119 a(alloc) p Fo 616 w(Allo) s(cation) 32
b(index.) p Fl 574 2218 a(realloc) p Fo 520 w(Num) m(b) s(er) d(of) i
(times) g(reallo) s(cated.) p Fl 574 2318 a(thread) p
Fo 568 w(Thread) e(iden) m(ti\014er.) p Fl 574 2418 a(event) p
Fo 616 w(Ev) m(en) m(t) i(of) g(last) g(mo) s(di\014cation.) p
Fl 574 2517 a(func) p Fo 664 w(F) -8 b(unction) 31 b(in) f(whic) m(h) g
(allo) s(cation) j(to) s(ok) e(place.) p Fl 574 2617
a(file) p Fo 664 w(File) h(in) e(whic) m(h) g(allo) s(cation) i(to) s
(ok) f(place.) p Fl 574 2716 a(line) p Fo 664 w(Line) f(n) m(um) m(b) s
(er) f(at) i(whic) m(h) g(allo) s(cation) h(to) s(ok) f(place.) p
Fl 574 2816 a(stack) p Fo 616 w(P) m(oin) m(ter) h(to) f(function) f
(call) i(stac) m(k.) p Fl 574 2916 a(typestr) p Fo 520
w(T) m(yp) s(e) e(stored) g(in) g(allo) s(cation.) p
Fl 574 3015 a(typesize) p Fo 472 w(Size) h(of) f(t) m(yp) s(e) h
(stored) f(in) h(allo) s(cation.) p Fl 574 3115 a(userdata) p
Fo 472 w(User) f(data) h(asso) s(ciated) h(with) e(allo) s(cation.) p
Fl 574 3215 a(allocated) p Fo 424 w(Indicates) h(if) f(allo) s(cation) j
(w) m(as) e(allo) s(cated.) p Fl 574 3314 a(freed) p
Fo 616 w(Indicates) g(if) f(allo) s(cation) j(has) d(b) s(een) g
(freed.) p Fl 574 3414 a(marked) p Fo 568 w(Indicates) h(if) f(allo) s
(cation) j(has) d(b) s(een) g(mark) m(ed.) p Fl 574 3513
a(profiled) p Fo 472 w(Indicates) h(if) f(allo) s(cation) j(has) d(b) s
(een) g(pro\014led.) p Fl 574 3613 a(traced) p Fo 568
w(Indicates) h(if) f(allo) s(cation) j(has) d(b) s(een) g(traced.) p
Fl 574 3713 a(internal) p Fo 472 w(Indicates) h(if) f(allo) s(cation) j
(is) d(in) m(ternal.) p Fl 94 3852 a(int) g(__mp_syminfo\(const) 25
b(void) 30 b(*ptr,) f(__mp_symbolinfo) d(*info\)) p Fo
574 3952 a(Obtains) 41 b(sym) m(b) s(olic) h(information) g(ab) s(out) f
(a) h(sp) s(eci\014c) f(co) s(de) h(address) e(b) m(y) i(placing) g
(statistics) 574 4051 y(ab) s(out) p Fe 42 w(ptr) p Fo
47 w(in) p Fe 41 w(info) p Fo(.) 74 b(If) p Fe 41 w(ptr) p
Fo 47 w(do) s(es) 42 b(not) f(b) s(elong) h(to) g(a) g(function) f(sym)
m(b) s(ol) g(then) g(`) p Fl(0) p Fo(') h(will) g(b) s(e) 574
4151 y(returned,) 28 b(otherwise) h(`) p Fl(1) p Fo(') g(will) g(b) s
(e) f(returned) f(and) p Fe 28 w(info) p Fo 33 w(will) i(con) m(tain) g
(the) g(follo) m(wing) h(informa-) 574 4251 y(tion:) p
Fi 574 4370 a(Field) 658 b(Description) p Fl 574 4470
a(name) p Fo 664 w(Name) 31 b(of) g(sym) m(b) s(ol.) p
Fl 574 4570 a(object) p Fo 568 w(File) h(con) m(taining) f(sym) m(b) s
(ol.) p Fl 574 4669 a(addr) p Fo 664 w(Start) g(address) e(of) i(sym) m
(b) s(ol.) p Fl 574 4769 a(size) p Fo 664 w(Size) g(of) f(sym) m(b) s
(ol.) p Fl 574 4868 a(file) p Fo 664 w(Filename) i(corresp) s(onding) d
(to) i(address.) p Fl 574 4968 a(line) p Fo 664 w(Line) f(n) m(um) m(b)
s(er) f(corresp) s(onding) h(to) h(address.) p Fl 94
5108 a(const) e(char) h(*__mp_symbol\(const) 25 b(void) k(*ptr\)) p
Fo 574 5207 a(Obtains) e(the) h(name) f(of) g(a) h(function) e(sym) m
(b) s(ol) h(con) m(taining) i(the) e(co) s(de) h(address) e(sp) s
(eci\014ed) g(in) p Fe 27 w(ptr) p Fo(.) 574 5307 y(If) p
Fe 30 w(ptr) p Fo 37 w(do) s(es) k(not) g(b) s(elong) h(to) g(a) g
(function) f(sym) m(b) s(ol) g(then) g(`) p Fl(NULL) p
Fo(') g(will) g(b) s(e) g(returned.) p Fl 94 5446 a(int) g
(__mp_printinfo\(const) 25 b(void) k(*ptr\)) p Fo 574
5546 a(Displa) m(ys) f(information) f(ab) s(out) f(a) h(sp) s(eci\014c)
g(memory) f(allo) s(cation) j(con) m(taining) p Fe 28
w(ptr) p Fo 32 w(to) f(the) f(stan-) 574 5645 y(dard) 40
b(error) g(\014le) g(stream.) 71 b(If) p Fe 39 w(ptr) p
Fo 47 w(do) s(es) 39 b(not) i(b) s(elong) f(to) h(a) g(previously) f
(allo) s(cated) i(memory) p 90 rotate dyy eop
%%Page: 148 154
148 153 bop Fo 94 -116 a(148) 3332 b(mpatrol) 574 365
y(allo) s(cation) 47 b(or) d(free) g(memory) g(blo) s(c) m(k) h(then) f
(`) p Fl(0) p Fo(') g(will) g(b) s(e) g(returned,) i(otherwise) f(`) p
Fl(1) p Fo(') f(will) h(b) s(e) 574 465 y(returned.) 40
b(This) 30 b(function) g(is) g(in) m(tended) g(to) h(b) s(e) f(called) i
(from) e(within) f(a) i(debugger.) p Fl 94 631 a(unsigned) e(long) g
(__mp_snapshot\(void\)) p Fo 574 731 a(Returns) j(the) h(curren) m(t) g
(ev) m(en) m(t) h(n) m(um) m(b) s(er,) f(e\013ectiv) m(ely) j(taking) d
(a) h(snapshot) e(of) h(the) g(heap.) 48 b(This) 574
830 y(n) m(um) m(b) s(er) 30 b(can) g(then) g(b) s(e) g(used) g(in) g
(later) h(calls) h(to) p Fl 31 w(__mp_iterate\(\)) p
Fo(.) p Fl 94 996 a(size_t) d(__mp_iterate\(int) d(\(*func\)\(const) h
(void) i(*,) h(void) f(*\),) g(void) h(*data,) e(unsigned) g(long) 94
1096 y(event\)) p Fo 574 1196 a(Iterates) k(o) m(v) m(er) f(all) g(of) f
(the) h(curren) m(t) e(allo) s(cated) k(and) c(freed) h(memory) g(allo)
s(cations,) i(calling) p Fe 32 w(func) p Fo 574 1295
a(with) 23 b(the) g(start) h(address) e(of) h(ev) m(ery) h(memory) f
(allo) s(cation) i(that) f(has) f(b) s(een) f(mo) s(di\014ed) g(since) h
(ev) m(en) m(t) 574 1395 y(n) m(um) m(b) s(er) p Fe 25
w(ev) m(en) m(t) p Fo(.) 41 b(If) p Fe 25 w(func) p Fo
31 w(is) 25 b(`) p Fl(NULL) p Fo(') h(then) p Fl 25 w
(__mp_printinfo\(\)) p Fo 21 w(will) h(b) s(e) e(used) g(as) h(the) g
(callbac) m(k) 574 1494 y(function.) 71 b(If) p Fe 40
w(ev) m(en) m(t) p Fo 44 w(is) 40 b(`) p Fl(0) p Fo(') h(then) p
Fe 40 w(func) p Fo 45 w(will) g(b) s(e) f(called) h(with) f(the) h
(start) g(address) f(of) g(ev) m(ery) 574 1594 y(memory) f(allo) s
(cation.) 66 b(If) p Fe 38 w(func) p Fo 43 w(returns) 37
b(a) h(negativ) m(e) j(n) m(um) m(b) s(er) 36 b(then) i(the) h
(iteration) g(pro) s(cess) 574 1694 y(will) i(b) s(e) f(stopp) s(ed) f
(immediately) -8 b(.) 72 b(If) p Fe 39 w(func) p Fo 45
w(returns) 39 b(a) i(p) s(ositiv) m(e) g(n) m(um) m(b) s(er) e(ab) s(o)
m(v) m(e) i(zero) g(then) p Fl 574 1793 a(__mp_iterate\(\)) p
Fo 27 w(will) 30 b(return) f(the) i(n) m(um) m(b) s(er) d(of) j(times) p
Fe 30 w(func) p Fo 35 w(returned) e(a) i(non-zero) f(n) m(um) m(b) s
(er) 574 1893 y(after) 39 b(the) g(iteration) h(pro) s(cess) d(has) h
(stopp) s(ed.) 64 b(The) p Fe 38 w(data) p Fo 38 w(argumen) m(t) 39
b(is) f(passed) g(directly) h(to) p Fe 574 1993 a(func) p
Fo 35 w(as) 31 b(its) g(second) f(argumen) m(t) h(and) f(is) g(not) h
(read) f(b) m(y) g(the) h(mpatrol) g(library) -8 b(.) p
Fl 94 2159 a(size_t) 29 b(__mp_iterateall\(int) c(\(*func\)\(const) i
(void) i(*,) h(void) f(*\),) h(void) f(*data\)) p Fo
574 2258 a(Iterates) i(o) m(v) m(er) g(all) f(of) f(the) h(curren) m(t)
f(allo) s(cated) i(and) e(freed) g(memory) g(allo) s(cations) i(and) e
(an) m(y) h(free) 574 2358 y(memory) 35 b(blo) s(c) m(ks,) i(calling) p
Fe 36 w(func) p Fo 40 w(with) e(the) g(start) g(address) f(of) h(ev) m
(ery) h(memory) f(allo) s(cation) i(or) 574 2457 y(free) h(blo) s(c) m
(k.) 61 b(If) p Fe 37 w(func) p Fo 41 w(is) 37 b(`) p
Fl(NULL) p Fo(') g(then) p Fl 37 w(__mp_printinfo\(\)) p
Fo 32 w(will) h(b) s(e) e(used) g(as) i(the) f(callbac) m(k) 574
2557 y(function.) h(If) p Fe 19 w(func) p Fo 25 w(returns) 20
b(a) g(negativ) m(e) j(n) m(um) m(b) s(er) c(then) h(the) h(iteration) h
(pro) s(cess) d(will) i(b) s(e) f(stopp) s(ed) 574 2657
y(immediately) -8 b(.) 62 b(If) p Fe 36 w(func) p Fo
41 w(returns) 36 b(a) h(p) s(ositiv) m(e) h(n) m(um) m(b) s(er) d(ab) s
(o) m(v) m(e) j(zero) f(then) p Fl 37 w(__mp_iterate\(\)) p
Fo 574 2756 a(will) 28 b(return) e(the) h(n) m(um) m(b) s(er) e(of) i
(times) p Fe 28 w(func) p Fo 32 w(returned) e(a) j(non-zero) f(n) m(um)
m(b) s(er) f(after) h(the) g(iteration) 574 2856 y(pro) s(cess) 38
b(has) g(stopp) s(ed.) 62 b(The) p Fe 38 w(data) p Fo
38 w(argumen) m(t) 39 b(is) f(passed) f(directly) i(to) p
Fe 39 w(func) p Fo 42 w(as) g(its) f(second) 574 2956
y(argumen) m(t) 25 b(and) f(is) h(not) f(read) h(b) m(y) f(the) h
(mpatrol) f(library) -8 b(.) 39 b(Note) 26 b(that) f(unlik) m(e) p
Fl 25 w(__mp_iterate\(\)) p Fo(,) 574 3055 y(this) 42
b(function) f(will) g(also) i(include) e(in) m(ternal) h(memory) f
(allo) s(cations) j(made) d(b) m(y) g(the) h(mpatrol) 574
3155 y(library) 30 b(and) g(is) h(in) m(tended) f(for) g(w) m(alking) h
(the) g(en) m(tire) g(heap.) p Fl 94 3321 a(int) f
(__mp_addallocentry\(const) 24 b(char) 29 b(*file,) g(unsigned) f(long)
h(line,) g(size_t) g(size\)) p Fo 574 3421 a(Adds) 22
b(an) h(en) m(try) g(represen) m(ting) g(an) f(allo) s(cation) j(of) e
(size) p Fe 24 w(size) p Fo 28 w(to) h(the) f(leak) g(table.) 39
b(The) 23 b(allo) s(cation) 574 3520 y(will) g(b) s(e) e(asso) s
(ciated) j(with) e(a) g(source) h(\014lename) f(of) p
Fe 22 w(\014le) p Fo 28 w(and) f(a) i(line) f(n) m(um) m(b) s(er) f(of)
p Fe 22 w(line) p Fo 28 w(if) h(the) g(former) 574 3620
y(is) 31 b(non-`) p Fl(NULL) p Fo(') f(and) g(the) h(latter) g(is) g
(non-zero.) 42 b(If) p Fe 30 w(\014le) p Fo 36 w(is) 31
b(non-`) p Fl(NULL) p Fo(') e(and) p Fe 30 w(line) p
Fo 36 w(is) i(`) p Fl(0) p Fo(') g(then) p Fe 30 w(\014le) p
Fo 574 3719 a(represen) m(ts) j(the) g(name) g(of) g(the) g(function) g
(that) g(made) g(the) g(allo) s(cation.) 54 b(If) p Fe
33 w(\014le) p Fo 39 w(is) 34 b(`) p Fl(NULL) p Fo(') g(and) p
Fe 574 3819 a(line) p Fo 42 w(is) i(non-zero) g(then) p
Fe 35 w(line) p Fo 42 w(represen) m(ts) f(the) h(co) s(de) g(address) f
(at) i(whic) m(h) e(the) h(allo) s(cation) j(w) m(as) 574
3919 y(made.) i(If) p Fe 29 w(\014le) p Fo 34 w(is) 29
b(`) p Fl(NULL) p Fo(') f(and) p Fe 29 w(line) p Fo 35
w(is) h(`) p Fl(0) p Fo(') g(then) g(the) g(lo) s(cation) i(of) e(the) h
(allo) s(cation) h(is) e(unkno) m(wn.) 574 4018 y(Returns) c(`) p
Fl(1) p Fo(') g(on) g(success) h(and) f(`) p Fl(0) p
Fo(') g(if) g(there) h(w) m(as) g(no) f(more) g(memory) g(a) m(v) -5
b(ailable) 28 b(to) e(add) f(another) 574 4118 y(en) m(try) 31
b(to) g(the) g(leak) g(table.) p Fl 94 4284 a(int) f
(__mp_addfreeentry\(const) 24 b(char) 29 b(*file,) g(unsigned) f(long) h
(line,) g(size_t) g(size\)) p Fo 574 4384 a(Adds) k(an) h(en) m(try) f
(represen) m(ting) h(a) g(deallo) s(cation) i(of) e(size) p
Fe 34 w(size) p Fo 40 w(to) g(the) g(leak) h(table.) 51
b(The) 33 b(deal-) 574 4483 y(lo) s(cation) j(will) e(b) s(e) f(asso) s
(ciated) i(with) e(a) i(source) e(\014lename) h(of) p
Fe 34 w(\014le) p Fo 39 w(and) f(a) h(line) g(n) m(um) m(b) s(er) f(of)
p Fe 34 w(line) p Fo 574 4583 a(if) h(the) f(former) g(is) h(non-`) p
Fl(NULL) p Fo(') e(and) h(the) h(latter) g(is) g(non-zero.) 50
b(If) p Fe 33 w(\014le) p Fo 39 w(is) 33 b(non-`) p Fl(NULL) p
Fo(') g(and) p Fe 33 w(line) p Fo 574 4682 a(is) j(`) p
Fl(0) p Fo(') f(then) p Fe 35 w(\014le) p Fo 41 w(represen) m(ts) g
(the) g(name) g(of) h(the) f(function) g(that) h(made) f(the) h(deallo)
s(cation.) 57 b(If) p Fe 574 4782 a(\014le) p Fo 45 w(is) 40
b(`) p Fl(NULL) p Fo(') e(and) p Fe 39 w(line) p Fo 45
w(is) i(non-zero) g(then) p Fe 39 w(line) p Fo 45 w(represen) m(ts) f
(the) h(co) s(de) f(address) g(at) h(whic) m(h) 574 4882
y(the) 35 b(deallo) s(cation) h(w) m(as) e(made.) 52
b(If) p Fe 33 w(\014le) p Fo 39 w(is) 34 b(`) p Fl(NULL) p
Fo(') f(and) p Fe 34 w(line) p Fo 39 w(is) h(`) p Fl(0) p
Fo(') g(then) g(the) g(lo) s(cation) i(of) e(the) 574
4981 y(deallo) s(cation) 42 b(is) e(unkno) m(wn.) 67
b(Returns) 38 b(`) p Fl(1) p Fo(') i(on) g(success) f(and) g(`) p
Fl(0) p Fo(') h(if) g(there) g(w) m(as) f(no) h(existing) 574
5081 y(allo) s(cation) 33 b(from) d(the) h(same) f(lo) s(cation) i(in) e
(the) h(leak) g(table.) p Fl 94 5247 a(void) f
(__mp_clearleaktable\(voi) o(d\)) p Fo 574 5347 a(Deletes) k(all) e(of)
f(the) h(existing) g(en) m(tries) g(in) f(the) g(leak) i(table,) f
(making) g(it) g(empt) m(y) -8 b(.) 44 b(This) 30 b(will) i(also) 574
5446 y(a\013ect) k(the) e(b) s(eha) m(viour) g(of) g(the) h(`) p
Fl(LEAKTABLE) p Fo(') d(option) i(since) h(that) g(option) f(will) h
(then) e(only) i(b) s(e) 574 5546 y(able) 28 b(to) g(sho) m(w) f(a) g
(summary) f(of) h(the) g(en) m(tries) h(in) f(the) g(leak) h(table) g
(that) f(w) m(ere) h(collected) h(after) f(the) 574 5645
y(last) k(call) f(to) g(this) g(function) f(rather) g(than) g(from) g
(the) h(start) g(of) f(program) g(execution.) p 90 rotate
dyy eop
%%Page: 149 155
149 154 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(149) p Fl 94 365 a(int) 30 b
(__mp_startleaktable\(void) o(\)) p Fo 574 465 a(Starts) j(the) f
(automatic) i(logging) g(of) e(all) h(memory) f(allo) s(cations,) i
(reallo) s(cations) h(and) c(deallo) s(ca-) 574 565 y(tions) d(to) g
(the) g(leak) g(table.) 41 b(Returns) 26 b(`) p Fl(1) p
Fo(') i(if) f(suc) m(h) g(logging) i(w) m(as) f(already) g(b) s(eing) f
(p) s(erformed) f(and) 574 664 y(`) p Fl(0) p Fo(') 31
b(otherwise.) p Fl 94 804 a(int) f(__mp_stopleaktable\(void\)) p
Fo 574 903 a(Stops) k(the) g(automatic) i(logging) g(of) e(all) h
(memory) f(allo) s(cations,) j(reallo) s(cations) g(and) c(deallo) s
(ca-) 574 1003 y(tions) 28 b(to) g(the) g(leak) g(table.) 41
b(Returns) 26 b(`) p Fl(1) p Fo(') i(if) f(suc) m(h) g(logging) i(w) m
(as) f(already) g(b) s(eing) f(p) s(erformed) f(and) 574
1103 y(`) p Fl(0) p Fo(') 31 b(otherwise.) p Fl 94 1242
a(void) f(__mp_leaktable\(size_t) 24 b(size,) 29 b(int) h(opt,) f
(unsigned) f(char) h(flags\)) p Fo 574 1342 a(Displa) m(ys) 37
b(a) f(summary) e(of) h(up) g(to) p Fe 36 w(size) p Fo
41 w(en) m(tries) h(from) f(the) h(leak) g(table,) i(or) d(all) i(en) m
(tries) f(if) p Fe 35 w(size) p Fo 574 1441 a(is) 42
b(`) p Fl(0) p Fo('.) 75 b(If) p Fe 41 w(opt) p Fo 43
w(is) p Fl 42 w(MP_LT_ALLOCATED) p Fo 37 w(then) 42 b(all) g(allo) s
(cated) i(en) m(tries) e(will) g(b) s(e) f(displa) m(y) m(ed,) k(if) p
Fe 574 1541 a(opt) p Fo 44 w(is) p Fl 40 w(MP_LT_FREED) p
Fo 38 w(then) c(all) g(freed) g(en) m(tries) g(will) g(b) s(e) f
(displa) m(y) m(ed) i(and) e(if) p Fe 41 w(opt) p Fo
43 w(is) p Fl 41 w(MP_LT_) 574 1641 y(UNFREED) p Fo 25
w(then) 26 b(all) i(unfreed) d(en) m(tries) i(will) g(b) s(e) f(displa)
m(y) m(ed.) 40 b(The) 26 b(summary) g(is) g(normally) h(sorted) 574
1740 y(in) c(descending) f(order) g(of) g(total) i(b) m(ytes) f(from) f
(eac) m(h) i(en) m(try) -8 b(,) 25 b(but) d(this) g(can) h(b) s(e) e(c)
m(hanged) j(b) m(y) e(setting) p Fe 574 1840 a(\015ags) p
Fo 33 w(to) 28 b(an) m(y) h(com) m(bination) g(of) p
Fl 29 w(MP_LT_COUNTS) p Fo 24 w(\(to) g(sort) g(b) m(y) f(the) g(n) m
(um) m(b) s(er) f(of) h(o) s(ccurrences) g(in) 574 1939
y(eac) m(h) k(en) m(try\)) f(and) p Fl 30 w(MP_LT_BOTTOM) p
Fo 27 w(\(to) g(sort) g(in) f(ascending) h(order\).) p
Fl 94 2079 a(void) f(__mp_memorymap\(int) 25 b(stats\)) p
Fo 574 2178 a(If) p Fe 22 w(stats) p Fo 26 w(is) d(non-zero) g(then) g
(the) g(curren) m(t) f(statistics) j(of) e(the) g(mpatrol) g(library) f
(will) h(b) s(e) f(displa) m(y) m(ed.) 574 2278 y(If) 37
b(the) h(heap) f(con) m(tains) h(at) g(least) g(one) g(allo) s(cated,) j
(freed) c(or) g(free) g(blo) s(c) m(k) h(then) f(a) h(map) e(of) i(the)
574 2378 y(curren) m(t) 31 b(heap) f(will) h(also) g(b) s(e) f(displa) m
(y) m(ed.) p Fl 94 2517 a(void) g(__mp_summary\(void\)) p
Fo 574 2617 a(Displa) m(ys) 39 b(information) f(ab) s(out) f(the) h
(curren) m(t) f(state) i(of) e(the) h(mpatrol) g(library) -8
b(,) 39 b(including) f(its) 574 2716 y(settings) 32 b(and) e(an) m(y) g
(relev) -5 b(an) m(t) 32 b(statistics.) p Fl 94 2856
a(int) e(__mp_stats\(__mp_heapinfo) 24 b(*info\)) p Fo
574 2956 a(Obtains) 36 b(statistics) h(ab) s(out) f(the) f(curren) m(t)
h(state) h(of) f(the) f(heap) h(and) f(places) h(them) g(in) p
Fe 35 w(info) p Fo(.) 56 b(If) 574 3055 y(this) 39 b(information) f
(could) h(not) g(b) s(e) e(determined) h(then) g(`) p
Fl(0) p Fo(') h(will) g(b) s(e) e(returned,) j(otherwise) f(`) p
Fl(1) p Fo(') 574 3155 y(will) 31 b(b) s(e) f(returned) f(and) p
Fe 30 w(info) p Fo 35 w(will) h(con) m(tain) i(the) f(follo) m(wing) h
(information:) p Fi 574 3274 a(Field) 658 b(Description) p
Fl 574 3374 a(acount) p Fo 568 w(T) -8 b(otal) 32 b(n) m(um) m(b) s(er)
d(of) i(allo) s(cated) h(blo) s(c) m(ks.) p Fl 574 3474
a(atotal) p Fo 568 w(T) -8 b(otal) 32 b(size) f(of) g(allo) s(cated) h
(blo) s(c) m(ks.) p Fl 574 3573 a(fcount) p Fo 568 w(T) -8
b(otal) 32 b(n) m(um) m(b) s(er) d(of) i(free) f(blo) s(c) m(ks.) p
Fl 574 3673 a(ftotal) p Fo 568 w(T) -8 b(otal) 32 b(size) f(of) g(free)
f(blo) s(c) m(ks.) p Fl 574 3773 a(gcount) p Fo 568 w(T) -8
b(otal) 32 b(n) m(um) m(b) s(er) d(of) i(freed) f(blo) s(c) m(ks.) p
Fl 574 3872 a(gtotal) p Fo 568 w(T) -8 b(otal) 32 b(size) f(of) g
(freed) f(blo) s(c) m(ks.) p Fl 574 3972 a(icount) p
Fo 568 w(T) -8 b(otal) 32 b(n) m(um) m(b) s(er) d(of) i(in) m(ternal) g
(blo) s(c) m(ks.) p Fl 574 4071 a(itotal) p Fo 568 w(T) -8
b(otal) 32 b(size) f(of) g(in) m(ternal) g(blo) s(c) m(ks.) p
Fl 574 4171 a(mcount) p Fo 568 w(T) -8 b(otal) 32 b(n) m(um) m(b) s(er)
d(of) i(mark) m(ed) f(blo) s(c) m(ks.) p Fl 574 4271
a(mtotal) p Fo 568 w(T) -8 b(otal) 32 b(size) f(of) g(mark) m(ed) f
(blo) s(c) m(ks.) p Fl 94 4410 a(void) g(__mp_check\(void\)) p
Fo 574 4510 a(F) -8 b(orces) 38 b(the) e(library) g(to) g(p) s(erform) f
(an) h(immediate) h(c) m(hec) m(k) g(of) g(the) f(o) m(v) m(er\015o) m
(w) h(bu\013ers) e(of) h(ev) m(ery) 574 4609 y(memory) g(allo) s
(cation) h(and) e(to) g(ensure) g(that) h(nothing) f(has) g(o) m(v) m
(erwritten) h(an) m(y) g(free) f(blo) s(c) m(ks.) 55
b(If) 574 4709 y(an) m(y) 30 b(memory) f(allo) s(cations) i(made) e(b) m
(y) g(the) p Fl 29 w(alloca\(\)) p Fo 26 w(family) h(of) f(functions) f
(are) i(out) f(of) g(scop) s(e) 574 4809 y(then) i(this) f(function) g
(will) h(also) g(cause) g(them) f(to) h(b) s(e) f(freed.) p
Fl 94 4948 a(__mp_prologuehandler) 25 b(__mp_prologue\(const) g
(__mp_prologuehandler) g(func\)) p Fo 574 5048 a(Installs) 41
b(a) g(prologue) h(function) e(to) h(b) s(e) f(called) i(b) s(efore) f
(an) m(y) g(memory) f(allo) s(cation,) 46 b(reallo) s(ca-) 574
5147 y(tion) 33 b(or) g(deallo) s(cation) h(function.) 46
b(This) 32 b(function) g(will) g(return) g(a) g(p) s(oin) m(ter) h(to) g
(the) f(previously) 574 5247 y(installed) 27 b(prologue) f(function,) h
(or) f(the) g(n) m(ull) g(p) s(oin) m(ter) g(if) f(no) h(prologue) g
(function) g(had) f(b) s(een) g(pre-) 574 5347 y(viously) h(installed.)
40 b(The) 25 b(follo) m(wing) i(argumen) m(ts) f(will) g(b) s(e) f
(used) g(to) h(call) h(the) f(prologue) g(function) 574
5446 y(\(the) k(last) g(four) e(argumen) m(ts) h(con) m(tain) i(the) e
(function) f(name,) i(\014le) f(name,) g(line) h(n) m(um) m(b) s(er) d
(and) i(the) 574 5546 y(return) 35 b(address) g(of) i(the) f(calling) h
(function,) g(or) f(n) m(ull) g(p) s(oin) m(ters) g(and) f(zero) i(if) f
(they) g(cannot) h(b) s(e) 574 5645 y(determined\):) p
90 rotate dyy eop
%%Page: 150 156
150 155 bop Fo 94 -116 a(150) 3332 b(mpatrol) p Fi 574
365 a(A) n(r) -5 b(gument) 33 b(1) 390 b(A) n(r) -5 b(gument) 33
b(2) 290 b(A) n(r) -5 b(gument) 32 b(3) 291 b(Cal) 5
b(le) -5 b(d) 34 b(by) p Fl 574 465 a(-1) p Fe 760 w(size) 615
b(align) p Fl 565 w(malloc\(\)) p Fo(,) 28 b(etc.) p
Fe 574 565 a(ptr) 734 b(size) 615 b(align) p Fl 565 w(realloc\(\)) p
Fo(,) 28 b(etc.) p Fe 574 664 a(ptr) p Fl 734 w(-1) 660
b(0) 708 b(free\(\)) p Fo(,) 29 b(etc.) p Fe 574 764
a(ptr) p Fl 734 w(-2) 660 b(1) 708 b(strdup\(\)) p Fo(,) 28
b(etc.) p Fl 94 917 a(__mp_epiloguehandler) d(__mp_epilogue\(const) g
(__mp_epiloguehandler) g(func\)) p Fo 574 1016 a(Installs) e(an) f
(epilogue) h(function) e(to) i(b) s(e) f(called) h(after) f(an) m(y) h
(memory) e(allo) s(cation,) 27 b(reallo) s(cation) d(or) 574
1116 y(deallo) s(cation) 29 b(function.) 39 b(This) 26
b(function) h(will) g(return) e(a) i(p) s(oin) m(ter) g(to) g(the) g
(previously) f(installed) 574 1215 y(epilogue) 39 b(function,) h(or) d
(the) h(n) m(ull) g(p) s(oin) m(ter) f(if) h(no) f(epilogue) i
(function) e(had) g(b) s(een) g(previously) 574 1315
y(installed.) 59 b(The) 35 b(follo) m(wing) j(argumen) m(ts) e(will) g
(b) s(e) f(used) h(to) g(call) i(the) e(epilogue) h(function) e(\(the)
574 1415 y(last) 46 b(four) d(argumen) m(ts) i(con) m(tain) g(the) g
(function) f(name,) k(\014le) c(name,) k(line) d(n) m(um) m(b) s(er) e
(and) h(the) 574 1514 y(return) 35 b(address) g(of) i(the) f(calling) h
(function,) g(or) f(n) m(ull) g(p) s(oin) m(ters) g(and) f(zero) i(if) f
(they) g(cannot) h(b) s(e) 574 1614 y(determined\):) p
Fi 574 1740 a(A) n(r) -5 b(gument) 469 b(Cal) 5 b(le) -5
b(d) 34 b(by) p Fe 574 1840 a(ptr) p Fl 734 w(malloc\(\)) p
Fo(,) p Fl 28 w(realloc\(\)) p Fo(,) p Fl 28 w(strdup\(\)) p
Fo(,) 29 b(etc.) p Fl 574 1939 a(-1) 760 b(free\(\)) p
Fo(,) 29 b(etc.) p Fl 94 2092 a(__mp_nomemoryhandler) c
(__mp_nomemory\(const) g(__mp_nomemoryhandler) g(func\)) p
Fo 574 2192 a(Installs) 44 b(a) h(lo) m(w-memory) f(handler) f(and) g
(returns) g(a) h(p) s(oin) m(ter) f(to) i(the) f(previously) f
(installed) 574 2291 y(handler,) 29 b(or) g(the) f(`) p
Fl(NULL) p Fo(') h(p) s(oin) m(ter) f(if) h(no) f(handler) g(had) g(b) s
(een) g(previously) h(installed.) 41 b(This) 28 b(will) 574
2391 y(b) s(e) 34 b(called) h(once) g(b) m(y) e(C) h(memory) g(allo) s
(cation) i(functions,) f(and) e(rep) s(eatedly) h(b) m(y) g(C) p
Fl(++) p Fo 33 w(memory) 574 2491 y(allo) s(cation) f(functions,) e
(when) e(they) i(w) m(ould) g(normally) f(return) g(`) p
Fl(NULL) p Fo('.) 41 b(The) 30 b(four) g(argumen) m(ts) 574
2590 y(con) m(tain) 41 b(the) e(function) g(name,) i(\014le) e(name,) i
(line) f(n) m(um) m(b) s(er) d(and) i(the) g(return) f(address) g(of) h
(the) 574 2690 y(calling) 47 b(function,) i(or) c(n) m(ull) h(p) s(oin)
m(ters) f(and) f(zero) i(if) g(they) f(cannot) h(b) s(e) f(determined.)
85 b(Note) 574 2790 y(that) 30 b(this) e(function) h(is) g(equiv) -5
b(alen) m(t) 30 b(to) p Fl 29 w(set_new_handler\(\)) p
Fo 24 w(and) e(will) h(replace) h(the) f(handler) 574
2889 y(installed) j(b) m(y) e(that) h(function.) p Fl
94 3042 a(int) f(__mp_printf\(const) c(char) j(*fmt,) g(...\)) p
Fo 574 3142 a(W) -8 b(rites) 44 b(format) f(string) p
Fe 42 w(fm) m(t) p Fo 45 w(with) f(v) -5 b(ariable) 43
b(argumen) m(ts) f(to) h(the) g(log) g(\014le,) j(with) c(eac) m(h) i
(line) 574 3241 y(pre\014xed) 27 b(b) m(y) g(`) p Fl(>) p
Fo('.) 40 b(The) 27 b(\014nal) h(length) g(of) f(the) h(string) g(that)
g(is) f(written) h(to) g(the) g(log) h(\014le) e(m) m(ust) h(not) 574
3341 y(exceed) 39 b(1024) h(c) m(haracters.) 65 b(Returns) 37
b(the) h(n) m(um) m(b) s(er) f(of) h(c) m(haracters) h(written,) h(or) e
(a) h(negativ) m(e) 574 3440 y(n) m(um) m(b) s(er) 30
b(up) s(on) e(error.) p Fl 94 3593 a(int) i(__mp_vprintf\(const) 25
b(char) 30 b(*fmt,) f(va_list) f(args\)) p Fo 574 3693
a(W) -8 b(rites) 33 b(format) f(string) p Fe 32 w(fm) m(t) p
Fo 34 w(with) f(v) -5 b(ariable) 32 b(argumen) m(t) g(list) p
Fe 33 w(args) p Fo 35 w(to) h(the) f(log) g(\014le,) g(with) g(eac) m
(h) 574 3792 y(line) c(pre\014xed) e(b) m(y) g(`) p Fl(>) p
Fo('.) 40 b(The) 27 b(\014nal) f(length) i(of) f(the) g(string) g(that)
g(is) g(written) g(to) h(the) f(log) h(\014le) f(m) m(ust) 574
3892 y(not) f(exceed) f(1024) i(c) m(haracters.) 40 b(Returns) 24
b(the) h(n) m(um) m(b) s(er) f(of) h(c) m(haracters) h(written,) h(or) d
(a) i(negativ) m(e) 574 3992 y(n) m(um) m(b) s(er) k(up) s(on) e
(error.) p Fl 94 4144 a(void) i(__mp_locprintf\(const) 25
b(char) k(*fmt,) g(...\)) p Fo 574 4244 a(W) -8 b(rites) 44
b(format) f(string) p Fe 42 w(fm) m(t) p Fo 45 w(with) f(v) -5
b(ariable) 43 b(argumen) m(ts) f(to) h(the) g(log) g(\014le,) j(with) c
(eac) m(h) i(line) 574 4344 y(pre\014xed) 27 b(b) m(y) g(`) p
Fl(>) p Fo('.) 40 b(The) 27 b(\014nal) h(length) g(of) f(the) h(string)
g(that) g(is) f(written) h(to) g(the) g(log) h(\014le) e(m) m(ust) h
(not) 574 4443 y(exceed) 37 b(1024) g(c) m(haracters.) 58
b(It) 36 b(also) g(writes) g(information) f(to) i(the) e(log) i(\014le)
e(ab) s(out) h(where) f(the) 574 4543 y(call) g(to) f(this) f(function)
g(w) m(as) g(made,) h(whic) m(h) f(includes) g(the) g(source) h(\014le)
f(lo) s(cation) i(and) d(the) i(call) 574 4643 y(stac) m(k) e(if) f
(they) f(are) h(a) m(v) -5 b(ailable.) p Fl 94 4795 a(void) 30
b(__mp_vlocprintf\(const) 24 b(char) 29 b(*fmt,) g(va_list) g(args\)) p
Fo 574 4895 a(W) -8 b(rites) 33 b(format) f(string) p
Fe 32 w(fm) m(t) p Fo 34 w(with) f(v) -5 b(ariable) 32
b(argumen) m(t) g(list) p Fe 33 w(args) p Fo 35 w(to) h(the) f(log) g
(\014le,) g(with) g(eac) m(h) 574 4995 y(line) c(pre\014xed) e(b) m(y) g
(`) p Fl(>) p Fo('.) 40 b(The) 27 b(\014nal) f(length) i(of) f(the) g
(string) g(that) g(is) g(written) g(to) h(the) f(log) h(\014le) f(m) m
(ust) 574 5094 y(not) 36 b(exceed) g(1024) h(c) m(haracters.) 57
b(It) 35 b(also) h(writes) f(information) h(to) g(the) f(log) h(\014le)
g(ab) s(out) e(where) 574 5194 y(the) h(call) g(to) f(this) g(function)
g(w) m(as) g(made,) h(whic) m(h) f(includes) f(the) h(source) g(\014le)
g(lo) s(cation) h(and) f(the) 574 5293 y(call) e(stac) m(k) g(if) e
(they) h(are) g(a) m(v) -5 b(ailable.) p Fl 94 5446 a(void) 30
b(__mp_logmemory\(const) 25 b(void) k(*ptr,) g(size_t) f(size\)) p
Fo 574 5546 a(Displa) m(ys) k(the) f(con) m(ten) m(ts) h(of) f(a) g
(blo) s(c) m(k) g(of) f(memory) h(b) s(eginning) f(at) p
Fe 31 w(ptr) p Fo(,) g(dumping) p Fe 29 w(size) p Fo
37 w(consec-) 574 5645 y(utiv) m(e) i(b) m(ytes) f(to) g(the) f(log) i
(\014le) e(in) g(hexadecimal) i(format.) p 90 rotate
dyy eop
%%Page: 151 157
151 156 bop Fo 94 -116 a(App) s(endix) 29 b(A:) i(F) -8
b(unctions) 2718 b(151) p Fl 94 365 a(int) 30 b(__mp_logstack\(size_t)
25 b(frames\)) p Fo 574 465 a(Displa) m(ys) k(the) f(curren) m(t) f
(call) i(stac) m(k,) h(skipping) p Fe 27 w(frames) p
Fo 31 w(stac) m(k) g(frames) d(from) g(the) h(curren) m(t) f(stac) m(k)
574 565 y(frame) d(b) s(efore) e(writing) h(the) h(sym) m(b) s(olic) f
(stac) m(k) i(trace) f(to) g(the) f(log) h(\014le.) 38
b(Returns) 23 b(`) p Fl(1) p Fo(') g(if) g(successful,) 574
664 y(or) 37 b(`) p Fl(0) p Fo(') g(if) f(the) h(call) h(stac) m(k) g
(could) f(not) g(b) s(e) f(determined) g(or) h(if) p
Fe 36 w(frames) p Fo 40 w(w) m(as) g(to) s(o) h(large) f(for) g(the) 574
764 y(curren) m(t) 31 b(call) g(stac) m(k.) p Fl 94 899
a(int) f(__mp_logaddr\(const) 25 b(void) 30 b(*ptr\)) p
Fo 574 998 a(Displa) m(ys) 35 b(information) g(ab) s(out) e(a) i(sp) s
(eci\014c) f(memory) f(allo) s(cation) k(con) m(taining) p
Fe 35 w(ptr) p Fo 40 w(to) e(the) f(log) 574 1098 y(\014le.) 40
b(If) p Fe 27 w(ptr) p Fo 33 w(do) s(es) 27 b(not) h(b) s(elong) f(to) h
(a) f(previously) g(allo) s(cated) j(memory) d(allo) s(cation) i(then) e
(`) p Fl(0) p Fo(') h(will) 574 1197 y(b) s(e) i(returned,) g
(otherwise) g(`) p Fl(1) p Fo(') h(will) g(b) s(e) e(returned.) p
Fl 94 1332 a(int) h(__mp_edit\(const) c(char) j(*file,) g(unsigned) f
(long) h(line\)) p Fo 574 1432 a(In) m(v) m(ok) m(es) 45
b(a) f(text) g(editor) g(to) g(edit) p Fe 44 w(\014le) p
Fo 48 w(at) g(line) g(n) m(um) m(b) s(er) p Fe 42 w(line) p
Fo 49 w(via) g(the) p Fl 43 w(mpedit) p Fo 42 w(command.) 574
1532 y(Returns) 30 b(`) p Fl(1) p Fo(') g(if) g(the) g(text) h(editor) f
(w) m(as) g(successfully) g(in) m(v) m(ok) m(ed,) i(`) p
Fl(-1) p Fo(') e(if) g(there) g(w) m(as) g(an) g(error,) g(or) 574
1631 y(`) p Fl(0) p Fo(') i(if) f(there) g(is) g(no) g(supp) s(ort) e
(for) i(this) g(feature.) 44 b(This) 30 b(function) h(will) g(only) g
(w) m(ork) g(on) g(a) h(system) 574 1731 y(where) e(the) h(`) p
Fl(EDIT) p Fo(') f(option) g(w) m(orks.) p Fl 94 1866
a(int) g(__mp_list\(const) c(char) j(*file,) g(unsigned) f(long) h
(line\)) p Fo 574 1965 a(Displa) m(ys) 46 b(a) f(con) m(text) i
(listing) f(of) p Fe 44 w(\014le) p Fo 50 w(at) g(line) f(n) m(um) m(b)
s(er) p Fe 43 w(line) p Fo 51 w(via) g(the) p Fl 45 w(mpedit) p
Fo 43 w(command.) 574 2065 y(Returns) 35 b(`) p Fl(1) p
Fo(') g(if) g(the) g(listing) h(w) m(as) g(successfully) f(p) s
(erformed,) g(`) p Fl(-1) p Fo(') g(if) g(there) g(w) m(as) h(an) f
(error,) h(or) 574 2164 y(`) p Fl(0) p Fo(') c(if) f(there) g(is) g(no)
g(supp) s(ort) e(for) i(this) g(feature.) 44 b(This) 30
b(function) h(will) g(only) g(w) m(ork) g(on) g(a) h(system) 574
2264 y(where) e(the) h(`) p Fl(LIST) p Fo(') f(option) g(w) m(orks.) p
Fl 94 2399 a(int) g(__mp_view\(const) c(char) j(*file,) g(unsigned) f
(long) h(line\)) p Fo 574 2498 a(Either) 39 b(in) m(v) m(ok) m(es) g(a)
g(text) g(editor) g(to) g(edit) p Fe 38 w(\014le) p Fo
44 w(at) f(line) h(n) m(um) m(b) s(er) p Fe 37 w(line) p
Fo 43 w(or) f(displa) m(ys) h(a) f(con) m(text) 574 2598
y(listing) 33 b(of) p Fe 31 w(\014le) p Fo 36 w(at) f(line) g(n) m(um) m
(b) s(er) p Fe 30 w(line) p Fo 36 w(dep) s(ending) e(on) h(the) g
(setting) i(of) e(the) g(`) p Fl(EDIT) p Fo(') g(and) g(`) p
Fl(LIST) p Fo(') 574 2698 y(options.) 41 b(This) 29 b(is) g(done) h
(via) g(the) p Fl 30 w(mpedit) p Fo 27 w(command) g(and) f(will) g(ha) m
(v) m(e) i(no) e(e\013ect) i(if) f(the) g(`) p Fl(EDIT) p
Fo(') 574 2797 y(and) h(`) p Fl(LIST) p Fo(') f(options) i(are) f(not) h
(set) f(or) g(if) g(these) h(options) f(are) h(not) f(supp) s(orted) e
(on) i(the) h(system.) 574 2897 y(Returns) 22 b(`) p
Fl(1) p Fo(') h(if) g(the) g(edit) g(or) g(listing) g(w) m(as) g
(successfully) g(p) s(erformed,) g(`) p Fl(-1) p Fo(') g(if) f(there) h
(w) m(as) g(an) g(error,) 574 2997 y(or) 31 b(`) p Fl(0) p
Fo(') f(if) h(neither) f(of) h(the) f(options) h(w) m(ere) g(set) g(or)
f(if) g(there) h(is) f(no) h(supp) s(ort) d(for) i(this) h(feature.) p
Fl 94 3131 a(int) f(__mp_readcontents\(const) 24 b(char) 29
b(*file,) g(void) g(*ptr\)) p Fo 574 3231 a(Reads) h(the) f(con) m(ten)
m(ts) h(of) f(a) h(memory) f(allo) s(cation) i(con) m(ten) m(ts) g
(\014le) e(in) m(to) h(the) f(memory) g(allo) s(cation) 574
3331 y(con) m(taining) p Fe 35 w(ptr) p Fo(.) 50 b(The) 33
b(name) g(of) h(the) g(\014le) f(is) h(comp) s(osed) f(of) h(the) p
Fe 33 w(\014le) p Fo 39 w(string) f(follo) m(w) m(ed) i(b) m(y) f(the)
574 3430 y(allo) s(cation) g(index) d(of) h(the) g(memory) f(allo) s
(cation) j(separated) e(b) m(y) g(a) g(dot.) 44 b(If) p
Fe 31 w(\014le) p Fo 37 w(is) 31 b(`) p Fl(NULL) p Fo(') g(then) 574
3530 y(it) 37 b(is) e(assumed) g(to) i(b) s(e) d(`) p
Fl(.mpatrol) p Fo('.) 55 b(Returns) 35 b(`) p Fl(1) p
Fo(') h(if) f(the) h(con) m(ten) m(ts) h(w) m(ere) f(read) g
(successfully) 574 3630 y(and) 30 b(`) p Fl(0) p Fo(') h(otherwise.) p
Fl 94 3764 a(int) f(__mp_writecontents\(const) 24 b(char) 29
b(*file,) g(const) g(void) g(*ptr\)) p Fo 574 3864 a(W) -8
b(rites) 22 b(the) f(con) m(ten) m(ts) i(of) e(the) g(memory) f(allo) s
(cation) j(con) m(taining) p Fe 23 w(ptr) p Fo 26 w(to) f(an) e(allo) s
(cation) j(con) m(ten) m(ts) 574 3964 y(\014le.) 56 b(The) 35
b(name) g(of) g(the) h(\014le) f(is) h(comp) s(osed) f(of) g(the) p
Fe 35 w(\014le) p Fo 41 w(string) g(follo) m(w) m(ed) i(b) m(y) e(the) h
(allo) s(cation) 574 4063 y(index) 45 b(of) h(the) f(memory) g(allo) s
(cation) j(separated) e(b) m(y) f(a) g(dot.) 86 b(If) p
Fe 45 w(\014le) p Fo 50 w(is) 46 b(`) p Fl(NULL) p Fo(') e(then) h(it) h
(is) 574 4163 y(assumed) 27 b(to) i(b) s(e) e(`) p Fl(.mpatrol) p
Fo('.) 38 b(Returns) 26 b(`) p Fl(1) p Fo(') i(if) f(the) h(con) m(ten)
m(ts) h(w) m(ere) f(written) g(successfully) g(and) 574
4262 y(`) p Fl(0) p Fo(') j(otherwise.) p Fl 94 4397
a(long) f(__mp_cmpcontents\(const) 24 b(char) 29 b(*file,) g(const) g
(void) g(*ptr\)) p Fo 574 4497 a(Compares) 34 b(the) g(con) m(ten) m
(ts) i(of) e(the) g(memory) f(allo) s(cation) j(con) m(taining) p
Fe 36 w(ptr) p Fo 40 w(with) d(the) h(con) m(ten) m(ts) 574
4596 y(of) c(a) g(previously) g(written) g(allo) s(cation) i(con) m
(ten) m(ts) f(\014le.) 41 b(The) 29 b(name) h(of) g(the) g(\014le) f
(is) h(comp) s(osed) g(of) 574 4696 y(the) p Fe 34 w(\014le) p
Fo 38 w(string) i(follo) m(w) m(ed) j(b) m(y) e(the) g(allo) s(cation) i
(index) d(of) h(the) h(memory) e(allo) s(cation) j(separated) 574
4796 y(b) m(y) e(a) g(dot.) 49 b(If) p Fe 32 w(\014le) p
Fo 38 w(is) 33 b(`) p Fl(NULL) p Fo(') f(then) h(it) g(is) g(assumed) f
(to) i(b) s(e) e(`) p Fl(.mpatrol) p Fo('.) 46 b(An) m(y) 33
b(di\013erences) h(are) 574 4895 y(written) f(to) h(the) f(mpatrol) g
(log) h(\014le.) 49 b(Returns) 32 b(the) h(n) m(um) m(b) s(er) f(of) h
(di\013erences) g(found,) f(or) h(`) p Fl(-1) p Fo(') g(if) 574
4995 y(there) e(w) m(as) g(an) f(error.) p Fl 94 5130
a(int) g(__mp_remcontents\(const) 24 b(char) 29 b(*file,) g(const) g
(void) g(*ptr\)) p Fo 574 5229 a(Remo) m(v) m(es) k(the) e(memory) g
(allo) s(cation) i(con) m(ten) m(ts) f(\014le) f(that) h(corresp) s
(onds) d(to) j(the) f(memory) f(allo-) 574 5329 y(cation) 36
b(con) m(taining) p Fe 36 w(ptr) p Fo(.) 52 b(The) 34
b(name) g(of) g(the) h(\014le) f(is) h(comp) s(osed) f(of) g(the) p
Fe 35 w(\014le) p Fo 39 w(string) g(follo) m(w) m(ed) 574
5429 y(b) m(y) 27 b(the) f(allo) s(cation) j(index) d(of) h(the) f
(memory) g(allo) s(cation) j(separated) e(b) m(y) f(a) h(dot.) 40
b(If) p Fe 26 w(\014le) p Fo 31 w(is) 27 b(`) p Fl(NULL) p
Fo(') 574 5528 y(then) h(it) f(is) h(assumed) f(to) h(b) s(e) e(`) p
Fl(.mpatrol) p Fo('.) 38 b(Returns) 27 b(`) p Fl(1) p
Fo(') g(if) h(the) f(\014le) h(w) m(as) g(remo) m(v) m(ed) g
(successfully) 574 5628 y(and) i(`) p Fl(0) p Fo(') h(otherwise.) p
90 rotate dyy eop
%%Page: 152 158
152 157 bop Fo 94 -116 a(152) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 153 159
153 158 bop Fo 94 -116 a(App) s(endix) 29 b(B:) i(En) m(vironmen) m(t)
2593 b(153) p Fk 94 365 a(App) t(endix) 53 b(B) 80 b(En) l(vironmen) l
(t) p Fo 219 630 a(The) 52 b(library) g(can) g(read) h(certain) g
(options) g(at) g(run-time) f(from) f(an) i(en) m(vironmen) m(t) g(v) -5
b(ariable) 53 b(called) p Fl 94 730 a(MPATROL_OPTIONS) p
Fo(.) 71 b(This) 41 b(v) -5 b(ariable) 43 b(m) m(ust) e(con) m(tain) i
(one) f(or) g(more) g(v) -5 b(alid) 42 b(option) g(k) m(eyw) m(ords) g
(from) g(the) 94 829 y(list) 33 b(b) s(elo) m(w) f(and) g(m) m(ust) g
(b) s(e) f(no) h(longer) g(than) g(1024) i(c) m(haracters) f(in) f
(length.) 46 b(If) p Fl 32 w(MPATROL_OPTIONS) p Fo 27
w(is) 32 b(unset) 94 929 y(or) f(empt) m(y) g(then) f(the) g(default) h
(settings) g(will) g(b) s(e) f(used.) 219 1067 y(The) 54
b(syn) m(tax) h(for) g(options) f(sp) s(eci\014ed) g(within) g(the) p
Fl 55 w(MPATROL_OPTIONS) p Fo 50 w(en) m(vironmen) m(t) i(v) -5
b(ariable) 55 b(is) 94 1167 y(`) p Fl(OPTION) p Fo(') 39
b(or) g(`) p Fl(OPTION=VALUE) p Fo(',) g(where) g(`) p
Fl(OPTION) p Fo(') f(is) h(a) h(k) m(eyw) m(ord) g(from) f(the) g(list)
h(b) s(elo) m(w) g(and) e(`) p Fl(VALUE) p Fo(') h(is) 94
1266 y(the) c(setting) h(for) e(that) h(option.) 54 b(If) 34
b(`) p Fl(VALUE) p Fo(') g(is) g(n) m(umeric) h(then) f(it) h(ma) m(y) g
(b) s(e) f(sp) s(eci\014ed) g(using) g(binary) -8 b(,) 35
b(o) s(ctal,) 94 1366 y(decimal) 40 b(or) f(hexadecimal) i(notation,) h
(with) d(binary) f(notation) i(b) s(eginning) e(with) h(either) g(`) p
Fl(0b) p Fo(') g(or) g(`) p Fl(0B) p Fo('.) 66 b(If) 94
1466 y(`) p Fl(VALUE) p Fo(') 32 b(is) g(a) h(c) m(haracter) h(string) e
(con) m(taining) i(spaces) e(then) g(it) h(ma) m(y) g(b) s(e) f(quoted)
g(using) g(double) g(quotes.) 46 b(No) 94 1565 y(whitespace) 30
b(ma) m(y) g(app) s(ear) f(b) s(et) m(w) m(een) g(the) h(`) p
Fl(=) p Fo(') f(sign,) h(but) e(whitespace) i(m) m(ust) f(app) s(ear) f
(b) s(et) m(w) m(een) i(di\013eren) m(t) g(op-) 94 1665
y(tions.) 48 b(Note) 34 b(that) f(option) g(k) m(eyw) m(ords) g(can) g
(b) s(e) f(giv) m(en) i(in) e(lo) m(w) m(ercase) j(as) e(w) m(ell) g
(as) g(upp) s(ercase,) g(or) f(a) h(mixture) 94 1765
y(of) e(b) s(oth.) 94 2005 y(`) p Fl(ALLOCBYTE) p Fo('=) p
Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
2104 a(Sp) s(eci\014es) h(an) g(8-bit) h(b) m(yte) g(pattern) g(with) f
(whic) m(h) g(to) h(pre\014ll) f(newly-allo) s(cated) i(memory) -8
b(.) 47 b(This) 574 2204 y(can) 34 b(b) s(e) f(used) g(to) i(detect) g
(the) f(use) f(of) h(memory) f(whic) m(h) h(has) f(not) h(b) s(een) f
(initialised) i(after) f(allo-) 574 2303 y(cation.) 60
b(Note) 38 b(that) f(this) f(setting) h(will) g(not) g(a\013ect) g
(memory) g(allo) s(cated) h(with) p Fl 36 w(calloc\(\)) p
Fo 34 w(or) p Fl 574 2403 a(recalloc\(\)) p Fo 32 w(as) d(these) g
(functions) g(alw) m(a) m(ys) h(pre\014ll) e(allo) s(cated) i(memory) f
(with) f(an) h(8-bit) g(b) m(yte) 574 2503 y(pattern) c(of) g(zero.) 41
b(Default) 32 b(v) -5 b(alue:) 41 b(`) p Fl(ALLOCBYTE=0xFF) p
Fo('.) 94 2666 y(`) p Fl(ALLOCSTOP) p Fo('=) p Fl(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 2765 a(Sp) s(eci\014es) d
(an) g(allo) s(cation) i(index) e(at) h(whic) m(h) f(to) g(stop) h(the)
f(program) g(when) f(it) h(is) h(b) s(eing) e(allo-) 574
2865 y(cated.) 53 b(When) 34 b(the) g(n) m(um) m(b) s(er) f(of) h
(memory) f(allo) s(cations) k(reac) m(hes) e(this) e(n) m(um) m(b) s
(er) g(the) h(program) 574 2965 y(will) 41 b(b) s(e) f(halted,) k(and) c
(its) g(state) i(ma) m(y) f(b) s(e) f(examined) h(at) g(that) g(p) s
(oin) m(t) f(b) m(y) h(using) f(a) g(suitable) 574 3064
y(debugger.) 49 b(Note) 34 b(that) f(this) g(setting) h(will) f(b) s(e)
g(ignored) g(if) f(its) i(v) -5 b(alue) 33 b(is) g(zero.) 49
b(Default) 34 b(v) -5 b(alue:) 574 3164 y(`) p Fl(ALLOCSTOP=0) p
Fo('.) 94 3327 y(`) p Fl(ALLOWOFLOW) p Fo(') 574 3427
y(Sp) s(eci\014es) 37 b(that) i(a) f(w) m(arning) f(rather) h(than) f
(an) h(error) f(should) f(b) s(e) h(pro) s(duced) f(if) i(an) m(y) g
(memory) 574 3526 y(op) s(eration) e(function) f(o) m(v) m(er\015o) m
(ws) i(the) e(b) s(oundaries) f(of) h(a) h(memory) f(allo) s(cation,) k
(and) c(that) h(the) 574 3626 y(op) s(eration) 24 b(should) e(still) i
(b) s(e) e(p) s(erformed.) 37 b(This) 22 b(option) h(is) g(pro) m
(vided) g(for) g(circumstances) g(where) 574 3725 y(it) 29
b(is) f(desirable) g(for) f(the) h(memory) g(op) s(eration) g(to) g(b) s
(e) f(p) s(erformed,) g(regardless) i(of) e(whether) h(it) g(is) 574
3825 y(erroneous) j(or) f(not.) 94 3988 y(`) p Fl(AUTOSAVE) p
Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p
Fo 574 4088 a(Sp) s(eci\014es) h(the) f(frequency) h(at) g(whic) m(h) g
(to) g(p) s(erio) s(dically) g(write) g(the) g(pro\014ling) f(data) i
(to) f(the) g(pro-) 574 4187 y(\014ling) h(output) f(\014le.) 45
b(When) 31 b(the) h(total) i(n) m(um) m(b) s(er) c(of) i(pro\014led) f
(memory) g(allo) s(cations) j(and) d(deal-) 574 4287
y(lo) s(cations) g(is) f(a) f(m) m(ultiple) h(of) g(this) f(n) m(um) m
(b) s(er) f(then) h(the) g(curren) m(t) h(pro\014ling) e(information) i
(will) g(b) s(e) 574 4387 y(written) e(to) h(the) f(pro\014ling) f
(output) h(\014le.) 40 b(This) 27 b(option) h(can) g(b) s(e) f(used) g
(to) i(instruct) f(the) g(mpatrol) 574 4486 y(library) 34
b(to) i(dump) c(out) j(an) m(y) g(pro\014ling) e(information) i(just) f
(b) s(efore) g(a) h(fatal) g(error) f(o) s(ccurs) g(in) h(a) 574
4586 y(program,) 42 b(for) d(example.) 68 b(Note) 41
b(that) f(this) f(setting) h(will) g(b) s(e) f(ignored) g(if) g(its) h
(v) -5 b(alue) 40 b(is) f(zero.) 574 4685 y(Default) 32
b(v) -5 b(alue:) 41 b(`) p Fl(AUTOSAVE=0) p Fo('.) 94
4848 y(`) p Fl(CHECK) p Fo('=) p Fl(<) p Fe(unsigned-range) p
Fl 5 w(>) p Fo 574 4948 a(Sp) s(eci\014es) 26 b(a) h(range) f(of) g
(allo) s(cation) j(indices) d(at) h(whic) m(h) f(to) h(c) m(hec) m(k) h
(the) e(in) m(tegrit) m(y) i(of) f(free) f(memory) 574
5048 y(and) 36 b(o) m(v) m(er\015o) m(w) i(bu\013ers.) 57
b(The) 36 b(range) h(m) m(ust) f(b) s(e) g(sp) s(eci\014ed) f(as) i(no)
f(more) g(than) g(t) m(w) m(o) i(unsigned) 574 5147 y(in) m(tegers) 28
b(separated) f(b) m(y) f(a) g(dash,) h(follo) m(w) m(ed) h(b) m(y) e
(an) g(optional) h(forw) m(ard) f(slash) g(and) g(an) g(unsigned) 574
5247 y(in) m(teger) 39 b(sp) s(ecifying) e(an) g(ev) m(en) m(t) i(c) m
(hec) m(king) g(frequency) -8 b(.) 61 b(If) 36 b(n) m(um) m(b) s(ers) g
(on) h(either) h(the) f(left) h(side) 574 5347 y(or) e(the) f(righ) m
(t) h(side) g(of) f(the) h(dash) e(are) i(omitted) h(then) e(they) g
(will) h(b) s(e) f(assumed) f(to) i(b) s(e) f(`) p Fl(0) p
Fo(') h(and) p Fe 574 5446 a(in\014nit) m(y) p Fo 40
w(resp) s(ectiv) m(ely) -8 b(.) 49 b(A) 32 b(v) -5 b(alue) 33
b(of) g(`) p Fl(0) p Fo(') f(on) h(its) f(o) m(wn) h(indicates) g(that)
g(no) f(suc) m(h) g(c) m(hec) m(king) j(will) 574 5546
y(ev) m(er) c(b) s(e) e(p) s(erformed.) 39 b(This) 29
b(option) h(can) f(b) s(e) g(used) g(to) i(sp) s(eed) d(up) h(the) h
(execution) g(sp) s(eed) f(of) h(the) 574 5645 y(library) g(at) i(the) e
(exp) s(ense) g(of) h(c) m(hec) m(king.) 42 b(Default) 32
b(v) -5 b(alue:) 41 b(`) p Fl(CHECK=0) p Fo('.) p 90 rotate
dyy eop
%%Page: 154 160
154 159 bop Fo 94 -116 a(154) 3332 b(mpatrol) 94 365
y(`) p Fl(CHECKALL) p Fo(') 574 465 y(Equiv) -5 b(alen) m(t) 111
b(to) g(the) f(`) p Fl(CHECKALLOCS) p Fo(',) 127 b(`) p
Fl(CHECKREALLOCS) p Fo(',) g(`) p Fl(CHECKFREES) p Fo(') 108
b(and) 574 565 y(`) p Fl(CHECKMEMORY) p Fo(') 28 b(options) j(sp) s
(eci\014ed) f(together.) 94 724 y(`) p Fl(CHECKALLOCS) p
Fo(') 574 824 y(Chec) m(ks) 43 b(that) f(no) g(attempt) h(is) f(made) g
(to) h(allo) s(cate) h(a) e(blo) s(c) m(k) h(of) f(memory) g(of) g
(size) h(zero.) 76 b(A) 574 923 y(w) m(arning) 31 b(will) f(b) s(e) g
(issued) g(for) g(ev) m(ery) h(suc) m(h) f(case.) 94
1083 y(`) p Fl(CHECKFORK) p Fo(') 574 1182 y(Chec) m(ks) i(at) h(ev) m
(ery) f(call) h(to) f(see) h(if) e(the) h(pro) s(cess) f(has) g(b) s
(een) g(fork) m(ed) h(in) f(case) i(new) e(log,) i(pro\014ling) 574
1282 y(and) 28 b(tracing) g(output) f(\014les) h(need) f(to) i(b) s(e) e
(started.) 40 b(This) 27 b(option) h(only) g(has) f(an) h(e\013ect) h
(on) f(UNIX) 574 1381 y(platforms,) 35 b(but) e(should) f(not) i(b) s
(e) f(used) f(in) h(m) m(ultithreaded) h(programs) f(if) h(eac) m(h) g
(thread) f(has) h(a) 574 1481 y(di\013eren) m(t) d(pro) s(cess) f(iden)
m(ti\014er.) 94 1641 y(`) p Fl(CHECKFREES) p Fo(') 574
1740 y(Chec) m(ks) k(that) f(no) g(attempt) h(is) f(made) g(to) h
(deallo) s(cate) h(a) f(`) p Fl(NULL) p Fo(') e(p) s(oin) m(ter.) 48
b(A) 33 b(w) m(arning) g(will) h(b) s(e) 574 1840 y(issued) c(for) g
(ev) m(ery) h(suc) m(h) g(case.) 94 1999 y(`) p Fl(CHECKMEMORY) p
Fo(') 574 2099 y(Chec) m(ks) k(that) g(no) g(attempt) h(is) e(made) h
(to) g(p) s(erform) e(a) i(zero-length) i(memory) d(op) s(eration) h
(on) g(a) 574 2198 y(`) p Fl(NULL) p Fo(') 30 b(p) s(oin) m(ter.) 94
2358 y(`) p Fl(CHECKREALLOCS) p Fo(') 574 2457 y(Chec) m(ks) i(that) f
(no) g(attempt) i(is) e(made) g(to) h(reallo) s(cate) h(a) f(`) p
Fl(NULL) p Fo(') e(p) s(oin) m(ter) h(or) g(resize) h(an) f(existing)
574 2557 y(blo) s(c) m(k) g(of) g(memory) f(to) h(size) h(zero.) 41
b(W) -8 b(arnings) 31 b(will) g(b) s(e) e(issued) h(for) g(ev) m(ery) h
(suc) m(h) f(case.) 94 2716 y(`) p Fl(DEFALIGN) p Fo('=) p
Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
2816 a(Sp) s(eci\014es) d(the) g(default) g(alignmen) m(t) i(for) e
(general-purp) s(ose) f(memory) h(allo) s(cations,) j(whic) m(h) d(m) m
(ust) 574 2916 y(b) s(e) j(a) g(p) s(o) m(w) m(er) f(of) h(t) m(w) m(o)
h(\(and) f(will) g(b) s(e) f(rounded) f(up) g(to) j(the) f(nearest) g
(p) s(o) m(w) m(er) g(of) f(t) m(w) m(o) j(if) d(it) h(is) g(not\).) 574
3015 y(The) g(default) h(alignmen) m(t) h(for) e(a) h(particular) f
(system) h(is) f(calculated) i(at) g(run-time.) 94 3175
y(`) p Fl(EDIT) p Fo(') 238 b(Sp) s(eci\014es) 32 b(that) h(a) g(text) h
(editor) f(should) e(b) s(e) h(in) m(v) m(ok) m(ed) i(to) f(edit) g(an)
m(y) g(relev) -5 b(an) m(t) 33 b(source) g(\014les) f(that) 574
3274 y(are) 26 b(asso) s(ciated) h(with) e(an) m(y) g(w) m(arnings) g
(or) g(errors) g(when) f(they) h(o) s(ccur.) 39 b(Only) 25
b(diagnostics) h(whic) m(h) 574 3374 y(o) s(ccur) 33
b(at) h(source) f(lines) g(in) f(the) i(program) e(will) h(b) s(e) g
(a\013ected) h(and) e(only) h(then) g(if) g(they) g(con) m(tain) 574
3474 y(source-lev) m(el) d(information.) 40 b(This) 26
b(option) i(is) f(curren) m(tly) g(only) h(a) m(v) -5
b(ailable) 29 b(on) e(UNIX) h(platforms) 574 3573 y(as) 42
b(it) f(mak) m(es) h(use) f(of) g(the) p Fl 41 w(mpedit) p
Fo 39 w(command.) 72 b(It) 41 b(also) h(o) m(v) m(errides) g(the) f(b) s
(eha) m(viour) g(of) g(the) 574 3673 y(`) p Fl(LIST) p
Fo(') 30 b(option) h(and) f(a\013ects) i(the) e(b) s(eha) m(viour) g
(of) h(the) p Fl 30 w(__mp_view\(\)) p Fo 28 w(function.) 94
3832 y(`) p Fl(FAILFREQ) p Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 3932 a(Sp) s(eci\014es) 43 b(the) g(frequency) f(at)
i(whic) m(h) e(all) i(memory) f(allo) s(cations) i(will) e(randomly) f
(fail.) 79 b(F) -8 b(or) 574 4032 y(example,) 30 b(a) d(v) -5
b(alue) 28 b(of) g(`) p Fl(10) p Fo(') g(will) g(mean) f(that) h
(roughly) f(1) h(in) g(10) g(memory) f(allo) s(cations) j(will) e
(fail,) 574 4131 y(but) 39 b(a) h(v) -5 b(alue) 40 b(of) f(`) p
Fl(0) p Fo(') h(will) g(disable) f(all) h(random) f(failures.) 68
b(This) 38 b(option) i(can) g(b) s(e) f(useful) f(for) 574
4231 y(stress-testing) 32 b(an) e(application.) 43 b(Default) 31
b(v) -5 b(alue:) 41 b(`) p Fl(FAILFREQ=0) p Fo('.) 94
4390 y(`) p Fl(FAILSEED) p Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 4490 a(Sp) s(eci\014es) 24 b(the) g(random) g(n) m
(um) m(b) s(er) f(seed) h(whic) m(h) g(will) h(b) s(e) e(used) h(when) f
(determining) h(whic) m(h) g(mem-) 574 4589 y(ory) 38
b(allo) s(cations) i(will) e(randomly) f(fail.) 64 b(A) 38
b(v) -5 b(alue) 38 b(of) g(`) p Fl(0) p Fo(') g(will) g(instruct) g
(the) g(library) f(to) h(pic) m(k) 574 4689 y(a) g(random) f(seed) h
(ev) m(ery) g(time) h(it) f(is) g(run.) 60 b(An) m(y) 38
b(other) g(v) -5 b(alue) 38 b(will) g(mean) g(that) g(the) g(random) 574
4789 y(failures) 27 b(will) h(b) s(e) e(the) h(same) g(ev) m(ery) h
(time) g(the) f(program) f(is) h(run,) g(but) f(only) h(as) g(long) h
(as) f(the) g(seed) 574 4888 y(sta) m(ys) 32 b(the) e(same.) 41
b(Default) 32 b(v) -5 b(alue:) 41 b(`) p Fl(FAILSEED=0) p
Fo('.) 94 5048 y(`) p Fl(FREEBYTE) p Fo('=) p Fl(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 5147 a(Sp) s(eci\014es) 32
b(an) f(8-bit) i(b) m(yte) f(pattern) g(with) g(whic) m(h) f(to) i
(pre\014ll) e(newly-freed) g(memory) -8 b(.) 46 b(This) 31
b(can) 574 5247 y(b) s(e) 41 b(used) f(to) h(detect) i(the) e(use) f
(of) h(memory) g(whic) m(h) g(has) g(just) f(b) s(een) g(freed.) 72
b(It) 41 b(is) g(also) h(used) 574 5347 y(in) m(ternally) f(to) e
(ensure) g(that) h(freed) e(memory) h(has) g(not) h(b) s(een) e(o) m(v)
m(erwritten.) 69 b(Note) 40 b(that) g(the) 574 5446 y(freed) 33
b(memory) h(ma) m(y) g(b) s(e) e(reused) h(the) g(next) h(time) g(a) g
(blo) s(c) m(k) g(of) f(memory) g(is) h(allo) s(cated) h(and) e(so) 574
5546 y(once) e(memory) f(has) f(b) s(een) h(freed) f(its) h(con) m(ten)
m(ts) i(are) e(not) g(guaran) m(teed) h(to) g(remain) e(the) h(same) h
(as) 574 5645 y(the) g(sp) s(eci\014ed) f(b) m(yte) h(pattern.) 41
b(Default) 31 b(v) -5 b(alue:) 41 b(`) p Fl(FREEBYTE=0x55) p
Fo('.) p 90 rotate dyy eop
%%Page: 155 161
155 160 bop Fo 94 -116 a(App) s(endix) 29 b(B:) i(En) m(vironmen) m(t)
2593 b(155) 94 365 y(`) p Fl(FREESTOP) p Fo('=) p Fl(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 465 a(Sp) s(eci\014es) 34
b(an) h(allo) s(cation) i(index) d(at) i(whic) m(h) e(to) h(stop) g
(the) g(program) f(when) g(it) h(is) g(b) s(eing) f(freed.) 574
565 y(When) g(the) f(memory) h(allo) s(cation) i(with) d(the) g(sp) s
(eci\014ed) g(allo) s(cation) j(index) d(is) h(to) g(b) s(e) f(freed) g
(the) 574 664 y(program) 25 b(will) g(b) s(e) f(halted,) i(and) f(its) g
(state) h(ma) m(y) f(b) s(e) f(examined) h(at) g(that) h(p) s(oin) m(t)
e(using) g(a) h(suitable) 574 764 y(debugger.) 49 b(Note) 34
b(that) f(this) g(setting) h(will) f(b) s(e) g(ignored) g(if) f(its) i
(v) -5 b(alue) 33 b(is) g(zero.) 49 b(Default) 34 b(v) -5
b(alue:) 574 863 y(`) p Fl(FREESTOP=0) p Fo('.) 94 1029
y(`) p Fl(HELP) p Fo(') 238 b(Displa) m(ys) 32 b(a) f(quic) m
(k-reference) g(option) g(summary) e(to) j(the) p Fl
30 w(stderr) p Fo 29 w(\014le) e(stream.) 94 1196 y(`) p
Fl(LARGEBOUND) p Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 1295 a(Sp) s(eci\014es) j(the) g(limit) h(in) f(b) m
(ytes) h(up) e(to) h(whic) m(h) g(memory) g(allo) s(cations) j(should) c
(b) s(e) g(classi\014ed) i(as) 574 1395 y(large) i(allo) s(cations) g
(for) e(pro\014ling) g(purp) s(oses.) 51 b(This) 33 b(limit) j(m) m
(ust) e(b) s(e) f(greater) j(than) e(the) g(small) 574
1494 y(and) c(medium) g(b) s(ounds.) 38 b(Default) 32
b(v) -5 b(alue:) 41 b(`) p Fl(LARGEBOUND=2048) p Fo('.) 94
1660 y(`) p Fl(LEAKTABLE) p Fo(') 574 1760 y(Sp) s(eci\014es) 25
b(that) h(the) f(leak) i(table) f(should) e(b) s(e) h(automatically) j
(used) c(and) h(a) h(leak) g(table) g(summary) 574 1860
y(should) 36 b(b) s(e) g(displa) m(y) m(ed) g(at) h(the) g(end) f(of) g
(program) g(execution.) 60 b(The) 36 b(summary) f(sho) m(ws) h(a) h
(\015at) 574 1959 y(pro\014le) 27 b(of) h(all) f(unfreed) f(memory) h
(allo) s(cations) i(since) f(the) f(start) h(of) f(the) g(program,) h
(or) f(since) h(the) 574 2059 y(last) k(call) f(to) p
Fl 31 w(__mp_clearleaktable\(\)) p Fo 25 w(if) f(that) h(function) f(w)
m(as) h(called.) 94 2225 y(`) p Fl(LIMIT) p Fo('=) p
Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
2325 a(Sp) s(eci\014es) i(the) h(limit) g(in) g(b) m(ytes) g(at) g
(whic) m(h) f(all) i(memory) e(allo) s(cations) j(should) d(fail) h(if)
f(the) h(total) 574 2424 y(allo) s(cated) 47 b(memory) e(should) f
(increase) i(b) s(ey) m(ond) e(this.) 84 b(This) 44 b(can) h(b) s(e) f
(used) g(to) i(stress-test) 574 2524 y(soft) m(w) m(are) c(to) e(see) g
(ho) m(w) g(it) g(b) s(eha) m(v) m(es) g(in) g(lo) m(w) g(memory) g
(conditions.) 69 b(The) 39 b(in) m(ternal) h(memory) 574
2623 y(used) g(b) m(y) g(the) g(library) g(itself) h(will) f(not) g(b) s
(e) g(coun) m(ted) g(as) h(part) f(of) g(the) g(total) i(heap) e(size,)
k(but) 574 2723 y(on) 31 b(some) f(systems) g(there) h(ma) m(y) g(b) s
(e) e(a) i(small) f(amoun) m(t) h(of) f(memory) g(required) g(to) h
(initialise) h(the) 574 2823 y(library) 24 b(itself.) 40
b(Note) 26 b(that) f(this) f(setting) i(will) e(b) s(e) g(ignored) h
(if) f(its) h(v) -5 b(alue) 25 b(is) f(zero.) 40 b(Default) 25
b(v) -5 b(alue:) 574 2922 y(`) p Fl(LIMIT=0) p Fo('.) 94
3088 y(`) p Fl(LIST) p Fo(') 238 b(Sp) s(eci\014es) 26
b(that) h(a) f(con) m(text) j(listing) e(should) e(b) s(e) g(sho) m(wn)
h(for) g(an) m(y) h(relev) -5 b(an) m(t) 27 b(source) g(\014les) f
(that) h(are) 574 3188 y(asso) s(ciated) 39 b(with) f(an) m(y) g(w) m
(arnings) f(or) g(errors) g(when) g(they) h(o) s(ccur.) 62
b(Only) 36 b(diagnostics) j(whic) m(h) 574 3288 y(o) s(ccur) 33
b(at) h(source) f(lines) g(in) f(the) i(program) e(will) h(b) s(e) g
(a\013ected) h(and) e(only) h(then) g(if) g(they) g(con) m(tain) 574
3387 y(source-lev) m(el) d(information.) 40 b(This) 26
b(option) i(is) f(curren) m(tly) g(only) h(a) m(v) -5
b(ailable) 29 b(on) e(UNIX) h(platforms) 574 3487 y(as) 42
b(it) f(mak) m(es) h(use) f(of) g(the) p Fl 41 w(mpedit) p
Fo 39 w(command.) 72 b(It) 41 b(also) h(o) m(v) m(errides) g(the) f(b) s
(eha) m(viour) g(of) g(the) 574 3587 y(`) p Fl(EDIT) p
Fo(') 30 b(option) h(and) f(a\013ects) i(the) e(b) s(eha) m(viour) g
(of) h(the) p Fl 30 w(__mp_view\(\)) p Fo 28 w(function.) 94
3753 y(`) p Fl(LOGALL) p Fo(') 142 b(Equiv) -5 b(alen) m(t) 28
b(to) g(the) f(`) p Fl(LOGALLOCS) p Fo(',) f(`) p Fl(LOGREALLOCS) p
Fo(',) f(`) p Fl(LOGFREES) p Fo(') g(and) i(`) p Fl(LOGMEMORY) p
Fo(') e(options) 574 3852 y(sp) s(eci\014ed) 30 b(together.) 94
4018 y(`) p Fl(LOGALLOCS) p Fo(') 574 4118 y(Sp) s(eci\014es) f(that) h
(all) g(memory) f(allo) s(cations) j(are) d(to) h(b) s(e) f(logged) i
(and) d(sen) m(t) i(to) g(the) g(log) g(\014le.) 41 b(Note) 574
4218 y(that) 31 b(an) m(y) g(memory) f(allo) s(cations) j(made) d(in) m
(ternally) i(b) m(y) e(the) h(library) f(will) g(not) h(b) s(e) f
(logged.) 94 4384 y(`) p Fl(LOGFILE) p Fo('=) p Fl(<) p
Fe(string) p Fl 8 w(>) p Fo 574 4483 a(Sp) s(eci\014es) 23
b(an) g(alternativ) m(e) i(\014le) f(in) e(whic) m(h) h(to) h(place) g
(all) g(diagnostics) g(from) f(the) g(mpatrol) h(library) -8
b(.) 574 4583 y(If) 35 b(the) p Fl 34 w(LOGDIR) p Fo
33 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 36 b(is) e(set) h(and) f
(the) h(sp) s(eci\014ed) f(\014le) h(do) s(es) f(not) h(con) m(tain) h
(a) 574 4682 y(path) 41 b(comp) s(onen) m(t) g(in) f(its) h(\014lename)
g(then) g(the) g(log) g(\014le) g(will) g(b) s(e) f(lo) s(cated) i(in) f
(the) f(directory) 574 4782 y(sp) s(eci\014ed) 32 b(in) p
Fl 31 w(LOGDIR) p Fo(.) 43 b(A) 32 b(\014lename) g(of) g(`) p
Fl(stderr) p Fo(') f(will) h(send) f(all) i(diagnostics) g(to) g(the) p
Fl 32 w(stderr) p Fo 574 4882 a(\014le) k(stream) h(and) e(a) h
(\014lename) g(of) g(`) p Fl(stdout) p Fo(') e(will) i(do) g(the) g
(equiv) -5 b(alen) m(t) 38 b(with) f(the) p Fl 37 w(stdout) p
Fo 35 w(\014le) 574 4981 y(stream.) j(Note) 26 b(that) g(if) f(a) h
(problem) e(o) s(ccurs) h(while) g(op) s(ening) g(the) g(log) i(\014le)
e(or) g(if) g(an) m(y) h(diagnostics) 574 5081 y(require) 31
b(to) g(b) s(e) f(displa) m(y) m(ed) h(b) s(efore) f(the) h(log) g
(\014le) g(has) f(had) g(a) h(c) m(hance) h(to) f(b) s(e) f(op) s(ened)
g(then) g(they) 574 5181 y(will) 37 b(b) s(e) f(sen) m(t) h(to) g(the) p
Fl 37 w(stderr) p Fo 35 w(\014le) g(stream.) 59 b(Default) 38
b(v) -5 b(alue:) 53 b(`) p Fl(LOGFILE=mpatrol.log) p
Fo(') 32 b(or) 574 5280 y(`) p Fl(LOGFILE=\045n.\045p.log) p
Fo(') 27 b(if) j(the) p Fl 31 w(LOGDIR) p Fo 28 w(en) m(vironmen) m(t) h
(v) -5 b(ariable) 31 b(is) g(set.) 94 5446 y(`) p Fl(LOGFREES) p
Fo(') 574 5546 y(Sp) s(eci\014es) 23 b(that) g(all) h(memory) f(deallo)
s(cations) i(are) e(to) h(b) s(e) e(logged) j(and) d(sen) m(t) h(to) h
(the) f(log) h(\014le.) 39 b(Note) 574 5645 y(that) 31
b(an) m(y) g(memory) f(deallo) s(cations) j(made) d(in) m(ternally) i
(b) m(y) e(the) g(library) g(will) h(not) g(b) s(e) f(logged.) p
90 rotate dyy eop
%%Page: 156 162
156 161 bop Fo 94 -116 a(156) 3332 b(mpatrol) 94 365
y(`) p Fl(LOGMEMORY) p Fo(') 574 465 y(Sp) s(eci\014es) 27
b(that) g(all) h(memory) f(op) s(erations) g(are) g(to) h(b) s(e) e
(logged) j(and) d(sen) m(t) i(to) f(the) g(log) i(\014le.) 39
b(These) 574 565 y(op) s(erations) 27 b(will) f(b) s(e) f(made) h(b) m
(y) g(calls) h(to) g(functions) e(suc) m(h) h(as) p Fl
26 w(memset\(\)) p Fo 23 w(and) p Fl 26 w(memcpy\(\)) p
Fo(.) 37 b(Note) 574 664 y(that) 31 b(an) m(y) g(memory) f(op) s
(erations) h(made) g(in) m(ternally) g(b) m(y) f(the) h(library) f
(will) g(not) h(b) s(e) f(logged.) 94 814 y(`) p Fl(LOGREALLOCS) p
Fo(') 574 913 y(Sp) s(eci\014es) 24 b(that) g(all) h(memory) f(reallo) s
(cations) i(are) f(to) f(b) s(e) g(logged) h(and) e(sen) m(t) i(to) g
(the) f(log) h(\014le.) 39 b(Note) 574 1013 y(that) 31
b(an) m(y) g(memory) f(reallo) s(cations) j(made) d(in) m(ternally) i
(b) m(y) e(the) h(library) f(will) g(not) h(b) s(e) f(logged.) 94
1162 y(`) p Fl(MEDIUMBOUND) p Fo('=) p Fl(<) p Fe(unsigned-in) m(teger)
p Fl 7 w(>) p Fo 574 1262 a(Sp) s(eci\014es) j(the) g(limit) h(in) f(b)
m(ytes) h(up) e(to) h(whic) m(h) g(memory) g(allo) s(cations) j(should)
c(b) s(e) g(classi\014ed) i(as) 574 1362 y(medium) 24
b(allo) s(cations) i(for) e(pro\014ling) f(purp) s(oses.) 37
b(This) 24 b(limit) g(m) m(ust) g(b) s(e) g(greater) h(than) f(the) g
(small) 574 1461 y(b) s(ound) 29 b(but) g(less) i(than) f(the) h(large)
g(b) s(ound.) 39 b(Default) 31 b(v) -5 b(alue:) 42 b(`) p
Fl(MEDIUMBOUND=256) p Fo('.) 94 1611 y(`) p Fl(NOFREE) p
Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p
Fo 574 1710 a(Sp) s(eci\014es) 36 b(that) g(a) g(n) m(um) m(b) s(er) f
(of) h(recen) m(tly-freed) h(memory) e(allo) s(cations) j(should) d(b) s
(e) g(prev) m(en) m(ted) 574 1810 y(from) f(b) s(eing) f(returned) g
(to) i(the) f(free) g(memory) g(p) s(o) s(ol.) 51 b(Suc) m(h) 33
b(freed) h(memory) g(allo) s(cations) i(will) 574 1910
y(then) 24 b(b) s(e) g(\015agged) g(as) h(freed) e(and) h(can) g(b) s
(e) f(used) h(b) m(y) g(the) g(library) f(to) i(pro) m(vide) f(b) s
(etter) g(diagnostics.) 574 2009 y(If) 43 b(the) g(size) g(of) g(the) g
(freed) g(queue) f(is) h(sp) s(eci\014ed) f(as) h(zero) g(then) g(all) g
(freed) g(memory) f(will) i(b) s(e) 574 2109 y(immediately) i(reused) e
(b) m(y) h(the) g(mpatrol) f(library) -8 b(.) 84 b(Note) 46
b(that) f(if) g(this) f(option) h(is) g(giv) m(en) h(a) 574
2208 y(non-zero) 32 b(v) -5 b(alue) 32 b(then) f(the) g(mpatrol) h
(library) e(will) i(alw) m(a) m(ys) g(force) g(a) g(memory) f(reallo) s
(cation) i(to) 574 2308 y(return) f(a) i(p) s(oin) m(ter) f(to) h
(newly-allo) s(cated) h(memory) -8 b(,) 34 b(but) e(the) p
Fl 34 w(expand\(\)) p Fo 31 w(function) g(will) i(nev) m(er) 574
2408 y(b) s(e) c(a\013ected) i(b) m(y) e(this) h(option.) 41
b(Default) 31 b(v) -5 b(alue:) 42 b(`) p Fl(NOFREE=0) p
Fo('.) 94 2557 y(`) p Fl(NOPROTECT) p Fo(') 574 2657
y(Sp) s(eci\014es) f(that) i(the) e(mpatrol) h(library's) g(in) m
(ternal) g(data) g(structures) f(should) g(not) h(b) s(e) f(made) 574
2756 y(read-only) i(after) f(ev) m(ery) h(memory) e(allo) s(cation,) 47
b(reallo) s(cation) d(or) e(deallo) s(cation.) 77 b(This) 41
b(ma) m(y) 574 2856 y(signi\014can) m(tly) 33 b(sp) s(eed) e(up) g
(execution) h(but) f(this) h(will) g(b) s(e) f(at) h(the) g(exp) s
(ense) f(of) g(less) h(safet) m(y) h(if) f(the) 574 2956
y(program) 27 b(acciden) m(tally) i(o) m(v) m(erwrites) f(some) f(of) f
(the) h(library's) f(in) m(ternal) i(data) f(structures.) 39
b(Note) 574 3055 y(that) 31 b(this) g(option) g(has) f(no) g(e\013ect) i
(on) e(systems) g(that) h(do) g(not) f(supp) s(ort) f(memory) h
(protection.) 94 3205 y(`) p Fl(OFLOWBYTE) p Fo('=) p
Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
3304 a(Sp) s(eci\014es) 37 b(an) g(8-bit) h(b) m(yte) g(pattern) f
(with) g(whic) m(h) g(to) h(\014ll) f(the) h(o) m(v) m(er\015o) m(w) g
(bu\013ers) e(of) i(all) g(mem-) 574 3404 y(ory) j(allo) s(cations.) 75
b(This) 40 b(is) g(used) h(in) m(ternally) g(to) h(ensure) e(that) h
(nothing) g(has) g(b) s(een) f(written) 574 3504 y(b) s(ey) m(ond) e
(the) g(b) s(eginning) f(or) h(the) g(end) f(of) h(a) g(blo) s(c) m(k) g
(of) g(allo) s(cated) i(memory) -8 b(.) 63 b(Note) 40
b(that) e(this) 574 3603 y(setting) f(will) e(only) h(ha) m(v) m(e) g
(an) f(e\013ect) i(if) e(the) g(`) p Fl(OFLOWSIZE) p
Fo(') e(option) j(is) f(in) g(use.) 55 b(Default) 36
b(v) -5 b(alue:) 574 3703 y(`) p Fl(OFLOWBYTE=0xAA) p
Fo('.) 94 3852 y(`) p Fl(OFLOWSIZE) p Fo('=) p Fl(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 3952 a(Sp) s(eci\014es) 32
b(the) g(size) h(in) f(b) m(ytes) g(to) h(use) f(for) g(all) h(o) m(v) m
(er\015o) m(w) g(bu\013ers,) f(whic) m(h) g(m) m(ust) g(b) s(e) f(a) i
(p) s(o) m(w) m(er) f(of) 574 4051 y(t) m(w) m(o) i(\(and) e(will) h(b)
s(e) f(rounded) e(up) h(to) j(the) e(nearest) h(p) s(o) m(w) m(er) f
(of) h(t) m(w) m(o) g(if) g(it) f(is) h(not\).) 47 b(This) 31
b(is) i(used) 574 4151 y(in) m(ternally) d(to) f(ensure) e(that) i
(nothing) f(has) g(b) s(een) f(written) i(b) s(ey) m(ond) e(the) i(b) s
(eginning) e(or) h(the) h(end) 574 4251 y(of) f(a) h(blo) s(c) m(k) f
(of) g(allo) s(cated) i(memory) -8 b(.) 40 b(Note) 29
b(that) f(this) g(setting) h(sp) s(eci\014es) f(the) g(size) g(for) g
(only) g(one) 574 4350 y(of) 36 b(the) g(o) m(v) m(er\015o) m(w) h
(bu\013ers) d(giv) m(en) j(to) f(eac) m(h) h(memory) f(allo) s(cation;)
k(the) c(other) g(o) m(v) m(er\015o) m(w) h(bu\013er) 574
4450 y(will) f(ha) m(v) m(e) h(an) e(iden) m(tical) i(size.) 56
b(No) 36 b(o) m(v) m(er\015o) m(w) h(bu\013ers) d(will) i(b) s(e) e
(used) h(if) g(this) g(setting) i(is) e(zero.) 574 4550
y(Default) d(v) -5 b(alue:) 41 b(`) p Fl(OFLOWSIZE=0) p
Fo('.) 94 4699 y(`) p Fl(OFLOWWATCH) p Fo(') 574 4799
y(Sp) s(eci\014es) h(that) g(w) m(atc) m(h) h(p) s(oin) m(t) f(areas) h
(should) e(b) s(e) g(used) h(for) f(o) m(v) m(er\015o) m(w) j
(bu\013ers) c(rather) i(than) 574 4898 y(\014lling) 37
b(with) e(the) i(o) m(v) m(er\015o) m(w) g(b) m(yte.) 59
b(This) 35 b(can) h(signi\014can) m(tly) i(reduce) d(the) i(sp) s(eed) e
(of) h(program) 574 4998 y(execution.) 41 b(Note) 27
b(that) f(this) f(option) h(has) f(no) h(e\013ect) h(on) e(systems) h
(that) g(do) f(not) h(supp) s(ort) e(w) m(atc) m(h) 574
5098 y(p) s(oin) m(t) 31 b(areas.) 94 5247 y(`) p Fl(PAGEALLOC) p
Fo('=) p Fl(<) p Fo(`) p Fl(LOWER) p Fo(') p Fl(|) p
Fo(`) p Fl(UPPER) p Fo(') p Fl(>) p Fo 574 5347 a(Sp) s(eci\014es) 37
b(that) g(eac) m(h) h(individual) e(memory) h(allo) s(cation) i(should)
d(o) s(ccup) m(y) h(at) g(least) h(one) f(page) 574 5446
y(of) 30 b(virtual) g(memory) g(and) f(should) f(b) s(e) h(placed) h
(at) g(the) g(lo) m(w) m(est) i(or) d(highest) h(p) s(oin) m(t) f
(within) g(these) 574 5546 y(pages.) 41 b(This) 29 b(allo) m(ws) h(the)
g(library) f(to) g(place) i(an) e(o) m(v) m(er\015o) m(w) h(bu\013er) e
(of) i(one) f(page) h(on) f(either) h(side) 574 5645
y(of) 41 b(ev) m(ery) g(memory) f(allo) s(cation) j(and) d
(write-protect) i(these) e(pages) h(as) g(w) m(ell) g(as) g(all) g
(free) g(and) p 90 rotate dyy eop
%%Page: 157 163
157 162 bop Fo 94 -116 a(App) s(endix) 29 b(B:) i(En) m(vironmen) m(t)
2593 b(157) 574 365 y(freed) 33 b(memory) -8 b(.) 47
b(Note) 34 b(that) g(this) e(option) h(has) f(no) h(e\013ect) h(on) f
(systems) f(that) h(do) g(not) g(supp) s(ort) 574 465
y(memory) 27 b(protection,) j(and) c(is) h(disabled) g(b) m(y) g
(default) g(on) g(other) g(systems) g(as) h(it) f(can) h(slo) m(w) f
(do) m(wn) 574 565 y(the) k(sp) s(eed) f(of) g(program) g(execution.) 94
720 y(`) p Fl(PRESERVE) p Fo(') 574 819 y(Sp) s(eci\014es) 43
b(that) h(an) m(y) g(reallo) s(cated) i(or) d(freed) h(memory) f(allo) s
(cations) j(should) c(preserv) m(e) i(their) 574 919
y(original) 37 b(con) m(ten) m(ts.) 59 b(This) 35 b(option) h(m) m(ust)
g(b) s(e) f(used) g(with) h(the) g(`) p Fl(NOFREE) p
Fo(') e(option) i(and) g(has) f(no) 574 1018 y(e\013ect) d(otherwise.)
94 1173 y(`) p Fl(PROF) p Fo(') 238 b(Sp) s(eci\014es) 24
b(that) h(all) h(memory) e(allo) s(cations) j(and) c(deallo) s(cations)
k(are) e(to) g(b) s(e) f(pro\014led) f(and) h(sen) m(t) h(to) 574
1273 y(the) g(pro\014ling) e(output) h(\014le.) 39 b(Memory) 25
b(reallo) s(cations) h(are) f(treated) g(as) f(a) h(memory) f(deallo) s
(cation) 574 1373 y(immediately) 32 b(follo) m(w) m(ed) g(b) m(y) e(a) h
(memory) f(allo) s(cation.) 94 1528 y(`) p Fl(PROFFILE) p
Fo('=) p Fl(<) p Fe(string) p Fl 8 w(>) p Fo 574 1627
a(Sp) s(eci\014es) i(an) h(alternativ) m(e) i(\014le) e(in) f(whic) m
(h) h(to) g(place) h(all) f(memory) g(allo) s(cation) i(pro\014ling) d
(infor-) 574 1727 y(mation) 38 b(from) f(the) h(mpatrol) f(library) -8
b(.) 62 b(If) 37 b(the) p Fl 37 w(PROFDIR) p Fo 35 w(en) m(vironmen) m
(t) h(v) -5 b(ariable) 38 b(is) g(set) g(and) 574 1826
y(the) e(sp) s(eci\014ed) f(\014le) h(do) s(es) f(not) h(con) m(tain) h
(a) f(path) f(comp) s(onen) m(t) h(in) f(its) h(\014lename) g(then) f
(the) h(pro-) 574 1926 y(\014ling) f(output) g(\014le) g(will) g(b) s
(e) f(lo) s(cated) j(in) d(the) h(directory) h(sp) s(eci\014ed) e(in) p
Fl 34 w(PROFDIR) p Fo(.) 53 b(A) 35 b(\014lename) 574
2026 y(of) h(`) p Fl(stderr) p Fo(') e(will) h(send) f(this) h
(information) h(to) f(the) p Fl 36 w(stderr) p Fo 33
w(\014le) g(stream) h(and) e(a) i(\014lename) f(of) 574
2125 y(`) p Fl(stdout) p Fo(') 29 b(will) g(do) g(the) h(equiv) -5
b(alen) m(t) 31 b(with) e(the) p Fl 29 w(stdout) p Fo
28 w(\014le) g(stream.) 41 b(Note) 31 b(that) f(if) f(a) h(problem) 574
2225 y(o) s(ccurs) d(while) h(op) s(ening) e(the) i(pro\014ling) e
(output) h(\014le) h(then) f(the) g(pro\014ling) g(information) g(will)
h(not) 574 2325 y(b) s(e) 23 b(output.) 38 b(Default) 25
b(v) -5 b(alue:) 37 b(`) p Fl(PROFFILE=mpatrol.out) p
Fo(') 18 b(or) 24 b(`) p Fl(PROFFILE=\045n.\045p.out) p
Fo(') 19 b(if) k(the) p Fl 574 2424 a(PROFDIR) p Fo 29
w(en) m(vironmen) m(t) 31 b(v) -5 b(ariable) 31 b(is) f(set.) 94
2579 y(`) p Fl(PROGFILE) p Fo('=) p Fl(<) p Fe(string) p
Fl 8 w(>) p Fo 574 2679 a(Sp) s(eci\014es) f(an) g(alternativ) m(e) j
(\014lename) d(with) g(whic) m(h) h(to) g(lo) s(cate) h(the) e
(executable) i(\014le) e(con) m(taining) 574 2778 y(the) 40
b(program's) f(sym) m(b) s(ols.) 66 b(On) 39 b(most) g(systems,) j(the)
d(library) g(will) g(automatically) j(b) s(e) c(able) 574
2878 y(to) d(determine) f(this) g(\014lename,) h(but) e(on) h(a) g(few)
g(systems) g(this) g(option) g(ma) m(y) h(ha) m(v) m(e) g(to) f(b) s(e)
g(used) 574 2978 y(b) s(efore) c(an) m(y) h(or) g(all) g(sym) m(b) s
(ols) f(can) g(b) s(e) g(read.) 94 3133 y(`) p Fl(REALLOCSTOP) p
Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p
Fo 574 3232 a(Sp) s(eci\014es) g(a) g(reallo) s(cation) i(index) e(at) h
(whic) m(h) e(to) i(stop) f(the) g(program) g(when) f(a) h(memory) g
(allo) s(ca-) 574 3332 y(tion) 37 b(is) f(b) s(eing) g(reallo) s
(cated.) 60 b(If) 35 b(the) i(`) p Fl(ALLOCSTOP) p Fo(') d(option) i
(is) g(non-zero) h(then) f(the) g(program) 574 3432 y(will) 30
b(b) s(e) e(halted) h(when) f(the) h(allo) s(cation) i(matc) m(hing) e
(that) h(allo) s(cation) h(index) d(is) h(reallo) s(cated) i(the) 574
3531 y(sp) s(eci\014ed) f(n) m(um) m(b) s(er) g(of) g(times.) 42
b(Otherwise) 31 b(the) f(program) h(will) g(b) s(e) f(halted) h(the) f
(\014rst) g(time) i(an) m(y) 574 3631 y(allo) s(cation) 37
b(is) e(reallo) s(cated) i(the) d(sp) s(eci\014ed) g(n) m(um) m(b) s
(er) g(of) g(times.) 54 b(Note) 36 b(that) f(this) g(setting) h(will)
574 3730 y(b) s(e) 30 b(ignored) h(if) f(its) h(v) -5
b(alue) 31 b(is) f(zero.) 42 b(Default) 31 b(v) -5 b(alue:) 41
b(`) p Fl(REALLOCSTOP=0) p Fo('.) 94 3885 y(`) p Fl(SAFESIGNALS) p
Fo(') 574 3985 y(Instructs) 24 b(the) g(library) g(to) h(sa) m(v) m(e) h
(and) e(replace) h(certain) g(signal) g(handlers) e(during) g(the) i
(execution) 574 4085 y(of) 34 b(library) f(co) s(de) h(and) f(to) i
(restore) f(them) f(afterw) m(ards.) 51 b(This) 33 b(w) m(as) h(the) f
(default) h(b) s(eha) m(viour) f(in) 574 4184 y(v) m(ersion) 23
b(1.0) g(of) g(the) f(mpatrol) h(library) e(and) h(w) m(as) g(c) m
(hanged) h(since) g(some) f(memory-in) m(tensiv) m(e) i(pro-) 574
4284 y(grams) h(b) s(ecame) h(v) m(ery) f(hard) e(to) j(in) m(terrupt) e
(using) h(the) g(k) m(eyb) s(oard,) h(th) m(us) e(giving) i(the) f
(impression) 574 4384 y(that) 31 b(the) g(program) f(or) h(system) f
(had) g(h) m(ung.) 94 4539 y(`) p Fl(SHOWALL) p Fo(') 94
b(Equiv) -5 b(alen) m(t) 79 b(to) e(the) h(`) p Fl(SHOWFREE) p
Fo(',) 87 b(`) p Fl(SHOWFREED) p Fo(',) g(`) p Fl(SHOWUNFREED) p
Fo(',) g(`) p Fl(SHOWMAP) p Fo(') 76 b(and) 574 4638
y(`) p Fl(SHOWSYMBOLS) p Fo(') 28 b(options) j(sp) s(eci\014ed) f
(together.) 94 4793 y(`) p Fl(SHOWFREE) p Fo(') 574 4893
y(Sp) s(eci\014es) 36 b(that) h(a) f(summary) f(of) i(all) g(of) f(the)
h(free) f(memory) g(blo) s(c) m(ks) h(should) e(b) s(e) g(displa) m(y) m
(ed) i(at) 574 4992 y(the) 43 b(end) g(of) g(program) f(execution.) 79
b(This) 42 b(step) h(will) g(not) g(b) s(e) f(p) s(erformed) g(if) g
(an) h(abnormal) 574 5092 y(termination) 32 b(o) s(ccurs) e(or) g(if) g
(there) h(w) m(ere) g(no) f(free) h(memory) f(blo) s(c) m(ks.) 94
5247 y(`) p Fl(SHOWFREED) p Fo(') 574 5347 y(Sp) s(eci\014es) d(that) i
(a) f(summary) e(of) i(all) h(of) f(the) g(freed) f(memory) h(allo) s
(cations) i(should) c(b) s(e) h(displa) m(y) m(ed) 574
5446 y(at) 40 b(the) f(end) g(of) g(program) f(execution.) 68
b(This) 38 b(option) h(m) m(ust) g(b) s(e) g(used) f(in) g(conjunction)
h(with) 574 5546 y(the) 29 b(`) p Fl(NOFREE) p Fo(') e(option) i(and) f
(this) h(step) f(will) h(not) g(b) s(e) f(p) s(erformed) f(if) h(an) h
(abnormal) f(termination) 574 5645 y(o) s(ccurs) j(or) f(if) g(there) h
(w) m(ere) g(no) f(freed) g(allo) s(cations.) p 90 rotate
dyy eop
%%Page: 158 164
158 163 bop Fo 94 -116 a(158) 3332 b(mpatrol) 94 365
y(`) p Fl(SHOWMAP) p Fo(') 94 b(Sp) s(eci\014es) 34 b(that) g(a) g
(memory) g(map) g(of) g(the) g(en) m(tire) h(heap) e(should) g(b) s(e) g
(displa) m(y) m(ed) i(at) f(the) h(end) e(of) 574 465
y(program) 40 b(execution.) 70 b(This) 39 b(step) h(will) g(not) g(b) s
(e) g(p) s(erformed) e(if) i(an) f(abnormal) h(termination) 574
565 y(o) s(ccurs) 31 b(or) f(if) g(the) h(heap) f(is) g(empt) m(y) -8
b(.) 94 714 y(`) p Fl(SHOWSYMBOLS) p Fo(') 574 814 y(Sp) s(eci\014es) 38
b(that) h(a) f(summary) f(of) i(all) g(of) f(the) g(function) g(sym) m
(b) s(ols) g(read) g(from) g(the) g(program's) 574 913
y(executable) 33 b(\014le) e(should) f(b) s(e) g(displa) m(y) m(ed) h
(at) h(the) f(end) f(of) h(program) f(execution.) 44
b(This) 30 b(step) h(will) 574 1013 y(not) f(b) s(e) e(p) s(erformed) g
(if) h(an) g(abnormal) g(termination) h(o) s(ccurs) f(or) g(if) g(no) h
(sym) m(b) s(ols) e(could) i(b) s(e) e(read) 574 1112
y(from) i(the) h(executable) h(\014le.) 94 1262 y(`) p
Fl(SHOWUNFREED) p Fo(') 574 1362 y(Sp) s(eci\014es) 37
b(that) h(a) f(summary) g(of) g(all) h(of) f(the) h(unfreed) e(memory) h
(allo) s(cations) i(should) e(b) s(e) f(dis-) 574 1461
y(pla) m(y) m(ed) 44 b(at) f(the) g(end) f(of) g(program) h(execution.)
78 b(This) 42 b(step) g(will) h(not) g(b) s(e) f(p) s(erformed) f(if) h
(an) 574 1561 y(abnormal) 34 b(termination) g(o) s(ccurs) f(or) g(if) h
(there) f(are) h(no) f(unfreed) f(allo) s(cations.) 52
b(Note) 35 b(that) f(an) m(y) 574 1660 y(mark) m(ed) d(memory) f(allo) s
(cations) j(will) d(not) h(b) s(e) f(listed.) 94 1810
y(`) p Fl(SMALLBOUND) p Fo('=) p Fl(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 1910 a(Sp) s(eci\014es) j(the) g(limit) h(in) f(b) m
(ytes) h(up) e(to) h(whic) m(h) g(memory) g(allo) s(cations) j(should) c
(b) s(e) g(classi\014ed) i(as) 574 2009 y(small) j(allo) s(cations) h
(for) d(pro\014ling) g(purp) s(oses.) 55 b(This) 35 b(limit) i(m) m
(ust) f(b) s(e) f(greater) i(than) e(zero) i(but) 574
2109 y(less) 31 b(than) f(the) h(medium) e(and) h(large) i(b) s(ounds.)
38 b(Default) 32 b(v) -5 b(alue:) 41 b(`) p Fl(SMALLBOUND=32) p
Fo('.) 94 2258 y(`) p Fl(TRACE) p Fo(') 190 b(Sp) s(eci\014es) 21
b(that) g(all) h(memory) f(allo) s(cations,) k(reallo) s(cations) e
(and) d(deallo) s(cations) j(are) e(to) h(b) s(e) e(traced) 574
2358 y(and) 30 b(sen) m(t) h(to) g(the) g(tracing) g(output) f(\014le.)
94 2507 y(`) p Fl(TRACEFILE) p Fo('=) p Fl(<) p Fe(string) p
Fl 8 w(>) p Fo 574 2607 a(Sp) s(eci\014es) 37 b(an) f(alternativ) m(e) k
(\014le) d(in) f(whic) m(h) h(to) h(place) f(all) h(memory) f(allo) s
(cation) i(tracing) f(infor-) 574 2707 y(mation) d(from) e(the) i
(mpatrol) f(library) -8 b(.) 51 b(If) 33 b(the) p Fl
34 w(TRACEDIR) p Fo 32 w(en) m(vironmen) m(t) i(v) -5
b(ariable) 34 b(is) g(set) h(and) 574 2806 y(the) f(sp) s(eci\014ed) g
(\014le) f(do) s(es) h(not) g(con) m(tain) h(a) f(path) g(comp) s(onen)
m(t) g(in) f(its) h(\014lename) g(then) g(the) g(trac-) 574
2906 y(ing) j(output) g(\014le) g(will) g(b) s(e) f(lo) s(cated) i(in) e
(the) h(directory) h(sp) s(eci\014ed) e(in) p Fl 36 w(TRACEDIR) p
Fo(.) 58 b(A) 37 b(\014lename) 574 3005 y(of) f(`) p
Fl(stderr) p Fo(') e(will) h(send) f(this) h(information) h(to) f(the) p
Fl 36 w(stderr) p Fo 33 w(\014le) g(stream) h(and) e(a) i(\014lename) f
(of) 574 3105 y(`) p Fl(stdout) p Fo(') 29 b(will) g(do) g(the) h
(equiv) -5 b(alen) m(t) 31 b(with) e(the) p Fl 29 w(stdout) p
Fo 28 w(\014le) g(stream.) 41 b(Note) 31 b(that) f(if) f(a) h(problem)
574 3205 y(o) s(ccurs) c(while) g(op) s(ening) f(the) h(tracing) g
(output) g(\014le) g(then) f(the) h(tracing) h(information) f(will) g
(not) g(b) s(e) 574 3304 y(output.) 52 b(Default) 35
b(v) -5 b(alue:) 48 b(`) p Fl(TRACEFILE=mpatrol.trace) p
Fo(') 28 b(or) 34 b(`) p Fl(TRACEFILE=\045n.\045p.trace) p
Fo(') 574 3404 y(if) d(the) p Fl 30 w(TRACEDIR) p Fo
29 w(en) m(vironmen) m(t) f(v) -5 b(ariable) 32 b(is) e(set.) 94
3553 y(`) p Fl(UNFREEDABORT) p Fo('=) p Fl(<) p Fe(unsigned-in) m
(teger) p Fl 7 w(>) p Fo 574 3653 a(Sp) s(eci\014es) 25
b(the) g(minim) m(um) g(n) m(um) m(b) s(er) f(of) h(unfreed) f(allo) s
(cations) k(at) e(whic) m(h) f(to) h(ab) s(ort) f(the) g(program) 574
3753 y(just) h(b) s(efore) g(program) h(termination.) 40
b(A) 26 b(summary) g(of) g(all) i(the) e(allo) s(cations) j(will) e(b) s
(e) e(displa) m(y) m(ed) 574 3852 y(on) h(the) h(standard) e(error) g
(\014le) i(stream) f(b) s(efore) g(ab) s(orting.) 39
b(This) 25 b(option) i(ma) m(y) f(b) s(e) g(handy) e(for) i(use) 574
3952 y(in) f(batc) m(h) g(tests) h(as) f(it) h(can) f(force) g(tests) h
(to) f(fail) h(if) e(they) h(do) g(not) g(free) g(up) f(a) h(minim) m
(um) f(n) m(um) m(b) s(er) g(of) 574 4051 y(memory) 31
b(allo) s(cations,) j(although) d(mark) m(ed) g(allo) s(cations) i
(will) f(not) f(b) s(e) f(considered) h(as) g(unfreed) 574
4151 y(allo) s(cations.) 43 b(Note) 30 b(that) g(this) f(setting) h
(will) f(b) s(e) f(ignored) h(if) g(its) h(v) -5 b(alue) 29
b(is) g(zero.) 41 b(Default) 30 b(v) -5 b(alue:) 574
4251 y(`) p Fl(UNFREEDABORT=0) p Fo('.) 94 4400 y(`) p
Fl(USEDEBUG) p Fo(') 574 4500 y(Sp) s(eci\014es) 37 b(that) h(an) m(y) f
(debugging) g(information) g(in) g(the) g(executable) i(\014le) e
(should) f(b) s(e) h(used) f(to) 574 4599 y(obtain) 25
b(additional) g(source-lev) m(el) h(information.) 39
b(This) 23 b(option) h(will) g(only) g(ha) m(v) m(e) i(an) d(e\013ect) j
(if) e(the) 574 4699 y(executable) 32 b(\014le) e(con) m(tains) h(a) f
(compiler-generated) i(line) f(n) m(um) m(b) s(er) d(table) j(and) e
(will) i(b) s(e) e(ignored) 574 4799 y(if) i(the) g(mpatrol) g(library)
f(w) m(as) h(built) f(to) i(supp) s(ort) c(an) j(ob) 5
b(ject) 31 b(\014le) g(access) h(library) e(that) h(cannot) 574
4898 y(read) 40 b(line) f(tables) h(from) f(ob) 5 b(ject) 40
b(\014les.) 67 b(Note) 41 b(that) e(this) g(option) h(will) g(slo) m(w)
f(do) m(wn) g(program) 574 4998 y(execution,) 27 b(use) c(up) f(more) i
(system) g(memory) f(and) g(ma) m(y) h(lea) m(v) m(e) i(unaccoun) m
(ted) e(unfreed) e(memory) 574 5098 y(allo) s(cations) 33
b(at) e(program) f(termination.) 94 5247 y(`) p Fl(USEMMAP) p
Fo(') 94 b(Sp) s(eci\014es) 45 b(that) h(the) f(library) g(should) f
(use) p Fl 45 w(mmap\(\)) p Fo 44 w(instead) h(of) p
Fl 45 w(sbrk\(\)) p Fo 44 w(to) h(allo) s(cate) i(user) 574
5347 y(memory) 43 b(on) g(UNIX) g(platforms.) 78 b(This) 42
b(option) h(should) f(b) s(e) h(used) f(if) g(there) h(are) h(problems)
574 5446 y(when) 34 b(using) g(the) h(mpatrol) g(library) g(in) f(com) m
(bination) i(with) e(another) h(mallo) s(c) h(library) e(whic) m(h) 574
5546 y(uses) p Fl 43 w(sbrk\(\)) p Fo 41 w(to) 43 b(allo) s(cate) j
(its) d(memory) -8 b(.) 78 b(Memory) 43 b(in) m(ternal) h(to) f(the) g
(mpatrol) h(library) e(is) 574 5645 y(allo) s(cated) i(with) p
Fl 41 w(mmap\(\)) p Fo 40 w(on) d(systems) g(where) g(it) h(is) f(supp)
s(orted) f(in) h(order) g(to) h(segregate) h(it) p 90 rotate
dyy eop
%%Page: 159 165
159 164 bop Fo 94 -116 a(App) s(endix) 29 b(B:) i(En) m(vironmen) m(t)
2593 b(159) 574 365 y(from) 33 b(user) g(memory) -8 b(,) 35
b(and) d(this) h(b) s(eha) m(viour) g(is) h(rev) m(ersed) f(with) g
(the) h(`) p Fl(USEMMAP) p Fo(') e(option.) 49 b(It) 34
b(is) 574 465 y(ignored) k(on) f(systems) g(that) g(do) g(not) g(supp) s
(ort) f(the) p Fl 37 w(mmap\(\)) p Fo 35 w(system) i(call.) 62
b(Note) 38 b(that) g(some) 574 565 y(UNIX) j(systems) g(require) f
(this) g(option) h(in) f(order) g(for) h(the) f(mpatrol) h(library) f
(to) h(b) s(e) f(able) h(to) 574 664 y(p) s(erform) 29
b(memory) i(protection) g(with) f(the) p Fl 31 w(mprotect\(\)) p
Fo 27 w(system) h(call.) p 90 rotate dyy eop
%%Page: 160 166
160 165 bop Fo 94 -116 a(160) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 161 167
161 166 bop Fo 94 -116 a(App) s(endix) 29 b(C:) h(Options) 2792
b(161) p Fk 94 365 a(App) t(endix) 53 b(C) 80 b(Options) p
Fo 219 602 a(A) 33 b(utilit) m(y) i(program) e(called) p
Fl 34 w(mpatrol) p Fo 31 w(is) g(pro) m(vided) g(to) h(run) e(commands)
g(that) i(ha) m(v) m(e) g(b) s(een) f(link) m(ed) g(with) 94
702 y(the) e(mpatrol) g(library) -8 b(.) p Fl 334 834
a(mpatrol) 46 b([options]) g(<command>) f([arguments]) p
Fo 219 963 a(The) p Fl 23 w(mpatrol) p Fo 21 w(command) 22
b(is) h(used) g(to) g(set) h(v) -5 b(arious) 23 b(mpatrol) g(library) p
Fe 23 w(options) p Fo 27 w(when) f(running) p Fe 21 w(command) p
Fo 94 1063 a(with) 34 b(its) p Fe 34 w(argumen) m(ts) p
Fo(.) 50 b(In) 33 b(most) h(cases,) p Fe 36 w(command) p
Fo 37 w(m) m(ust) f(ha) m(v) m(e) i(b) s(een) e(link) m(ed) h(with) f
(the) h(mpatrol) g(library) -8 b(,) 94 1162 y(unless) 28
b(the) g(`) p Fl(--dynamic) p Fo(') f(option) h(is) h(used) e(in) h
(whic) m(h) g(case) p Fe 29 w(command) p Fo 32 w(need) g(only) g(ha) m
(v) m(e) i(b) s(een) d(dynamically) 94 1262 y(link) m(ed.) 219
1391 y(All) h(mpatrol) g(library) f(diagnostics) h(are) g(sen) m(t) g
(to) g(the) f(\014le) h(`) p Fl(mpatrol.\045n.log) p
Fo(') c(in) j(the) g(curren) m(t) g(directory) 94 1490
y(b) m(y) g(default) g(\(where) g(`) p Fl(\045n) p Fo(') g(is) f(the) h
(curren) m(t) g(pro) s(cess) f(id\)) h(but) f(this) h(can) g(b) s(e) f
(c) m(hanged) i(using) e(the) h(`) p Fl(--log-file) p
Fo(') 94 1590 y(option.) 71 b(Similarly) -8 b(,) 44 b(the) c(default) h
(pro\014ling) e(output) h(\014lename) h(is) f(`) p Fl
(mpatrol.\045n.out) p Fo(') d(and) i(the) i(default) 94
1689 y(tracing) 32 b(output) e(\014lename) g(is) h(`) p
Fl(mpatrol.\045n.trace) p Fo('.) 219 1818 y(Alternativ) m(ely) -8
b(,) 47 b(the) 41 b(log) h(\014le,) i(pro\014ling) d(output) f(\014le) h
(and) g(tracing) h(output) e(\014le) h(names) g(can) h(con) m(tain) 94
1918 y(`) p Fl(\045p) p Fo(',) 29 b(whic) m(h) e(will) h(b) s(e) f
(replaced) i(with) e(the) h(name) g(of) g(the) f(program) h(b) s(eing) f
(executed) i(without) f(the) f(directory) 94 2017 y(comp) s(onen) m
(ts.) 69 b(If) 40 b(the) g(executable) h(\014lename) f(could) g(not) f
(b) s(e) h(determined) f(or) h(w) m(as) g(not) g(set) g(then) f(it) i
(will) 94 2117 y(b) s(e) f(replaced) g(with) f(`) p Fl(mpatrol) p
Fo('.) 68 b(A) 39 b(similar) h(replacemen) m(t) i(c) m(haracter) f
(sequence) f(is) g(`) p Fl(\045f) p Fo(',) i(whic) m(h) e(will) g(b) s
(e) 94 2217 y(replaced) 35 b(b) m(y) g(the) g(pathname) f(of) h(the) f
(program) h(b) s(eing) f(executed,) i(with) f(all) g(path) f
(separation) h(c) m(haracters) 94 2316 y(replaced) c(b) m(y) g
(underscores.) 219 2445 y(The) 36 b(curren) m(t) h(date) g(can) g(b) s
(e) f(en) m(tered) h(in) m(to) h(suc) m(h) e(\014lenames) h(through) f
(the) h(use) f(of) h(the) g(`) p Fl(\045d) p Fo(') f(c) m(haracter) 94
2545 y(sequence,) 29 b(whic) m(h) e(will) g(b) s(e) g(replaced) h(with)
e(the) i(date) g(in) f(the) g(form) g(`) p Fl(YYYYMMDD) p
Fo('.) 38 b(The) 26 b(curren) m(t) h(time) h(can) g(b) s(e) 94
2644 y(added) i(with) g(`) p Fl(\045t) p Fo(',) h(whic) m(h) f(will) h
(b) s(e) e(replaced) i(with) f(the) h(time) g(in) f(the) h(form) f(`) p
Fl(HHMMSS) p Fo('.) 39 b(If) 30 b(the) h(date) g(or) f(time) 94
2744 y(could) h(not) g(b) s(e) e(determined,) i(these) f(will) h(b) s
(e) f(replaced) h(with) f(`) p Fl(today) p Fo(') f(and) h(`) p
Fl(now) p Fo(') g(resp) s(ectiv) m(ely) -8 b(.) 219 2873
y(All) 47 b(of) g(the) g(follo) m(wing) h(options) f(\(except) h(`) p
Fl(--dynamic) p Fo(',) h(`) p Fl(--help) p Fo(',) g(`) p
Fl(--read-env) p Fo(',) g(`) p Fl(--show-env) p Fo(',) 94
2972 y(`) p Fl(--threads) p Fo(') 23 b(and) g(`) p Fl(--version) p
Fo('\)) g(corresp) s(ond) g(to) i(their) f(listed) h(mpatrol) f
(library) g(option) h(\(see) g(App) s(endix) e(B) 94
3072 y([En) m(vironmen) m(t],) 32 b(page) f(153\).) 43
b(Note) 32 b(that) f(some) g(of) g(these) g(options) g(ha) m(v) m(e) h
(a) f(one) g(c) m(haracter) h(equiv) -5 b(alen) m(t) 32
b(op-) 94 3171 y(tion) 40 b(that) h(can) e(b) s(e) g(used) g(for) g
(brevit) m(y) -8 b(.) 69 b(The) 39 b(list) h(of) g(one) g(c) m
(haracter) h(options) f(can) g(b) s(e) e(view) m(ed) j(with) e(the) 94
3271 y(`) p Fl(--help) p Fo(') 25 b(option) i(or) f(view) m(ed) h(in) f
(the) h(UNIX) f(man) m(ual) h(pages.) 40 b(Suc) m(h) 25
b(options) i(are) f(parsed) g(on) g(the) g(command) 94
3371 y(line) 31 b(in) f(a) h(similar) g(w) m(a) m(y) g(to) g(the) g
(UNIX) f(function) p Fl 31 w(getopt\(\)) p Fo(.) 94 3582
y(`) p Fl(--alloc-byte) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger)
p Fl 7 w(>) p Fo 574 3682 a([`) p Fl(ALLOCBYTE) p Fo(']) k(Sp) s
(eci\014es) h(an) h(8-bit) g(b) m(yte) g(pattern) f(with) h(whic) m(h) f
(to) h(pre\014ll) f(newly-allo) s(cated) 574 3782 y(memory) -8
b(.) 94 3935 y(`) p Fl(--alloc-stop) p Fo(') p Fl 28
w(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
4035 a([`) p Fl(ALLOCSTOP) p Fo(']) 29 b(Sp) s(eci\014es) g(an) h(allo)
s(cation) i(index) e(at) g(whic) m(h) g(to) h(stop) f(the) g(program) g
(when) e(it) j(is) 574 4134 y(b) s(eing) f(allo) s(cated.) 94
4288 y(`) p Fl(--allow-oflow) p Fo(') 574 4388 y([`) p
Fl(ALLOWOFLOW) p Fo(']) g(Sp) s(eci\014es) g(that) i(a) f(w) m(arning) g
(rather) g(than) g(an) g(error) g(should) f(b) s(e) h(pro) s(duced) e
(if) 574 4487 y(an) m(y) 37 b(memory) g(op) s(eration) g(function) f(o)
m(v) m(er\015o) m(ws) i(the) f(b) s(oundaries) e(of) i(a) g(memory) f
(allo) s(cation,) 574 4587 y(and) 30 b(that) h(the) g(op) s(eration) g
(should) e(still) i(b) s(e) f(p) s(erformed.) 94 4741
y(`) p Fl(--auto-save) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 4840 a([`) p Fl(AUTOSAVE) p Fo(']) 25
b(Sp) s(eci\014es) g(the) i(frequency) e(at) i(whic) m(h) f(to) g(p) s
(erio) s(dically) g(write) h(the) f(pro\014ling) f(data) 574
4940 y(to) 32 b(the) e(pro\014ling) g(output) g(\014le.) 94
5093 y(`) p Fl(--check) p Fo(') p Fl 29 w(<) p Fe(unsigned-range) p
Fl 5 w(>) p Fo 574 5193 a([`) p Fl(CHECK) p Fo(']) 38
b(Sp) s(eci\014es) f(a) h(range) h(of) f(allo) s(cation) i(indices) e
(at) g(whic) m(h) g(to) g(c) m(hec) m(k) i(the) e(in) m(tegrit) m(y) i
(of) 574 5293 y(free) 31 b(memory) f(and) g(o) m(v) m(er\015o) m(w) i
(bu\013ers.) 94 5446 y(`) p Fl(--check-all) p Fo(') 574
5546 y([`) p Fl(CHECKALL) p Fo(']) 116 b(Equiv) -5 b(alen) m(t) 117
b(to) g(the) g(`) p Fl(--check-allocs) p Fo(',) 135 b(`) p
Fl(--check-reallocs) p Fo(',) 574 5645 y(`) p Fl(--check-frees) p
Fo(') 28 b(and) i(`) p Fl(--check-memory) p Fo(') c(options) 31
b(sp) s(eci\014ed) f(together.) p 90 rotate dyy eop
%%Page: 162 168
162 167 bop Fo 94 -116 a(162) 3332 b(mpatrol) 94 365
y(`) p Fl(--check-allocs) p Fo(') 574 465 y([`) p Fl(CHECKALLOCS) p
Fo(']) 32 b(Chec) m(ks) h(that) h(no) f(attempt) i(is) e(made) h(to) g
(allo) s(cate) i(a) d(blo) s(c) m(k) h(of) g(memory) f(of) 574
565 y(size) f(zero.) 94 708 y(`) p Fl(--check-fork) p
Fo(') 574 807 y([`) p Fl(CHECKFORK) p Fo(']) d(Chec) m(ks) h(at) g(ev) m
(ery) h(call) g(to) f(see) g(if) g(the) g(pro) s(cess) f(has) g(b) s
(een) g(fork) m(ed) h(in) g(case) g(new) 574 907 y(log,) i(pro\014ling)
e(and) g(tracing) h(output) f(\014les) g(need) h(to) g(b) s(e) e
(started.) 94 1050 y(`) p Fl(--check-frees) p Fo(') 574
1150 y([`) p Fl(CHECKFREES) p Fo(']) g(Chec) m(ks) i(that) g(no) f
(attempt) h(is) g(made) f(to) h(deallo) s(cate) i(a) p
Fl 31 w(NULL) p Fo 29 w(p) s(oin) m(ter.) 94 1293 y(`) p
Fl(--check-memory) p Fo(') 574 1393 y([`) p Fl(CHECKMEMORY) p
Fo(']) c(Chec) m(ks) j(that) f(no) g(attempt) h(is) g(made) f(to) g(p) s
(erform) f(a) h(zero-length) i(memory) 574 1492 y(op) s(eration) e(on) g
(a) p Fl 30 w(NULL) p Fo 30 w(p) s(oin) m(ter.) 94 1636
y(`) p Fl(--check-reallocs) p Fo(') 574 1735 y([`) p
Fl(CHECKREALLOCS) p Fo(']) f(Chec) m(ks) i(that) h(no) e(attempt) j(is)
e(made) g(to) g(reallo) s(cate) j(a) p Fl 32 w(NULL) p
Fo 31 w(p) s(oin) m(ter) d(or) 574 1835 y(resize) g(an) e(existing) h
(blo) s(c) m(k) g(of) g(memory) f(to) h(size) g(zero.) 94
1978 y(`) p Fl(--def-align) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m
(teger) p Fl 7 w(>) p Fo 574 2078 a([`) p Fl(DEFALIGN) p
Fo(']) 22 b(Sp) s(eci\014es) h(the) g(default) h(alignmen) m(t) g(for) f
(general-purp) s(ose) g(memory) h(allo) s(cations,) 574
2177 y(whic) m(h) 31 b(m) m(ust) f(b) s(e) g(a) g(p) s(o) m(w) m(er) h
(of) f(t) m(w) m(o.) 94 2320 y(`) p Fl(--dynamic) p Fo(') 574
2420 y(Sp) s(eci\014es) g(that) g(programs) f(whic) m(h) h(w) m(ere) g
(not) g(link) m(ed) g(with) g(the) g(mpatrol) g(library) f(should) g
(also) 574 2520 y(b) s(e) 34 b(traced,) i(but) d(only) h(if) g(they) g
(w) m(ere) g(dynamically) h(link) m(ed.) 52 b(This) 33
b(option) i(will) f(only) g(w) m(ork) g(if) 574 2619
y(the) h(system) f(dynamic) g(link) m(er) g(has) g(the) g(abilit) m(y) i
(to) e(preload) h(a) f(set) g(of) h(user-sp) s(eci\014ed) e(shared) 574
2719 y(libraries) e(via) g(a) g(sp) s(ecial) g(en) m(vironmen) m(t) g
(v) -5 b(ariable.) 94 2862 y(`) p Fl(--edit) p Fo(') 142
b([`) p Fl(EDIT) p Fo(']) 37 b(Sp) s(eci\014es) g(that) g(a) h(text) g
(editor) f(should) f(b) s(e) h(in) m(v) m(ok) m(ed) h(to) g(edit) f(an)
m(y) g(relev) -5 b(an) m(t) 39 b(source) 574 2962 y(\014les) 31
b(that) g(are) g(asso) s(ciated) g(with) f(an) m(y) h(w) m(arnings) f
(or) h(errors) e(when) h(they) g(o) s(ccur.) 94 3105
y(`) p Fl(--fail-freq) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 3205 a([`) p Fl(FAILFREQ) p Fo(']) g(Sp) s
(eci\014es) g(the) g(frequency) g(at) i(whic) m(h) e(all) h(memory) g
(allo) s(cations) i(will) d(randomly) 574 3304 y(fail.) 94
3447 y(`) p Fl(--fail-seed) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m
(teger) p Fl 7 w(>) p Fo 574 3547 a([`) p Fl(FAILSEED) p
Fo(']) 23 b(Sp) s(eci\014es) g(the) h(random) e(n) m(um) m(b) s(er) h
(seed) g(whic) m(h) h(will) g(b) s(e) f(used) f(when) h(determining) 574
3647 y(whic) m(h) 31 b(memory) f(allo) s(cations) i(will) f(randomly) f
(fail.) 94 3790 y(`) p Fl(--free-byte) p Fo(') p Fl 28
w(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
3890 a([`) p Fl(FREEBYTE) p Fo(']) 20 b(Sp) s(eci\014es) f(an) i(8-bit)
g(b) m(yte) g(pattern) g(with) f(whic) m(h) g(to) h(pre\014ll) f
(newly-freed) g(memory) -8 b(.) 94 4033 y(`) p Fl(--free-stop) p
Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger) p Fl 7
w(>) p Fo 574 4132 a([`) p Fl(FREESTOP) p Fo(']) 33 b(Sp) s(eci\014es) g
(an) g(allo) s(cation) j(index) d(at) i(whic) m(h) e(to) h(stop) g(the)
g(program) f(when) g(it) h(is) 574 4232 y(b) s(eing) c(freed.) 94
4375 y(`) p Fl(--help) p Fo(') 142 b(Displa) m(ys) 32
b(a) f(quic) m(k-reference) g(option) g(summary) -8 b(.) 94
4518 y(`) p Fl(--large-bound) p Fo(') p Fl 28 w(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 4618 a([`) p
Fl(LARGEBOUND) p Fo(']) 33 b(Sp) s(eci\014es) g(the) i(limit) g(in) f
(b) m(ytes) g(up) g(to) h(whic) m(h) e(memory) i(allo) s(cations) h
(should) 574 4718 y(b) s(e) 30 b(classi\014ed) h(as) g(large) g(allo) s
(cations) i(for) d(pro\014ling) g(purp) s(oses.) 94 4861
y(`) p Fl(--leak-table) p Fo(') 574 4961 y([`) p Fl(LEAKTABLE) p
Fo(']) f(Sp) s(eci\014es) h(that) g(the) h(leak) g(table) g(should) e
(b) s(e) h(automatically) j(used) c(and) g(a) i(leak) 574
5060 y(table) h(summary) d(should) g(b) s(e) h(displa) m(y) m(ed) h(at)
g(the) g(end) e(of) i(program) f(execution.) 94 5203
y(`) p Fl(--limit) p Fo(') p Fl 29 w(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 5303 a([`) p Fl(LIMIT) p Fo(']) k(Sp) s(eci\014es) g
(the) g(limit) h(in) f(b) m(ytes) g(at) h(whic) m(h) f(all) h(memory) f
(allo) s(cations) i(should) d(fail) i(if) 574 5403 y(the) c(total) h
(allo) s(cated) h(memory) d(should) f(increase) i(b) s(ey) m(ond) f
(this.) 94 5546 y(`) p Fl(--list) p Fo(') 142 b([`) p
Fl(LIST) p Fo(']) 28 b(Sp) s(eci\014es) g(that) g(a) g(con) m(text) i
(listing) f(should) e(b) s(e) g(sho) m(wn) h(for) f(an) m(y) i(relev) -5
b(an) m(t) 29 b(source) f(\014les) 574 5645 y(that) j(are) g(asso) s
(ciated) h(with) e(an) m(y) h(w) m(arnings) f(or) g(errors) g(when) f
(they) i(o) s(ccur.) p 90 rotate dyy eop
%%Page: 163 169
163 168 bop Fo 94 -116 a(App) s(endix) 29 b(C:) h(Options) 2792
b(163) 94 365 y(`) p Fl(--log-all) p Fo(') 574 465 y([`) p
Fl(LOGALL) p Fo(']) 23 b(Equiv) -5 b(alen) m(t) 25 b(to) f(the) g(`) p
Fl(--log-allocs) p Fo(',) f(`) p Fl(--log-reallocs) p
Fo(',) e(`) p Fl(--log-frees) p Fo(') h(and) 574 565
y(`) p Fl(--log-memory) p Fo(') 28 b(options) j(sp) s(eci\014ed) e
(together.) 94 714 y(`) p Fl(--log-allocs) p Fo(') 574
814 y([`) p Fl(LOGALLOCS) p Fo(']) e(Sp) s(eci\014es) h(that) g(all) h
(memory) g(allo) s(cations) h(are) e(to) h(b) s(e) f(logged) i(and) d
(sen) m(t) i(to) g(the) 574 913 y(log) j(\014le.) 94
1063 y(`) p Fl(--log-file) p Fo(') p Fl 29 w(<) p Fe(string) p
Fl 8 w(>) p Fo 574 1162 a([`) p Fl(LOGFILE) p Fo(']) 38
b(Sp) s(eci\014es) g(an) g(alternativ) m(e) j(\014le) e(in) f(whic) m
(h) g(to) h(place) h(all) f(diagnostics) h(from) e(the) 574
1262 y(mpatrol) 31 b(library) -8 b(.) 94 1411 y(`) p
Fl(--log-frees) p Fo(') 574 1511 y([`) p Fl(LOGFREES) p
Fo(']) 37 b(Sp) s(eci\014es) f(that) i(all) h(memory) e(deallo) s
(cations) j(are) d(to) i(b) s(e) d(logged) j(and) e(sen) m(t) h(to) 574
1611 y(the) 31 b(log) h(\014le.) 94 1760 y(`) p Fl(--log-memory) p
Fo(') 574 1860 y([`) p Fl(LOGMEMORY) p Fo(']) c(Sp) s(eci\014es) g
(that) i(all) g(memory) e(op) s(erations) i(are) f(to) h(b) s(e) e
(logged) i(and) f(sen) m(t) g(to) h(the) 574 1959 y(log) i(\014le.) 94
2109 y(`) p Fl(--log-reallocs) p Fo(') 574 2208 y([`) p
Fl(LOGREALLOCS) p Fo(']) 25 b(Sp) s(eci\014es) h(that) i(all) f(memory)
g(reallo) s(cations) i(are) e(to) g(b) s(e) g(logged) h(and) e(sen) m
(t) h(to) 574 2308 y(the) k(log) h(\014le.) 94 2457 y(`) p
Fl(--medium-bound) p Fo(') p Fl 27 w(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 2557 a([`) p Fl(MEDIUMBOUND) p Fo(']) c(Sp) s
(eci\014es) h(the) i(limit) f(in) g(b) m(ytes) g(up) f(to) i(whic) m(h)
e(memory) h(allo) s(cations) i(should) 574 2657 y(b) s(e) e
(classi\014ed) h(as) g(medium) e(allo) s(cations) k(for) d(pro\014ling)
g(purp) s(oses.) 94 2806 y(`) p Fl(--no-free) p Fo(') p
Fl 29 w(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo
574 2906 a([`) p Fl(NOFREE) p Fo(']) 36 b(Sp) s(eci\014es) f(that) h(a)
g(n) m(um) m(b) s(er) e(of) i(recen) m(tly-freed) h(memory) f(allo) s
(cations) i(should) d(b) s(e) 574 3005 y(prev) m(en) m(ted) c(from) f
(b) s(eing) g(returned) f(to) j(the) e(free) h(memory) f(p) s(o) s(ol.)
94 3155 y(`) p Fl(--no-protect) p Fo(') 574 3254 y([`) p
Fl(NOPROTECT) p Fo(']) 39 b(Sp) s(eci\014es) h(that) h(the) g(mpatrol) g
(library's) f(in) m(ternal) h(data) g(structures) f(should) 574
3354 y(not) 31 b(b) s(e) f(made) g(read-only) h(after) g(ev) m(ery) g
(memory) f(allo) s(cation,) j(reallo) s(cation) g(or) d(deallo) s
(cation.) 94 3504 y(`) p Fl(--oflow-byte) p Fo(') p Fl
28 w(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
3603 a([`) p Fl(OFLOWBYTE) p Fo(']) h(Sp) s(eci\014es) g(an) h(8-bit) g
(b) m(yte) h(pattern) f(with) f(whic) m(h) h(to) g(\014ll) g(the) g(o) m
(v) m(er\015o) m(w) h(bu\013ers) 574 3703 y(of) e(all) g(memory) g
(allo) s(cations.) 94 3852 y(`) p Fl(--oflow-size) p
Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger) p Fl 7
w(>) p Fo 574 3952 a([`) p Fl(OFLOWSIZE) p Fo(']) h(Sp) s(eci\014es) g
(the) i(size) f(in) g(b) m(ytes) h(to) g(use) e(for) h(all) h(o) m(v) m
(er\015o) m(w) g(bu\013ers,) f(whic) m(h) g(m) m(ust) 574
4051 y(b) s(e) d(a) h(p) s(o) m(w) m(er) f(of) h(t) m(w) m(o.) 94
4201 y(`) p Fl(--oflow-watch) p Fo(') 574 4301 y([`) p
Fl(OFLOWWATCH) p Fo(']) f(Sp) s(eci\014es) i(that) g(w) m(atc) m(h) h
(p) s(oin) m(t) f(areas) g(should) f(b) s(e) g(used) g(for) h(o) m(v) m
(er\015o) m(w) h(bu\013ers) 574 4400 y(rather) e(than) f(\014lling) g
(with) g(the) h(o) m(v) m(er\015o) m(w) h(b) m(yte.) 94
4550 y(`) p Fl(--page-alloc-lower) p Fo(') 574 4649 y([`) p
Fl(PAGEALLOC=LOWER) p Fo(']) 18 b(Sp) s(eci\014es) j(that) h(eac) m(h) g
(individual) e(memory) h(allo) s(cation) j(should) c(o) s(ccup) m(y) 574
4749 y(at) 28 b(least) g(one) f(page) g(of) g(virtual) g(memory) f(and)
g(should) g(b) s(e) g(placed) h(at) h(the) e(lo) m(w) m(est) j(p) s
(oin) m(t) d(within) 574 4848 y(these) 31 b(pages.) 94
4998 y(`) p Fl(--page-alloc-upper) p Fo(') 574 5098 y([`) p
Fl(PAGEALLOC=UPPER) p Fo(']) 18 b(Sp) s(eci\014es) j(that) h(eac) m(h) g
(individual) e(memory) h(allo) s(cation) j(should) c(o) s(ccup) m(y) 574
5197 y(at) 25 b(least) g(one) g(page) f(of) g(virtual) h(memory) f(and)
f(should) g(b) s(e) g(placed) i(at) f(the) g(highest) h(p) s(oin) m(t) e
(within) 574 5297 y(these) 31 b(pages.) 94 5446 y(`) p
Fl(--preserve) p Fo(') 574 5546 y([`) p Fl(PRESERVE) p
Fo(']) f(Sp) s(eci\014es) g(that) h(an) m(y) g(reallo) s(cated) i(or) e
(freed) f(memory) h(allo) s(cations) h(should) e(pre-) 574
5645 y(serv) m(e) i(their) e(original) h(con) m(ten) m(ts.) p
90 rotate dyy eop
%%Page: 164 170
164 169 bop Fo 94 -116 a(164) 3332 b(mpatrol) 94 365
y(`) p Fl(--prof) p Fo(') 142 b([`) p Fl(PROF) p Fo(']) 43
b(Sp) s(eci\014es) g(that) g(all) h(memory) f(allo) s(cations) i(are) f
(to) f(b) s(e) g(pro\014led) f(and) g(sen) m(t) i(to) g(the) 574
465 y(pro\014ling) 30 b(output) g(\014le.) 94 607 y(`) p
Fl(--prof-file) p Fo(') p Fl 28 w(<) p Fe(string) p Fl
8 w(>) p Fo 574 707 a([`) p Fl(PROFFILE) p Fo(']) 40
b(Sp) s(eci\014es) h(an) g(alternativ) m(e) j(\014le) d(in) g(whic) m
(h) g(to) g(place) i(all) f(memory) f(allo) s(cation) 574
806 y(pro\014ling) 30 b(information) h(from) f(the) g(mpatrol) h
(library) -8 b(.) 94 949 y(`) p Fl(--prog-file) p Fo(') p
Fl 28 w(<) p Fe(string) p Fl 8 w(>) p Fo 574 1048 a([`) p
Fl(PROGFILE) p Fo(']) 36 b(Sp) s(eci\014es) g(an) h(alternativ) m(e) i
(\014lename) e(with) f(whic) m(h) g(to) i(lo) s(cate) g(the) f
(executable) 574 1148 y(\014le) 31 b(con) m(taining) h(the) e
(program's) h(sym) m(b) s(ols.) 94 1290 y(`) p Fl(--read-env) p
Fo(') 574 1390 y(Reads) h(and) f(passes) g(through) g(the) h(con) m
(ten) m(ts) h(of) e(the) p Fl 32 w(MPATROL_OPTIONS) p
Fo 27 w(en) m(vironmen) m(t) h(v) -5 b(ari-) 574 1490
y(able.) 41 b(Suc) m(h) 27 b(con) m(ten) m(ts) j(will) e(b) s(e) f
(placed) h(b) s(efore) f(an) m(y) i(of) f(the) g(options) g(resulting) g
(from) p Fl 27 w(mpatrol) p Fo 574 1589 a(command) 37
b(line) g(options) g(so) g(that) g(they) g(can) g(b) s(e) f(o) m(v) m
(erridden) g(and) g(will) h(only) g(b) s(e) f(parsed) g(b) m(y) 574
1689 y(the) 31 b(mpatrol) g(library) -8 b(,) p Fi 30
w(not) p Fo 40 w(the) p Fl 31 w(mpatrol) p Fo 28 w(command.) 94
1831 y(`) p Fl(--realloc-stop) p Fo(') p Fl 27 w(<) p
Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574 1931 a([`) p
Fl(REALLOCSTOP) p Fo(']) 29 b(Sp) s(eci\014es) h(an) h(allo) s(cation) i
(index) e(at) g(whic) m(h) g(to) g(stop) g(the) g(program) g(when) f(a)
574 2030 y(memory) h(allo) s(cation) h(is) f(b) s(eing) f(reallo) s
(cated.) 94 2173 y(`) p Fl(--safe-signals) p Fo(') 574
2272 y([`) p Fl(SAFESIGNALS) p Fo(']) 41 b(Instructs) h(the) g(library)
g(to) i(sa) m(v) m(e) g(and) e(replace) h(certain) h(signal) f
(handlers) 574 2372 y(during) 30 b(the) g(execution) i(of) e(library) g
(co) s(de) h(and) f(to) h(restore) g(them) f(afterw) m(ards.) 94
2514 y(`) p Fl(--show-all) p Fo(') 574 2614 y([`) p Fl(SHOWALL) p
Fo(']) 39 b(Equiv) -5 b(alen) m(t) 40 b(to) h(the) e(`) p
Fl(--show-free) p Fo(',) h(`) p Fl(--show-freed) p Fo(',) f(`) p
Fl(--show-unfreed) p Fo(',) 574 2714 y(`) p Fl(--show-map) p
Fo(') 29 b(and) g(`) p Fl(--show-symbols) p Fo(') e(options) k(sp) s
(eci\014ed) f(together.) 94 2856 y(`) p Fl(--show-env) p
Fo(') 574 2956 y(Displa) m(ys) 35 b(the) f(con) m(ten) m(ts) i(of) e
(the) p Fl 34 w(MPATROL_OPTIONS) p Fo 30 w(en) m(vironmen) m(t) g(v) -5
b(ariable.) 52 b(This) 33 b(will) i(b) s(e) 574 3055
y(sho) m(wn) 40 b(after) h(all) g(of) g(the) g(other) f(command) g
(line) h(options) g(ha) m(v) m(e) g(b) s(een) f(pro) s(cessed) g(and) g
(will) 574 3155 y(prev) m(en) m(t) 32 b(the) e(sp) s(eci\014ed) g
(command) g(from) g(b) s(eing) g(run.) 94 3297 y(`) p
Fl(--show-free) p Fo(') 574 3397 y([`) p Fl(SHOWFREE) p
Fo(']) 36 b(Sp) s(eci\014es) f(that) i(a) g(summary) e(of) h(all) h(of)
g(the) f(free) h(memory) f(blo) s(c) m(ks) g(should) g(b) s(e) 574
3496 y(displa) m(y) m(ed) 31 b(at) h(the) e(end) g(of) g(program) h
(execution.) 94 3639 y(`) p Fl(--show-freed) p Fo(') 574
3738 y([`) p Fl(SHOWFREED) p Fo(']) 23 b(Sp) s(eci\014es) h(that) g(a) h
(summary) e(of) h(all) h(of) f(the) h(freed) f(memory) g(allo) s
(cations) i(should) 574 3838 y(b) s(e) k(displa) m(y) m(ed) h(at) g
(the) g(end) f(of) g(program) g(execution.) 94 3980 y(`) p
Fl(--show-map) p Fo(') 574 4080 y([`) p Fl(SHOWMAP) p
Fo(']) h(Sp) s(eci\014es) g(that) i(a) f(memory) g(map) f(of) h(the) g
(en) m(tire) h(heap) f(should) f(b) s(e) g(displa) m(y) m(ed) h(at) 574
4180 y(the) f(end) f(of) g(program) g(execution.) 94
4322 y(`) p Fl(--show-symbols) p Fo(') 574 4422 y([`) p
Fl(SHOWSYMBOLS) p Fo(']) h(Sp) s(eci\014es) h(that) h(a) g(summary) f
(of) g(all) i(of) f(the) f(function) h(sym) m(b) s(ols) f(read) g(from)
574 4521 y(the) f(program's) f(executable) i(\014le) f(should) e(b) s
(e) h(displa) m(y) m(ed) h(at) g(the) g(end) e(of) i(program) f
(execution.) 94 4663 y(`) p Fl(--show-unfreed) p Fo(') 574
4763 y([`) p Fl(SHOWUNFREED) p Fo(']) g(Sp) s(eci\014es) i(that) g(a) g
(summary) f(of) h(all) h(of) f(the) g(unfreed) f(memory) h(allo) s
(cations) 574 4863 y(should) e(b) s(e) g(displa) m(y) m(ed) h(at) g
(the) f(end) g(of) h(program) f(execution.) 94 5005 y(`) p
Fl(--small-bound) p Fo(') p Fl 28 w(<) p Fe(unsigned-in) m(teger) p
Fl 7 w(>) p Fo 574 5105 a([`) p Fl(SMALLBOUND) p Fo(']) j(Sp) s
(eci\014es) g(the) i(limit) g(in) f(b) m(ytes) g(up) g(to) h(whic) m(h)
e(memory) i(allo) s(cations) h(should) 574 5204 y(b) s(e) 30
b(classi\014ed) h(as) g(small) g(allo) s(cations) h(for) e(pro\014ling)
g(purp) s(oses.) 94 5347 y(`) p Fl(--threads) p Fo(') 574
5446 y(Sp) s(eci\014es) j(that) h(the) g(program) f(to) h(b) s(e) f
(run) f(is) h(m) m(ultithreaded) h(if) f(the) h(`) p
Fl(--dynamic) p Fo(') d(option) j(is) 574 5546 y(used.) 64
b(This) 38 b(option) h(is) f(required) f(if) i(the) f(m) m
(ultithreaded) h(v) m(ersion) g(of) f(the) h(mpatrol) f(library) 574
5645 y(should) 30 b(b) s(e) g(preloaded) g(instead) h(of) f(the) h
(normal) f(v) m(ersion.) p 90 rotate dyy eop
%%Page: 165 171
165 170 bop Fo 94 -116 a(App) s(endix) 29 b(C:) h(Options) 2792
b(165) 94 365 y(`) p Fl(--trace) p Fo(') 94 b([`) p Fl(TRACE) p
Fo(']) 43 b(Sp) s(eci\014es) g(that) h(all) g(memory) f(allo) s
(cations) i(are) f(to) g(b) s(e) e(traced) i(and) f(sen) m(t) h(to) g
(the) 574 465 y(tracing) 32 b(output) e(\014le.) 94 614
y(`) p Fl(--trace-file) p Fo(') p Fl 28 w(<) p Fe(string) p
Fl 8 w(>) p Fo 574 714 a([`) p Fl(TRACEFILE) p Fo(']) 36
b(Sp) s(eci\014es) g(an) h(alternativ) m(e) i(\014le) e(in) f(whic) m
(h) h(to) g(place) h(all) g(memory) f(allo) s(cation) 574
814 y(tracing) 32 b(information) f(from) e(the) i(mpatrol) g(library) -8
b(.) 94 963 y(`) p Fl(--unfreed-abort) p Fo(') p Fl 27
w(<) p Fe(unsigned-in) m(teger) p Fl 7 w(>) p Fo 574
1063 a([`) p Fl(UNFREEDABORT) p Fo(']) 29 b(Sp) s(eci\014es) g(the) i
(minim) m(um) f(n) m(um) m(b) s(er) f(of) h(unfreed) f(allo) s(cations)
k(at) e(whic) m(h) f(to) 574 1162 y(ab) s(ort) h(the) f(program) g
(just) g(b) s(efore) g(program) g(termination.) 94 1312
y(`) p Fl(--use-debug) p Fo(') 574 1411 y([`) p Fl(USEDEBUG) p
Fo(']) h(Sp) s(eci\014es) f(that) i(an) m(y) g(debugging) f
(information) h(in) f(the) h(executable) g(\014le) g(should) 574
1511 y(b) s(e) e(used) g(to) h(obtain) g(additional) g(source-lev) m
(el) i(information.) 94 1660 y(`) p Fl(--use-mmap) p
Fo(') 574 1760 y([`) p Fl(USEMMAP) p Fo(']) 22 b(Sp) s(eci\014es) g
(that) h(the) g(library) f(should) f(use) p Fl 22 w(mmap\(\)) p
Fo 21 w(instead) i(of) p Fl 22 w(sbrk\(\)) p Fo 21 w(to) g(allo) s
(cate) 574 1860 y(user) 30 b(memory) -8 b(.) 94 2009
y(`) p Fl(--version) p Fo(') 574 2109 y(Displa) m(ys) 32
b(the) e(v) m(ersion) h(n) m(um) m(b) s(er) e(of) i(the) p
Fl 30 w(mpatrol) p Fo 29 w(command.) p 90 rotate dyy
eop
%%Page: 166 172
166 171 bop Fo 94 -116 a(166) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 167 173
167 172 bop Fo 94 -116 a(App) s(endix) 29 b(D:) i(Diagnostic) i
(messages) 2299 b(167) p Fk 94 365 a(App) t(endix) 53
b(D) 80 b(Diagnostic) 52 b(messages) p Fo 219 581 a(The) 38
b(follo) m(wing) i(table) f(lists) f(the) h(w) m(arnings) f(and) g
(errors) f(that) i(are) g(lik) m(ely) h(to) f(app) s(ear) e(in) h(the) h
(mpatrol) 94 680 y(log) 32 b(\014le) e(when) f(problems) h(with) g
(dynamic) g(memory) g(allo) s(cations) j(and) c(memory) h(op) s
(erations) h(o) s(ccur.) 40 b(Other) 94 780 y(t) m(yp) s(es) 28
b(of) h(w) m(arnings) e(and) h(errors) f(ma) m(y) i(also) f(app) s(ear)
g(in) f(the) i(log) g(\014le,) f(but) g(they) g(are) g(lik) m(ely) h
(to) g(b) s(e) e(asso) s(ciated) 94 880 y(with) c(parsing) e(options) i
(and) f(reading) g(sym) m(b) s(ols) g(from) g(executable) i(\014les) e
(and) g(so) h(should) e(b) s(e) h(self-explanatory) -8
b(.) 219 1002 y(In) 32 b(all) h(cases,) h(if) f(a) g(w) m(arning) f(or)
g(error) g(is) h(caused) g(b) m(y) f(one) h(of) f(the) h(memory) f
(access) i(c) m(hec) m(king) g(functions) 94 1102 y(\(in) m(v) m(ok) m
(ed) 40 b(through) e(the) g(use) f(of) h(the) h(`) p
Fl(-fcheck-memory-usage) p Fo(') 33 b(option) 38 b(to) h(the) f(GNU) g
(compiler\)) h(then) 94 1202 y(execution) 32 b(will) f(halt) g
(regardless,) g(despite) f(what) g(the) h(description) f(of) h(the) g
(diagnostic) g(message) h(sa) m(ys.) 219 1324 y(If) 22
b(a) h(w) m(arning) f(or) h(error) f(o) s(ccurs) g(due) g(to) h(a) g
(direct) g(call) h(to) g(an) e(mpatrol) h(library) f(function) g(then) g
(an) h(attempt) 94 1424 y(will) 34 b(b) s(e) f(made) g(to) h(pro) m
(vide) g(a) g(log) g(en) m(try) g(for) f(the) g(call.) 51
b(If) 33 b(the) h(diagnostic) g(w) m(as) g(not) g(caused) f(b) m(y) g
(a) h(normal) 94 1524 y(memory) d(allo) s(cation,) i(reallo) s(cation) f
(or) f(deallo) s(cation) h(function) f(then) f(the) g(log) i(en) m(try)
e(will) h(b) s(e) f(preceded) g(b) m(y) 94 1623 y(`) p
Fl(LOG:) p Fo('.) 44 b(The) 31 b(function) g(t) m(yp) s(e) h(will) g(b)
s(e) f(listed) h(as) f(`) p Fl(check) p Fo(') g(if) h(it) g(do) s(es) f
(not) h(fall) g(in) m(to) g(the) g(normal) f(categories) 94
1723 y(or) g(if) f(not) h(enough) f(information) h(is) f(a) m(v) -5
b(ailable.) 219 1846 y(Note) 34 b(that) f(on) g(UNIX) g(platforms,) g
(if) g(the) g(diagnostic) h(message) g(is) f(caused) f(b) m(y) h(a) g
(line) g(in) f(the) h(program) 94 1945 y(source) k(then) f(the) g(`) p
Fl(EDIT) p Fo(') f(and) h(`) p Fl(LIST) p Fo(') f(options) i(can) f(b) s
(e) f(used) h(to) g(illustrate) i(more) e(clearly) h(where) f(in) g
(the) 94 2045 y(source) 31 b(co) s(de) g(the) f(w) m(arning) g(or) h
(error) f(o) s(ccurred.) p Fm 169 2168 a(\017) p Fo 60
w(`) p Fl(ALLOVF) p Fo(') 274 2314 y(Message) 155 b(`) p
Fl(allocation) 28 b(\0451) i(has) g(a) g(corrupted) d(overflow) i
(buffer) f(at) i(\0452) p Fo(') 274 2460 y(T) m(yp) s(e) 275
b(Error) 274 2606 y(`) p Fl(\0451) p Fo(') 334 b(The) 30
b(p) s(oin) m(ter) h(to) g(the) f(memory) h(allo) s(cation) h(that) f
(has) f(a) h(corrupted) f(o) m(v) m(er\015o) m(w) i(bu\013er.) 274
2752 y(`) p Fl(\0452) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) g(to) h
(the) g(\014rst) e(b) m(yte) i(of) g(corruption) e(in) h(the) h(memory)
f(allo) s(cation's) j(o) m(v) m(er\015o) m(w) 754 2851
y(bu\013er.) 274 2997 y(Cause) 242 b(Something) 22 b(has) f(corrupted) f
(the) h(o) m(v) m(er\015o) m(w) i(bu\013er) d(of) i(a) f(memory) g
(allo) s(cation) j(and) c(this) h(has) 754 3097 y(b) s(een) g(caugh) m
(t) i(at) f(the) g(next) g(in) m(v) m(o) s(cation) h(of) f(an) g
(mpatrol) f(function) h(when) e(the) i(`) p Fl(OFLOWSIZE) p
Fo(') 754 3197 y(or) 29 b(`) p Fl(PAGEALLOC) p Fo(') d(options) j(w) m
(ere) f(used.) 40 b(This) 27 b(particular) i(error) f(message) h(will) g
(not) f(o) s(ccur) 754 3296 y(if) 44 b(the) g(`) p Fl(OFLOWWATCH) p
Fo(') d(option) k(w) m(as) f(used) e(since) i(all) h(o) m(v) m(er\015o)
m(w) g(bu\013ers) e(will) h(b) s(e) f(write) 754 3396
y(protected.) 274 3542 y(Additional) 754 3641 y(The) 29
b(log) h(\014le) f(en) m(try) -8 b(,) 30 b(the) f(library) f(summary) -8
b(,) 29 b(the) g(con) m(ten) m(ts) h(of) f(the) g(o) m(v) m(er\015o) m
(w) i(bu\013er) d(and) 754 3741 y(information) j(ab) s(out) f(the) h
(original) g(memory) g(allo) s(cation.) 274 3887 y(Result) 226
b(Execution) 32 b(terminates.) p Fm 169 4056 a(\017) p
Fo 60 w(`) p Fl(ALLZER) p Fo(') 274 4202 y(Message) 155
b(`) p Fl(attempt) 29 b(to) h(create) f(an) g(allocation) f(of) i(size)
f(0) p Fo(') 274 4348 y(T) m(yp) s(e) 275 b(W) -8 b(arning) 274
4494 y(Cause) 242 b(A) 32 b(function) g(w) m(as) g(called) h(to) g
(allo) s(cate) h(memory) e(with) g(a) g(size) h(of) f(`) p
Fl(0) p Fo(') g(when) e(either) j(of) f(the) 754 4594
y(`) p Fl(CHECKALL) p Fo(') j(or) h(`) p Fl(CHECKALLOCS) p
Fo(') d(options) j(w) m(ere) g(used.) 57 b(This) 35 b(w) m(arning) h
(will) g(not) g(o) s(ccur) 754 4693 y(b) m(y) c(default) f(as) h(the) f
(ANSI) g(C/C) p Fl(++) p Fo 31 w(standards) f(allo) m(w) j(this) f(b) s
(eha) m(viour,) f(and) g(it) h(is) f(really) 754 4793
y(only) g(a) g(p) s(ortabilit) m(y) g(issue.) 274 4939
y(Additional) 754 5038 y(The) f(log) i(\014le) e(en) m(try) -8
b(.) 274 5184 y(Result) 226 b(The) 30 b(size) i(is) e(increased) h(to) g
(1) g(b) m(yte) g(and) e(execution) j(con) m(tin) m(ues.) p
Fm 169 5354 a(\017) p Fo 60 w(`) p Fl(BADALN) p Fo(') 274
5500 y(Message) 155 b(`) p Fl(alignment) 29 b(\0451) g(is) h(not) g(a) g
(power) f(of) g(two) p Fo(') 274 5645 y(T) m(yp) s(e) 275
b(W) -8 b(arning) p 90 rotate dyy eop
%%Page: 168 174
168 173 bop Fo 94 -116 a(168) 3332 b(mpatrol) 274 365
y(`) p Fl(\0451) p Fo(') 334 b(The) 30 b(alignmen) m(t) i(in) e(b) m
(ytes.) 274 514 y(Cause) 242 b(The) p Fl 42 w(memalign\(\)) p
Fo 39 w(function) 41 b(w) m(as) h(called) h(to) g(allo) s(cate) h
(memory) e(with) f(an) h(alignmen) m(t) 754 613 y(whic) m(h) 31
b(w) m(as) g(not) f(a) h(p) s(o) m(w) m(er) g(of) g(t) m(w) m(o) g
(when) f(either) h(of) g(the) f(`) p Fl(CHECKALL) p Fo(') f(or) i(`) p
Fl(CHECKALLOCS) p Fo(') 754 713 y(options) g(w) m(ere) g(used.) 274
861 y(Additional) 754 961 y(The) f(log) i(\014le) e(en) m(try) -8
b(.) 274 1109 y(Result) 226 b(The) 35 b(alignmen) m(t) i(is) e(rounded)
e(up) i(to) g(the) h(nearest) f(p) s(o) m(w) m(er) h(of) f(t) m(w) m(o)
h(and) f(execution) h(con-) 754 1209 y(tin) m(ues.) p
Fm 169 1382 a(\017) p Fo 60 w(`) p Fl(FRDCOR) p Fo(') 274
1530 y(Message) 155 b(`) p Fl(freed) 30 b(allocation) d(\0451) j(has) f
(memory) g(corruption) f(at) h(\0452) p Fo(') 274 1679
y(T) m(yp) s(e) 275 b(Error) 274 1827 y(`) p Fl(\0451) p
Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g(the) f(freed) g(memory) h
(allo) s(cation) h(that) f(has) f(b) s(een) g(corrupted.) 274
1976 y(`) p Fl(\0452) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g
(the) f(\014rst) g(b) m(yte) h(of) g(corruption) f(in) g(the) g(freed) g
(memory) g(allo) s(cation.) 274 2124 y(Cause) 242 b(Something) 31
b(has) f(corrupted) g(the) h(con) m(ten) m(ts) h(of) e(a) h(previously)
f(freed) g(memory) h(allo) s(cation) 754 2224 y(and) j(this) f(has) h
(b) s(een) f(caugh) m(t) i(at) g(the) f(next) g(in) m(v) m(o) s(cation)
i(of) e(an) f(mpatrol) h(function) g(when) 754 2323 y(the) i(`) p
Fl(NOFREE) p Fo(') d(option) j(w) m(as) f(used.) 54 b(This) 34
b(particular) h(error) g(message) h(will) f(not) g(o) s(ccur) g(if) 754
2423 y(the) 24 b(`) p Fl(PAGEALLOC) p Fo(') d(option) i(w) m(as) h
(used) e(since) h(all) h(freed) f(memory) g(allo) s(cations) i(will) e
(b) s(e) g(write) 754 2523 y(protected) 36 b(and) f(will) g(also) h
(not) g(o) s(ccur) f(if) g(the) g(`) p Fl(PRESERVE) p
Fo(') e(option) j(w) m(as) f(used) f(since) i(the) 754
2622 y(free) 31 b(b) m(yte) g(cannot) g(b) s(e) f(used) f(to) i(v) m
(erify) g(the) g(freed) f(allo) s(cation's) j(con) m(ten) m(ts.) 274
2771 y(Additional) 754 2870 y(The) 27 b(log) h(\014le) f(en) m(try) -8
b(,) 28 b(the) f(library) g(summary) -8 b(,) 27 b(the) g(con) m(ten) m
(ts) h(of) f(the) g(freed) g(memory) f(blo) s(c) m(k) 754
2970 y(and) k(information) h(ab) s(out) f(the) h(original) g(memory) f
(allo) s(cation.) 274 3118 y(Result) 226 b(Execution) 32
b(terminates.) p Fm 169 3291 a(\017) p Fo 60 w(`) p Fl(FRDOPN) p
Fo(') 274 3439 y(Message) 155 b(`) p Fl(attempt) 29 b(to) h(perform) e
(operation) g(on) i(freed) f(memory) p Fo(') 274 3588
y(T) m(yp) s(e) 275 b(Error) 274 3736 y(Cause) 242 b(A) 27
b(memory) f(op) s(eration) h(function) f(w) m(as) h(called) h(to) f(op)
s(erate) g(on) g(a) g(previously) f(freed) g(mem-) 754
3836 y(ory) 31 b(allo) s(cation) i(when) c(the) h(`) p
Fl(NOFREE) p Fo(') g(option) g(w) m(as) h(used.) 274
3984 y(Additional) 754 4084 y(The) f(log) i(\014le) e(en) m(try) h(and)
f(information) g(ab) s(out) g(the) h(original) h(memory) e(allo) s
(cation.) 274 4232 y(Result) 226 b(The) 30 b(memory) h(op) s(eration) f
(fails) h(and) f(execution) i(con) m(tin) m(ues.) p Fm
169 4405 a(\017) p Fo 60 w(`) p Fl(FRDOVF) p Fo(') 274
4554 y(Message) 155 b(`) p Fl(freed) 30 b(allocation) d(\0451) j(has) f
(a) i(corrupted) c(overflow) h(buffer) h(at) h(\0452) p
Fo(') 274 4702 y(T) m(yp) s(e) 275 b(Error) 274 4851
y(`) p Fl(\0451) p Fo(') 334 b(The) 22 b(p) s(oin) m(ter) g(to) h(the) f
(freed) g(memory) g(allo) s(cation) i(that) f(has) f(a) g(corrupted) f
(o) m(v) m(er\015o) m(w) j(bu\013er.) 274 4999 y(`) p
Fl(\0452) p Fo(') 334 b(The) 41 b(p) s(oin) m(ter) g(to) h(the) f
(\014rst) f(b) m(yte) i(of) f(corruption) f(in) h(the) g(freed) g
(memory) g(allo) s(cation's) 754 5099 y(o) m(v) m(er\015o) m(w) 32
b(bu\013er.) 274 5247 y(Cause) 242 b(Something) 34 b(has) f(corrupted) f
(the) i(o) m(v) m(er\015o) m(w) g(bu\013er) e(of) i(a) f(previously) g
(freed) g(memory) g(al-) 754 5347 y(lo) s(cation) k(and) e(this) g(has)
g(b) s(een) f(caugh) m(t) j(at) f(the) f(next) g(in) m(v) m(o) s
(cation) j(of) d(an) g(mpatrol) h(func-) 754 5446 y(tion) h(when) e
(the) i(`) p Fl(NOFREE) p Fo(') e(option) h(w) m(as) h(used) e(in) h
(conjunction) h(with) f(the) g(`) p Fl(OFLOWSIZE) p Fo(') 754
5546 y(or) 43 b(`) p Fl(PAGEALLOC) p Fo(') d(options.) 77
b(This) 42 b(particular) g(error) g(message) i(will) f(not) f(o) s
(ccur) g(if) h(the) 754 5645 y(`) p Fl(OFLOWWATCH) p
Fo(') 26 b(option) i(w) m(as) g(used) f(since) h(all) g(o) m(v) m
(er\015o) m(w) h(bu\013ers) e(will) h(b) s(e) f(write) h(protected.) p
90 rotate dyy eop
%%Page: 169 175
169 174 bop Fo 94 -116 a(App) s(endix) 29 b(D:) i(Diagnostic) i
(messages) 2299 b(169) 274 365 y(Additional) 754 465
y(The) 29 b(log) h(\014le) f(en) m(try) -8 b(,) 30 b(the) f(library) f
(summary) -8 b(,) 29 b(the) g(con) m(ten) m(ts) h(of) f(the) g(o) m(v) m
(er\015o) m(w) i(bu\013er) d(and) 754 565 y(information) j(ab) s(out) f
(the) h(original) g(memory) g(allo) s(cation.) 274 716
y(Result) 226 b(Execution) 32 b(terminates.) p Fm 169
893 a(\017) p Fo 60 w(`) p Fl(FRECOR) p Fo(') 274 1044
y(Message) 155 b(`) p Fl(free) 30 b(memory) f(corruption) e(at) j
(\0451) p Fo(') 274 1196 y(T) m(yp) s(e) 275 b(Error) 274
1347 y(`) p Fl(\0451) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g
(the) f(\014rst) g(b) m(yte) h(of) g(corruption) f(in) g(free) g
(memory) -8 b(.) 274 1498 y(Cause) 242 b(Something) 40
b(has) e(corrupted) h(the) g(con) m(ten) m(ts) i(of) e(the) g(free) g
(memory) g(p) s(o) s(ol) g(and) f(this) h(has) 754 1598
y(b) s(een) i(caugh) m(t) h(at) f(the) g(next) g(in) m(v) m(o) s
(cation) i(of) e(an) g(mpatrol) g(function.) 72 b(This) 40
b(particular) 754 1697 y(error) 35 b(message) h(will) g(not) f(o) s
(ccur) g(if) f(the) i(`) p Fl(PAGEALLOC) p Fo(') d(option) i(w) m(as) g
(used) g(since) g(all) h(free) 754 1797 y(memory) 31
b(will) f(b) s(e) g(write) h(protected.) 274 1948 y(Additional) 754
2048 y(The) 37 b(log) h(\014le) f(en) m(try) -8 b(,) 39
b(the) f(library) e(summary) g(and) g(the) h(con) m(ten) m(ts) i(of) e
(the) g(free) g(memory) 754 2148 y(blo) s(c) m(k.) 274
2299 y(Result) 226 b(Execution) 32 b(terminates.) p Fm
169 2476 a(\017) p Fo 60 w(`) p Fl(FREMRK) p Fo(') 274
2627 y(Message) 155 b(`) p Fl(attempt) 29 b(to) h(free) f(marked) g
(allocation) e(\0451) p Fo(') 274 2778 y(T) m(yp) s(e) 275
b(Error) 274 2930 y(`) p Fl(\0451) p Fo(') 334 b(The) 30
b(p) s(oin) m(ter) h(to) g(the) f(memory) h(allo) s(cation) h(that) f
(has) f(b) s(een) g(requested) g(to) i(b) s(e) d(freed.) 274
3081 y(Cause) 242 b(An) 27 b(attempt) i(w) m(as) f(made) f(to) h(free) g
(a) g(mark) m(ed) f(memory) g(allo) s(cation.) 42 b(This) 27
b(is) g(not) h(allo) m(w) m(ed) 754 3181 y(since) 36
b(an) m(y) f(memory) g(allo) s(cations) j(that) d(ha) m(v) m(e) i(b) s
(een) d(mark) m(ed) h(indicate) h(to) g(the) g(mpatrol) 754
3280 y(library) 30 b(that) h(they) g(should) e(remain) i(allo) s(cated)
h(for) e(the) h(duration) f(of) g(the) h(program.) 274
3432 y(Additional) 754 3531 y(The) f(log) i(\014le) e(en) m(try) h(and)
f(information) g(ab) s(out) g(the) h(original) h(memory) e(allo) s
(cation.) 274 3682 y(Result) 226 b(No) 31 b(memory) g(allo) s(cation) h
(will) f(b) s(e) f(freed) g(and) g(execution) h(con) m(tin) m(ues.) p
Fm 169 3860 a(\017) p Fo 60 w(`) p Fl(FRENUL) p Fo(') 274
4011 y(Message) 155 b(`) p Fl(attempt) 29 b(to) h(free) f(a) h(NULL) f
(pointer) p Fo(') 274 4162 y(T) m(yp) s(e) 275 b(W) -8
b(arning) 274 4313 y(Cause) 242 b(A) 35 b(function) e(w) m(as) i
(called) g(to) g(free) f(an) g(existing) h(memory) e(allo) s(cation) k
(with) c(a) i(p) s(oin) m(ter) f(of) 754 4413 y(`) p
Fl(NULL) p Fo(') d(when) f(either) i(of) g(the) f(`) p
Fl(CHECKALL) p Fo(') f(or) h(`) p Fl(CHECKFREES) p Fo(') e(options) i
(w) m(ere) h(used.) 43 b(This) 754 4513 y(w) m(arning) g(will) g(not) f
(o) s(ccur) h(b) m(y) f(default) h(as) f(the) h(ANSI) f(C/C) p
Fl(++) p Fo 42 w(standards) f(allo) m(w) j(this) 754
4612 y(b) s(eha) m(viour,) 31 b(and) e(it) i(is) g(really) g(only) g(a)
f(p) s(ortabilit) m(y) i(issue.) 274 4764 y(Additional) 754
4863 y(The) e(log) i(\014le) e(en) m(try) -8 b(.) 274
5015 y(Result) 226 b(No) 31 b(memory) g(allo) s(cation) h(will) f(b) s
(e) f(freed) g(and) g(execution) h(con) m(tin) m(ues.) p
Fm 169 5192 a(\017) p Fo 60 w(`) p Fl(FREOPN) p Fo(') 274
5343 y(Message) 155 b(`) p Fl(attempt) 29 b(to) h(perform) e(operation)
g(on) i(free) f(memory) p Fo(') 274 5494 y(T) m(yp) s(e) 275
b(Error) 274 5645 y(Cause) 242 b(A) 31 b(memory) f(op) s(eration) h
(function) f(w) m(as) h(called) g(to) h(op) s(erate) f(on) f(free) g
(memory) -8 b(.) p 90 rotate dyy eop
%%Page: 170 176
170 175 bop Fo 94 -116 a(170) 3332 b(mpatrol) 274 365
y(Additional) 754 465 y(The) 30 b(log) i(\014le) e(en) m(try) -8
b(.) 274 615 y(Result) 226 b(The) 30 b(memory) h(op) s(eration) f
(fails) h(and) f(execution) i(con) m(tin) m(ues.) p Fm
169 789 a(\017) p Fo 60 w(`) p Fl(ILLMEM) p Fo(') 274
939 y(Message) 155 b(`) p Fl(illegal) 29 b(memory) g(access) f(at) i
(address) f(\0451) p Fo(') 274 1089 y(T) m(yp) s(e) 275
b(Error) 274 1239 y(`) p Fl(\0451) p Fo(') 334 b(The) 30
b(address) g(at) h(whic) m(h) f(the) h(illegal) h(memory) f(access) g
(o) s(ccurred.) 274 1388 y(Cause) 242 b(An) 36 b(attempt) h(w) m(as) f
(made) g(to) g(read) g(from) f(or) h(write) f(to) i(an) f(illegal) h
(address) e(on) h(systems) 754 1488 y(whic) m(h) 29 b(ha) m(v) m(e) g
(virtual) g(memory) -8 b(.) 41 b(This) 27 b(address) h(ma) m(y) h(or) f
(ma) m(y) h(not) g(exist) g(in) f(the) h(heap,) g(or) 754
1588 y(it) f(ma) m(y) g(b) s(e) f(a) h(p) s(erfectly) g(v) -5
b(alid) 27 b(address) g(that) h(w) m(as) g(misaligned) g(and) f(caused)
g(a) h(bus) e(error.) 754 1687 y(In) 35 b(either) h(case,) i(the) e
(mpatrol) g(library) f(will) h(attempt) g(to) h(asso) s(ciate) g(the) f
(address) e(with) 754 1787 y(an) d(existing) h(memory) f(allo) s
(cation.) 44 b(This) 30 b(error) g(ma) m(y) h(also) h(app) s(ear) e
(instead) h(of) g(memory) 754 1886 y(corruption) f(errors) g(if) h(the)
f(`) p Fl(PAGEALLOC) p Fo(') f(or) h(`) p Fl(OFLOWWATCH) p
Fo(') e(options) j(w) m(ere) g(used.) 274 2036 y(Additional) 754
2136 y(The) 44 b(library) g(summary) -8 b(,) 47 b(information) e(ab) s
(out) e(the) i(original) g(memory) f(allo) s(cation) j(\(if) 754
2235 y(p) s(ossible\)) 31 b(and) f(the) g(call) i(stac) m(k) g(of) e
(where) g(the) h(error) f(o) s(ccurred.) 274 2385 y(Result) 226
b(Execution) 32 b(terminates.) p Fm 169 2560 a(\017) p
Fo 60 w(`) p Fl(INCOMP) p Fo(') 274 2710 y(Message) 155
b(`) p Fl(\0451) 31 b(was) e(allocated) f(with) h(\0452) p
Fo(') 274 2859 y(T) m(yp) s(e) 275 b(Error) 274 3009
y(`) p Fl(\0451) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g(the) f
(memory) h(allo) s(cation) h(that) f(is) g(to) g(b) s(e) f(resized) g
(or) h(freed.) 274 3159 y(`) p Fl(\0452) p Fo(') 334
b(The) 30 b(name) h(of) f(the) h(function) f(whic) m(h) g(originally) i
(allo) s(cated) g(the) f(memory) f(allo) s(cation.) 274
3309 y(Cause) 242 b(A) 32 b(function) f(w) m(as) h(called) h(to) g
(resize) f(or) g(free) f(a) h(memory) g(allo) s(cation) i(that) e(w) m
(as) g(allo) s(cated) 754 3408 y(with) h(a) g(function) f(that) h(is) f
(incompatible) i(with) e(the) h(curren) m(t) f(request.) 47
b(F) -8 b(or) 34 b(example,) g(a) 754 3508 y(memory) f(allo) s(cation) h
(whic) m(h) e(w) m(as) h(allo) s(cated) h(with) p Fl
32 w(operator) 28 b(new) p Fo 32 w(b) s(eing) k(resized) g(with) p
Fl 754 3607 a(realloc\(\)) p Fo(.) 274 3757 y(Additional) 754
3857 y(The) e(log) i(\014le) e(en) m(try) h(and) f(information) g(ab) s
(out) g(the) h(original) h(memory) e(allo) s(cation.) 274
4006 y(Result) 226 b(The) 30 b(reallo) s(cation) j(or) d(deallo) s
(cation) j(fails) e(and) f(execution) h(con) m(tin) m(ues.) p
Fm 169 4181 a(\017) p Fo 60 w(`) p Fl(MAXALN) p Fo(') 274
4331 y(Message) 155 b(`) p Fl(alignment) 29 b(\0451) g(is) h(greater) e
(than) i(the) f(system) g(page) g(size) p Fo(') 274 4481
y(T) m(yp) s(e) 275 b(W) -8 b(arning) 274 4630 y(`) p
Fl(\0451) p Fo(') 334 b(The) 30 b(alignmen) m(t) i(in) e(b) m(ytes.) 274
4780 y(Cause) 242 b(The) p Fl 42 w(memalign\(\)) p Fo
39 w(function) 41 b(w) m(as) h(called) h(to) g(allo) s(cate) h(memory) e
(with) f(an) h(alignmen) m(t) 754 4880 y(whic) m(h) 32
b(w) m(as) h(greater) g(than) f(the) g(system) h(page) f(size) h(when) e
(either) i(of) f(the) h(`) p Fl(CHECKALL) p Fo(') d(or) 754
4979 y(`) p Fl(CHECKALLOCS) p Fo(') i(options) i(w) m(ere) g(used.) 50
b(The) 33 b(mpatrol) h(library) f(cannot) h(curren) m(tly) g(align) 754
5079 y(memory) j(allo) s(cations) h(to) f(a) g(b) m(yte) g(alignmen) m
(t) g(o) m(v) m(er) h(this) e(limit,) j(but) c(then) h(neither) h(can)
754 5179 y(most) 31 b(other) g(implemen) m(tations.) 274
5328 y(Additional) 754 5428 y(The) f(log) i(\014le) e(en) m(try) -8
b(.) 274 5578 y(Result) 226 b(The) 30 b(alignmen) m(t) i(is) e(set) h
(to) h(the) e(system) h(page) g(size) g(and) f(execution) h(con) m(tin)
m(ues.) p 90 rotate dyy eop
%%Page: 171 177
171 176 bop Fo 94 -116 a(App) s(endix) 29 b(D:) i(Diagnostic) i
(messages) 2299 b(171) p Fm 169 365 a(\017) p Fo 60 w(`) p
Fl(MISMAT) p Fo(') 274 510 y(Message) 155 b(`) p Fl(\0451) 31
b(does) e(not) g(match) g(allocation) f(of) h(\0452) p
Fo(') 274 655 y(T) m(yp) s(e) 275 b(Error) 274 800 y(`) p
Fl(\0451) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g(the) f
(memory) h(allo) s(cation) h(that) f(is) g(to) g(b) s(e) f(resized) g
(or) h(freed.) 274 944 y(`) p Fl(\0452) p Fo(') 334 b(The) 30
b(p) s(oin) m(ter) h(to) g(the) f(memory) h(allo) s(cation) h(that) f
(the) g(mpatrol) g(library) f(kno) m(ws) g(ab) s(out.) 274
1089 y(Cause) 242 b(A) 39 b(function) f(w) m(as) g(called) i(to) f
(resize) g(or) f(free) g(a) h(memory) f(allo) s(cation) i(that) f(b) s
(egins) f(at) h(a) 754 1189 y(di\013eren) m(t) 31 b(address) f(from) g
(that) h(supplied.) 274 1333 y(Additional) 754 1433 y(The) f(log) i
(\014le) e(en) m(try) h(and) f(information) g(ab) s(out) g(the) h
(original) h(memory) e(allo) s(cation.) 274 1578 y(Result) 226
b(The) 30 b(reallo) s(cation) j(or) d(deallo) s(cation) j(fails) e(and)
f(execution) h(con) m(tin) m(ues.) p Fm 169 1745 a(\017) p
Fo 60 w(`) p Fl(NOTALL) p Fo(') 274 1890 y(Message) 155
b(`) p Fl(\0451) 31 b(has) e(not) g(been) h(allocated) p
Fo(') 274 2035 y(T) m(yp) s(e) 275 b(Error) 274 2179
y(`) p Fl(\0451) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g(the) f
(memory) h(allo) s(cation) h(that) f(is) g(to) g(b) s(e) f(resized) g
(or) h(freed.) 274 2324 y(Cause) 242 b(A) 34 b(function) f(w) m(as) g
(called) h(to) g(resize) g(or) f(free) h(a) f(memory) g(allo) s(cation)
j(that) d(has) g(not) h(b) s(een) 754 2424 y(allo) s(cated.) 46
b(It) 31 b(ma) m(y) h(b) s(e) f(that) h(the) g(memory) f(allo) s
(cation) i(has) e(just) g(b) s(een) g(freed,) g(in) g(whic) m(h) 754
2523 y(case) c(the) f(`) p Fl(NOFREE) p Fo(') f(option) h(should) f(b) s
(e) g(used) h(to) g(pro) m(vide) g(a) g(b) s(etter) g(diagnostic) i
(message.) 274 2668 y(Additional) 754 2768 y(The) i(log) i(\014le) e
(en) m(try) -8 b(.) 274 2912 y(Result) 226 b(The) 30
b(reallo) s(cation) j(or) d(deallo) s(cation) j(fails) e(and) f
(execution) h(con) m(tin) m(ues.) p Fm 169 3080 a(\017) p
Fo 60 w(`) p Fl(NULOPN) p Fo(') 274 3224 y(Message) 155
b(`) p Fl(attempt) 29 b(to) h(perform) e(operation) g(on) i(a) g(NULL) f
(pointer) p Fo(') 274 3369 y(T) m(yp) s(e) 275 b(Error) 274
3514 y(Cause) 242 b(A) 42 b(memory) f(op) s(eration) h(function) f(w) m
(as) h(called) h(to) f(op) s(erate) g(on) f(a) h(`) p
Fl(NULL) p Fo(') f(p) s(oin) m(ter.) 73 b(If) 754 3613
y(the) 36 b(length) f(of) g(the) g(op) s(eration) h(w) m(as) f(zero) h
(then) e(this) h(error) g(will) g(only) g(o) s(ccur) g(when) f(the) 754
3713 y(`) p Fl(CHECKALL) p Fo(') 29 b(or) h(`) p Fl(CHECKMEMORY) p
Fo(') e(options) i(w) m(ere) h(used) e(as) h(the) h(ANSI) f(C/C) p
Fl(++) p Fo 29 w(standards) 754 3813 y(allo) m(w) i(this) f(b) s(eha) m
(viour,) f(and) g(it) h(is) f(really) h(only) g(a) f(p) s(ortabilit) m
(y) i(issue.) 274 3957 y(Additional) 754 4057 y(The) e(log) i(\014le) e
(en) m(try) -8 b(.) 274 4202 y(Result) 226 b(The) 30
b(memory) h(op) s(eration) f(fails) h(and) f(execution) i(con) m(tin) m
(ues.) p Fm 169 4369 a(\017) p Fo 60 w(`) p Fl(OUTMEM) p
Fo(') 274 4514 y(Message) 155 b(`) p Fl(out) 30 b(of) g(memory) p
Fo(') 274 4659 y(T) m(yp) s(e) 275 b(Error) 274 4803
y(Cause) 242 b(The) p Fl 42 w(alloca\(\)) p Fo(,) p Fl
42 w(xmalloc\(\)) p Fo 39 w(or) p Fl 42 w(MP_MALLOC\(\)) p
Fo 39 w(families) 42 b(of) g(functions) g(w) m(ere) g(called) 754
4903 y(to) g(allo) s(cate) i(memory) -8 b(,) 45 b(but) 40
b(no) i(more) f(memory) g(w) m(as) h(a) m(v) -5 b(ailable) 43
b(to) f(allo) s(cate) i(and) d(the) 754 5003 y(lo) m(w-memory) h
(handler,) h(if) e(installed,) j(could) d(not) g(free) g(up) e
(su\016cien) m(t) j(memory) -8 b(.) 72 b(This) 754 5102
y(error) 27 b(can) g(also) h(b) s(e) e(caused) h(b) m(y) g(a) g(call) i
(to) e(the) p Fl 27 w(operator) h(new) p Fo 26 w(or) p
Fl 27 w(operator) g(new[]) p Fo 26 w(C) p Fl(++) p Fo
754 5202 a(op) s(erators) c(\(not) g(the) p Fi 23 w(nothr) -5
b(ow) p Fo 36 w(v) m(ersions\)) 24 b(when) e(they) h(w) m(ould) g
(otherwise) h(return) e(a) i(`) p Fl(NULL) p Fo(') 754
5302 y(p) s(oin) m(ter) 29 b(and) g(the) g(mpatrol) g(library) g(w) m
(as) g(compiled) h(with) e(a) i(C) e(compiler) i(\(whic) m(h) f(means)
754 5401 y(that) i(it) g(cannot) g(thro) m(w) g(a) p
Fl 30 w(std::bad_alloc) p Fo 27 w(exception\).) 274 5546
y(Additional) 754 5645 y(The) f(library) g(summary) -8
b(.) p 90 rotate dyy eop
%%Page: 172 178
172 177 bop Fo 94 -116 a(172) 3332 b(mpatrol) 274 365
y(Result) 226 b(Execution) 32 b(terminates.) p Fm 169
538 a(\017) p Fo 60 w(`) p Fl(PRVFRD) p Fo(') 274 686
y(Message) 155 b(`) p Fl(\0451) 31 b(was) e(freed) g(with) g(\0452) p
Fo(') 274 834 y(T) m(yp) s(e) 275 b(Error) 274 982 y(`) p
Fl(\0451) p Fo(') 334 b(The) 30 b(p) s(oin) m(ter) h(to) g(the) f
(memory) h(allo) s(cation) h(that) f(is) g(to) g(b) s(e) f(resized) g
(or) h(freed.) 274 1130 y(`) p Fl(\0452) p Fo(') 334
b(The) 30 b(name) h(of) f(the) h(function) f(whic) m(h) g(originally) i
(freed) e(the) g(memory) h(allo) s(cation.) 274 1278
y(Cause) 242 b(A) 28 b(function) g(w) m(as) g(called) h(to) f(resize) h
(or) e(free) h(a) g(memory) g(allo) s(cation) i(that) e(had) f
(previously) 754 1377 y(b) s(een) j(freed) g(when) g(the) g(`) p
Fl(NOFREE) p Fo(') f(option) i(w) m(as) g(used.) 274
1525 y(Additional) 754 1625 y(The) f(log) i(\014le) e(en) m(try) h(and)
f(information) g(ab) s(out) g(the) h(original) h(memory) e(allo) s
(cation.) 274 1773 y(Result) 226 b(The) 30 b(reallo) s(cation) j(or) d
(deallo) s(cation) j(fails) e(and) f(execution) h(con) m(tin) m(ues.) p
Fm 169 1945 a(\017) p Fo 60 w(`) p Fl(RNGOVF) p Fo(') 274
2093 y(Message) 155 b(`) p Fl(range) 30 b([\0451,\0452]) e(overflows) g
([\0453,\0454]) p Fo(') 274 2241 y(T) m(yp) s(e) 275
b(W) -8 b(arning/Error) 274 2389 y(`) p Fl(\0451) p Fo(') 334
b(The) 30 b(start) h(address) f(of) g(the) h(memory) f(region.) 274
2538 y(`) p Fl(\0452) p Fo(') 334 b(The) 30 b(end) g(address) g(of) g
(the) h(memory) f(region.) 274 2686 y(`) p Fl(\0453) p
Fo(') 334 b(The) 30 b(start) h(address) f(of) g(the) h(memory) f(allo) s
(cation.) 274 2834 y(`) p Fl(\0454) p Fo(') 334 b(The) 30
b(end) g(address) g(of) g(the) h(memory) f(allo) s(cation.) 274
2982 y(Cause) 242 b(A) 24 b(memory) e(op) s(eration) i(function) e(w) m
(as) i(called) g(to) f(op) s(erate) h(on) f(a) g(range) g(of) g(memory)
g(whic) m(h) 754 3081 y(o) m(v) m(er\015o) m(w) m(ed) 33
b(the) d(b) s(oundaries) f(of) i(a) f(memory) h(allo) s(cation.) 274
3229 y(Additional) 754 3329 y(The) f(log) i(\014le) e(en) m(try) h(and)
f(information) g(ab) s(out) g(the) h(original) h(memory) e(allo) s
(cation.) 274 3477 y(Result) 226 b(The) 37 b(op) s(eration) f(will) h
(b) s(e) f(only) h(b) s(e) f(p) s(erformed) f(\(and) h(will) h(b) s(e) f
(c) m(hanged) h(from) f(an) g(error) 754 3577 y(to) 30
b(a) g(w) m(arning\)) f(if) g(the) g(`) p Fl(ALLOWOFLOW) p
Fo(') e(option) i(w) m(as) h(used,) f(but) f(execution) i(will) g(con) m
(tin) m(ue) 754 3676 y(regardless.) p Fm 169 3849 a(\017) p
Fo 60 w(`) p Fl(RNGOVL) p Fo(') 274 3997 y(Message) 155
b(`) p Fl(range) 30 b([\0451,\0452]) e(overlaps) g([\0453,\0454]) p
Fo(') 274 4145 y(T) m(yp) s(e) 275 b(W) -8 b(arning) 274
4293 y(`) p Fl(\0451) p Fo(') 334 b(The) 30 b(start) h(address) f(of) g
(the) h(source) f(memory) h(region.) 274 4441 y(`) p
Fl(\0452) p Fo(') 334 b(The) 30 b(end) g(address) g(of) g(the) h
(source) f(memory) g(region.) 274 4589 y(`) p Fl(\0453) p
Fo(') 334 b(The) 30 b(start) h(address) f(of) g(the) h(destination) g
(memory) f(region.) 274 4737 y(`) p Fl(\0454) p Fo(') 334
b(The) 30 b(end) g(address) g(of) g(the) h(destination) g(memory) f
(region.) 274 4885 y(Cause) 242 b(The) p Fl 33 w(memcpy\(\)) p
Fo 31 w(or) p Fl 34 w(memccpy\(\)) p Fo 30 w(function) 33
b(w) m(as) h(called) g(to) g(cop) m(y) h(o) m(v) m(erlapping) f(memory)
754 4984 y(regions.) 73 b(This) 40 b(is) g(an) h(error) f(on) h(man) m
(y) g(systems) g(and) f(the) h(ANSI) f(C/C) p Fl(++) p
Fo 40 w(standards) 754 5084 y(sp) s(ecify) 31 b(that) p
Fl 30 w(memmove\(\)) p Fo 28 w(should) f(b) s(e) f(used) h(instead.) 274
5232 y(Additional) 754 5332 y(The) g(log) i(\014le) e(en) m(try) -8
b(.) 274 5480 y(Result) 226 b(The) 31 b(cop) m(y) g(op) s(eration) h
(will) f(still) h(b) s(e) e(p) s(erformed) f(but) h(it) i(will) f(deal)
g(correctly) i(with) d(o) m(v) m(er-) 754 5579 y(lapping) h(memory) f
(regions.) p 90 rotate dyy eop
%%Page: 173 179
173 178 bop Fo 94 -116 a(App) s(endix) 29 b(D:) i(Diagnostic) i
(messages) 2299 b(173) p Fm 169 365 a(\017) p Fo 60 w(`) p
Fl(RSZNUL) p Fo(') 274 515 y(Message) 155 b(`) p Fl(attempt) 29
b(to) h(resize) f(a) h(NULL) f(pointer) p Fo(') 274 664
y(T) m(yp) s(e) 275 b(W) -8 b(arning) 274 814 y(Cause) 242
b(A) 37 b(function) g(w) m(as) g(called) h(to) f(resize) h(an) f
(existing) h(memory) e(allo) s(cation) j(with) e(a) g(p) s(oin) m(ter)
754 913 y(of) 29 b(`) p Fl(NULL) p Fo(') g(when) e(either) j(of) f(the)
g(`) p Fl(CHECKALL) p Fo(') e(or) h(`) p Fl(CHECKREALLOCS) p
Fo(') e(options) j(w) m(ere) g(used.) 754 1013 y(This) c(w) m(arning) h
(will) g(not) f(o) s(ccur) h(b) m(y) f(default) h(as) g(the) g(ANSI) f
(C/C) p Fl(++) p Fo 24 w(standards) g(allo) m(w) i(this) 754
1112 y(b) s(eha) m(viour,) k(and) e(it) i(is) g(really) g(only) g(a) f
(p) s(ortabilit) m(y) i(issue.) 274 1262 y(Additional) 754
1362 y(The) e(log) i(\014le) e(en) m(try) -8 b(.) 274
1511 y(Result) 226 b(A) 31 b(new) f(memory) g(allo) s(cation) j(is) d
(returned) f(and) h(execution) i(con) m(tin) m(ues.) p
Fm 169 1685 a(\017) p Fo 60 w(`) p Fl(RSZZER) p Fo(') 274
1835 y(Message) 155 b(`) p Fl(attempt) 29 b(to) h(resize) f(an) g
(allocation) f(to) i(size) f(0) p Fo(') 274 1984 y(T) m(yp) s(e) 275
b(W) -8 b(arning) 274 2134 y(Cause) 242 b(A) 37 b(function) f(w) m(as) g
(called) i(to) f(resize) g(an) f(existing) h(memory) f(allo) s(cation) j
(to) e(a) f(size) h(of) g(`) p Fl(0) p Fo(') 754 2233
y(when) 42 b(either) g(of) g(the) h(`) p Fl(CHECKALL) p
Fo(') d(or) i(`) p Fl(CHECKREALLOCS) p Fo(') d(options) j(w) m(ere) h
(used.) 75 b(This) 754 2333 y(w) m(arning) 43 b(will) g(not) f(o) s
(ccur) h(b) m(y) f(default) h(as) f(the) h(ANSI) f(C/C) p
Fl(++) p Fo 42 w(standards) f(allo) m(w) j(this) 754
2433 y(b) s(eha) m(viour,) 31 b(and) e(it) i(is) g(really) g(only) g(a)
f(p) s(ortabilit) m(y) i(issue.) 274 2582 y(Additional) 754
2682 y(The) e(log) i(\014le) e(en) m(try) -8 b(.) 274
2831 y(Result) 226 b(The) 30 b(existing) i(memory) e(allo) s(cation) j
(will) d(b) s(e) g(freed) g(and) g(execution) h(con) m(tin) m(ues.) p
Fm 169 3005 a(\017) p Fo 60 w(`) p Fl(STROVF) p Fo(') 274
3155 y(Message) 155 b(`) p Fl(string) 29 b(\0451) h(overflows) e
([\0452,\0453]) p Fo(') 274 3304 y(T) m(yp) s(e) 275
b(Error) 274 3454 y(`) p Fl(\0451) p Fo(') 334 b(The) 30
b(start) h(address) f(of) g(the) h(string.) 274 3603
y(`) p Fl(\0452) p Fo(') 334 b(The) 30 b(start) h(address) f(of) g(the)
h(memory) f(allo) s(cation.) 274 3753 y(`) p Fl(\0453) p
Fo(') 334 b(The) 30 b(end) g(address) g(of) g(the) h(memory) f(allo) s
(cation.) 274 3902 y(Cause) 242 b(A) 26 b(string) g(function) f(w) m
(as) h(called) h(to) f(op) s(erate) g(on) g(a) g(string) f(whic) m(h) h
(o) m(v) m(er\015o) m(w) m(ed) h(the) f(b) s(ound-) 754
4002 y(aries) 31 b(of) g(a) g(memory) f(allo) s(cation.) 274
4151 y(Additional) 754 4251 y(The) g(log) i(\014le) e(en) m(try) h(and)
f(information) g(ab) s(out) g(the) h(original) h(memory) e(allo) s
(cation.) 274 4400 y(Result) 226 b(The) 30 b(op) s(eration) h(will) g
(not) g(b) s(e) e(p) s(erformed) g(and) h(execution) h(con) m(tin) m
(ues.) p Fm 169 4575 a(\017) p Fo 60 w(`) p Fl(ZERALN) p
Fo(') 274 4724 y(Message) 155 b(`) p Fl(alignment) 29
b(0) h(is) f(invalid) p Fo(') 274 4873 y(T) m(yp) s(e) 275
b(W) -8 b(arning) 274 5023 y(Cause) 242 b(The) p Fl 31
w(memalign\(\)) p Fo 29 w(function) 31 b(w) m(as) g(called) i(to) f
(allo) s(cate) i(memory) d(with) g(an) g(alignmen) m(t) i(of) 754
5122 y(`) p Fl(0) p Fo(') e(when) e(either) i(of) g(the) f(`) p
Fl(CHECKALL) p Fo(') f(or) h(`) p Fl(CHECKALLOCS) p Fo(') e(options) j
(w) m(ere) g(used.) 274 5272 y(Additional) 754 5372 y(The) f(log) i
(\014le) e(en) m(try) -8 b(.) 274 5521 y(Result) 226
b(The) 30 b(alignmen) m(t) i(is) e(set) h(to) h(the) e(default) h
(system) f(alignmen) m(t) i(and) e(execution) h(con) m(tin) m(ues.) p
90 rotate dyy eop
%%Page: 174 180
174 179 bop Fo 94 -116 a(174) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 175 181
175 180 bop Fo 94 -116 a(App) s(endix) 29 b(E:) i(Library) e(p) s
(erformance) 2291 b(175) p Fk 94 365 a(App) t(endix) 53
b(E) 81 b(Library) 53 b(p) t(erformance) p Fo 219 589
a(The) 20 b(follo) m(wing) i(times) f(w) m(ere) g(obtained) g(on) f(a) h
(Sun) e(Ultra) i(5) g(with) f(an) g(UltraSP) -8 b(AR) m(C) 22
b(I) s(Ii) e(pro) s(cessor) g(running) 94 689 y(at) 37
b(333MHz) g(and) e(running) f(Solaris) i(7.) 56 b(The) 35
b(test) i(p) s(erformed) d(w) m(as) i(the) f(one) h(in) f(`) p
Fl(tests/pass/test1.c) p Fo(') 94 789 y(and) 24 b(all) h(tests) f(w) m
(ere) h(run) d(on) i(a) h(ligh) m(tly) g(loaded) g(system,) g(but) e(w)
m(ere) i(run) d(sev) m(eral) k(times) e(to) h(obtain) f(an) g(a) m(v) m
(erage) 94 888 y(result.) 44 b(Ob) m(viously) -8 b(,) 33
b(these) e(times) h(can) g(only) g(b) s(e) e(an) i(appro) m(ximation,) h
(but) d(should) h(serv) m(e) h(to) g(illustrate) h(the) 94
988 y(e\013ects) 27 b(on) e(p) s(erformance) g(that) h(eac) m(h) g
(option) g(can) f(ha) m(v) m(e.) 41 b(All) 26 b(times) f(are) h(giv) m
(en) g(in) f(seconds,) i(and) d(the) i(second) 94 1088
y(time) 35 b(on) f(eac) m(h) i(line) e(w) m(as) h(obtained) f(with) g
(the) g(same) h(options) f(plus) g(the) g(`) p Fl(NOPROTECT) p
Fo(') e(option.) 53 b(The) 33 b(tests) 94 1187 y(w) m(ere) 27
b(all) g(run) e(with) h(the) g(default) h(`) p Fl(CHECK=0) p
Fo(') d(option,) k(so) e(running) f(with) h(the) g(`) p
Fl(CHECK=-) p Fo(') f(option) h(w) m(ould) g(slo) m(w) 94
1287 y(things) g(do) m(wn) f(dramatically) -8 b(,) 29
b(alb) s(eit) d(with) g(more) g(c) m(hec) m(king) h(b) s(eing) e(p) s
(erformed) f(to) j(detect) g(heap) e(corruption.) 219
1411 y(Running) k(with) h(basic) h(options:) p Fi 94
1536 a(no) j(options) p Fo 1953 w(0.525) 362 b(0.258) 94
1636 y(`) p Fl(OFLOWSIZE=2) p Fo(') 1790 b(0.569) 362
b(0.265) 94 1735 y(`) p Fl(OFLOWSIZE=8) p Fo(') 1790
b(0.580) 362 b(0.276) 94 1835 y(`) p Fl(PAGEALLOC=LOWER) p
Fo(') 1598 b(0.709) 362 b(0.462) 94 1934 y(`) p Fl(PAGEALLOC=UPPER) p
Fo(') 1598 b(0.742) 362 b(0.485) 219 2059 y(Running) 29
b(when) g(all) j(freed) e(memory) g(allo) s(cations) i(are) f(k) m
(ept:) 94 2183 y(`) p Fl(NOFREE=0xFFFF) p Fo(') 1694
b(0.711) 362 b(0.338) 94 2283 y(`) p Fl(NOFREE=0xFFFF) 27
b(OFLOWSIZE=2) p Fo(') 1139 b(0.725) 362 b(0.350) 94
2383 y(`) p Fl(NOFREE=0xFFFF) 27 b(OFLOWSIZE=8) p Fo(') 1139
b(0.739) 362 b(0.358) 94 2482 y(`) p Fl(NOFREE=0xFFFF) 27
b(PAGEALLOC=LOWER) p Fo(') 947 b(1.048) 362 b(0.710) 94
2582 y(`) p Fl(NOFREE=0xFFFF) 27 b(PAGEALLOC=UPPER) p
Fo(') 947 b(1.079) 362 b(0.722) 219 2707 y(Running) 29
b(when) g(all) j(freed) e(memory) g(allo) s(cations) i(are) f(k) m(ept)
g(and) f(their) g(con) m(ten) m(ts) i(are) f(preserv) m(ed:) 94
2831 y(`) p Fl(NOFREE=0xFFFF) c(PRESERVE) p Fo(') 1283
b(0.725) 362 b(0.341) 94 2931 y(`) p Fl(NOFREE=0xFFFF) 27
b(PRESERVE) i(OFLOWSIZE=2) p Fo(') 726 b(0.735) 362 b(0.357) 94
3030 y(`) p Fl(NOFREE=0xFFFF) 27 b(PRESERVE) i(OFLOWSIZE=8) p
Fo(') 726 b(0.745) 362 b(0.360) 94 3130 y(`) p Fl(NOFREE=0xFFFF) 27
b(PRESERVE) i(PAGEALLOC=LOWER) p Fo(') 534 b(1.055) 362
b(0.722) 94 3230 y(`) p Fl(NOFREE=0xFFFF) 27 b(PRESERVE) i
(PAGEALLOC=UPPER) p Fo(') 534 b(1.081) 362 b(0.729) 219
3354 y(Running) 29 b(using) h(w) m(atc) m(h) h(p) s(oin) m(ts) g(to) g
(c) m(hec) m(k) h(the) e(o) m(v) m(er\015o) m(w) i(bu\013ers:) 94
3479 y(`) p Fl(OFLOWSIZE=2) c(OFLOWWATCH) p Fo(') 1282
b(28.758) 317 b(28.372) 219 3603 y(Running) 29 b(using) h(the) g
(Solaris) h(mallo) s(c) h(libraries:) 94 3728 y(Solaris) f(mallo) s
(c\(3c\)) i(library) 1361 b(0.030) 94 3827 y(Solaris) 31
b(mallo) s(c\(3x\)) i(library) 1353 b(0.033) 94 3927
y(Solaris) 31 b(bsdmallo) s(c\(3x\)) h(library) 1216
b(0.027) 94 4027 y(Solaris) 31 b(mapmallo) s(c\(3x\)) h(library) 1182
b(0.030) 94 4126 y(Solaris) 31 b(w) m(atc) m(hmallo) s(c\(3x\)) j
(library) 1121 b(30.323) p 90 rotate dyy eop
%%Page: 176 182
176 181 bop Fo 94 -116 a(176) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 177 183
177 182 bop Fo 94 -116 a(App) s(endix) 29 b(F:) i(File) h(formats) 2630
b(177) p Fk 94 365 a(App) t(endix) 53 b(F) 81 b(File) 54
b(formats) p Fo 219 579 a(The) 24 b(formats) h(of) g(the) g
(pro\014ling) f(and) g(tracing) i(output) e(\014les) h(that) g(are) g
(pro) s(duced) e(b) m(y) h(the) h(mpatrol) g(library) 94
679 y(are) 31 b(describ) s(ed) f(here) p Fh 816 646 a(1) p
Fo 853 679 a(.) p Fn 94 930 a(F.1) 68 b(Pro\014ling) 45
b(\014le) g(format) p Fo 219 1110 a(Ev) m(ery) 31 b(mpatrol) f
(pro\014ling) g(output) g(\014le) h(con) m(tains) g(the) g(follo) m
(wing) h(comp) s(onen) m(ts.) p Fm 169 1233 a(\017) p
Fo 60 w(4) f(b) m(ytes) g(con) m(taining) h(the) f(c) m(haracters) g(`)
p Fl(M) p Fo(',) g(`) p Fl(P) p Fo(',) g(`) p Fl(T) p
Fo(') g(and) e(`) p Fl(L) p Fo('.) p Fm 169 1355 a(\017) p
Fo 60 w(1) 44 b(unsigned) f(in) m(teger) i(represen) m(ting) f(the) f
(v) -5 b(alue) 45 b(`) p Fl(1) p Fo('.) 80 b(This) 43
b(is) g(used) g(b) m(y) p Fl 44 w(mprof) p Fo 42 w(to) h(determine) g
(the) 274 1455 y(endianness) 39 b(of) g(the) g(pro) s(cessor) f(that) h
(pro) s(duced) f(the) h(pro\014ling) f(output) h(\014le) f(so) i(that) f
(it) g(can) h(decide) 274 1554 y(whether) 30 b(to) h(p) s(erform) e(b) m
(yte-sw) m(apping) i(on) g(the) f(input) g(data.) p Fm
169 1677 a(\017) p Fo 60 w(1) 38 b(unsigned) e(in) m(teger) i(con) m
(taining) h(the) e(v) m(ersion) g(n) m(um) m(b) s(er) f(of) h(the) g
(mpatrol) g(library) g(whic) m(h) g(pro) s(duced) 274
1776 y(the) 31 b(pro\014ling) f(output) g(\014le.) p
Fm 169 1899 a(\017) p Fo 60 w(3) h(unsigned) f(in) m(tegers) h(con) m
(taining) h(the) f(small,) g(medium) e(and) h(large) i(allo) s(cation) g
(b) s(ounds.) p Fm 169 2021 a(\017) p Fo 60 w(1) 24 b(unsigned) d(in) m
(teger) j(con) m(taining) g(the) f(allo) s(cation) i(bin) d(size.) 39
b(If) 22 b(the) h(allo) s(cation) i(bin) d(size) i(is) e(greater) i
(than) 274 2121 y(zero) 35 b(then) e(it) g(is) h(follo) m(w) m(ed) h(b)
m(y) e(the) g(allo) s(cation) j(bins,) d(the) g(large) i(allo) s
(cation) g(totals,) h(the) e(deallo) s(cation) 274 2220
y(bins) e(and) g(the) h(large) h(deallo) s(cation) g(totals,) i(where) c
(the) g(bins) g(are) h(arra) m(ys) g(of) g(unsigned) e(in) m(tegers) j
(with) 274 2320 y(dimensions) c(of) h(the) f(allo) s(cation) j(bin) c
(size) j(and) d(the) i(totals) h(are) f(unsigned) e(in) m(tegers.) p
Fm 169 2442 a(\017) p Fo 60 w(1) e(unsigned) d(in) m(teger) k(con) m
(taining) f(the) f(n) m(um) m(b) s(er) f(of) h(pro\014ling) f(data) i
(structures.) 38 b(If) 26 b(the) g(n) m(um) m(b) s(er) e(of) i(pro-) 274
2542 y(\014ling) h(data) h(structures) f(is) g(greater) h(than) f(zero)
h(then) f(it) g(is) g(follo) m(w) m(ed) i(b) m(y) e(the) g(pro\014ling)
g(data) h(structures) 274 2642 y(themselv) m(es,) k(whic) m(h) e(are) h
(of) g(the) f(follo) m(wing) i(structure.) p Fm 349 2764
a(\017) p Fo 60 w(1) f(unsigned) f(in) m(teger) h(represen) m(ting) g
(the) g(index) e(of) i(this) f(pro\014ling) g(data.) p
Fm 349 2887 a(\017) p Fo 60 w(4) 38 b(unsigned) e(in) m(tegers) i
(represen) m(ting) g(the) f(small,) j(medium,) e(large) g(and) f(extra)
g(large) i(allo) s(cation) 454 2986 y(coun) m(ts) 31
b(for) f(this) h(pro\014ling) f(data.) p Fm 349 3109
a(\017) p Fo 60 w(4) 38 b(unsigned) e(in) m(tegers) i(represen) m(ting)
g(the) f(small,) j(medium,) e(large) g(and) f(extra) g(large) i(allo) s
(cation) 454 3208 y(totals) 33 b(for) d(this) g(pro\014ling) g(data.) p
Fm 349 3331 a(\017) p Fo 60 w(4) g(unsigned) e(in) m(tegers) i
(represen) m(ting) g(the) f(small,) h(medium,) f(large) h(and) f(extra)
h(large) g(deallo) s(cation) 454 3430 y(coun) m(ts) h(for) f(this) h
(pro\014ling) f(data.) p Fm 349 3553 a(\017) p Fo 60
w(4) g(unsigned) e(in) m(tegers) i(represen) m(ting) g(the) f(small,) h
(medium,) f(large) h(and) f(extra) h(large) g(deallo) s(cation) 454
3652 y(totals) j(for) d(this) g(pro\014ling) g(data.) p
Fm 169 3775 a(\017) p Fo 60 w(1) g(unsigned) e(in) m(teger) j(con) m
(taining) g(the) f(n) m(um) m(b) s(er) e(of) h(call) i(sites.) 41
b(If) 29 b(the) g(n) m(um) m(b) s(er) f(of) i(call) g(sites) g(is) g
(greater) 274 3874 y(than) 23 b(zero) h(then) e(it) i(is) e(follo) m(w)
m(ed) j(b) m(y) e(the) g(call) h(sites) f(themselv) m(es,) j(whic) m(h)
d(are) g(of) g(the) g(follo) m(wing) h(structure.) p
Fm 349 3997 a(\017) p Fo 60 w(1) 31 b(unsigned) f(in) m(teger) h
(represen) m(ting) g(the) g(index) e(of) i(this) f(call) i(site.) p
Fm 349 4119 a(\017) p Fo 60 w(1) f(unsigned) f(in) m(teger) h(represen)
m(ting) g(the) g(index) e(of) i(the) g(paren) m(t) f(call) i(site.) p
Fm 349 4242 a(\017) p Fo 60 w(1) f(generic) h(p) s(oin) m(ter) e
(represen) m(ting) h(the) f(co) s(de) h(address) e(of) i(this) f(call) i
(site.) p Fm 349 4364 a(\017) p Fo 60 w(1) f(unsigned) f(in) m(teger) h
(represen) m(ting) g(the) g(index) e(of) i(an) f(asso) s(ciated) i(sym)
m(b) s(ol.) p Fm 349 4487 a(\017) p Fo 60 w(1) f(unsigned) f(in) m
(teger) h(represen) m(ting) g(the) g(o\013set) g(of) f(the) h(sym) m(b)
s(ol) f(name.) p Fm 349 4609 a(\017) p Fo 60 w(1) h(unsigned) f(in) m
(teger) h(represen) m(ting) g(the) g(index) e(of) i(an) m(y) g(asso) s
(ciated) h(pro\014ling) d(data.) p Fm 169 4731 a(\017) p
Fo 60 w(1) 38 b(unsigned) e(in) m(teger) i(con) m(taining) h(the) e(n) m
(um) m(b) s(er) f(of) h(sym) m(b) s(ol) g(addresses.) 60
b(If) 37 b(the) g(n) m(um) m(b) s(er) f(of) h(sym) m(b) s(ol) 274
4831 y(addresses) 27 b(is) f(greater) i(than) f(zero) g(then) f(it) i
(is) e(follo) m(w) m(ed) j(b) m(y) d(the) h(sym) m(b) s(ol) f
(addresses) g(themselv) m(es,) j(whic) m(h) 274 4931
y(are) i(generic) h(p) s(oin) m(ters.) p Fm 169 5053
a(\017) p Fo 60 w(1) f(unsigned) d(in) m(teger) k(con) m(taining) f
(the) f(size) h(of) f(the) g(sym) m(b) s(ol) f(name) h(string) g
(table.) 42 b(This) 29 b(is) h(follo) m(w) m(ed) h(b) m(y) 274
5153 y(the) 26 b(sym) m(b) s(ol) g(name) f(string) h(table,) i(whic) m
(h) d(is) h(an) f(arra) m(y) h(of) g(c) m(haracters) h(con) m(taining) h
(the) d(n) m(ul-terminated) 274 5252 y(sym) m(b) s(ol) 31
b(names.) p Fm 169 5375 a(\017) p Fo 60 w(4) g(b) m(ytes) g(con) m
(taining) h(the) f(c) m(haracters) g(`) p Fl(M) p Fo(',) g(`) p
Fl(P) p Fo(',) g(`) p Fl(T) p Fo(') g(and) e(`) p Fl(L) p
Fo('.) p 94 5462 1200 4 v Fh 143 5522 a(1) p Fg 219 5554
a(The) f(\014le) h(`) p Ff(extra/magic) p Fg(') i(con) n(tains) e(a) f
(UNIX) p Fd 27 w(magic) p Fg 32 w(\014le) g(excerpt) g(for) h
(automatically) h(iden) n(tifying) e(an) g(mpatrol) h(log) h(\014le,)
219 5645 y(an) c(mpatrol) g(pro\014ling) g(output) f(\014le) h(and) f
(an) h(mpatrol) g(tracing) g(output) f(\014le) h(with) g(the) p
Ff 25 w(file) p Fg 26 w(command.) p 90 rotate dyy eop
%%Page: 178 184
178 183 bop Fo 94 -116 a(178) 3332 b(mpatrol) p Fn 94
365 a(F.2) 68 b(T) -11 b(racing) 44 b(\014le) i(format) p
Fo 219 548 a(Ev) m(ery) 31 b(mpatrol) f(tracing) i(output) e(\014le) g
(con) m(tains) i(the) e(follo) m(wing) i(comp) s(onen) m(ts.) p
Fm 169 672 a(\017) p Fo 60 w(4) f(b) m(ytes) g(con) m(taining) h(the) f
(c) m(haracters) g(`) p Fl(M) p Fo(',) g(`) p Fl(T) p
Fo(',) g(`) p Fl(R) p Fo(') g(and) e(`) p Fl(C) p Fo('.) p
Fm 169 797 a(\017) p Fo 60 w(1) 38 b(unsigned) f(in) m(teger) i
(represen) m(ting) f(the) g(v) -5 b(alue) 38 b(`) p Fl(1) p
Fo('.) 62 b(This) 37 b(is) h(used) f(b) m(y) p Fl 37
w(mptrace) p Fo 36 w(to) h(determine) g(the) 274 897
y(endianness) k(of) h(the) f(pro) s(cessor) g(that) i(pro) s(duced) c
(the) j(tracing) g(output) f(\014le) h(so) g(that) g(it) g(can) g
(decide) 274 996 y(whether) 30 b(to) h(p) s(erform) e(b) m(yte-sw) m
(apping) i(on) g(the) f(input) g(data.) p Fm 169 1121
a(\017) p Fo 60 w(1) 38 b(unsigned) e(in) m(teger) i(con) m(taining) h
(the) e(v) m(ersion) g(n) m(um) m(b) s(er) f(of) h(the) g(mpatrol) g
(library) g(whic) m(h) g(pro) s(duced) 274 1220 y(the) 31
b(tracing) g(output) f(\014le.) p Fm 169 1345 a(\017) p
Fo 60 w(One) g(or) h(more) f(of) h(the) f(follo) m(wing) i(ev) m(en) m
(t) g(records.) p Fm 349 1469 a(\017) p Fo 60 w(If) h(the) g(ev) m(en) m
(t) h(is) f(a) g(system) g(heap) g(allo) s(cation) i(for) e(use) f(b) m
(y) h(the) g(mpatrol) g(library's) g(in) m(ternal) g(data) 454
1569 y(structures) c(then) g(the) h(ev) m(en) m(t) g(record) g(will) f
(b) s(egin) g(with) g(the) h(c) m(haracter) g(`) p Fl(I) p
Fo(') g(follo) m(w) m(ed) h(b) m(y) e(the) g(start) 454
1669 y(address) d(and) h(size) h(in) e(b) m(ytes) h(of) h(the) f(heap) f
(allo) s(cation) j(enco) s(ded) e(as) g(unsigned) f(LEB128) i(n) m(um) m
(b) s(ers.) p Fm 349 1793 a(\017) p Fo 60 w(If) 34 b(the) g(ev) m(en) m
(t) i(is) e(a) h(system) f(heap) g(allo) s(cation) i(for) e(use) g(b) m
(y) g(the) g(program's) g(memory) g(allo) s(cations) 454
1893 y(then) j(the) f(ev) m(en) m(t) i(record) f(will) g(b) s(egin) f
(with) g(the) h(c) m(haracter) h(`) p Fl(H) p Fo(') f(follo) m(w) m(ed)
h(b) m(y) e(the) h(start) g(address) 454 1993 y(and) 30
b(size) h(in) g(b) m(ytes) f(of) h(the) g(heap) f(allo) s(cation) i
(enco) s(ded) e(as) h(unsigned) e(LEB128) j(n) m(um) m(b) s(ers.) p
Fm 349 2117 a(\017) p Fo 60 w(If) c(the) h(ev) m(en) m(t) h(is) e(a) g
(memory) h(allo) s(cation) h(then) e(the) h(ev) m(en) m(t) g(record) g
(will) f(b) s(egin) g(with) g(the) g(c) m(haracter) 454
2217 y(`) p Fl(A) p Fo(') 42 b(follo) m(w) m(ed) h(b) m(y) e(the) g
(allo) s(cation) j(index,) f(start) f(address) e(and) h(size) h(in) f
(b) m(ytes) g(of) h(the) f(memory) 454 2316 y(allo) s(cation) e(enco) s
(ded) c(as) h(unsigned) f(LEB128) i(n) m(um) m(b) s(ers.) 56
b(F) -8 b(rom) 36 b(v) m(ersion) g(1.4.5) i(of) e(the) g(mpatrol) 454
2416 y(library) -8 b(,) 27 b(the) f(thread) f(iden) m(ti\014er,) i
(function) e(name,) i(\014le) f(name) f(and) g(line) h(n) m(um) m(b) s
(er) e(are) i(also) h(written) 454 2516 y(out) k(as) g(part) f(of) g
(the) h(ev) m(en) m(t) h(record) e(\(see) i(b) s(elo) m(w\).) p
Fm 349 2640 a(\017) p Fo 60 w(If) 23 b(the) h(ev) m(en) m(t) g(is) g(a)
f(memory) g(reallo) s(cation) j(then) d(the) g(ev) m(en) m(t) i(record)
e(will) g(b) s(egin) g(with) g(the) g(c) m(haracter) 454
2740 y(`) p Fl(R) p Fo(') g(follo) m(w) m(ed) i(b) m(y) d(the) h(allo) s
(cation) i(index,) f(start) g(address) d(and) i(size) g(of) g(the) g
(new) f(memory) h(allo) s(cation) 454 2839 y(enco) s(ded) 36
b(as) h(an) f(unsigned) f(LEB128) j(n) m(um) m(b) s(er.) 57
b(F) -8 b(rom) 37 b(v) m(ersion) g(1.4.5) h(of) f(the) f(mpatrol) h
(library) -8 b(,) 454 2939 y(the) 30 b(thread) e(iden) m(ti\014er,) i
(function) f(name,) g(\014le) g(name) g(and) f(line) i(n) m(um) m(b) s
(er) d(are) j(also) g(written) f(out) g(as) 454 3039
y(part) i(of) f(the) h(ev) m(en) m(t) h(record) e(\(see) h(b) s(elo) m
(w\).) p Fm 349 3163 a(\017) p Fo 60 w(If) 22 b(the) h(ev) m(en) m(t) g
(is) g(a) f(memory) g(deallo) s(cation) j(then) d(the) g(ev) m(en) m(t)
i(record) e(will) g(b) s(egin) g(with) g(the) g(c) m(haracter) 454
3263 y(`) p Fl(F) p Fo(') 33 b(follo) m(w) m(ed) i(b) m(y) d(the) h
(allo) s(cation) i(index) d(of) h(the) g(memory) f(allo) s(cation) j
(enco) s(ded) e(as) f(an) h(unsigned) 454 3362 y(LEB128) 47
b(n) m(um) m(b) s(er.) 85 b(F) -8 b(rom) 46 b(v) m(ersion) g(1.4.5) h
(of) f(the) f(mpatrol) h(library) -8 b(,) 50 b(the) 45
b(thread) h(iden) m(ti\014er,) 454 3462 y(function) 39
b(name,) j(\014le) d(name) h(and) e(line) i(n) m(um) m(b) s(er) e(are) h
(also) h(written) g(out) f(as) h(part) f(of) g(the) g(ev) m(en) m(t) 454
3562 y(record) 31 b(\(see) g(b) s(elo) m(w\).) p Fm 169
3686 a(\017) p Fo 60 w(F) -8 b(rom) 40 b(v) m(ersion) f(1.4.5) i(of) e
(the) g(mpatrol) g(library) -8 b(,) 41 b(ev) m(en) m(t) f(records) f
(con) m(tain) h(the) f(follo) m(wing) h(additional) 274
3786 y(information.) p Fm 349 3910 a(\017) p Fo 60 w(The) 30
b(thread) g(iden) m(ti\014er) h(as) g(an) f(unsigned) f(LEB128) j(n) m
(um) m(b) s(er.) p Fm 349 4035 a(\017) p Fo 60 w(The) h(cac) m(hed) h
(source) f(function) g(name.) 48 b(If) 33 b(the) g(\014rst) f(b) m(yte)
i(is) f(zero) h(then) e(there) i(is) f(no) f(asso) s(ciated) 454
4134 y(function) 41 b(name.) 74 b(If) 41 b(the) g(\014rst) g(b) m(yte) h
(has) f(the) g(most) h(signi\014can) m(t) g(bit) f(set) h(then) f(the) g
(follo) m(wing) 454 4234 y(n) m(ull-terminated) c(string) f(de\014nes) g
(a) g(source) g(function) g(name) g(asso) s(ciated) i(with) d(the) i(n)
m(um) m(b) s(er) d(in) 454 4334 y(the) 29 b(remaining) g(7) h(bits.) 40
b(If) 28 b(the) h(\014rst) f(b) m(yte) h(do) s(es) g(not) g(ha) m(v) m
(e) h(the) f(most) g(signi\014can) m(t) h(bit) f(set) g(then) f(it) 454
4433 y(is) j(tak) m(en) g(to) g(b) s(e) f(the) h(index) f(of) g(a) h
(previously) f(de\014ned) f(source) i(function) f(name.) p
Fm 349 4558 a(\017) p Fo 60 w(The) 36 b(cac) m(hed) i(source) e(\014le)
h(name.) 58 b(If) 36 b(the) h(\014rst) e(b) m(yte) i(is) g(zero) g
(then) f(there) g(is) h(no) f(asso) s(ciated) i(\014le) 454
4658 y(name.) g(If) 22 b(the) g(\014rst) f(b) m(yte) h(has) g(the) g
(most) g(signi\014can) m(t) h(bit) f(set) g(then) g(the) g(follo) m
(wing) h(n) m(ull-terminated) 454 4757 y(string) 28 b(de\014nes) e(a) i
(source) f(\014le) h(name) f(asso) s(ciated) i(with) e(the) g(n) m(um) m
(b) s(er) f(in) h(the) h(remaining) f(7) h(bits.) 39
b(If) 454 4857 y(the) 29 b(\014rst) e(b) m(yte) i(do) s(es) f(not) g
(ha) m(v) m(e) h(the) g(most) f(signi\014can) m(t) h(bit) f(set) h
(then) f(it) g(is) h(tak) m(en) g(to) g(b) s(e) e(the) h(index) 454
4956 y(of) j(a) g(previously) f(de\014ned) f(source) i(\014le) f(name.)
p Fm 349 5081 a(\017) p Fo 60 w(The) g(source) h(line) g(n) m(um) m(b) s
(er) e(as) h(an) h(unsigned) e(LEB128) j(n) m(um) m(b) s(er.) p
Fm 169 5205 a(\017) p Fo 60 w(4) f(b) m(ytes) g(con) m(taining) h(the) f
(c) m(haracters) g(`) p Fl(M) p Fo(',) g(`) p Fl(T) p
Fo(',) g(`) p Fl(R) p Fo(') g(and) e(`) p Fl(C) p Fo('.) p
90 rotate dyy eop
%%Page: 179 185
179 184 bop Fo 94 -116 a(App) s(endix) 29 b(G:) i(Supp) s(orted) d
(systems) 2351 b(179) p Fk 94 365 a(App) t(endix) 53
b(G) 81 b(Supp) t(orted) 51 b(systems) p Fo 219 583 a(F) -8
b(ollo) m(wing) 37 b(is) d(a) h(list) g(of) g(systems) g(on) f(whic) m
(h) g(the) h(mpatrol) g(library) f(has) g(b) s(een) g(built) g(and) g
(tested.) 53 b(The) 94 683 y(system) 22 b(details) g(include) e(the) i
(op) s(erating) f(system) g(and) g(v) m(ersion,) i(the) e(pro) s
(cessor) g(t) m(yp) s(e,) i(the) f(ob) 5 b(ject) 22 b(\014le) f(format)
94 782 y(and) 34 b(the) g(compiler) g(used) g(to) g(compile) h(the) f
(library) g(and) f(tests.) 52 b(The) 34 b(details) h(follo) m(wing) g
(eac) m(h) g(system) f(list) 94 882 y(an) m(y) d(features) g(of) f(the)
h(library) f(that) h(are) g(not) f(\(or) h(cannot) g(b) s(e\)) f(supp) s
(orted) f(on) h(that) h(system.) p Fm 169 1005 a(\017) p
Fo 60 w(AIX) g(4.1,) h(IBM) f(RS/6000,) h(X) m(COFF,) p
Fl 31 w(cc) p Fm 349 1128 a(\017) p Fo 60 w(The) e(thread-safe) h(v) m
(ersion) g(of) g(the) f(library) g(do) s(es) g(not) h(w) m(ork.) p
Fm 349 1251 a(\017) p Fo 60 w(The) f(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 1375
a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f
(no) g(e\013ect.) p Fm 349 1498 a(\017) p Fo 60 w(There) d(is) f(a) h
(problem) f(obtaining) h(the) g(program's) f(executable) j(\014lename) d
(when) g(using) g(the) h(shared) 454 1598 y(library) j(v) m(ersion) h
(of) g(mpatrol.) p Fm 349 1721 a(\017) p Fo 60 w(The) 26
b(shared) f(library) g(v) m(ersion) i(of) f(mpatrol) g(do) s(es) f(not)
i(curren) m(tly) e(o) m(v) m(erride) i(the) f(dynamic) g(memory) 454
1820 y(allo) s(cation) 36 b(functions) d(that) h(are) g(called) h(from)
e(other) g(shared) g(libraries) h(and) e(so) i(will) g(only) f
(a\013ect) 454 1920 y(ob) 5 b(ject) 37 b(\014les) e(that) h(are) g
(statically) i(link) m(ed.) 56 b(If) 35 b(this) g(is) g(a) h(problem) f
(then) g(should) g(link) g(y) m(our) g(pro-) 454 2020
y(grams) d(with) f(the) h(follo) m(wing) h(additional) f(compiler) h
(options) e(in) h(order) f(to) h(p) s(erform) e(a) i(static) h(link) 454
2119 y(instead) 41 b(of) g(a) f(dynamic) g(link:) 61
b(`) p Fl(-bnoautoimp) p Fo(') 38 b(`) p Fl(-bimport:/lib/syscalls.e) o
(xp) p Fo(') c(and) 40 b(also) 454 2219 y(`) p Fl
(-bimport:/lib/threads.exp) p Fo(') 24 b(if) 31 b(linking) f(with) g(`)
p Fl(libmpatrolmt.a) p Fo('.) p Fm 349 2342 a(\017) p
Fo 60 w(A) 45 b(mak) m(e\014le) g(called) g(`) p Fl(Makefile.aix) p
Fo(') d(is) i(supplied) f(in) g(`) p Fl(build/unix) p
Fo(') f(whic) m(h) i(will) h(build) e(the) 454 2442 y(mpatrol) 30
b(library) e(as) h(an) g(AIX) g(shared) f(library) -8
b(.) 40 b(The) 29 b(shared) f(library) g(will) h(b) s(e) g(em) m(b) s
(edded) e(within) 454 2541 y(the) k(mpatrol) g(arc) m(hiv) m(e) h
(library) e(as) g(is) h(done) f(with) g(the) g(system) h(libraries.) p
Fm 349 2665 a(\017) p Fo 60 w(The) p Fl 20 w(__mp_init_) p
Fo 18 w(initialisation) 22 b(function) e(feature) h(do) s(es) f(not) h
(w) m(ork) f(since) h(function) f(en) m(try) g(p) s(oin) m(ts) 454
2764 y(need) 31 b(to) g(b) s(e) e(referenced) i(through) e(the) i(TOC.)
p Fm 349 2887 a(\017) p Fo 60 w(The) f(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 3058
a(\017) p Fo 60 w(DG/UX) i(4.11,) h(In) m(tel) e(P) m(en) m(tium) g
(Pro,) f(ELF32,) p Fl 32 w(gcc) p Fm 349 3181 a(\017) p
Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 3304 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 3427 a(\017) p Fo 60 w(The) g(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 3551
a(\017) p Fo 60 w(DG/UX) i(4.20MU07,) i(In) m(tel) d(P) m(en) m(tium) g
(Pro,) f(ELF32,) p Fl 32 w(gcc) p Fm 349 3674 a(\017) p
Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 3797 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 3920 a(\017) p Fo 60 w(The) d(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 27 w(mpatrol) p Fo
26 w(command) f(do) s(es) g(not) g(w) m(ork) h(unless) f(`) p
Fl(libelf.so) p Fo(') e(is) 454 4020 y(a) m(v) -5 b(ailable.) p
Fm 169 4190 a(\017) p Fo 60 w(DG/UX) 32 b(4.11,) h(Motorola) f(88100,) h
(ELF32,) p Fl 32 w(gcc) p Fm 349 4314 a(\017) p Fo 60
w(The) 28 b(thread-safe) h(v) m(ersion) g(of) f(the) g(library) g(do) s
(es) g(not) h(w) m(ork) f(if) g(the) g(mpatrol) h(library) f(is) g
(built) g(as) h(a) 454 4413 y(shared) h(library) -8 b(.) p
Fm 349 4536 a(\017) p Fo 60 w(The) 30 b(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 4660
a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f
(no) g(e\013ect.) p Fm 349 4783 a(\017) p Fo 60 w(Call) h(stac) m(k) h
(tra) m(v) m(ersal) g(only) f(w) m(orks) f(with) g(unoptimised) g(co) s
(de.) p Fm 349 4906 a(\017) p Fo 60 w(The) g(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 5077
a(\017) p Fo 60 w(DRS/NX) h(6.2,) h(SP) -8 b(AR) m(C) 31
b(V7,) g(ELF32,) p Fl 31 w(cc) p Fm 349 5200 a(\017) p
Fo 60 w(The) 42 b(option) h(`) p Fl(-DSYSTEM=SYSTEM_DRSNX) p
Fo(') 37 b(m) m(ust) 42 b(b) s(e) f(added) h(to) h(the) p
Fl 42 w(CFLAGS) p Fo 41 w(section) g(in) f(the) 454 5299
y(`) p Fl(Makefile) p Fo(') 29 b(b) s(efore) h(building) g(the) g
(library) -8 b(.) p Fm 349 5423 a(\017) p Fo 60 w(The) 35
b(thread-safe) g(v) m(ersion) g(of) g(the) g(library) g(do) s(es) f
(not) h(w) m(ork.) 55 b(This) 34 b(is) g(b) s(ecause) h(there) g(do) s
(es) g(not) 454 5522 y(app) s(ear) 30 b(to) h(b) s(e) f(an) m(y) h
(evidence) g(that) g(this) f(v) m(ersion) h(of) g(the) f(op) s(erating)
h(system) f(supp) s(orts) f(threads.) p Fm 349 5645 a(\017) p
Fo 60 w(The) h(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p 90 rotate dyy eop
%%Page: 180 186
180 185 bop Fo 94 -116 a(180) 3332 b(mpatrol) p Fm 349
365 a(\017) p Fo 60 w(The) 30 b(`) p Fl(USEDEBUG) p Fo(') f(option) i
(has) f(no) g(e\013ect.) p Fm 349 491 a(\017) p Fo 60
w(The) g(`) p Fl(--dynamic) p Fo(') f(option) i(to) g(the) p
Fl 30 w(mpatrol) p Fo 29 w(command) f(has) g(no) g(e\013ect.) p
Fm 169 669 a(\017) p Fo 60 w(D) m(YNIX/ptx) i(4.5,) g(In) m(tel) f(P) m
(en) m(tium) g(Pro,) g(ELF32,) p Fl 31 w(cc) p Fm 349
795 a(\017) p Fo 60 w(The) f(`) p Fl(OFLOWWATCH) p Fo(') e(option) j
(has) f(no) h(e\013ect.) p Fm 349 921 a(\017) p Fo 60
w(The) f(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 1047 a(\017) p Fo 60 w(The) d(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 27 w(mpatrol) p Fo
26 w(command) f(do) s(es) g(not) g(w) m(ork) h(unless) f(`) p
Fl(libelf.so) p Fo(') e(is) 454 1147 y(a) m(v) -5 b(ailable.) p
Fm 169 1325 a(\017) p Fo 60 w(F) d(reeBSD) 32 b(4.2,) g(In) m(tel) f
(Celeron,) g(ELF32,) p Fl 31 w(gcc) p Fm 349 1451 a(\017) p
Fo 60 w(The) f(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 1577 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 1702 a(\017) p Fo 60 w(On) j(ELF-based) g(systems,) i(the) f
(mpatrol) f(library) g(requires) g(either) h(the) g(ELF) f(access) i
(library) e(or) 454 1802 y(the) 42 b(GNU) g(BFD) h(library) e(to) h(b) s
(e) f(installed) h(on) g(the) g(system,) i(otherwise) e(no) g(sym) m(b)
s(ols) f(can) h(b) s(e) 454 1902 y(read) c(from) e(executable) j
(\014les) e(or) g(shared) g(libraries) g(and) f(the) i(library) e(m) m
(ust) h(b) s(e) g(built) g(with) g(the) 454 2001 y(`) p
Fl(-DFORMAT=FORMAT_NONE) p Fo(') 21 b(option.) 39 b(No) 26
b(suc) m(h) e(extra) i(libraries) f(are) h(required) e(on) h(`) p
Fl(a.out) p Fo('-based) 454 2101 y(systems.) p Fm 349
2227 a(\017) p Fo 60 w(The) 33 b(`) p Fl(--dynamic) p
Fo(') d(option) k(to) f(the) p Fl 33 w(mpatrol) p Fo
31 w(command) f(do) s(es) h(not) g(app) s(ear) f(to) h(w) m(ork) g
(correctly) -8 b(,) 454 2326 y(giving) 32 b(spurious) d(errors) g(in) h
(the) h(log) g(\014le.) p Fm 169 2505 a(\017) p Fo 60
w(HP/UX) h(10.20,) g(HP) f(P) -8 b(A/RISC) 30 b(9000,) i(BFD,) p
Fl 32 w(gcc) p Fm 349 2630 a(\017) p Fo 60 w(The) j(thread-safe) g(v) m
(ersion) g(of) g(the) g(library) g(do) s(es) f(not) h(w) m(ork.) 55
b(This) 34 b(is) g(b) s(ecause) h(there) g(do) s(es) g(not) 454
2730 y(app) s(ear) 30 b(to) h(b) s(e) f(an) m(y) h(evidence) g(that) g
(this) f(v) m(ersion) h(of) g(the) f(op) s(erating) h(system) f(supp) s
(orts) f(threads.) p Fm 349 2856 a(\017) p Fo 60 w(The) h(`) p
Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h(e\013ect.) p
Fm 349 2982 a(\017) p Fo 60 w(The) f(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 3160
a(\017) p Fo 60 w(IRIX) h(5.3,) g(MIPS) f(R4000,) i(ELF32,) p
Fl 32 w(cc) p Fm 349 3286 a(\017) p Fo 60 w(The) j(thread-safe) g(v) m
(ersion) g(of) g(the) g(library) g(do) s(es) f(not) h(w) m(ork.) 55
b(This) 34 b(is) g(b) s(ecause) h(there) g(do) s(es) g(not) 454
3386 y(app) s(ear) 30 b(to) h(b) s(e) f(an) m(y) h(evidence) g(that) g
(this) f(v) m(ersion) h(of) g(the) f(op) s(erating) h(system) f(supp) s
(orts) f(threads.) p Fm 349 3511 a(\017) p Fo 60 w(This) c(v) m(ersion)
g(of) g(the) g(op) s(erating) h(system) f(only) g(allo) m(ws) h(up) e
(to) i(100) g(user-programmable) e(soft) m(w) m(are) 454
3611 y(w) m(atc) m(h) i(p) s(oin) m(ts,) g(whic) m(h) e(means) h(that) g
(the) g(`) p Fl(OFLOWWATCH) p Fo(') d(option) j(will) g(not) f(w) m
(ork) h(prop) s(erly) e(if) i(more) 454 3711 y(than) 31
b(50) g(memory) f(allo) s(cations) j(exist) e(at) g(one) g(time.) p
Fm 349 3836 a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 3962
a(\017) p Fo 60 w(Stac) m(k) i(tra) m(v) m(ersal) g(ma) m(y) f(b) s(e) f
(unreliable) g(from) g(signal-handlers.) p Fm 169 4141
a(\017) p Fo 60 w(Red) h(Hat) g(Lin) m(ux) f(6.0,) h(In) m(tel) h(P) m
(en) m(tium) e(I) s(I) s(I,) g(BFD,) p Fl 31 w(g++) p
Fm 349 4266 a(\017) p Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 4392
a(\017) p Fo 60 w(The) 25 b(`) p Fl(CHECKFORK) p Fo(') e(option) i(do) s
(es) g(not) g(w) m(ork) g(prop) s(erly) f(in) g(m) m(ultithreaded) h
(programs) g(due) f(to) i(eac) m(h) 454 4492 y(thread) 31
b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g(iden) m(ti\014ers.) p
Fm 349 4618 a(\017) p Fo 60 w(The) 22 b(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 22 w(mpatrol) p Fo
21 w(command) f(do) s(es) g(not) h(w) m(ork) f(unless) g(`) p
Fl(libiberty.so) p Fo(') 454 4717 y(is) 31 b(a) m(v) -5
b(ailable.) p Fm 169 4843 a(\017) p Fo 60 w(Red) 31 b(Hat) g(Lin) m(ux)
f(6.1,) h(In) m(tel) h(P) m(en) m(tium) e(I) s(I) s(I,) g(BFD,) p
Fl 31 w(g++) p Fm 349 4969 a(\017) p Fo 60 w(The) f(thread-safe) g(v) m
(ersion) h(of) f(the) g(library) g(do) s(es) f(not) i(w) m(ork) f(due) f
(to) i(the) f(system) g(threads) f(library) 454 5069
y(calling) p Fl 32 w(malloc\(\)) p Fo 28 w(and) p Fl
30 w(bzero\(\)) p Fo 29 w(recursiv) m(ely) -8 b(.) p
Fm 349 5195 a(\017) p Fo 60 w(The) 30 b(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 5320
a(\017) p Fo 60 w(The) 25 b(`) p Fl(CHECKFORK) p Fo(') e(option) i(do) s
(es) g(not) g(w) m(ork) g(prop) s(erly) f(in) g(m) m(ultithreaded) h
(programs) g(due) f(to) i(eac) m(h) 454 5420 y(thread) 31
b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g(iden) m(ti\014ers.) p
Fm 349 5546 a(\017) p Fo 60 w(The) 22 b(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 22 w(mpatrol) p Fo
21 w(command) f(do) s(es) g(not) h(w) m(ork) f(unless) g(`) p
Fl(libiberty.so) p Fo(') 454 5645 y(is) 31 b(a) m(v) -5
b(ailable.) p 90 rotate dyy eop
%%Page: 181 187
181 186 bop Fo 94 -116 a(App) s(endix) 29 b(G:) i(Supp) s(orted) d
(systems) 2351 b(181) p Fm 169 365 a(\017) p Fo 60 w(Red) 31
b(Hat) g(Lin) m(ux) f(6.2,) h(In) m(tel) h(P) m(en) m(tium) e(I) s(I) s
(I,) g(BFD,) p Fl 31 w(g++) p Fm 349 490 a(\017) p Fo
60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 614 a(\017) p Fo 60 w(The) 25 b(`) p
Fl(CHECKFORK) p Fo(') e(option) i(do) s(es) g(not) g(w) m(ork) g(prop) s
(erly) f(in) g(m) m(ultithreaded) h(programs) g(due) f(to) i(eac) m(h)
454 714 y(thread) 31 b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g
(iden) m(ti\014ers.) p Fm 349 839 a(\017) p Fo 60 w(The) 22
b(`) p Fl(--dynamic) p Fo(') f(option) i(to) g(the) p
Fl 22 w(mpatrol) p Fo 21 w(command) f(do) s(es) g(not) h(w) m(ork) f
(unless) g(`) p Fl(libiberty.so) p Fo(') 454 938 y(is) 31
b(a) m(v) -5 b(ailable.) p Fm 169 1063 a(\017) p Fo 60
w(Red) 31 b(Hat) g(Lin) m(ux) f(7.x,) h(In) m(tel) g(P) m(en) m(tium) g
(I) s(I) s(I,) e(BFD,) p Fl 32 w(g++) p Fm 349 1187 a(\017) p
Fo 60 w(The) h(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 1312 a(\017) p Fo 60 w(The) 25 b(`) p
Fl(CHECKFORK) p Fo(') e(option) i(do) s(es) g(not) g(w) m(ork) g(prop) s
(erly) f(in) g(m) m(ultithreaded) h(programs) g(due) f(to) i(eac) m(h)
454 1411 y(thread) 31 b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g
(iden) m(ti\014ers.) p Fm 349 1536 a(\017) p Fo 60 w(The) 22
b(`) p Fl(--dynamic) p Fo(') f(option) i(to) g(the) p
Fl 22 w(mpatrol) p Fo 21 w(command) f(do) s(es) g(not) h(w) m(ork) f
(unless) g(`) p Fl(libiberty.so) p Fo(') 454 1636 y(is) 31
b(a) m(v) -5 b(ailable.) p Fm 169 1810 a(\017) p Fo 60
w(Red) 31 b(Hat) g(Lin) m(ux) f(5.1,) h(Motorola) i(68040,) g(BFD,) p
Fl 32 w(gcc) p Fm 349 1934 a(\017) p Fo 60 w(The) c(thread-safe) g(v) m
(ersion) h(of) f(the) g(library) g(do) s(es) f(not) i(w) m(ork) f(due) f
(to) i(the) f(system) g(threads) f(library) 454 2034
y(calling) p Fl 32 w(malloc\(\)) p Fo 28 w(and) p Fl
30 w(bzero\(\)) p Fo 29 w(recursiv) m(ely) -8 b(.) p
Fm 349 2159 a(\017) p Fo 60 w(The) 30 b(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 2283
a(\017) p Fo 60 w(The) 25 b(`) p Fl(CHECKFORK) p Fo(') e(option) i(do) s
(es) g(not) g(w) m(ork) g(prop) s(erly) f(in) g(m) m(ultithreaded) h
(programs) g(due) f(to) i(eac) m(h) 454 2383 y(thread) 31
b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g(iden) m(ti\014ers.) p
Fm 349 2507 a(\017) p Fo 60 w(The) 22 b(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 22 w(mpatrol) p Fo
21 w(command) f(do) s(es) g(not) h(w) m(ork) f(unless) g(`) p
Fl(libiberty.so) p Fo(') 454 2607 y(is) 31 b(a) m(v) -5
b(ailable.) p Fm 169 2731 a(\017) p Fo 60 w(Red) 31 b(Hat) g(Lin) m(ux)
f(5.1,) h(Motorola) i(68040,) g(ELF32,) p Fl 31 w(gcc) p
Fm 349 2856 a(\017) p Fo 60 w(The) c(thread-safe) g(v) m(ersion) h(of) f
(the) g(library) g(do) s(es) f(not) i(w) m(ork) f(due) f(to) i(the) f
(system) g(threads) f(library) 454 2956 y(calling) p
Fl 32 w(malloc\(\)) p Fo 28 w(and) p Fl 30 w(bzero\(\)) p
Fo 29 w(recursiv) m(ely) -8 b(.) p Fm 349 3080 a(\017) p
Fo 60 w(The) 30 b(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 3205 a(\017) p Fo 60 w(The) 25 b(`) p
Fl(CHECKFORK) p Fo(') e(option) i(do) s(es) g(not) g(w) m(ork) g(prop) s
(erly) f(in) g(m) m(ultithreaded) h(programs) g(due) f(to) i(eac) m(h)
454 3304 y(thread) 31 b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g
(iden) m(ti\014ers.) p Fm 349 3429 a(\017) p Fo 60 w(The) g(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 3553 a(\017) p Fo 60 w(The) d(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 27 w(mpatrol) p Fo
26 w(command) f(do) s(es) g(not) g(w) m(ork) h(unless) f(`) p
Fl(libelf.so) p Fo(') e(is) 454 3653 y(a) m(v) -5 b(ailable.) p
Fm 169 3827 a(\017) p Fo 60 w(SuSE) 29 b(Lin) m(ux) h(7.1,) i(In) m
(tel) f(P) m(en) m(tium) g(I) s(I,) e(BFD,) p Fl 32 w(g++) p
Fm 349 3952 a(\017) p Fo 60 w(The) h(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 4076
a(\017) p Fo 60 w(The) 25 b(`) p Fl(CHECKFORK) p Fo(') e(option) i(do) s
(es) g(not) g(w) m(ork) g(prop) s(erly) f(in) g(m) m(ultithreaded) h
(programs) g(due) f(to) i(eac) m(h) 454 4176 y(thread) 31
b(ha) m(ving) g(di\013eren) m(t) f(pro) s(cess) g(iden) m(ti\014ers.) p
Fm 349 4301 a(\017) p Fo 60 w(The) 22 b(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 22 w(mpatrol) p Fo
21 w(command) f(do) s(es) g(not) h(w) m(ork) f(unless) g(`) p
Fl(libiberty.so) p Fo(') 454 4400 y(is) 31 b(a) m(v) -5
b(ailable.) p Fm 169 4575 a(\017) p Fo 60 w(LynxOS) 29
b(3.0.0,) k(In) m(tel) e(P) m(en) m(tium) g(Pro,) f(BFD,) p
Fl 32 w(gcc) p Fm 349 4699 a(\017) p Fo 60 w(The) g(`) p
Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h(e\013ect.) p
Fm 349 4824 a(\017) p Fo 60 w(The) f(`) p Fl(USEMMAP) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 4948
a(\017) p Fo 60 w(There) 36 b(is) f(curren) m(tly) h(no) f(supp) s(ort)
f(for) i(reading) f(sym) m(b) s(ols) g(from) h(COFF) f(shared) g
(libraries.) 56 b(Y) -8 b(ou) 454 5048 y(should) 34 b(curren) m(tly) h
(alw) m(a) m(ys) i(p) s(erform) c(a) i(static) i(link) d(instead) h(of)
g(a) h(dynamic) e(link) h(when) f(linking) 454 5147 y(y) m(our) d
(program,) f(but) g(that) h(is) f(the) h(default) f(on) h(LynxOS) d(an)
m(yw) m(a) m(y) -8 b(.) p Fm 349 5272 a(\017) p Fo 60
w(The) 30 b(`) p Fl(--dynamic) p Fo(') f(option) i(to) g(the) p
Fl 30 w(mpatrol) p Fo 29 w(command) f(has) g(no) g(e\013ect.) p
Fm 169 5396 a(\017) p Fo 60 w(LynxOS) f(3.0.0,) k(In) m(tel) e(P) m(en)
m(tium) g(Pro,) f(COFF,) p Fl 31 w(gcc) p Fm 349 5521
a(\017) p Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f
(no) h(e\013ect.) p Fm 349 5645 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
90 rotate dyy eop
%%Page: 182 188
182 187 bop Fo 94 -116 a(182) 3332 b(mpatrol) p Fm 349
365 a(\017) p Fo 60 w(The) 30 b(`) p Fl(USEMMAP) p Fo(') f(option) i
(has) f(no) g(e\013ect.) p Fm 349 488 a(\017) p Fo 60
w(There) 36 b(is) f(curren) m(tly) h(no) f(supp) s(ort) f(for) i
(reading) f(sym) m(b) s(ols) g(from) h(COFF) f(shared) g(libraries.) 56
b(Y) -8 b(ou) 454 588 y(should) 34 b(curren) m(tly) h(alw) m(a) m(ys) i
(p) s(erform) c(a) i(static) i(link) d(instead) h(of) g(a) h(dynamic) e
(link) h(when) f(linking) 454 687 y(y) m(our) d(program,) f(but) g
(that) h(is) f(the) h(default) f(on) h(LynxOS) d(an) m(yw) m(a) m(y) -8
b(.) p Fm 349 810 a(\017) p Fo 60 w(The) 30 b(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 978
a(\017) p Fo 60 w(LynxOS) f(3.0.0,) k(P) m(o) m(w) m(erPC,) e(BFD,) p
Fl 32 w(gcc) p Fm 349 1101 a(\017) p Fo 60 w(The) f(`) p
Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h(e\013ect.) p
Fm 349 1224 a(\017) p Fo 60 w(The) f(`) p Fl(USEMMAP) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 1346
a(\017) p Fo 60 w(There) h(is) g(curren) m(tly) g(no) g(supp) s(ort) e
(for) h(reading) h(sym) m(b) s(ols) g(from) f(X) m(COFF) i(shared) e
(libraries.) 42 b(Y) -8 b(ou) 454 1446 y(should) 34 b(curren) m(tly) h
(alw) m(a) m(ys) i(p) s(erform) c(a) i(static) i(link) d(instead) h(of)
g(a) h(dynamic) e(link) h(when) f(linking) 454 1545 y(y) m(our) d
(program,) f(but) g(that) h(is) f(the) h(default) f(on) h(LynxOS) d(an)
m(yw) m(a) m(y) -8 b(.) p Fm 349 1668 a(\017) p Fo 60
w(The) p Fl 20 w(__mp_init_) p Fo 18 w(initialisation) 22
b(function) e(feature) h(do) s(es) f(not) h(w) m(ork) f(since) h
(function) f(en) m(try) g(p) s(oin) m(ts) 454 1768 y(need) 31
b(to) g(b) s(e) e(referenced) i(through) e(the) i(TOC.) p
Fm 349 1890 a(\017) p Fo 60 w(The) f(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 2013
a(\017) p Fo 60 w(LynxOS) f(3.0.0,) k(P) m(o) m(w) m(erPC,) e(X) m
(COFF,) p Fl 31 w(gcc) p Fm 349 2136 a(\017) p Fo 60
w(The) f(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 2258 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 2381 a(\017) p Fo 60 w(The) g(`) p Fl(USEMMAP) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 2503
a(\017) p Fo 60 w(There) h(is) g(curren) m(tly) g(no) g(supp) s(ort) e
(for) h(reading) h(sym) m(b) s(ols) g(from) f(X) m(COFF) i(shared) e
(libraries.) 42 b(Y) -8 b(ou) 454 2603 y(should) 34 b(curren) m(tly) h
(alw) m(a) m(ys) i(p) s(erform) c(a) i(static) i(link) d(instead) h(of)
g(a) h(dynamic) e(link) h(when) f(linking) 454 2703 y(y) m(our) d
(program,) f(but) g(that) h(is) f(the) h(default) f(on) h(LynxOS) d(an)
m(yw) m(a) m(y) -8 b(.) p Fm 349 2825 a(\017) p Fo 60
w(The) p Fl 20 w(__mp_init_) p Fo 18 w(initialisation) 22
b(function) e(feature) h(do) s(es) f(not) h(w) m(ork) f(since) h
(function) f(en) m(try) g(p) s(oin) m(ts) 454 2925 y(need) 31
b(to) g(b) s(e) e(referenced) i(through) e(the) i(TOC.) p
Fm 349 3048 a(\017) p Fo 60 w(The) f(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 169 3216
a(\017) p Fo 60 w(SINIX) g(5.43,) i(MIPS) e(R4000,) j(ELF32,) p
Fl 31 w(cc) p Fm 349 3339 a(\017) p Fo 60 w(The) i(thread-safe) g(v) m
(ersion) g(of) g(the) g(library) g(do) s(es) f(not) h(w) m(ork.) 55
b(This) 34 b(is) g(b) s(ecause) h(there) g(do) s(es) g(not) 454
3438 y(app) s(ear) 30 b(to) h(b) s(e) f(an) m(y) h(evidence) g(that) g
(this) f(v) m(ersion) h(of) g(the) f(op) s(erating) h(system) f(supp) s
(orts) f(threads.) p Fm 349 3561 a(\017) p Fo 60 w(The) h(`) p
Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h(e\013ect.) p
Fm 349 3684 a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 3806
a(\017) p Fo 60 w(Stac) m(k) i(tra) m(v) m(ersal) g(ma) m(y) f(b) s(e) f
(unreliable) g(from) g(signal-handlers.) p Fm 349 3929
a(\017) p Fo 60 w(The) g(`) p Fl(--dynamic) p Fo(') f(option) i(to) g
(the) p Fl 30 w(mpatrol) p Fo 29 w(command) f(has) g(no) g(e\013ect.) p
Fm 169 4097 a(\017) p Fo 60 w(Solaris) h(2.6,) h(In) m(tel) f(P) m(en) m
(tium) g(Pro,) f(BFD,) p Fl 32 w(gcc) p Fm 349 4220 a(\017) p
Fo 60 w(No) h(kno) m(wn) f(issues.) p Fm 169 4343 a(\017) p
Fo 60 w(Solaris) h(2.6,) h(In) m(tel) f(P) m(en) m(tium) g(Pro,) f
(ELF32,) p Fl 32 w(gcc) p Fm 349 4465 a(\017) p Fo 60
w(The) g(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 169 4634 a(\017) p Fo 60 w(Solaris) h(2.5,) h(SP) -8
b(AR) m(C) 30 b(V8,) h(BFD,) p Fl 32 w(gcc) p Fm 349
4757 a(\017) p Fo 60 w(The) i(thread-safe) h(v) m(ersion) g(of) f(the) h
(library) f(do) s(es) g(not) g(w) m(ork) h(due) f(to) h(a) f(problem) g
(with) g(a) h(system) 454 4856 y(library) -8 b(.) p Fm
349 4979 a(\017) p Fo 60 w(The) 72 b(`) p Fl(OFLOWWATCH) p
Fo(') d(option) j(has) f(no) h(e\013ect.) 165 b(The) 71
b(`) p Fl(-DMP_PROCFS_SUPPORT=0) p Fo(') c(and) 454 5078
y(`) p Fl(-DMP_WATCH_SUPPORT=0) p Fo(') 26 b(options) 31
b(m) m(ust) f(b) s(e) g(added) f(to) p Fl 31 w(CFLAGS) p
Fo 29 w(in) h(the) h(`) p Fl(Makefile) p Fo('.) p Fm
169 5201 a(\017) p Fo 60 w(Solaris) g(2.5,) h(SP) -8
b(AR) m(C) 30 b(V8,) h(ELF32,) p Fl 32 w(gcc) p Fm 349
5324 a(\017) p Fo 60 w(The) i(thread-safe) h(v) m(ersion) g(of) f(the) h
(library) f(do) s(es) g(not) g(w) m(ork) h(due) f(to) h(a) f(problem) g
(with) g(a) h(system) 454 5423 y(library) -8 b(.) p Fm
349 5546 a(\017) p Fo 60 w(The) 72 b(`) p Fl(OFLOWWATCH) p
Fo(') d(option) j(has) f(no) h(e\013ect.) 165 b(The) 71
b(`) p Fl(-DMP_PROCFS_SUPPORT=0) p Fo(') c(and) 454 5645
y(`) p Fl(-DMP_WATCH_SUPPORT=0) p Fo(') 26 b(options) 31
b(m) m(ust) f(b) s(e) g(added) f(to) p Fl 31 w(CFLAGS) p
Fo 29 w(in) h(the) h(`) p Fl(Makefile) p Fo('.) p 90 rotate
dyy eop
%%Page: 183 189
183 188 bop Fo 94 -116 a(App) s(endix) 29 b(G:) i(Supp) s(orted) d
(systems) 2351 b(183) p Fm 349 365 a(\017) p Fo 60 w(The) 30
b(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 169 491 a(\017) p Fo 60 w(Solaris) h(7,) g(SP) -8
b(AR) m(C) 31 b(V9,) g(BFD,) p Fl 31 w(g++) p Fm 349
617 a(\017) p Fo 60 w(The) f(mpatrol) h(library) f(can) h(b) s(e) e
(compiled) i(and) f(run) f(in) h(a) h(64-bit) g(en) m(vironmen) m(t.) p
Fm 169 742 a(\017) p Fo 60 w(Solaris) g(7,) g(SP) -8
b(AR) m(C) 31 b(V9,) g(ELF32/ELF64,) p Fl 33 w(g++) p
Fm 349 868 a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 994
a(\017) p Fo 60 w(The) g(mpatrol) h(library) f(can) h(b) s(e) e
(compiled) i(and) f(run) f(in) h(a) h(64-bit) g(en) m(vironmen) m(t.) p
Fm 169 1120 a(\017) p Fo 60 w(Solaris) g(8,) g(SP) -8
b(AR) m(C) 31 b(V9,) g(BFD,) p Fl 31 w(g++) p Fm 349
1245 a(\017) p Fo 60 w(The) f(mpatrol) h(library) f(can) h(b) s(e) e
(compiled) i(and) f(run) f(in) h(a) h(64-bit) g(en) m(vironmen) m(t.) p
Fm 169 1371 a(\017) p Fo 60 w(Solaris) g(8,) g(SP) -8
b(AR) m(C) 31 b(V9,) g(ELF32/ELF64,) p Fl 33 w(g++) p
Fm 349 1497 a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 1622
a(\017) p Fo 60 w(The) g(mpatrol) h(library) f(can) h(b) s(e) e
(compiled) i(and) f(run) f(in) h(a) h(64-bit) g(en) m(vironmen) m(t.) p
Fm 169 1800 a(\017) p Fo 60 w(T) -8 b(ru64) 31 b(5.0,) h(Alpha,) e
(BFD,) p Fl 32 w(cxx) p Fm 349 1926 a(\017) p Fo 60 w(The) g
(thread-safe) h(v) m(ersion) g(of) g(the) f(library) g(has) g(not) h(y)
m(et) g(b) s(een) f(tested.) p Fm 349 2052 a(\017) p
Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 2178 a(\017) p Fo 60 w(The) h(system) g
(exception-handling) g(library) g(\(lib) s(exc\)) h(is) e(used) g(for) h
(call) h(stac) m(k) g(tra) m(v) m(ersal.) 47 b(Unfor-) 454
2277 y(tunately) -8 b(,) 37 b(this) d(library) f(mak) m(es) i(sev) m
(eral) g(calls) g(to) p Fl 35 w(malloc\(\)) p Fo 32 w(when) d
(initialising) k(itself) f(and) e(this) 454 2377 y(can) i(sometimes) h
(result) e(in) g(a) h(recursiv) m(e) g(lo) s(op) f(when) g(used) f(in) h
(com) m(bination) i(with) e(the) h(mpatrol) 454 2476
y(library) -8 b(.) 76 b(If) 41 b(this) h(o) s(ccurs,) i(either) p
Fl 43 w(MP_BUILTINSTACK_SUPPORT) o(=1) p Fo 35 w(m) m(ust) e(b) s(e) f
(de\014ned) g(or) h(the) 454 2576 y(mpatrol) 31 b(library) f(m) m(ust) g
(b) s(e) g(built) g(without) h(the) f(`) p Fl(malloc.o) p
Fo(') f(mo) s(dule.) p Fm 349 2702 a(\017) p Fo 60 w(The) h(mpatrol) h
(library) f(can) h(b) s(e) e(compiled) i(and) f(run) f(in) h(a) h
(64-bit) g(en) m(vironmen) m(t.) p Fm 169 2880 a(\017) p
Fo 60 w(UnixW) -8 b(are) 32 b(7.1.1,) g(In) m(tel) g(P) m(en) m(tium) e
(I) s(I,) g(ELF32,) p Fl 32 w(gcc) p Fm 349 3005 a(\017) p
Fo 60 w(The) f(option) h(`) p Fl(-DSYSTEM=SYSTEM_UNIXWARE) p
Fo -1 w(') 24 b(m) m(ust) 29 b(b) s(e) f(added) h(to) h(the) p
Fl 29 w(CFLAGS) p Fo 28 w(section) g(in) f(the) 454 3105
y(`) p Fl(Makefile) p Fo(') g(b) s(efore) h(building) g(the) g(library)
-8 b(.) p Fm 349 3231 a(\017) p Fo 60 w(The) 30 b(thread-safe) h(v) m
(ersion) g(of) g(the) f(library) g(do) s(es) g(not) h(w) m(ork.) p
Fm 349 3356 a(\017) p Fo 60 w(The) f(`) p Fl(OFLOWWATCH) p
Fo(') e(option) j(has) f(no) h(e\013ect.) p Fm 349 3482
a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p Fo(') f(option) i(has) f
(no) g(e\013ect.) p Fm 349 3608 a(\017) p Fo 60 w(The) g(`) p
Fl(--dynamic) p Fo(') f(option) i(to) g(the) p Fl 30
w(mpatrol) p Fo 29 w(command) f(has) g(no) g(e\013ect.) p
Fm 169 3786 a(\017) p Fo 60 w(AmigaOS) h(3.1,) h(Motorola) g(68040,) h
(BFD,) p Fl 32 w(gcc) p Fm 349 3912 a(\017) p Fo 60 w(No) e(memory) g
(protection) g(so) g(the) f(`) p Fl(PAGEALLOC) p Fo(') f(option) i(has)
f(no) g(e\013ect.) p Fm 349 4037 a(\017) p Fo 60 w(The) g(`) p
Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h(e\013ect.) p
Fm 349 4163 a(\017) p Fo 60 w(The) f(`) p Fl(USEDEBUG) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 4289
a(\017) p Fo 60 w(The) g(`) p Fl(USEMMAP) p Fo(') f(option) i(has) f
(no) g(e\013ect.) p Fm 349 4414 a(\017) p Fo 60 w(The) g(`) p
Fl(EDIT) p Fo(') g(and) g(`) p Fl(LIST) p Fo(') g(options) g(ha) m(v) m
(e) i(no) e(e\013ect.) p Fm 349 4540 a(\017) p Fo 60
w(Limited) h(supp) s(ort) e(for) h(call) i(stac) m(k) f(tra) m(v) m
(ersal.) p Fm 349 4666 a(\017) p Fo 60 w(Limited) g(supp) s(ort) e(for)
h(reading) g(sym) m(b) s(ols.) p Fm 349 4792 a(\017) p
Fo 60 w(No) h(detection) h(of) f(illegal) i(memory) d(accesses.) p
Fm 349 4917 a(\017) p Fo 60 w(The) p Fl 30 w(__mp_init_) p
Fo 28 w(initialisation) j(function) d(feature) h(do) s(es) f(not) g(w) m
(ork.) p Fm 349 5043 a(\017) p Fo 60 w(The) g(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 349 5169
a(\017) p Fo 60 w(The) p Fl 30 w(mptrace) p Fo 29 w(command) g(has) g
(no) g(GUI.) p Fm 349 5294 a(\017) p Fo 60 w(The) p Fl
34 w(mpsym) p Fo 32 w(and) p Fl 34 w(hexwords) p Fo 31
w(commands) k(do) g(not) g(w) m(ork) g(unless) p Fl 33
w(gdb) p Fo 33 w(and) g(the) g(GNU) g(text) h(pro-) 454
5394 y(cessing) d(to) s(ols) f(are) g(installed.) p Fm
349 5520 a(\017) p Fo 60 w(The) p Fl 30 w(mpedit) p Fo
29 w(command) f(do) s(es) g(not) h(w) m(ork.) p Fm 169
5645 a(\017) p Fo 60 w(AmigaOS) g(3.1,) h(Motorola) g(68040,) h(n/a,) e
(SAS/C) p 90 rotate dyy eop
%%Page: 184 190
184 189 bop Fo 94 -116 a(184) 3332 b(mpatrol) p Fm 349
365 a(\017) p Fo 60 w(No) 31 b(automatic) i(o) m(v) m(erride) e(of) p
Fl 31 w(malloc\(\)) p Fo(,) d(etc.,) k(without) e(inclusion) h(of) f(`)
p Fl(mpatrol.h) p Fo('.) p Fm 349 490 a(\017) p Fo 60
w(No) h(memory) g(protection) g(so) g(the) f(`) p Fl(PAGEALLOC) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 614
a(\017) p Fo 60 w(The) g(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f
(no) h(e\013ect.) p Fm 349 739 a(\017) p Fo 60 w(The) f(`) p
Fl(USEDEBUG) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 863 a(\017) p Fo 60 w(The) g(`) p Fl(USEMMAP) p
Fo(') f(option) i(has) f(no) g(e\013ect.) p Fm 349 988
a(\017) p Fo 60 w(The) g(`) p Fl(EDIT) p Fo(') g(and) g(`) p
Fl(LIST) p Fo(') g(options) g(ha) m(v) m(e) i(no) e(e\013ect.) p
Fm 349 1112 a(\017) p Fo 60 w(No) h(supp) s(ort) e(for) h(call) i(stac)
m(k) g(tra) m(v) m(ersal.) p Fm 349 1237 a(\017) p Fo
60 w(No) f(supp) s(ort) e(for) h(reading) h(sym) m(b) s(ols.) p
Fm 349 1362 a(\017) p Fo 60 w(No) g(detection) h(of) f(illegal) i
(memory) d(accesses.) p Fm 349 1486 a(\017) p Fo 60 w(The) i(C) p
Fl(++) p Fo 30 w(compiler) g(ma) m(y) g(come) h(with) e(an) h(older) f
(v) m(ersion) h(of) g(the) g(standard) e(C) p Fl(++) p
Fo 31 w(library) h(whic) m(h) 454 1586 y(do) s(es) f(not) g(place) p
Fl 31 w(set_new_hander\(\)) p Fo 25 w(in) f(the) p Fl
30 w(std) p Fo 29 w(namespace.) 41 b(The) 30 b(`) p Fl(mpatrol.h) p
Fo(') d(header) j(\014le) 454 1685 y(and) g(the) h(`) p
Fl(cplus.c) p Fo(') e(source) h(\014le) h(will) f(need) h(to) g(b) s(e)
e(c) m(hanged) i(accordingly) -8 b(.) p Fm 349 1810 a(\017) p
Fo 60 w(The) p Fl 30 w(__mp_init_) p Fo 28 w(initialisation) 33
b(function) d(feature) h(do) s(es) f(not) g(w) m(ork.) p
Fm 349 1934 a(\017) p Fo 60 w(The) g(`) p Fl(--dynamic) p
Fo(') f(option) i(to) g(the) p Fl 30 w(mpatrol) p Fo
29 w(command) f(has) g(no) g(e\013ect.) p Fm 349 2059
a(\017) p Fo 60 w(The) p Fl 30 w(mptrace) p Fo 29 w(command) g(has) g
(no) g(GUI.) p Fm 349 2183 a(\017) p Fo 60 w(The) p Fl
30 w(mpsym) p Fo(,) p Fl 30 w(mpedit) p Fo 28 w(and) p
Fl 30 w(hexwords) p Fo 28 w(commands) g(do) g(not) h(w) m(ork.) p
Fm 169 2358 a(\017) p Fo 60 w(Microsoft) h(Windo) m(ws) f(NT) f(4.0,) i
(In) m(tel) f(P) m(en) m(tium) g(I) s(I) s(I,) e(PE,) h(Microsoft) i
(Visual) f(C) p Fl(++) p Fm 349 2482 a(\017) p Fo 60
w(The) f(`) p Fl(OFLOWWATCH) p Fo(') e(option) j(has) f(no) h
(e\013ect.) p Fm 349 2607 a(\017) p Fo 60 w(The) f(`) p
Fl(USEMMAP) p Fo(') f(option) i(has) f(no) g(e\013ect.) p
Fm 349 2731 a(\017) p Fo 60 w(The) g(`) p Fl(EDIT) p
Fo(') g(and) g(`) p Fl(LIST) p Fo(') g(options) g(ha) m(v) m(e) i(no) e
(e\013ect.) p Fm 349 2856 a(\017) p Fo 60 w(The) i(C) p
Fl(++) p Fo 30 w(compiler) g(ma) m(y) g(come) h(with) e(an) h(older) f
(v) m(ersion) h(of) g(the) g(standard) e(C) p Fl(++) p
Fo 31 w(library) h(whic) m(h) 454 2956 y(do) s(es) f(not) g(place) p
Fl 31 w(set_new_hander\(\)) p Fo 25 w(in) f(the) p Fl
30 w(std) p Fo 29 w(namespace.) 41 b(The) 30 b(`) p Fl(mpatrol.h) p
Fo(') d(header) j(\014le) 454 3055 y(and) g(the) h(`) p
Fl(cplus.c) p Fo(') e(source) h(\014le) h(will) f(need) h(to) g(b) s(e)
e(c) m(hanged) i(accordingly) -8 b(.) p Fm 349 3180 a(\017) p
Fo 60 w(There) 31 b(is) h(curren) m(tly) f(a) h(problem) e(when) h
(mixing) g(the) h(arc) m(hiv) m(e) g(library) f(v) m(ersion) h(of) g
(mpatrol) f(with) 454 3279 y(the) g(DLL) f(v) m(ersion) h(of) g(the) f
(Microsoft) i(Run) m(time) f(Library) -8 b(,) 30 b(and) g(vice) h(v) m
(ersa.) p Fm 349 3404 a(\017) p Fo 60 w(The) p Fl 30
w(__mp_init_) p Fo 28 w(initialisation) i(function) d(feature) h(do) s
(es) f(not) g(w) m(ork.) p Fm 349 3528 a(\017) p Fo 60
w(The) g(`) p Fl(--dynamic) p Fo(') f(option) i(to) g(the) p
Fl 30 w(mpatrol) p Fo 29 w(command) f(has) g(no) g(e\013ect.) p
Fm 349 3653 a(\017) p Fo 60 w(The) p Fl 30 w(mptrace) p
Fo 29 w(command) g(has) g(no) g(GUI.) p Fm 349 3778 a(\017) p
Fo 60 w(The) p Fl 30 w(mpsym) p Fo(,) p Fl 30 w(mpedit) p
Fo 28 w(and) p Fl 30 w(hexwords) p Fo 28 w(commands) g(do) g(not) h(w) m
(ork.) p 90 rotate dyy eop
%%Page: 185 191
185 190 bop Fo 94 -116 a(App) s(endix) 29 b(H:) i(P) m(orting) 2807
b(185) p Fk 94 365 a(App) t(endix) 53 b(H) 81 b(P) l(orting) p
Fo 219 572 a(This) 30 b(section) i(describ) s(es) e(ho) m(w) h(to) h(p)
s(ort) e(the) h(mpatrol) g(library) f(to) i(new) e(systems.) 42
b(It) 31 b(is) g(not) g(a) g(complete) 94 671 y(set) e(of) f
(guidelines) h(as) f(nothing) g(can) g(co) m(v) m(er) i(ev) m(ery) f
(ev) m(en) m(tualit) m(y) -8 b(,) 32 b(but) 27 b(it) h(should) f(list) i
(most) f(of) h(the) f(imp) s(ortan) m(t) 94 771 y(issues) f(and) f
(where) h(to) g(mak) m(e) h(the) f(necessary) g(c) m(hanges.) 41
b(Once) 27 b(y) m(ou'v) m(e) h(made) f(the) g(c) m(hanges) h(\(and) e
(are) i(happ) m(y) 94 871 y(with) 37 b(them\)) g(then) f(send) g(them) h
(to) g(me) g(and) f(I) g(can) h(incorp) s(orate) g(them) g(in) m(to) h
(the) f(next) f(mpatrol) h(release.) 94 970 y(I'd) h(also) g(lik) m(e) h
(to) g(hear) f(from) f(an) m(yb) s(o) s(dy) f(who) i(has) f(got) i
(mpatrol) f(w) m(orking) g(on) g(a) g(di\013eren) m(t) g(v) m(ersion) g
(of) g(an) 94 1070 y(op) s(erating) 29 b(system) f(listed) h(in) e(the)
i(supp) s(orted) d(systems) i(section) h(\(see) g(App) s(endix) d(G) i
([Supp) s(orted) e(systems],) 94 1169 y(page) 34 b(179\)) g(ev) m(en) f
(if) f(no) g(c) m(hanges) i(w) m(ere) f(required,) f(since) h(that) g
(information) g(can) f(b) s(e) g(useful) g(for) g(new) g(users) 94
1269 y(w) m(ondering) f(if) f(mpatrol) h(can) f(b) s(e) g(used) g(on) g
(their) g(system.) 144 1390 y(1.) 60 b(Mak) m(e) 32 b(an) m(y) f
(required) f(c) m(hanges) h(in) f(`) p Fl(src/target.h) p
Fo(') e(in) i(order) g(to) h(iden) m(tify) g(the) f(new) g(system.) 274
1511 y(The) p Fl 38 w(TARGET) p Fo 37 w(macro) 39 b(is) f(used) g(to) h
(iden) m(tify) g(distinct) g(families) g(of) f(op) s(erating) h
(systems) g(whereas) f(the) p Fl 274 1611 a(SYSTEM) p
Fo 41 w(macro) k(is) g(used) g(to) g(iden) m(tify) h(the) f(op) s
(erating) h(system) f(v) -5 b(arian) m(t) 43 b(if) p
Fl 42 w(TARGET=TARGET_UNIX) p Fo(.) 274 1710 y(Y) -8
b(ou) 32 b(should) f(try) g(to) h(iden) m(tify) g(the) g(prede\014ned) e
(prepro) s(cessor) g(macros) i(that) g(the) g(system) f(C) g(compiler)
274 1810 y(de\014nes) f(for) g(the) h(op) s(erating) f(system) h(t) m
(yp) s(e) f(and) g(the) g(op) s(erating) h(system) g(v) -5
b(arian) m(t,) 31 b(otherwise) g(y) m(ou) g(will) 274
1910 y(ha) m(v) m(e) j(to) f(sp) s(ecify) e(the) p Fl
33 w(TARGET) p Fo 30 w(and) p Fl 32 w(SYSTEM) p Fo 30
w(macros) i(explicitly) g(in) f(the) g(`) p Fl(Makefile) p
Fo(') f(when) g(building) 274 2009 y(the) 39 b(mpatrol) h(library) -8
b(.) 66 b(Note) 40 b(that) f(for) g(non-UNIX) f(op) s(erating) i
(systems,) p Fl 41 w(SYSTEM=SYSTEM_ANY) p Fo 34 w(is) 274
2109 y(implied.) 274 2230 y(The) p Fl 37 w(ARCH) p Fo
35 w(macro) d(is) g(used) f(to) h(iden) m(tify) h(the) e(pro) s(cessor)
h(arc) m(hitecture) h(and) e(the) p Fl 37 w(ENVIRON) p
Fo 35 w(macro) h(is) 274 2329 y(used) c(to) i(iden) m(tify) f(the) g
(pro) s(cessor) g(w) m(ord) f(size.) 52 b(Again,) 35
b(y) m(ou) g(should) d(try) i(to) g(iden) m(tify) h(the) f
(prede\014ned) 274 2429 y(prepro) s(cessor) c(macros) i(that) f(the) g
(system) g(C) f(compiler) h(de\014nes) f(for) h(the) g(pro) s(cessor) f
(arc) m(hitecture) j(and) 274 2529 y(pro) s(cessor) e(w) m(ord) f
(size,) i(otherwise) f(y) m(ou) g(ma) m(y) g(also) h(ha) m(v) m(e) g
(to) f(sp) s(ecify) f(the) p Fl 31 w(ARCH) p Fo 30 w(and) p
Fl 30 w(ENVIRON) p Fo 28 w(macros) 274 2628 y(explicitly) j(in) e(the) g
(`) p Fl(Makefile) p Fo(') e(when) h(building) g(the) h(mpatrol) h
(library) -8 b(.) 42 b(The) 31 b(default) g(setting) h(for) f(the) 274
2728 y(pro) s(cessor) f(w) m(ord) g(size) i(is) p Fl
30 w(ENVIRON=ENVIRON_32) p Fo(.) 274 2849 y(Y) -8 b(ou) 33
b(can) f(normally) g(\014gure) g(out) g(the) g(prepro) s(cessor) f
(macros) h(that) h(are) f(prede\014ned) e(b) m(y) i(the) g(system) g(C)
274 2948 y(compiler) 37 b(b) m(y) f(using) g(the) h(`) p
Fl(-#) p Fo(',) g(`) p Fl(-v) p Fo(') g(or) f(`) p Fl(-verbose) p
Fo(') e(options) j(when) e(compiling) i(a) g(source) f(\014le.) 58
b(The) 274 3048 y(command) 30 b(line) h(used) e(to) h(in) m(v) m(ok) m
(e) i(the) e(prepro) s(cessor) f(should) g(then) h(b) s(e) f(sho) m
(wn,) h(whic) m(h) g(should) f(sho) m(w) h(a) 274 3148
y(list) e(of) f(all) h(of) f(the) g(macros) g(that) h(are) f(b) s(eing)
f(de\014ned) g(in) g(addition) h(to) h(those) f(sp) s(eci\014ed) g(on) f
(the) h(compiler) 274 3247 y(command) k(line.) 41 b(It) 30
b(should) g(then) g(b) s(e) f(easy) i(for) g(y) m(ou) f(to) h(sp) s(ot)
f(the) h(ones) f(y) m(ou) h(need.) 274 3368 y(The) p
Fl 42 w(FORMAT) p Fo 41 w(macro) 42 b(is) g(used) g(to) h(iden) m(tify)
f(the) h(ob) 5 b(ject) 43 b(\014le) f(format) g(and) g(the) p
Fl 42 w(DYNLINK) p Fo 40 w(macro) h(is) 274 3468 y(used) h(to) h(iden) m
(tify) f(the) h(dynamic) e(link) m(er) i(t) m(yp) s(e.) 82
b(Y) -8 b(ou) 45 b(ma) m(y) f(b) s(e) g(able) h(to) f(use) g(the) h
(existing) g(v) -5 b(alues) 274 3568 y(for) 39 b(these) h(without) f
(ha) m(ving) g(to) h(de\014ne) e(new) h(ones,) i(but) d(in) h(an) m(y) g
(case) h(y) m(ou) g(should) e(attempt) i(to) f(set) 274
3667 y(defaults) 25 b(for) f(these) h(macros) g(dep) s(ending) d(on) j
(the) f(v) -5 b(alues) 25 b(of) f(the) h(four) e(preceding) i(macros.)
39 b(A) 24 b(setting) i(of) p Fl 274 3767 a(FORMAT=FORMAT_NONE) p
Fo 23 w(indicates) j(that) f(reading) f(sym) m(b) s(ols) g(from) h(an) m
(y) f(ob) 5 b(ject) 29 b(\014les) e(is) h(not) g(supp) s(orted) 274
3866 y(and) 20 b(a) h(setting) h(of) p Fl 20 w(DYNLINK=DYNLINK_NONE) p
Fo 15 w(indicates) g(that) f(reading) f(sym) m(b) s(ols) g(from) g
(shared) g(libraries) 274 3966 y(is) 31 b(not) g(supp) s(orted.) 274
4087 y(If) 22 b(the) g(ob) 5 b(ject) 23 b(\014le) g(format) f(of) g
(the) h(new) e(system) i(is) f(not) g(curren) m(tly) g(supp) s(orted,) h
(p) s(erhaps) d(it) j(is) f(supp) s(orted) 274 4187 y(b) m(y) i(the) f
(GNU) h(BFD) g(library) -8 b(.) 38 b(This) 23 b(can) g(b) s(e) g(used) f
(as) h(a) h(catc) m(h-all) i(solution) e(to) g(pro) m(vide) f(sym) m(b)
s(ol) g(reading) 274 4286 y(supp) s(ort) j(for) h(the) h(mpatrol) g
(library) f(with) g(ob) 5 b(ject) 28 b(\014le) g(formats) g(that) g
(are) f(obscure) h(or) f(are) h(just) f(hard) f(to) 274
4386 y(implemen) m(t) 34 b(readers) f(for.) 47 b(Y) -8
b(ou'd) 33 b(b) s(e) g(surprised) e(at) i(ho) m(w) g(man) m(y) g(ob) 5
b(ject) 34 b(\014le) f(formats) g(are) g(supp) s(orted) 274
4486 y(b) m(y) i(that) g(library) e(and) h(if) g(the) h(new) f(format) g
(is) h(supp) s(orted) d(then) i(try) g(de\014ning) p
Fl 34 w(FORMAT=FORMAT_BFD) p Fo 274 4585 a(for) d(the) f(new) g
(system.) 274 4706 y(In) c(all) h(six) f(of) g(the) h(ab) s(o) m(v) m
(e) g(target) h(macros,) f(care) g(should) e(b) s(e) h(tak) m(en) h
(not) f(to) h(de\014ne) e(a) i(new) e(macro) i(that) g(is) 274
4806 y(e\013ectiv) m(ely) i(the) e(same) f(as) g(an) g(existing) h
(one,) h(unless) d(there) h(are) h(signi\014can) m(t) g(di\013erences.)
39 b(F) -8 b(or) 27 b(example,) 274 4905 y(the) k(dynamic) f(link) m
(er) h(used) f(on) g(BSD) h(systems) g(is) f(sligh) m(tly) i
(di\013eren) m(t) f(from) f(the) h(dynamic) f(link) m(er) h(used) 274
5005 y(on) 24 b(SunOS,) f(but) g(they) h(b) s(oth) g(use) p
Fl 23 w(DYNLINK=DYNLINK_BSD) p Fo 19 w(b) s(ecause) g(the) h
(underlying) e(dynamic) h(link) m(er) 274 5105 y(uses) 30
b(the) h(same) g(data) g(structures) f(|) g(they) g(are) h(just) f
(named) g(di\013eren) m(tly) h(on) f(the) h(t) m(w) m(o) g(systems.) 274
5226 y(Note) f(that) e(there) g(are) g(also) g(corresp) s(onding) p
Fl 27 w(*_STR) p Fo 26 w(macros) h(for) e(all) i(six) e(of) h(the) g
(ab) s(o) m(v) m(e) h(target) g(macros.) 274 5325 y(These) i(are) g
(used) e(when) h(displa) m(ying) g(the) h(target) h(en) m(vironmen) m
(t) f(information) g(in) f(the) h(mpatrol) f(log) i(\014le) 274
5425 y(so) f(they) g(should) e(b) s(e) h(as) g(accurate) i(as) f(p) s
(ossible) f(so) g(as) h(to) g(a) m(v) m(oid) h(misleading) f(users.) 274
5546 y(Finally) -8 b(,) 44 b(y) m(ou) d(should) d(determine) i(if) g
(it) h(is) e(necessary) i(to) f(de\014ne) f(an) m(y) i(sp) s(ecial) f
(macros) g(in) g(order) f(to) 274 5645 y(obtain) 32 b(all) h(of) e(the)
h(required) e(de\014nitions) h(from) g(the) h(system) f(header) g
(\014les.) 44 b(Man) m(y) 32 b(compilers) g(default) p
90 rotate dyy eop
%%Page: 186 192
186 191 bop Fo 94 -116 a(186) 3332 b(mpatrol) 274 365
y(to) 36 b(pro) m(viding) f(an) g(ANSI) f(C) h(or) g(C) p
Fl(++) p Fo 34 w(en) m(vironmen) m(t) g(without) g(an) m(y) g
(extensions,) i(but) d(as) i(the) f(mpatrol) 274 465
y(library) 21 b(uses) g(additional) h(features) f(that) h(are) f(not) h
(pro) m(vided) e(b) m(y) h(these) h(standards,) g(it) f(ma) m(y) h(b) s
(e) f(necessary) 274 565 y(to) 32 b(de\014ne) e(additional) h(macros) g
(that) g(allo) m(w) h(the) f(compiler) g(to) h(see) f(the) g
(de\014nitions) f(of) g(these) h(features.) 274 664 y(F) -8
b(or) 43 b(example,) j(the) p Fl 42 w(_POSIX_SOURCE) p
Fo 39 w(macro) c(is) g(de\014ned) f(here) h(for) g(all) h(UNIX) f
(platforms) g(so) g(that) 274 764 y(mpatrol) g(can) f(mak) m(e) h(use) f
(of) g(the) g(POSIX) f(extensions.) 73 b(Note) 43 b(that) e(`) p
Fl(src/target.h) p Fo(') e(is) i(the) g(only) 274 863
y(mpatrol) 30 b(library) f(source) g(\014le) h(that) g(refers) e(to) i
(the) g(prede\014ned) d(prepro) s(cessor) i(macros) h(de\014ned) e(b) m
(y) h(the) 274 963 y(system) i(C) e(compiler) i(on) e(a) i(particular) f
(system) g(\(apart) g(from) g(a) g(few) g(necessary) g(exceptions\)) h
(and) f(the) 274 1063 y(rest) f(of) g(the) g(source) f(co) s(de) h
(refers) f(to) i(the) e(six) h(aforemen) m(tioned) h(macros) f(for) f
(conditional) i(compilation.) 144 1191 y(2.) 60 b(Mak) m(e) 32
b(an) m(y) f(required) f(c) m(hanges) h(in) f(`) p Fl(src/memory.c) p
Fo(') e(in) i(order) g(to) h(supp) s(ort) d(the) j(new) f(system.) 274
1320 y(The) i(mpatrol) h(library) -8 b(,) 32 b(lik) m(e) i(the) e
(system) g(mallo) s(c) i(library) d(it) i(is) f(replacing,) i(m) m(ust)
e(ha) m(v) m(e) h(some) g(w) m(a) m(y) g(of) 274 1419
y(allo) s(cating) 41 b(memory) d(from) f(the) i(system) f(heap) g(for) g
(a) g(pro) s(cess.) 64 b(F) -8 b(or) 38 b(UNIX) h(systems,) h(this) e
(is) g(done) 274 1519 y(b) m(y) 43 b(calling) p Fl 45
w(sbrk\(\)) p Fo 41 w(and/or) p Fl 43 w(mmap\(\)) p Fo
41 w(but) f(this) h(is) g(lik) m(ely) i(to) f(b) s(e) e(completely) j
(di\013eren) m(t) e(for) g(other) 274 1619 y(op) s(erating) 27
b(systems.) 39 b(The) 26 b(mpatrol) h(library) e(m) m(ust) i(also) g
(ha) m(v) m(e) g(some) g(w) m(a) m(y) g(of) f(returning) g(the) g(allo)
s(cated) 274 1718 y(heap) 43 b(memory) g(bac) m(k) g(to) h(the) f(op) s
(erating) g(system,) j(although) d(on) g(systems) g(with) f(virtual) h
(memory) 274 1818 y(this) 31 b(is) h(not) f(really) h(an) f(issue) g
(\(see) p Fl 32 w(MP_DELETEHEAP) p Fo 27 w(in) g(`) p
Fl(src/config.h) p Fo('\).) 40 b(If) 31 b(there) g(is) g(curren) m(tly)
g(no) 274 1918 y(supp) s(ort) 22 b(in) i(the) g(mpatrol) g(library) f
(for) g(allo) s(cating) j(and) d(returning) g(system) h(heap) g(memory)
f(for) h(the) f(new) 274 2017 y(system) 30 b(then) f(y) m(ou) h(m) m
(ust) g(mo) s(dify) p Fl 28 w(__mp_memalloc\(\)) p Fo
26 w(and) p Fl 29 w(__mp_memfree\(\)) p Fo 25 w(to) h(add) e(the) g
(supp) s(ort.) 274 2117 y(Y) -8 b(ou) 39 b(should) d(de\014ne) p
Fl 37 w(MP_MMAP_SUPPORT) p Fo 33 w(in) h(`) p Fl(src/config.h) p
Fo(') e(if) j(the) f(op) s(erating) h(system) g(is) g(UNIX) 274
2216 y(and) 30 b(the) h(system) f(v) -5 b(arian) m(t) 32
b(supp) s(orts) c(the) p Fl 31 w(mmap\(\)) p Fo 28 w(system) j(call.)
274 2345 y(Note) i(that) f(some) g(\(mainly) g(em) m(b) s(edded\)) f
(systems) g(ma) m(y) h(ha) m(v) m(e) h(no) e(system) h(heap) f(a) m(v)
-5 b(ailable) 34 b(for) d(a) h(pro-) 274 2445 y(gram) i(to) g(use.) 49
b(If) 33 b(that) h(is) g(the) f(case) i(then) e(the) g(mpatrol) h
(library) f(can) g(b) s(e) g(built) g(to) h(allo) s(cate) i(memory) 274
2544 y(from) 42 b(a) g(static) i(arra) m(y) e(whose) g(size) g(is) g
(\014xed) g(at) g(compile-time.) 78 b(The) p Fl 41 w(MP_ARRAY_SUPPORT) p
Fo 37 w(macro) 274 2644 y(should) 35 b(b) s(e) g(de\014ned) f(in) h(`) p
Fl(src/config.h) p Fo(') e(and) i(the) p Fl 35 w(MP_ARRAY_SIZE) p
Fo 32 w(macro) h(should) f(b) s(e) g(set) h(to) g(the) 274
2744 y(maxim) m(um) c(n) m(um) m(b) s(er) f(of) h(b) m(ytes) h(that) f
(the) g(sim) m(ulated) h(heap) f(should) f(b) s(e) g(able) i(to) f
(hold.) 45 b(Keep) 32 b(in) g(mind) 274 2843 y(that) c(all) f(of) g
(the) g(in) m(ternal) g(mpatrol) g(library) f(data) i(structures) e
(will) h(also) g(b) s(e) f(allo) s(cated) j(from) d(this) g(arra) m(y)
274 2943 y(so) 31 b(it) g(is) f(imp) s(ortan) m(t) h(to) g(mak) m(e) g
(it) g(large) h(enough.) 274 3071 y(Op) s(erating) k(systems) h(with) f
(virtual) g(memory) g(allo) m(w) i(mpatrol) f(to) g(protect) g(certain)
g(regions) g(of) f(heap) 274 3171 y(memory) 46 b(to) g(ensure) f(that) h
(they) f(are) h(not) g(o) m(v) m(erwritten.) 87 b(The) p
Fl 45 w(MP_PROTECT_SUPPORT) p Fo 40 w(macro) 46 b(in) 274
3271 y(`) p Fl(src/config.h) p Fo(') 52 b(con) m(trols) j(whether) f
(the) g(op) s(erating) h(system) f(supp) s(orts) e(this,) 60
b(and) 54 b(the) p Fl 54 w(__mp_) 274 3370 y(memprotect\(\)) p
Fo 43 w(and) p Fl 45 w(__mp_memquery\(\)) p Fo 41 w(functions) 45
b(should) g(b) s(e) g(up) s(dated) f(to) j(supp) s(ort) d(the) h(new)
274 3470 y(system.) 61 b(Y) -8 b(ou) 37 b(should) f(also) h(de\014ne) p
Fl 37 w(MP_MINCORE_SUPPORT) p Fo 31 w(in) g(`) p Fl(src/config.h) p
Fo(') d(if) j(the) f(op) s(erating) 274 3570 y(system) 43
b(is) f(UNIX) g(and) f(the) h(system) g(v) -5 b(arian) m(t) 43
b(supp) s(orts) d(the) p Fl 42 w(mincore\(\)) p Fo 40
w(system) i(call.) 76 b(The) p Fl 42 w(MP_) 274 3669
y(WATCH_SUPPORT) p Fo 33 w(macro) 36 b(con) m(trols) h(the) f(supp) s
(ort) e(of) h(soft) m(w) m(are) j(w) m(atc) m(hp) s(oin) m(ts) e(in) g
(a) g(similar) g(w) m(a) m(y) h(and) 274 3769 y(the) p
Fl 31 w(__mp_memwatch\(\)) p Fo 26 w(function) 30 b(should) g(b) s(e) f
(up) s(dated) h(if) g(they) g(are) h(supp) s(orted.) 274
3897 y(If) i(the) h(new) f(system) g(is) h(a) g(UNIX) f(system) h(and) e
(it) i(supp) s(orts) e(the) h(`) p Fl(/proc) p Fo(') g(\014lesystem) h
(then) f(y) m(ou) g(ma) m(y) 274 3997 y(wish) i(to) h(de\014ne) p
Fl 35 w(MP_PROCFS_SUPPORT) p Fo 30 w(in) f(`) p Fl(src/config.h) p
Fo('.) 53 b(Ho) m(w) m(ev) m(er,) 39 b(this) c(is) h(only) f(necessary)
h(if) 274 4097 y(there) i(is) g(a) g(w) m(a) m(y) h(to) f(detect) h
(the) f(\014lename) g(the) f(curren) m(t) h(pro) s(cess) f(w) m(as) h
(in) m(v) m(ok) m(ed) h(with) e(\() p Fl(MP_PROCFS_) 274
4196 y(CMDNAME) p Fo(\)) g(or) h(a) h(w) m(a) m(y) g(to) g(obtain) f
(the) h(\014lehandle) f(of) g(the) g(executable) i(\014le) e(for) g
(the) g(curren) m(t) g(pro) s(cess) 274 4296 y(\() p
Fl(MP_PROCFS_EXENAME) p Fo(\).) 52 b(It) 35 b(ma) m(y) h(also) g(b) s
(e) e(necessary) i(if) p Fl 35 w(MP_WATCH_SUPPORT) p
Fo 31 w(is) f(de\014ned) f(and) h(the) 274 4396 y(only) 26
b(w) m(a) m(y) g(to) h(set) f(the) f(w) m(atc) m(hp) s(oin) m(ts) i(is)
e(via) h(a) g(\014le) g(in) f(the) g(`) p Fl(/proc) p
Fo(') g(\014lesystem) h(\() p Fl(MP_PROCFS_CTLNAME) p
Fo(\).) 274 4524 y(Finally) -8 b(,) 26 b(y) m(ou) e(should) d(add) i
(supp) s(ort) e(for) h(determining) h(the) g(system) g(page) g(size) h
(in) p Fl 23 w(pagesize\(\)) p Fo 20 w(and) e(the) 274
4624 y(pro) s(cess) 29 b(iden) m(ti\014er) h(for) f(the) h(curren) m(t)
f(pro) s(cess) g(in) p Fl 29 w(__mp_processid\(\)) p
Fo 25 w(if) g(the) h(system) f(is) h(not) f(already) 274
4723 y(supp) s(orted) p Fh 673 4690 a(1) p Fo 709 4723
a(.) 60 b(Y) -8 b(ou) 38 b(will) f(also) h(ha) m(v) m(e) g(to) f(add) g
(a) g(w) m(a) m(y) h(to) f(determine) g(the) g(\014lename) h(that) f
(the) g(curren) m(t) 274 4823 y(pro) s(cess) 29 b(w) m(as) g(in) m(v) m
(ok) m(ed) h(with) f(in) p Fl 29 w(progname\(\)) p Fo(,) d(otherwise) k
(the) f(`) p Fl(PROGFILE) p Fo(') e(option) i(will) g(alw) m(a) m(ys) i
(ha) m(v) m(e) 274 4923 y(to) 24 b(b) s(e) e(used) g(in) h(order) f(to)
i(read) e(sym) m(b) s(ols) h(from) f(the) h(executable) i(\014le.) 38
b(This) 22 b(can) h(b) s(e) f(done) h(in) f(a) i(m) m(ultitude) 274
5022 y(of) k(w) m(a) m(ys,) i(including) d(examining) h(global) i(v) -5
b(ariables,) 29 b(making) f(function) f(calls) i(to) g(query) e(the) h
(system) g(or) 274 5122 y(tra) m(v) m(ersing) k(the) f(call) g(stac) m
(k.) 144 5250 y(3.) 60 b(Mak) m(e) 30 b(an) m(y) e(required) f(c) m
(hanges) h(in) g(`) p Fl(src/stack.c) p Fo(') d(in) i(order) g(to) i
(supp) s(ort) d(stac) m(k) j(tra) m(v) m(ersal) g(in) f(the) f(new) 274
5350 y(pro) s(cessor) j(arc) m(hitecture.) p 94 5462
1200 4 v Fh 143 5522 a(1) p Fg 219 5554 a(Y) -6 b(ou) 28
b(will) i(also) g(ha) n(v) n(e) e(to) h(mak) n(e) g(an) n(y) f(c) n
(hanges) h(to) p Ff 29 w(pagesize\(\)) p Fg 31 w(in) g(`) p
Ff(src/mpalloc.c) p Fg(') j(and) c(p) r(ossibly) i(also) g(ha) n(v) n
(e) e(to) h(de\014ne) p Ff 219 5645 a(MP_MEMALIGN_SUPPORT) p
Fg 30 w(in) d(`) p Ff(src/config.h) p Fg(') j(if) d(the) f(new) h
(system) g(supp) r(orts) f(the) p Ff 26 w(memalign\(\)) p
Fg 28 w(function.) p 90 rotate dyy eop
%%Page: 187 193
187 192 bop Fo 94 -116 a(App) s(endix) 29 b(H:) i(P) m(orting) 2807
b(187) 274 365 y(If) 44 b(the) g(new) f(pro) s(cessor) h(arc) m
(hitecture) h(is) f(CISC) e(\(complex) j(instruction) f(set) g
(computer\)) g(then) g(the) 274 465 y(c) m(hances) 23
b(are) g(that) f(y) m(ou) h(can) f(easily) h(\014nd) d(the) i(frame) g
(p) s(oin) m(ter) g(and) g(return) e(address) i(of) g(the) g(curren) m
(t) f(stac) m(k) 274 565 y(frame) 33 b(b) m(y) f(simply) g(lo) s(oking)
h(at) g(a) g(constan) m(t) g(o\013set) g(from) f(the) h(parameter) g
(to) g(the) p Fl 32 w(__mp_getframe\(\)) p Fo 274 664
a(function.) 40 b(The) 27 b(call) j(c) m(hain) e(can) g(then) g(b) s(e)
f(obtained) h(b) m(y) g(follo) m(wing) i(the) e(frame) g(p) s(oin) m
(ter) g(at) g(eac) m(h) h(stage.) 274 764 y(This) k(can) g(sometimes) h
(b) s(e) e(disrupted) g(b) m(y) h(optimisations) h(that) g(do) e(not) i
(preserv) m(e) f(the) g(frame) g(p) s(oin) m(ter) 274
863 y(but) 28 b(this) f(is) h(usually) g(con\014ned) f(to) i(leaf) f
(routines) g(and) f(is) h(not) g(normally) g(an) g(issue.) 40
b(The) 27 b(In) m(tel) i(x86) g(and) 274 963 y(Motorola) 35
b(680x0) f(pro) s(cessor) f(families) g(are) g(go) s(o) s(d) f
(examples) h(to) g(lo) s(ok) h(at) f(when) e(implemen) m(ting) i(stac) m
(k) 274 1063 y(tra) m(v) m(ersal) g(for) d(a) h(CISC) e(pro) s(cessor.)
274 1191 y(On) j(the) h(other) g(hand,) f(things) h(migh) m(t) g(not) g
(b) s(e) f(so) g(easy) i(if) e(the) h(new) f(pro) s(cessor) g(arc) m
(hitecture) i(is) f(RISC) 274 1291 y(\(reduced) c(instruction) h(set) g
(computer\).) 40 b(Suc) m(h) 29 b(pro) s(cessors) g(do) g(not) h(alw) m
(a) m(ys) h(ha) m(v) m(e) f(\014xed) f(format) g(stac) m(k) 274
1390 y(frames) p Fh 535 1357 a(2) p Fo 598 1390 a(and) c(so) g(other) h
(means) f(migh) m(t) h(ha) m(v) m(e) h(to) f(b) s(e) e(used.) 39
b(The) 24 b(Alpha) i(and) e(MIPS) h(pro) s(cessor) g(families) 274
1490 y(are) 37 b(examples) f(of) g(these) h(and) e(co) s(de) h(reading)
g(normally) g(has) g(to) g(b) s(e) g(used) f(in) g(order) h(to) g
(\014nd) f(the) h(call) 274 1590 y(instruction) j(from) f(the) g
(calling) i(routine.) 64 b(This) 38 b(then) g(has) g(to) h(b) s(e) f
(done) g(for) g(ev) m(ery) h(function) f(in) g(the) 274
1689 y(call) g(stac) m(k.) 59 b(An) 35 b(example) i(of) f(suc) m(h) g
(co) s(de) g(can) g(b) s(e) f(found) g(for) h(the) g(generic) h(MIPS) e
(implemen) m(tation.) 274 1789 y(An) m(y) 28 b(assem) m(bler) f(co) s
(de) g(that) h(needs) f(to) g(b) s(e) g(written) g(to) h(supp) s(ort) d
(the) i(stac) m(k) h(tra) m(v) m(ersal) h(implemen) m(tation) 274
1888 y(should) h(b) s(e) g(written) g(in) g(`) p Fl(src/machine.c) p
Fo('.) 274 2017 y(If) i(the) f(GNU) i(compiler) f(is) g(b) s(eing) f
(used) g(then) g(it) h(migh) m(t) g(b) s(e) f(p) s(ossible) h(to) g
(use) f(its) p Fl 32 w(__builtin_frame_) 274 2116 y(address\(\)) p
Fo 31 w(and) p Fl 33 w(__builtin_return_address) o(\(\)) p
Fo 27 w(builtin) i(functions) f(in) h(order) g(to) h(pro) m(vide) f
(stac) m(k) 274 2216 y(tra) m(v) m(ersal.) 51 b(These) 33
b(can) h(only) f(b) s(e) f(used) h(if) g(they) g(return) f(`) p
Fl(NULL) p Fo(') h(when) f(the) h(b) s(ottom) g(of) h(the) f(call) h
(stac) m(k) 274 2316 y(is) 29 b(reac) m(hed,) g(but) f(on) g(man) m(y) g
(arc) m(hitectures) i(the) e(GNU) h(compiler) g(do) s(es) e(not) i
(implemen) m(t) f(this) h(correctly) 274 2415 y(and) 23
b(so) g(this) f(metho) s(d) g(of) h(stac) m(k) h(tra) m(v) m(ersal) h
(cannot) e(b) s(e) f(used.) 38 b(Ev) m(en) 23 b(if) f(it) h(can,) i(it)
e(still) h(imp) s(oses) e(an) h(upp) s(er) 274 2515 y(limit) 36
b(on) f(the) g(size) g(of) g(the) g(stac) m(k) h(that) f(can) g(b) s(e)
f(tra) m(v) m(ersed.) 55 b(If) 34 b(this) h(is) g(not) g(an) f(issue) h
(then) f(it) i(can) f(b) s(e) 274 2615 y(enabled) d(with) g(the) p
Fl 32 w(MP_BUILTINSTACK_SUPPORT) p Fo 26 w(macro) h(in) e(`) p
Fl(src/config.h) p Fo(') e(and) j(the) g(maxim) m(um) 274
2714 y(size) 25 b(of) f(the) g(call) h(stac) m(k) g(that) g(can) f(b) s
(e) f(tra) m(v) m(ersed) h(can) h(b) s(e) e(set) h(b) m(y) g(c) m
(hanging) g(the) p Fl 24 w(MP_MAXSTACK) p Fo 21 w(macro) g(in) 274
2814 y(the) i(same) h(\014le.) 39 b(The) p Fl 25 w(MP_FULLSTACK) p
Fo 23 w(macro) 26 b(in) f(`) p Fl(src/config.h) p Fo(') e(should) i(b) s
(e) g(set) h(for) g(stac) m(k) h(tra) m(v) m(ersal) 274
2913 y(implemen) m(tations) 45 b(that) e(ha) m(v) m(e) h(no) e(limit) i
(to) f(the) g(maxim) m(um) f(size) i(of) f(the) f(call) i(stac) m(k) g
(that) g(can) f(b) s(e) 274 3013 y(tra) m(v) m(ersed.) f(Ob) m(viously)
31 b(that) g(is) f(not) h(the) f(case) i(for) p Fl 30
w(MP_BUILTINSTACK_SUPPORT) p Fo -1 w(.) 274 3141 y(Some) 57
b(op) s(erating) g(systems) g(ha) m(v) m(e) h(library) e(functions) h
(that) g(pro) m(vide) g(stac) m(k) h(tra) m(v) m(ersal) h(facilities)
274 3241 y(and) 47 b(so) h(y) m(ou) f(ma) m(y) h(wish) f(to) h(mak) m
(e) g(use) f(of) h(them) f(b) m(y) g(de\014ning) p Fl
46 w(MP_LIBRARYSTACK_SUPPORT) p Fo 41 w(in) 274 3341
y(`) p Fl(src/config.h) p Fo(') 35 b(and) i(implemen) m(ting) h(the) g
(co) s(de) f(to) h(call) h(them) e(in) g(`) p Fl(src/stack.c) p
Fo('.) 59 b(Examples) 38 b(of) 274 3440 y(systems) g(that) h(can) f
(mak) m(e) h(use) f(of) g(this) g(capabilit) m(y) i(are) e(IRIX) f(and)
h(T) -8 b(ru64,) 40 b(although) e(they) g(ha) m(v) m(e) i(a) 274
3540 y(dra) m(wbac) m(k) f(in) f(that) h(they) f(recursiv) m(ely) h
(call) p Fl 39 w(malloc\(\)) p Fo 36 w(and) f(so) g(w) m(ork) g(slo) m
(w) m(er) i(than) d(they) i(normally) 274 3640 y(w) m(ould.) 274
3768 y(If) 24 b(an) m(y) g(functions) f(from) h(an) f(external) i
(system) f(library) f(w) m(ere) i(used) e(to) h(help) f(implemen) m(t) i
(stac) m(k) g(tra) m(v) m(ersal) 274 3868 y(for) 31 b(the) g(new) g
(pro) s(cessor) f(arc) m(hitecture) j(then) d(y) m(ou) i(ma) m(y) f
(also) h(ha) m(v) m(e) g(to) g(mo) s(dify) e(the) p Fl
31 w(MP_SYSTEM_LIBS) p Fo 274 3967 a(de\014nitions) 43
b(in) g(`) p Fl(src/config.h) p Fo(',) g(the) p Fl 44
w(__mp_lib*) p Fo 40 w(de\014nitions) g(in) g(`) p Fl(src/inter.c) p
Fo(') d(and) j(the) p Fl 43 w(AC_) 274 4067 y(CHECK_LIB\(\)) p
Fo 28 w(calls) 31 b(in) f(`) p Fl(extra/mpatrol.m4) p
Fo('.) 144 4195 y(4.) 60 b(Mak) m(e) 47 b(an) m(y) e(required) f(c) m
(hanges) i(in) f(`) p Fl(src/symbol.c) p Fo(') d(in) i(order) h(to) g
(supp) s(ort) e(an) m(y) j(new) e(ob) 5 b(ject) 46 b(\014le) 274
4295 y(formats) 31 b(and) f(dynamic) g(link) m(ers.) 274
4423 y(The) 35 b(b) s(est) g(place) h(to) f(\014nd) f(information) h
(on) g(the) g(ob) 5 b(ject) 36 b(\014le) f(format) h(and) e(dynamic) h
(link) m(er) g(in) m(terface) 274 4523 y(supp) s(orted) 29
b(b) m(y) g(a) i(new) e(system) h(is) g(the) h(on-line) f(man) m(ual) h
(pages) f(and) g(header) f(\014les) h(on) g(that) h(system.) 40
b(If) 274 4622 y(that) 32 b(fails) g(then) f(try) g(the) g(hardcop) m
(y) g(tec) m(hnical) i(reference) e(man) m(uals) h(that) g(came) g
(with) e(the) i(system) f(or) 274 4722 y(the) j(in) m(ternet) g(in) f
(order) g(to) h(\014nd) d(the) j(information) f(y) m(ou) h(need.) 49
b(There) 32 b(ma) m(y) i(also) g(b) s(e) f(standards) f(that) 274
4822 y(de\014ne) e(the) h(ob) 5 b(ject) 31 b(\014le) f(format) h(and) f
(dynamic) g(link) m(er) h(in) m(terface) h(across) f(sev) m(eral) g
(systems.) 274 4950 y(If) 21 b(y) m(ou) g(de\014ned) f(a) h(new) p
Fl 20 w(FORMAT) p Fo 19 w(macro) h(in) e(`) p Fl(src/target.h) p
Fo(') e(then) j(y) m(ou) g(m) m(ust) g(add) f(the) h(co) s(de) g(to) h
(supp) s(ort) 274 5050 y(it) 31 b(in) f(`) p Fl(src/symbol.c) p
Fo('.) 37 b(Y) -8 b(ou) 31 b(will) f(t) m(ypically) i(ha) m(v) m(e) f
(to) f(add) g(new) p Fl 29 w(addsymbol\(\)) p Fo 27 w(and) p
Fl 29 w(addsymbols\(\)) p Fo 274 5149 a(functions) 42
b(that) g(are) g(sp) s(eci\014c) f(to) h(the) g(new) f(ob) 5
b(ject) 43 b(\014le) e(format) h(and) f(then) g(add) g(supp) s(ort) f
(for) h(that) 274 5249 y(format) c(in) p Fl 35 w(__mp_addsymbols\(\)) p
Fo 32 w(and) p Fl 35 w(__mp_findsymbol\(\)) p Fo(.) 53
b(If) 35 b(it) i(is) f(p) s(ossible) f(to) i(easily) g(read) f(a) 274
5348 y(line) 31 b(n) m(um) m(b) s(er) e(table) i(from) f(the) h(ob) 5
b(ject) 31 b(\014le) f(format) h(then) f(y) m(ou) g(ma) m(y) h(also) g
(w) m(an) m(t) h(to) f(extend) f(the) p Fl 30 w(__mp_) p
94 5462 1200 4 v Fh 143 5522 a(2) p Fg 219 5554 a(Although) e(some) h
(do,) h(and) e(y) n(ou) g(can) h(follo) n(w) i(the) d(instructions) h
(for) g(CISC) g(pro) r(cessors) h(ab) r(o) n(v) n(e) f(in) f(order) h
(to) g(pro) n(vide) f(stac) n(k) 219 5645 y(tra) n(v) n(ersal) e(supp) r
(ort) g(for) g(them.) p 90 rotate dyy eop
%%Page: 188 194
188 193 bop Fo 94 -116 a(188) 3332 b(mpatrol) p Fl 274
365 a(findsource\(\)) p Fo 22 w(function) 24 b(to) i(handle) e(the) h
(new) f(format) h(as) g(w) m(ell) h(in) e(order) g(to) i(supp) s(ort) d
(the) i(`) p Fl(USEDEBUG) p Fo(') 274 465 y(option.) 274
595 y(If) 50 b(y) m(ou) g(de\014ned) f(a) i(new) p Fl
49 w(DYNLINK) p Fo 48 w(macro) g(in) e(`) p Fl(src/target.h) p
Fo(') e(then) j(y) m(ou) h(m) m(ust) e(also) i(add) f(the) 274
695 y(co) s(de) 38 b(to) f(supp) s(ort) f(it) h(in) g(`) p
Fl(src/symbol.c) p Fo('.) 57 b(Y) -8 b(ou) 38 b(will) f(normally) g
(only) g(ha) m(v) m(e) h(to) g(extend) f(the) p Fl 37
w(__mp_) 274 794 y(addextsymbols\(\)) p Fo 22 w(function) 25
b(to) h(supp) s(ort) d(the) j(new) f(dynamic) g(link) m(er) h(but) e
(there) i(ma) m(y) g(b) s(e) e(some) i(extra) 274 894
y(w) m(ork) h(required) e(to) h(translate) i(the) e(base) g(addresses) f
(of) h(an) m(y) h(sym) m(b) s(ols) e(read) h(from) g(shared) f
(libraries) h(in) m(to) 274 994 y(real) 32 b(addresses.) 274
1124 y(In) i(b) s(oth) g(cases,) j(try) e(to) g(base) g(the) g(new) f
(co) s(de) h(on) f(the) h(structure) f(of) h(the) g(existing) g(co) s
(de) g(since) g(it) g(has) 274 1223 y(b) s(een) 27 b(pro) m(v) m(en) h
(to) g(w) m(ork) g(w) m(ell) g(and) f(there) g(is) h(no) f(p) s(oin) m
(t) h(in) f(rein) m(v) m(en) m(ting) i(the) e(wheel) p
Fh 3083 1190 a(3) p Fo 3121 1223 a(.) 39 b(Y) -8 b(ou) 28
b(migh) m(t) h(decide) 274 1323 y(to) i(mak) m(e) f(c) m(hanges) h(to) f
(an) f(existing) i(implemen) m(tation) g(instead;) f(this) g(w) m(as) g
(done) f(with) g(the) h(COFF) g(and) 274 1423 y(X) m(COFF) i(formats,) e
(for) g(example.) 274 1553 y(If) i(an) m(y) g(functions) f(from) h(an) f
(external) i(ob) 5 b(ject) 33 b(\014le) f(access) h(library) e(w) m
(ere) i(used) e(to) h(help) g(read) f(sym) m(b) s(ols) 274
1652 y(from) 39 b(the) f(new) g(ob) 5 b(ject) 40 b(\014le) e(format) h
(then) g(y) m(ou) g(ma) m(y) g(also) g(ha) m(v) m(e) h(to) f(mo) s
(dify) f(the) p Fl 39 w(MP_SYMBOL_LIBS) p Fo 274 1752
a(de\014nitions) 43 b(in) g(`) p Fl(src/config.h) p Fo(',) g(the) p
Fl 44 w(__mp_lib*) p Fo 40 w(de\014nitions) g(in) g(`) p
Fl(src/inter.c) p Fo(') d(and) j(the) p Fl 43 w(AC_) 274
1852 y(CHECK_LIB\(\)) p Fo 28 w(calls) 31 b(in) f(`) p
Fl(extra/mpatrol.m4) p Fo('.) 144 1982 y(5.) 60 b(Mak) m(e) 33
b(an) m(y) d(required) g(c) m(hanges) i(in) e(`) p Fl(src/signals.c) p
Fo(') d(in) j(order) g(to) h(obtain) g(the) g(address) f(of) g(an) h
(illegal) 274 2081 y(memory) g(access) g(in) g(the) f(new) g(system.)
274 2212 y(If) 56 b(the) h(system) f(supp) s(orts) e(the) p
Fl 57 w(SA_SIGINFO) p Fo 53 w(\015ag) j(when) e(setting) i(up) e(a) i
(signal) g(handler) e(with) p Fl 274 2311 a(sigaction\(\)) p
Fo 26 w(then) 29 b(it) g(supp) s(orts) e(arc) m(hitecture-indep) s
(enden) m(t) j(determination) g(of) f(the) g(address) f(of) h(an) 274
2411 y(illegal) c(memory) e(access) g(and) f(the) p Fl
23 w(MP_SIGINFO_SUPPORT) p Fo 17 w(macro) h(should) f(b) s(e) f(set) i
(in) g(`) p Fl(src/config.h) p Fo('.) 274 2541 y(If) k(this) g(is) g
(not) g(the) g(case) h(then) e(an) h(arc) m(hitecture-dep) s(enden) m
(t) h(metho) s(d) e(m) m(ust) h(b) s(e) f(emplo) m(y) m(ed) i(in) f
(order) f(to) 274 2641 y(obtain) k(this) f(information.) 41
b(On) 29 b(UNIX) g(systems,) h(signal) g(handlers) e(can) i(ha) m(v) m
(e) g(additional) h(argumen) m(ts) 274 2740 y(that) 38
b(ma) m(y) g(b) s(e) e(used) h(to) g(prob) s(e) f(for) h(the) g
(address) g(of) g(a) g(segmen) m(tation) j(violation) e(or) g(bus) d
(error.) 61 b(On) 274 2840 y(Windo) m(ws) 24 b(systems,) h(an) f
(exception) h(record) e(can) h(b) s(e) f(obtained) h(whenev) m(er) g
(an) f(access) i(violation) h(o) s(ccurs.) 274 2939 y(In) 37
b(either) g(case,) i(the) e(sa) m(v) m(ed) h(register) g(con) m
(taining) g(the) f(relev) -5 b(an) m(t) 38 b(address) e(m) m(ust) h(b) s
(e) f(determined.) 59 b(If) 274 3039 y(this) 30 b(is) g(not) g(done) f
(then) g(the) h(mpatrol) g(library) g(will) g(compile) g(correctly) -8
b(,) 32 b(but) d(the) h(addresses) f(of) h(illegal) 274
3139 y(memory) h(accesses) h(can) e(nev) m(er) h(b) s(e) f(determined.)
144 3269 y(6.) 60 b(Mak) m(e) 26 b(an) m(y) f(required) f(c) m(hanges) h
(in) f(`) p Fl(src/mutex.c) p Fo(') e(in) i(order) g(to) h(supp) s(ort)
e(threads) h(in) g(the) h(new) f(system.) 274 3399 y(The) g(mpatrol) g
(library) f(m) m(ust) h(b) s(e) f(able) i(to) f(lo) s(c) m(k) h(its) g
(data) f(structures) f(in) h(a) g(m) m(ultithreaded) g(en) m(vironmen) m
(t) 274 3499 y(otherwise) 31 b(t) m(w) m(o) h(threads) e(ma) m(y) h
(allo) s(cate) i(memory) e(at) g(the) g(same) f(time) i(and) d(the) i
(heap) f(w) m(ould) h(b) s(ecome) 274 3598 y(corrupted,) 39
b(for) d(example.) 62 b(On) 36 b(op) s(erating) h(systems) g(that) h
(ha) m(v) m(e) g(virtual) g(memory) -8 b(,) 39 b(pro) s(cesses) e(ha) m
(v) m(e) 274 3698 y(their) f(o) m(wn) g(address) f(space) h(and) g(can)
g(ha) m(v) m(e) h(more) f(than) f(one) h(thread) g(of) g(execution) h
(running) d(at) j(one) 274 3797 y(time.) k(On) 26 b(other) h(op) s
(erating) g(systems,) h(there) f(is) f(only) h(one) g(pro) s(cess) g
(\(the) g(op) s(erating) g(system\)) h(and) e(the) 274
3897 y(threads) 32 b(are) g(the) g(user) f(pro) s(cesses) g(that) h
(all) h(share) e(the) h(same) g(address) f(space.) 45
b(F) -8 b(or) 33 b(that) f(reason,) h(y) m(ou) 274 3997
y(ma) m(y) i(wish) e(to) i(use) f(semaphores) f(on) h(suc) m(h) g
(systems) g(since) g(they) g(ha) m(v) m(e) h(no) f(supp) s(ort) f(for) g
(threads) h(in) g(a) 274 4096 y(con) m(v) m(en) m(tional) g(sense.) 274
4226 y(F) -8 b(or) 35 b(systems) f(that) g(do) g(supp) s(ort) e
(threads,) j(m) m(utexes) f(should) f(b) s(e) h(used) f(to) h(lo) s(c) m
(k) h(the) f(mpatrol) g(library) 274 4326 y(data) 41
b(structures.) 70 b(On) 40 b(UNIX) g(platforms,) j(POSIX) d(threads) g
(are) g(used) g(but) g(this) g(could) g(easily) i(b) s(e) 274
4426 y(extended) 36 b(to) g(other) g(threads) g(implemen) m(tations.) 58
b(On) 34 b(Windo) m(ws) i(platforms,) h(Win32) g(API) e(threads) 274
4525 y(are) 30 b(used.) 39 b(F) -8 b(or) 30 b(other) g(systems,) f
(POSIX) f(threads) h(are) h(preferred) d(but) i(it) g(should) g(not) g
(b) s(e) f(to) s(o) i(hard) e(to) 274 4625 y(add) i(supp) s(ort) e(for)
i(others.) 40 b(There) 30 b(should) f(also) i(b) s(e) e(a) h(w) m(a) m
(y) h(to) g(return) e(the) h(curren) m(t) g(thread) f(iden) m
(ti\014er.) 274 4755 y(Y) -8 b(ou) 31 b(should) e(also) h(determine) g
(if) g(it) g(is) g(necessary) h(to) f(de\014ne) f(an) m(y) h(sp) s
(ecial) h(macros) f(in) g(order) f(to) h(obtain) 274
4855 y(all) 44 b(of) e(the) g(required) g(threadsafe) g(de\014nitions) g
(from) g(the) g(system) g(header) g(\014les.) 77 b(Man) m(y) 43
b(compilers) 274 4954 y(require) 29 b(an) h(option) f(to) h(b) s(e) f
(sp) s(eci\014ed) g(on) g(the) g(command) g(line) h(in) f(order) g(to) h
(compile) g(threadsafe) f(co) s(de,) 274 5054 y(but) 40
b(some) h(still) g(only) g(require) f(a) g(prepro) s(cessor) g(macro) h
(to) g(b) s(e) f(de\014ned) f(during) g(compilation.) 72
b(F) -8 b(or) 274 5154 y(example,) 39 b(the) p Fl 37
w(_REENTRANT) p Fo 34 w(macro) e(is) f(de\014ned) f(for) i(Solaris) f
(systems) h(so) f(that) h(mpatrol) g(can) g(mak) m(e) 274
5253 y(use) h(of) g(the) h(threadsafe) f(de\014nitions.) 63
b(An) m(y) 38 b(suc) m(h) g(macros) g(should) f(b) s(e) g(de\014ned) g
(in) h(`) p Fl(src/config.h) p Fo(') 274 5353 y(when) p
Fl 30 w(MP_THREADS_SUPPORT) p Fo 25 w(is) 31 b(de\014ned.) p
94 5462 1200 4 v Fh 143 5522 a(3) p Fg 219 5554 a(Y) -6
b(ou) 22 b(migh) n(t) g(also) i(b) r(e) e(in) n(terested) h(to) f(note)
h(that) f(y) n(ou) g(can) h(safely) g(call) p Ff 24 w(malloc\(\)) p
Fg 24 w(in) f(this) h(co) r(de) g(to) f(allo) r(cate) j(memory) e(|) f
(just) 219 5645 y(remem) n(b) r(er) k(to) g(clean) g(up) f(after) h(y) n
(ourself) 6 b(!) p 90 rotate dyy eop
%%Page: 189 195
189 194 bop Fo 94 -116 a(App) s(endix) 29 b(H:) i(P) m(orting) 2807
b(189) 274 365 y(The) 35 b(m) m(ultithreaded) h(v) m(ersion) f(of) h
(the) f(mpatrol) g(library) g(m) m(ust) g(b) s(e) g(initialised) h(b) s
(efore) f(a) h(pro) s(cess) e(b) s(e-) 274 465 y(comes) e(m) m
(ultithreaded) e(and) g(so) h(there) f(m) m(ust) h(b) s(e) e(a) i(w) m
(a) m(y) g(to) g(do) g(this) f(on) g(a) h(new) f(system.) 274
608 y(The) p Fl 31 w(MP_INIT_SUPPORT) p Fo 28 w(macro) i(should) e(b) s
(e) h(de\014ned) f(in) i(`) p Fl(src/config.h) p Fo(') c(if) k(the) f
(new) g(system) h(sup-) 274 708 y(p) s(orts) g(`) p Fl(.init) p
Fo(') f(and) g(`) p Fl(.fini) p Fo(') g(sections) i(that) g(get) g
(executed) g(b) s(efore) f(and) f(after) p Fl 33 w(main\(\)) p
Fo 30 w(resp) s(ectiv) m(ely) -8 b(.) 274 808 y(Both) 37
b(the) f(con) m(ten) m(ts) h(of) f(the) f(`) p Fl(.init) p
Fo(') g(section) i(\(whic) m(h) e(should) g(call) p Fl
37 w(__mp_initmutexes\(\)) p Fo 31 w(and) p Fl 35 w(__) 274
907 y(mp_init\(\)) p Fo(\)) 29 b(and) h(the) g(`) p Fl(.fini) p
Fo(') g(section) h(\(whic) m(h) g(should) e(call) p Fl
32 w(__mp_fini\(\)) p Fo(\)) f(should) h(b) s(e) h(written) g(in) 274
1007 y(`) p Fl(src/machine.c) p Fo(') e(in) i(assem) m(bler) h(co) s
(de.) 274 1150 y(There) 69 b(are) g(also) g(other) g(metho) s(ds) f(to)
i(initialise) g(and) e(terminate) i(the) f(mpatrol) g(library) f(in) 274
1250 y(`) p Fl(src/inter.c) p Fo(') 35 b(so) i(y) m(ou) g(ma) m(y) g
(need) g(to) g(use) g(one) g(of) f(them) h(\(or) g(add) f(a) i(new) e
(metho) s(d) g(of) h(y) m(our) g(o) m(wn\)) 274 1350
y(for) 51 b(the) g(new) g(system.) 103 b(Note) 52 b(that) f(if) p
Fl 51 w(MP_USE_ATEXIT) p Fo 48 w(is) g(de\014ned) e(in) i(`) p
Fl(src/config.h) p Fo(') d(then) 274 1449 y(these) c(metho) s(ds) e(of)
h(terminating) g(the) g(mpatrol) g(library) g(when) e(a) i(pro) s(cess)
g(ends) f(are) h(replaced) g(b) m(y) 274 1549 y(registering) 32
b(the) p Fl 31 w(__mp_fini\(\)) p Fo 27 w(function) e(with) p
Fl 30 w(atexit\(\)) p Fo(.) 274 1692 y(There) 23 b(ma) m(y) h(b) s(e) e
(problems) g(if) h(the) g(mpatrol) g(library) g(is) g(built) g(to) h(o)
m(v) m(erride) p Fl 24 w(malloc\(\)) p Fo 20 w(and) f(related) h(func-)
274 1792 y(tions) 29 b(if) f(the) g(system) g(C) g(library) g(calls) h
(them) f(b) s(efore) f(the) i(mpatrol) f(library) f(can) i(b) s(e) e
(initialised.) 41 b(There) 274 1892 y(is) 24 b(a) g(function) f(in) g
(`) p Fl(src/inter.c) p Fo(') e(on) i(UNIX) h(and) e(Windo) m(ws) i
(platforms) f(called) p Fl 25 w(crt_initialised\(\)) p
Fo 274 1991 a(whic) m(h) k(c) m(hec) m(ks) i(to) f(see) g(if) f(it) h
(is) f(safe) h(to) g(initialise) h(the) e(mpatrol) h(library) -8
b(,) 28 b(and) f(if) g(not) h(the) f(relev) -5 b(an) m(t) 29
b(func-) 274 2091 y(tions) c(will) g(use) p Fl 24 w(sbrk\(\)) p
Fo 23 w(to) g(allo) s(cate) i(the) e(memory) -8 b(.) 39
b(Y) -8 b(ou) 25 b(ma) m(y) g(ha) m(v) m(e) h(to) f(mo) s(dify) p
Fl 24 w(crt_initialised\(\)) p Fo 274 2191 a(to) 32 b(supp) s(ort) c
(the) j(new) f(system) g(if) h(there) f(are) h(initialisation) i
(problems.) 274 2334 y(If) 26 b(there) g(are) g(no) g(sp) s(ecial) g
(metho) s(ds) f(to) i(initialise) h(the) e(m) m(ultithreaded) g(v) m
(ersion) g(of) g(the) g(mpatrol) g(library) 274 2434
y(on) 36 b(a) g(new) f(system) h(then) f(it) h(will) g(simply) f(b) s
(e) g(initialised) i(at) f(the) g(\014rst) f(call) h(to) h(one) e(of) h
(its) g(functions,) 274 2533 y(hop) s(efully) 30 b(b) s(efore) g(the) h
(pro) s(cess) e(has) i(b) s(ecome) f(m) m(ultithreaded.) 274
2677 y(If) e(there) g(is) f(supp) s(ort) f(for) i(reading) g(sym) m(b) s
(ols) f(from) g(ob) 5 b(ject) 29 b(\014les) f(on) f(the) h(new) g
(system) f(then) h(y) m(ou) g(should) 274 2776 y(compile) c(and) f(run)
e(the) i(follo) m(wing) i(test) f(with) e(the) h(mpatrol) h(library) e
(to) i(c) m(hec) m(k) g(to) g(see) g(if) f(there) g(is) g(supp) s(ort)
274 2876 y(for) 31 b(calling) h(functions) e(b) m(y) g(their) h(start) g
(address.) 40 b(This) 30 b(is) g(not) h(alw) m(a) m(ys) h(true) e(on) h
(certain) g(systems) g(and) 274 2976 y(will) 38 b(most) g(lik) m(ely) h
(result) e(in) g(the) h(test) g(crashing) f(if) h(that) g(is) f(the) h
(case.) 63 b(If) 36 b(the) i(test) g(w) m(orks) g(then) f(the) p
Fl 274 3075 a(MP_INITFUNC_SUPPORT) p Fo 26 w(macro) 31
b(should) e(b) s(e) h(set) h(in) f(`) p Fl(src/config.h) p
Fo('.) p Fl 514 3223 a(#include) 46 b(<stdio.h>) 514
3327 y(#include) g("mpatrol.h") 514 3638 y(void) h
(__mp_init_test\(void\)) 514 3742 y({) 705 3846 y(puts\("__mp_init_*) c
(functions) j(work"\);) 514 3949 y(}) 514 4261 y(void) h
(__mp_fini_test\(void\)) 514 4365 y({) 705 4468 y(puts\("__mp_fini_*) c
(functions) j(work"\);) 514 4572 y(}) 514 4883 y(int) h(main\(void\))
514 4987 y({) 705 5091 y(malloc\(1\);) 705 5195 y(puts\("there) e
(should) h(be) h(a) h(line) e(of) i(output) e(above) g(and) h
(below"\);) 705 5299 y(return) f(EXIT_SUCCESS;) 514 5402
y(}) p Fo 274 5546 a(If) 34 b(an) m(y) g(functions) f(from) h(an) g
(external) g(threads) g(library) f(w) m(ere) h(used) g(to) g(lo) s(c) m
(k) h(the) f(data) h(structures) e(of) 274 5645 y(the) 28
b(m) m(ultithreaded) h(v) m(ersion) f(of) g(the) g(mpatrol) g(library) f
(then) h(y) m(ou) g(ma) m(y) g(also) h(ha) m(v) m(e) g(to) g(mo) s
(dify) e(the) p Fl 28 w(MP_) p 90 rotate dyy eop
%%Page: 190 196
190 195 bop Fo 94 -116 a(190) 3332 b(mpatrol) p Fl 274
365 a(THREADS_LIBS) p Fo 32 w(de\014nitions) 34 b(in) g(`) p
Fl(src/config.h) p Fo(',) f(the) p Fl 34 w(__mp_lib*) p
Fo 32 w(de\014nitions) h(in) h(`) p Fl(src/inter.c) p
Fo(') 274 465 y(and) 30 b(the) p Fl 31 w(AC_CHECK_LIB\(\)) p
Fo 26 w(calls) i(in) e(`) p Fl(extra/mpatrol.m4) p Fo('.) 144
589 y(7.) 60 b(Mak) m(e) 32 b(an) m(y) f(required) f(c) m(hanges) h(to)
g(`) p Fl(src/diag.c) p Fo(') d(in) i(order) g(to) h(supp) s(ort) e
(the) i(new) e(system.) 274 714 y(If) 42 b(the) g(directory) h
(separation) g(c) m(haracters) g(used) e(b) m(y) h(\014lesystem) g
(pathnames) g(on) g(the) g(new) g(system) 274 814 y(are) k(di\013eren) m
(t) g(to) g(those) g(already) f(supp) s(orted) f(then) h(y) m(ou) g(m) m
(ust) g(mo) s(dify) p Fl 45 w(processfile\(\)) p Fo(,) p
Fl 45 w(__mp_) 274 913 y(logfile\(\)) p Fo(,) p Fl 49
w(__mp_proffile\(\)) p Fo 42 w(and) p Fl 46 w(__mp_tracefile\(\)) p
Fo 42 w(in) h(order) g(to) i(supp) s(ort) c(them.) 89
b(The) 274 1013 y(mpatrol) 40 b(library) f(needs) g(to) h(kno) m(w) f
(ho) m(w) h(to) g(extract) h(and) d(join) i(the) f(directory) h(and) f
(\014lename) g(com-) 274 1112 y(p) s(onen) m(ts) 34 b(in) f(a) h
(pathname) g(in) f(order) h(to) g(supp) s(ort) e(the) i(sp) s(ecial) g
(c) m(haracters) i(that) e(ma) m(y) g(app) s(ear) f(in) h(the) 274
1212 y(\014lenames) d(sp) s(eci\014ed) f(in) g(the) g(`) p
Fl(LOGFILE) p Fo(',) f(`) p Fl(PROFFILE) p Fo(') g(and) h(`) p
Fl(TRACEFILE) p Fo(') e(options.) 144 1337 y(8.) 60 b(Mak) m(e) 32
b(an) m(y) f(required) f(c) m(hanges) h(to) g(`) p Fl(src/version.c) p
Fo(') c(in) k(order) e(to) j(supp) s(ort) c(the) j(new) f(system.) 274
1461 y(Di\013eren) m(t) 38 b(op) s(erating) e(systems) g(ha) m(v) m(e) h
(di\013eren) m(t) f(w) m(a) m(ys) g(of) g(em) m(b) s(edding) f(v) m
(ersion) h(information) g(in) m(to) h(li-) 274 1561 y(braries.) k(F) -8
b(or) 30 b(example,) h(on) e(AmigaOS) h(the) p Fl 30
w(version) p Fo 27 w(command) g(lo) s(oks) g(for) f(the) h(`) p
Fl($VER:) p Fo(') f(string) g(in) h(a) 274 1660 y(binary) 24
b(\014le) f(and) h(displa) m(ys) f(an) m(y) i(information) f(follo) m
(wing) h(it.) 39 b(If) 23 b(the) h(new) g(system) g(uses) f(a) h(sp) s
(ecial) h(format) 274 1760 y(for) 31 b(em) m(b) s(edding) g(v) m
(ersion) g(information) g(then) g(an) g(alternativ) m(e) j
(de\014nition) c(for) p Fl 31 w(__mp_version) p Fo 28
w(should) 274 1860 y(b) s(e) 36 b(added) g(to) h(`) p
Fl(src/version.c) p Fo('.) 55 b(It) 37 b(migh) m(t) g(also) g(b) s(e) f
(useful) f(to) i(mak) m(e) h(an) m(y) e(necessary) h(c) m(hanges) g(to)
274 1959 y(the) p Fl 27 w(mupdate) p Fo 24 w(shell) 27
b(script) f(in) g(the) g(`) p Fl(bin) p Fo(') g(directory) h(in) f
(order) g(to) h(supp) s(ort) e(the) h(new) g(format,) i(although) 274
2059 y(that) j(is) g(not) f(strictly) i(required) d(as) i(it) g(is) f
(only) h(used) e(when) h(building) f(automated) j(mpatrol) f(releases.)
274 2183 y(The) e(R) m(CS) f(revision) h(string) f(of) h(eac) m(h) h
(mpatrol) f(source) f(\014le) h(can) g(also) h(b) s(e) e(em) m(b) s
(edded) f(in) m(to) j(the) f(mpatrol) 274 2283 y(library) 34
b(and) f(its) h(to) s(ols.) 52 b(The) 33 b(w) m(a) m(y) i(this) f(is) g
(done) f(is) h(con) m(trolled) h(b) m(y) f(the) p Fl
34 w(MP_IDENT_SUPPORT) p Fo 29 w(macro) 274 2383 y(in) g(`) p
Fl(src/config.h) p Fo('.) 50 b(If) 33 b(it) i(is) f(set) h(then) f(the)
g(system) g(supp) s(orts) f(placing) h(these) h(strings) f(in) g(a) g
(sp) s(ecial) 274 2482 y(section) f(in) d(the) h(ob) 5
b(ject) 32 b(\014le) f(via) h(the) p Fl 31 w(#ident) p
Fo 29 w(directiv) m(e,) h(otherwise) f(the) f(strings) g(will) g(b) s
(e) f(placed) i(in) f(a) 274 2582 y(data) h(section) f(in) f(the) h(ob)
5 b(ject) 31 b(\014le.) 144 2707 y(9.) 60 b(Mak) m(e) 47
b(an) m(y) f(required) e(c) m(hanges) j(in) d(`) p Fl(src/mpatrol.c) p
Fo(') f(in) h(order) h(to) h(supp) s(ort) e(executing) i(external) 274
2806 y(commands.) 274 2931 y(The) p Fl 27 w(mpatrol) p
Fo 26 w(command) 27 b(should) g(b) s(e) g(mo) s(di\014ed) f(to) i(supp)
s(ort) e(the) i(execution) g(of) g(external) g(commands) 274
3030 y(on) 33 b(a) g(new) f(op) s(erating) h(system.) 47
b(The) p Fl 32 w(exec\(\)) p Fo 31 w(family) 33 b(of) g(functions) f
(are) h(used) e(on) i(UNIX) g(platforms,) 274 3130 y(while) 47
b(the) p Fl 47 w(spawn\(\)) p Fo 44 w(family) g(of) g(functions) f(are)
h(used) f(on) g(Windo) m(ws) h(platforms.) 89 b(The) 46
b(ANSI) g(C) p Fl 274 3230 a(system\(\)) p Fo 37 w(function) 39
b(is) g(curren) m(tly) g(used) f(on) h(all) g(other) h(platforms,) h
(but) d(that) i(runs) d(the) i(command) 274 3329 y(indirectly) g(via) f
(the) h(system) f(command) f(line) i(in) m(terpreter) f(\(shell\)) h
(whic) m(h) e(is) h(not) h(usually) e(v) m(ery) i(e\016-) 274
3429 y(cien) m(t.) k(Y) -8 b(ou) 30 b(ma) m(y) h(also) h(ha) m(v) m(e) f
(to) g(add) f(the) h(abilit) m(y) h(to) f(\014nd) e(an) m(y) h
(commands) g(using) g(a) h(searc) m(h) g(path.) 274 3553
y(If) f(the) g(new) g(op) s(erating) g(system) g(can) h(supp) s(ort) d
(the) i(`) p Fl(--dynamic) p Fo(') e(option) j(of) f(the) p
Fl 30 w(mpatrol) p Fo 28 w(command) 274 3653 y(then) k(the) p
Fl 35 w(MP_PRELOAD_SUPPORT) p Fo 29 w(macro) h(should) e(b) s(e) h
(de\014ned) f(in) h(`) p Fl(src/config.h) p Fo('.) 50
b(The) 33 b(name) i(of) 274 3753 y(the) 28 b(en) m(vironmen) m(t) h(v)
-5 b(ariable) 28 b(that) g(m) m(ust) g(b) s(e) f(used) f(to) j(sp) s
(ecify) e(the) h(list) g(of) g(shared) f(libraries) g(to) i(preload) 274
3852 y(should) 38 b(b) s(e) g(giv) m(en) h(in) p Fl 38
w(MP_PRELOAD_NAME) p Fo 34 w(and) f(the) h(library) f(separator) h
(string) f(for) g(the) h(list) g(should) 274 3952 y(b) s(e) 32
b(giv) m(en) h(in) p Fl 31 w(MP_PRELOAD_SEP) p Fo(.) 42
b(The) p Fl 31 w(MP_LIBNAME) p Fo 29 w(macro) 32 b(ma) m(y) h(also) g
(need) e(to) i(b) s(e) e(mo) s(di\014ed) g(if) h(the) 274
4051 y(naming) 40 b(con) m(v) m(en) m(tion) j(of) d(shared) f
(libraries) h(is) g(di\013eren) m(t) h(on) f(the) g(new) f(system.) 70
b(Note) 42 b(that) e(the) p Fl 41 w(__) 274 4151 y(mp_editfile\(\)) p
Fo 32 w(function) c(in) f(`) p Fl(src/diag.c) p Fo(') e(ma) m(y) j
(also) g(need) g(to) g(b) s(e) f(mo) s(di\014ed) f(to) i(prev) m(en) m
(t) g(editor) 274 4251 y(pro) s(cesses) 31 b(from) f(b) s(eing) g
(a\013ected) h(b) m(y) g(the) f(`) p Fl(--dynamic) p
Fo(') f(option.) 98 4375 y(10.) 61 b(Mak) m(e) 22 b(an) m(y) f
(required) f(c) m(hanges) h(in) f(`) p Fl(src/mptrace.c) p
Fo(') d(in) j(order) g(to) h(supp) s(ort) d(an) m(y) j(new) f(windo) m
(w) g(systems.) 274 4500 y(The) p Fl 31 w(mptrace) p
Fo 30 w(command) 31 b(ma) m(y) g(b) s(e) g(built) g(as) h(a) f
(text-only) i(command) e(line) h(to) s(ol,) h(or) e(it) h(ma) m(y) g(b)
s(e) e(built) 274 4599 y(with) f(GUI) h(supp) s(ort) d(if) i(the) p
Fl 29 w(MP_GUI_SUPPORT) p Fo 25 w(macro) h(is) f(de\014ned) f(in) g(`) p
Fl(src/config.h) p Fo('.) 38 b(If) 28 b(it) i(is) f(built) 274
4699 y(with) i(GUI) f(supp) s(ort) f(and) h(the) h(`) p
Fl(--gui) p Fo(') e(option) i(is) g(sp) s(eci\014ed) f(then) g(it) h(b)
s(ecomes) g(an) f(ev) m(en) m(t-driv) m(en) i(to) s(ol) 274
4799 y(and) e(the) h(co) s(de) g(in) f(`) p Fl(src/mptrace.c) p
Fo(') e(has) i(b) s(een) g(written) g(to) i(re\015ect) f(that.) 42
b(The) p Fl 30 w(mptrace) p Fo 28 w(command) 274 4898
y(curren) m(tly) 37 b(only) h(has) e(Motif) i(GUI) g(supp) s(ort) d
(but) h(if) h(y) m(ou) g(wish) g(to) g(add) g(supp) s(ort) e(for) i(a) g
(new) g(windo) m(w) 274 4998 y(system) 43 b(then) g(it) g(shouldn't) f
(b) s(e) g(to) s(o) i(hard) e(to) h(do.) 78 b(Note) 44
b(that) g(y) m(ou) f(will) g(probably) f(ha) m(v) m(e) i(to) g(add) 274
5098 y(additional) 24 b(libraries) f(to) g(the) g(`) p
Fl(Makefile) p Fo(') d(when) i(building) p Fl 22 w(mptrace) p
Fo 20 w(with) p Fl 22 w(MP_GUI_SUPPORT) p Fo 19 w(de\014ned.) 98
5222 y(11.) 61 b(Mak) m(e) 32 b(an) m(y) f(required) f(c) m(hanges) h
(to) g(the) g(shell) f(scripts) g(in) h(the) f(`) p Fl(bin) p
Fo(') g(directory) -8 b(.) 274 5347 y(The) p Fl 30 w(mpsym) p
Fo(,) p Fl 29 w(mpedit) p Fo 28 w(and) p Fl 29 w(hexwords) p
Fo 28 w(commands) 30 b(all) h(require) e(UNIX) i(systems,) f(or) g
(UNIX) g(to) s(ols,) h(to) 274 5446 y(run.) 43 b(If) 31
b(the) h(new) f(system) g(has) h(the) f(abilit) m(y) i(to) g(run) d
(these) i(commands) f(then) g(y) m(ou) h(should) e(c) m(hec) m(k) j
(that) 274 5546 y(they) i(run) d(as) i(exp) s(ected.) 52
b(If) 34 b(not,) h(y) m(ou) g(should) e(mak) m(e) i(the) f(necessary) g
(mo) s(di\014cations) g(to) h(mak) m(e) g(them) 274 5645
y(w) m(ork,) 28 b(although) e(it) h(should) e(b) s(e) h(in) g(a) g
(generic) h(fashion) f(as) h(there) f(are) g(no) h(c) m(hec) m(ks) g
(for) f(sp) s(eci\014c) g(platforms) p 90 rotate dyy
eop
%%Page: 191 197
191 196 bop Fo 94 -116 a(App) s(endix) 29 b(H:) i(P) m(orting) 2807
b(191) 274 365 y(or) 28 b(pro) s(cessors) f(in) g(these) g(\014les.) 40
b(Y) -8 b(ou) 28 b(ma) m(y) g(also) g(wish) e(to) j(add) d(supp) s(ort)
g(for) h(other) g(debuggers) g(in) p Fl 27 w(mpsym) p
Fo 274 465 a(and) j(other) h(editors) g(in) p Fl 30 w(mpedit) p
Fo(.) 98 589 y(12.) 61 b(Add) 35 b(a) h(new) f(sub) s(directory) g(to) h
(the) g(`) p Fl(build) p Fo(') f(directory) h(if) g(a) g(new) f(op) s
(erating) h(system) g(is) g(b) s(eing) f(sup-) 274 689
y(p) s(orted.) 274 814 y(A) f(new) e(`) p Fl(Makefile) p
Fo(') g(should) g(b) s(e) g(added) h(in) f(the) i(new) e(sub) s
(directory) g(along) i(with) f(an) m(y) h(extra) f(system-) 274
913 y(sp) s(eci\014c) 26 b(\014les) g(that) g(migh) m(t) g(b) s(e) f
(needed) g(to) i(build) d(the) i(mpatrol) g(library) f(on) h(the) g
(new) f(system.) 39 b(The) 25 b(new) 274 1013 y(`) p
Fl(Makefile) p Fo(') f(should) g(b) s(e) g(based) h(up) s(on) e(one) j
(of) f(the) g(existing) h(`) p Fl(Makefile) p Fo('s) d(in) i(the) g
(other) h(sub) s(directories) 274 1112 y(but) 36 b(should) f(ob) m
(viously) i(di\013er) f(in) g(the) h(platform-dep) s(enden) m(t) f
(areas.) 59 b(Y) -8 b(ou) 37 b(ma) m(y) g(wish) e(to) i(add) f(more) 274
1212 y(than) 31 b(one) f(`) p Fl(Makefile) p Fo(') f(to) i(supp) s(ort)
e(di\013eren) m(t) h(t) m(yp) s(es) h(of) f(compilers) h(on) f(the) h
(new) f(op) s(erating) h(system.) 274 1337 y(Y) -8 b(ou) 37
b(m) m(ust) f(also) h(decide) f(whic) m(h) g(ob) 5 b(ject) 37
b(\014les) f(should) f(get) i(built) f(in) m(to) h(the) f(mpatrol) g
(library) -8 b(.) 58 b(If) 35 b(it) i(is) 274 1436 y(not) 32
b(safe) f(to) h(o) m(v) m(erride) h(the) e(system) p
Fl 31 w(malloc\(\)) p Fo 29 w(routines) g(on) g(the) g(new) g(system) g
(then) g(y) m(ou) h(should) e(not) 274 1536 y(include) 36
b(`) p Fl(src/malloc.c) p Fo(',) f(and) g(the) h(same) g(go) s(es) h
(for) f(`) p Fl(src/cplus.c) p Fo(') d(and) i(the) h(C) p
Fl(++) p Fo 35 w(op) s(erators.) 57 b(If) 274 1636 y(there) 29
b(is) g(no) p Fl 28 w(sbrk\(\)) p Fo 27 w(function) f(pro) m(vided) h
(on) f(the) h(new) f(op) s(erating) h(system) f(then) h(y) m(ou) g
(should) e(include) 274 1735 y(`) p Fl(src/sbrk.c) p
Fo(') i(if) h(y) m(ou) h(need) f(to) h(call) p Fl 32
w(sbrk\(\)) p Fo 28 w(in) f(`) p Fl(src/inter.c) p Fo('.) 274
1860 y(If) i(the) g(new) f(op) s(erating) i(system) f(uses) f(a) h(sp) s
(ecial) h(arc) m(hiv) m(e) g(or) f(pac) m(k) -5 b(age) 34
b(format) e(then) f(y) m(ou) i(should) e(add) 274 1959
y(supp) s(ort) d(for) h(it) h(b) m(y) f(adding) g(a) h(new) e(sub) s
(directory) g(to) i(the) g(`) p Fl(pkg) p Fo(') f(directory) -8
b(.) 41 b(A) 29 b(`) p Fl(build) p Fo(') g(script) g(should) 274
2059 y(b) s(e) j(added) f(to) h(the) g(new) f(sub) s(directory) g(that)
i(will) f(automatically) i(build) d(the) h(arc) m(hiv) m(e) h(or) f
(pac) m(k) -5 b(age) 34 b(\014le) 274 2159 y(from) i(scratc) m(h.) 57
b(Include) 35 b(an) m(y) h(additional) h(\014les) e(that) i(y) m(ou) f
(need) f(to) i(p) s(erform) d(the) i(build) e(in) i(the) f(new) 274
2258 y(sub) s(directory) 30 b(as) g(w) m(ell.) p 90 rotate
dyy eop
%%Page: 192 198
192 197 bop Fo 94 -116 a(192) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 193 199
193 198 bop Fo 94 -116 a(App) s(endix) 29 b(I:) i(Notes) 2914
b(193) p Fk 94 365 a(App) t(endix) 53 b(I) 81 b(Notes) p
Fo 219 617 a(This) 32 b(section) i(con) m(tains) g(information) f(ab) s
(out) g(kno) m(wn) f(bugs) h(and) f(limitations) i(in) f(the) g
(mpatrol) g(library) 94 716 y(as) e(w) m(ell) g(as) g(listing) g(p) s
(oten) m(tial) h(future) e(enhancemen) m(ts.) 219 850
y(Bugs) 35 b(should) f(b) s(e) g(rep) s(orted) g(to) p
Fl 35 w(mpatrol@cbmamiga.demon.co) o(.uk) p Fo 28 w(along) i(with) e
(the) h(details) h(of) f(the) 94 950 y(op) s(erating) 28
b(system,) f(pro) s(cessor) f(arc) m(hitecture) j(and) d(ob) 5
b(ject) 27 b(\014le) g(format) g(that) g(the) g(mpatrol) g(library) f
(is) g(b) s(eing) 94 1049 y(used) j(with) g(|) g(and) f(don't) i
(forget) g(to) g(include) f(the) g(v) m(ersion) h(of) f(the) h(mpatrol)
f(library) g(y) m(ou) h(are) f(using!) 40 b(Keep) 94
1149 y(in) 30 b(mind) f(that) h(I) f(only) h(ha) m(v) m(e) h(access) g
(to) f(a) h(P) m(en) m(tium) f(I) s(I) s(I) e(Noteb) s(o) s(ok) i(PC) g
(running) e(Red) h(Hat) i(Lin) m(ux) e(7.1) i(and) 94
1248 y(Windo) m(ws) g(ME,) h(so) f(I) f(will) i(b) s(e) e(most) h(lik) m
(ely) h(unable) f(to) g(repro) s(duce) f(most) h(of) g(the) g
(system-sp) s(eci\014c) g(bugs.) 42 b(A) 94 1348 y(bug) 30
b(rep) s(ort) g(that) h(comes) g(with) f(an) g(asso) s(ciated) i(\014x)
e(will) h(b) s(e) f(most) g(w) m(elcome.) 219 1482 y(Enhancemen) m(t)
106 b(requests) f(and) g(source) h(co) s(de) g(con) m(taining) h
(enhancemen) m(ts) f(should) f(also) 94 1581 y(b) s(e) 98
b(sen) m(t) h(to) p Fl 99 w(mpatrol@cbmamiga.demon.co) o(.uk) p
Fo 92 w(or) f(the) h(mpatrol) g(discussion) e(group) h(at) p
Fl 94 1681 a(http://groups.yahoo.com/gr) o(oup/) o(mpa) o(trol) o(/) p
Fo(.) 187 b(If) 81 b(y) m(ou) h(are) g(planning) e(to) i(implemen) m(t)
g(an) 94 1781 y(enhancemen) m(t,) 43 b(let) d(me) f(kno) m(w) g
(\014rst) g(in) g(case) h(I) f(am) g(\(or) h(someone) g(else) g(is\)) g
(w) m(orking) f(to) m(w) m(ards) h(the) g(same) 94 1880
y(goal) g(|) d(that) h(w) m(a) m(y) -8 b(,) 41 b(w) m(ork) c(w) m(on't)
i(b) s(e) d(w) m(asted.) 63 b(If) 37 b(y) m(ou) h(wish) f(to) h(send) f
(me) g(source) h(co) s(de) g(c) m(hanges) g(please) 94
1980 y(send) 30 b(the) h(c) m(hanges) g(as) g(con) m(text) h(di\013s) e
(or) g(in) g(an) g(e-mail) i(attac) m(hmen) m(t) h(as) e(a) f
(compressed) g(tar) h(arc) m(hiv) m(e.) p Fn 94 2260
a(I.1) 68 b(Notes) 46 b(for) f(all) h(platforms) p Fm
169 2452 a(\017) p Fo 60 w(Ov) m(erriding) 30 b(the) g(C) p
Fl(++) p Fo 29 w(op) s(erators) h(to) f(get) i(source-lev) m(el) g
(information) e(using) g(the) g(prepro) s(cessor) f(is) h(still) 274
2551 y(a) g(bit) g(do) s(dgy) f(and) g(isn't) g(lik) m(ely) i(to) g
(get) f(m) m(uc) m(h) g(b) s(etter,) g(so) p Fl 29 w(MP_NONEWDELETE) p
Fo 26 w(ma) m(y) g(ha) m(v) m(e) h(to) f(b) s(e) f(used) g(a) 274
2651 y(lot.) 42 b(Explicit) 30 b(references) f(to) p
Fl 30 w(operator) f(new) p Fo 29 w(rather) h(than) p
Fl 29 w(new) p Fo 28 w(are) h(lik) m(ely) g(to) g(result) f(in) g
(compilation) 274 2750 y(errors,) 35 b(and) e(the) h(w) m(a) m(y) h
(that) f(source) g(lev) m(el) h(information) f(is) g(obtained) g(for) p
Fl 34 w(operator) 28 b(delete) p Fo 32 w(means) 274 2850
y(that) 42 b(the) f(resulting) g(co) s(de) g(will) g(not) g(b) s(e) f
(thread-safe.) 73 b(It) 41 b(migh) m(t) g(also) h(b) s(e) e(an) h(idea)
h(to) f(pro) m(vide) g(an) 274 2950 y(allo) s(cation) 33
b(class) e(from) f(whic) m(h) g(user-de\014ned) f(memory) h(allo) s
(cators) j(can) d(b) s(e) g(deriv) m(ed.) p Fm 169 3079
a(\017) p Fo 60 w(Need) 22 b(to) f(add) f(supp) s(ort) f(for) h(other) h
(64-bit) h(pro) s(cessors) e(in) g(addition) h(to) g(the) g(existing) h
(Alpha) e(and) g(SP) -8 b(AR) m(C) 274 3178 y(V9) 30
b(supp) s(ort.) 38 b(This) 28 b(shouldn't) f(b) s(e) h(to) s(o) i
(hard,) e(but) g(I) g(ha) m(v) m(en't) i(got) f(access) h(to) g(suc) m
(h) e(pro) s(cessors) g(to) h(test) 274 3278 y(them,) k(so) f(I) g(ha) m
(v) m(en't) h(b) s(een) f(able) g(to) h(y) m(et.) 47
b(Also) 32 b(need) g(to) h(add) e(supp) s(ort) f(for) i(building) f(on)
h(targets) i(and) 274 3378 y(arc) m(hitectures) e(where) e(no) h(op) s
(erating) f(system) h(features) g(are) f(required) g(or) g(ev) m(en) h
(a) m(v) -5 b(ailable.) p Fm 169 3507 a(\017) p Fo 60
w(Need) 21 b(to) h(impro) m(v) m(e) f(the) g(concurrency) f(in) g(the) h
(thread-safe) g(v) m(ersion) g(of) g(the) g(mpatrol) g(library) -8
b(.) 37 b(Curren) m(tly) -8 b(,) 274 3606 y(only) 31
b(one) g(thread) f(at) h(a) g(time) g(is) f(allo) m(w) m(ed) i(to) g
(en) m(ter) f(the) f(mpatrol) h(library) -8 b(,) 31 b(but) e(it) i
(should) f(b) s(e) f(p) s(ossible) 274 3706 y(to) 37
b(extend) f(this) g(to) g(protect) h(individual) e(data) h(structures.)
57 b(Note) 37 b(that) f(this) g(will) g(not) g(only) g(help) f(to) 274
3806 y(impro) m(v) m(e) d(e\016ciency) -8 b(,) 32 b(but) e(migh) m(t) h
(also) g(allo) m(w) h(the) f(mpatrol) f(library) g(to) h(unco) m(v) m
(er) h(bugs) d(in) h(thread-safe) 274 3905 y(co) s(de) h(that) g(are) g
(timing-dep) s(enden) m(t.) p Fm 169 4034 a(\017) p Fo
60 w(Need) e(to) g(mak) m(e) h(the) e(library) g(re-en) m(tran) m(t.) 42
b(This) 27 b(could) i(b) s(e) e(ac) m(hiev) m(ed) j(b) m(y) f(mo) m
(ving) g(the) f(static) i(v) -5 b(ariables) 274 4134
y(in) 28 b(`) p Fl(memory.c) p Fo(',) f(`) p Fl(stack.c) p
Fo(',) g(`) p Fl(mutex.c) p Fo(',) f(`) p Fl(diag.c) p
Fo(',) i(`) p Fl(trace.c) p Fo(',) f(`) p Fl(option.c) p
Fo(') f(and) h(`) p Fl(sbrk.c) p Fo(') f(in) m(to) j(the) p
Fl 274 4234 a(infohead) p Fo 23 w(structure) 24 b(and) g(then) g(ha) m
(ving) h(an) f(arra) m(y) h(of) p Fl 25 w(infohead) p
Fo 22 w(structures) f(from) g(whic) m(h) g(to) h(allo) s(cate) 274
4333 y(new) 30 b(memory) g(headers) f(when) g(a) h(new) g(one) g(is) g
(required.) 40 b(This) 29 b(is) h(only) g(necessary) g(for) g(Amiga) h
(shared) 274 4433 y(libraries) 38 b(and) f(Net) m(w) m(are) i(NLMs) e
(since) h(UNIX) f(and) g(Windo) m(ws) g(platforms) h(allo) s(cate) h(a)
f(new) f(cop) m(y) h(of) 274 4532 y(the) 31 b(data) g(section) h(in) e
(a) g(shared) g(library) g(or) g(DLL) h(when) e(it) i(is) g(op) s(ened)
e(b) m(y) h(a) h(new) f(pro) s(cess.) p Fm 169 4661 a(\017) p
Fo 60 w(Some) e(implemen) m(tations) h(of) f(call) h(stac) m(k) g(tra) m
(v) m(ersal) g(are) f(limited) g(and) f(will) h(only) g(lik) m(ely) h
(w) m(ork) e(for) h(unop-) 274 4761 y(timised) k(co) s(de.) 44
b(A) 32 b(m) m(uc) m(h) f(b) s(etter) h(solution) g(w) m(ould) f(b) s
(e) g(write) g(the) h(implemen) m(tations) h(at) f(a) g(lo) m(w) m(er) g
(lev) m(el) 274 4861 y(in) c(assem) m(bly) -8 b(,) 30
b(but) e(this) g(is) g(m) m(uc) m(h) h(less) f(p) s(ortable.) 40
b(P) m(erhaps) 28 b(there) h(is) f(a) h(library) f(whic) m(h) g(can) g
(b) s(e) g(used) f(to) 274 4960 y(p) s(erform) d(this) h(across) h(man)
m(y) f(op) s(erating) h(systems) f(and) f(pro) s(cessor) h(arc) m
(hitectures,) j(or) d(ma) m(yb) s(e) g(someone) 274 5060
y(w) m(ould) 31 b(lik) m(e) i(to) f(write) f(one) p Fh
1189 5027 a(1) p Fo 1226 5060 a(?) 43 b(I) 31 b(can) g(think) g(of) g
(man) m(y) g(applications) h(that) g(w) m(ould) f(b) s(ene\014t) f
(from) h(suc) m(h) g(a) 274 5160 y(library) f(b) s(esides) g(this) g
(one) p Fh 1195 5127 a(2) p Fo 1233 5160 a(.) p 94 5273
1200 4 v Fh 143 5334 a(1) p Fg 219 5366 a(There) 25 b(is) g(curren) n
(tly) e(a) i(library) f(called) h(Stac) n(kT) -6 b(race) 25
b(written) f(b) n(y) g(Bjorn) h(Reese) f(whic) n(h) h(in) n(v) n(ok) n
(es) e(a) i(debugger) f(to) h(generate) g(a) 219 5457
y(stac) n(k) h(tracebac) n(k) f(on) h(certain) g(UNIX) e(platforms.) 36
b(This) 27 b(metho) r(d) e(w) n(ould) h(b) r(e) g(to) r(o) g(slo) n(w) h
(for) g(mpatrol) f(to) g(use) f(though.) p Fh 143 5522
a(2) p Fg 219 5554 a(Lo) r(oking) h(bac) n(k) f(at) h(these) f
(statemen) n(ts) h(ab) r(out) f(six) g(mon) n(ths) g(after) i(they) d
(w) n(ere) i(written,) g(it) g(w) n(ould) f(app) r(ear) h(that) f(I) g
(ha) n(v) n(e) g(just) 219 5645 y(written) h(suc) n(h) f(a) h(library) g
(judging) g(b) n(y) f(the) g(n) n(um) n(b) r(er) g(of) h(arc) n
(hitectures) h(for) f(whic) n(h) g(stac) n(k) f(tra) n(v) n(ersal) i
(is) f(no) n(w) g(supp) r(orted.) p 90 rotate dyy eop
%%Page: 194 200
194 199 bop Fo 94 -116 a(194) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(An) 24 b(alternativ) m(e) h(implemen) m(tation) h
(for) d(call) h(stac) m(k) h(tra) m(v) m(ersal) h(uses) d(the) g
(functions) p Fl 23 w(__builtin_frame_) 274 465 y(address\(\)) p
Fo 28 w(and) p Fl 29 w(__builtin_return_address\() o(\)) p
Fo 24 w(that) 31 b(are) f(a) m(v) -5 b(ailable) 32 b(when) d(the) i
(library) e(is) h(com-) 274 565 y(piled) f(with) p Fl
28 w(gcc) p Fo(.) 39 b(Ho) m(w) m(ev) m(er,) 32 b(they) c(can) h(only) g
(tra) m(v) m(erse) h(a) f(n) m(um) m(b) s(er) e(of) i(stac) m(k) h
(frames) e(at) i(compile-time,) 274 664 y(not) j(run-time) g(so) g
(there) g(is) f(a) h(maxim) m(um) g(n) m(um) m(b) s(er) e(of) i(stac) m
(k) i(frames) d(that) h(can) g(b) s(e) f(tra) m(v) m(ersed) i(at) g(an)
m(y) 274 764 y(one) d(time.) 42 b(The) 29 b(implemen) m(tation) j(dep) s
(ends) d(on) h(b) s(oth) g(of) g(these) h(builtin) f(functions) g
(returning) g(`) p Fl(NULL) p Fo(') 274 863 y(when) j(the) h(top) g(of)
g(stac) m(k) h(is) e(reac) m(hed.) 52 b(If) 33 b(this) g(is) h(not) g
(the) g(case) h(then) e(this) g(metho) s(d) g(cannot) i(b) s(e) e(used)
274 963 y(or) e(should) e(only) i(b) s(e) e(used) h(with) g(a) g(small)
h(n) m(um) m(b) s(er) e(of) i(\014xed) e(stac) m(k) j(frames.) 41
b(Ho) m(w) m(ev) m(er,) 32 b(p) s(erhaps) d(there) 274
1063 y(migh) m(t) k(ev) m(en) g(b) s(e) f(a) g(use) g(for) g(an) g
(option) h(to) g(limit) g(the) f(n) m(um) m(b) s(er) f(of) h(stac) m(k)
i(frames) e(in) g(stac) m(k) h(tracebac) m(ks) 274 1162
y(for) e(systems) f(that) h(ha) m(v) m(e) h(no) e(suc) m(h) g
(limitation.) p Fm 169 1280 a(\017) p Fo 60 w(Is) 24
b(it) g(w) m(orth) f(adding) g(functions) h(to) g(man) m(ually) g(push)
e(and) h(p) s(op) f(en) m(tries) j(on) e(the) h(call) h(stac) m(k) g
(for) e(platforms) 274 1380 y(whic) m(h) 34 b(ha) m(v) m(e) i(no) d
(supp) s(ort) g(for) h(call) h(stac) m(k) g(tra) m(v) m(ersal?) 54
b(This) 33 b(is) h(curren) m(tly) g(not) g(a) h(high-priorit) m(y) f
(issue) 274 1479 y(since) 28 b(almost) g(all) f(of) g(the) h(platforms)
e(that) i(mpatrol) f(is) g(a) m(v) -5 b(ailable) 29 b(on) e(ha) m(v) m
(e) h(supp) s(ort) d(for) i(full) f(call) i(stac) m(k) 274
1579 y(tra) m(v) m(ersal.) 42 b(Ho) m(w) m(ev) m(er,) 32
b(it) d(migh) m(t) g(b) s(e) f(handy) g(an) m(yw) m(a) m(y) i(as) f(an)
f(additional) i(debugging) e(to) s(ol) i(for) e(en) m(tering) 274
1679 y(and) i(lea) m(ving) i(scop) s(es.) p Fm 169 1796
a(\017) p Fo 60 w(Need) c(to) g(c) m(hange) p Fl 29 w
(__mp_compareaddrs\(\)) p Fo 22 w(so) f(that) h(it) g(will) g(impro) m
(v) m(e) g(the) f(detection) i(of) f(when) e(to) i(free) 274
1896 y(memory) f(allo) s(cations) i(made) e(b) m(y) p
Fl 27 w(alloca\(\)) p Fo 24 w(and) g(its) g(related) h(functions.) 39
b(This) 26 b(will) h(in) m(v) m(olv) m(e) i(c) m(hec) m(king) 274
1996 y(the) 35 b(common) g(return) f(addresses) g(in) g(the) h(call) h
(stac) m(ks) g(instead) f(of) g(just) f(c) m(hec) m(king) i(them) f(if)
g(the) f(stac) m(k) 274 2095 y(depth) c(is) h(the) g(same.) 42
b(Also,) 31 b(on) g(systems) f(that) h(don't) g(ha) m(v) m(e) h(full) e
(call) i(stac) m(k) g(tra) m(v) m(ersal,) h(the) e(minim) m(um) 274
2195 y(n) m(um) m(b) s(er) d(of) i(b) m(ytes) f(that) h(stac) m(k) h
(frames) e(should) f(di\013er) h(b) m(y) g(should) f(b) s(e) h
(platform-dep) s(enden) m(t) f(since) i(the) 274 2294
y(curren) m(t) h(v) -5 b(alue) 31 b(is) f(w) m(a) m(y) h(to) s(o) g
(high.) p Fm 169 2412 a(\017) p Fo 60 w(P) m(erhaps) k(hash) g(the) h
(call) g(stac) m(ks) h(when) d(they) i(are) g(stored) f(in) m(ternally)
i(b) m(y) e(the) h(routines) f(in) g(`) p Fl(addr.c) p
Fo('.) 274 2512 y(This) f(w) m(ould) h(mak) m(e) g(for) f(quic) m(k) h
(c) m(hec) m(ks) h(to) g(see) f(if) f(t) m(w) m(o) i(call) g(stac) m
(ks) g(are) f(iden) m(tical) h(and) e(it) h(migh) m(t) g(sa) m(v) m(e)
274 2611 y(some) c(memory) g(in) f(the) g(pro) s(cess.) p
Fm 169 2729 a(\017) p Fo 60 w(There) 35 b(is) h(an) f(issue) h(with) f
(callbac) m(k) i(functions) e(if) h(they) f(call) i(mpatrol) f(library)
f(functions,) h(since) g(this) 274 2829 y(ma) m(y) e(lead) g(to) g
(recursion) f(in) g(some) h(obscure) f(cases.) 50 b(Callbac) m(k) 35
b(functions) e(could) g(also) h(b) s(e) f(de\014ned) f(for) p
Fl 274 2928 a(__malloc_hook\(\)) p Fo(,) p Fl 35 w(__realloc_hook\(\)) p
Fo 33 w(and) p Fl 37 w(__free_hook\(\)) p Fo 33 w(in) 37
b(m) m(uc) m(h) g(the) g(same) h(w) m(a) m(y) g(as) f(for) 274
3028 y(the) 31 b(GNU) g(C) f(library) -8 b(.) p Fm 169
3146 a(\017) p Fo 60 w(Need) 25 b(to) g(store) g(\014lename) g(and) f
(line) g(n) m(um) m(b) s(er) f(information) i(in) f(all) h(call) h
(stac) m(ks) g(so) e(that) h(the) g(information) 274
3245 y(can) g(b) s(e) e(used) g(at) h(program) g(termination.) 39
b(Ma) m(y) 25 b(also) g(need) f(to) g(displa) m(y) g(this) g
(information) g(in) f(the) p Fl 24 w(__mp_) 274 3345
y(printinfo\(\)) p Fo 31 w(function) 34 b(and) f(add) h(this) g
(information) g(to) g(the) h(pro\014ling) e(output) h(\014le) g(so) g
(that) p Fl 34 w(mprof) p Fo 274 3445 a(can) d(mak) m(e) h(use) e(of) g
(it.) p Fm 169 3562 a(\017) p Fo 60 w(In) 35 b(ob) 5
b(ject) 36 b(\014le) f(formats) g(that) h(supp) s(ort) d(nested) i(sym)
m(b) s(ols) g(\(suc) m(h) g(as) g(ELF\),) h(the) f(curren) m(t) g
(implemen-) 274 3662 y(tation) g(will) e(tend) g(to) h(sho) m(w) f
(some) g(shortcomings.) 50 b(This) 32 b(is) h(b) s(ecause) g(there) g
(is) h(curren) m(tly) f(no) g(nesting) 274 3762 y(coun) m(t) c(in) e
(the) h(function) g(that) g(deals) g(with) f(sym) m(b) s(ol) h(name) g
(lo) s(okup,) g(so) g(the) g(wrong) f(sym) m(b) s(ol) h(name) f(ma) m
(y) 274 3861 y(b) s(e) j(displa) m(y) m(ed) h(in) f(diagnostics.) p
Fm 169 3979 a(\017) p Fo 60 w(In) h(ob) 5 b(ject) 32
b(\014le) g(formats) g(that) g(don't) f(store) h(the) g(sizes) g(of) g
(sym) m(b) s(ols) f(\(suc) m(h) g(as) h(basic) g(`) p
Fl(a.out) p Fo(',) f(or) g(when) 274 4079 y(using) 44
b(the) g(GNU) g(BFD) h(library\),) j(the) c(curren) m(t) g(implemen) m
(tation) h(will) f(simply) g(assume) f(that) i(the) 274
4178 y(curren) m(t) 26 b(sym) m(b) s(ol) g(terminates) h(at) g(the) g
(b) s(eginning) e(of) h(the) h(next) f(sym) m(b) s(ol) g(in) g(the) g
(virtual) h(address) e(space.) p Fm 169 4296 a(\017) p
Fo 60 w(P) m(erhaps) i(add) f(an) h(option) h(to) f(prev) m(en) m(t) h
(sym) m(b) s(ols) e(from) h(b) s(eing) f(read) h(from) f(ob) 5
b(ject) 28 b(\014les.) 40 b(This) 26 b(migh) m(t) i(b) s(e) 274
4396 y(necessary) 34 b(if) g(mpatrol) g(is) f(used) g(in) g(a) h
(program) g(that) g(loads) g(shared) e(libraries) i(explicitly) -8
b(,) 37 b(or) c(if) h(there) 274 4495 y(is) d(to) s(o) g(m) m(uc) m(h) f
(memory) h(b) s(eing) f(used) f(b) m(y) h(mpatrol) h(to) g(store) g
(the) g(sym) m(b) s(ol) f(details.) p Fm 169 4613 a(\017) p
Fo 60 w(Add) e(functions) f(to) i(start) g(and) e(stop) i(pro\014ling,)
f(and) f(p) s(erhaps) g(also) i(to) g(clear) g(the) f(pro\014ling) g
(tables) h(and) 274 4713 y(b) s(egin) c(a) f(new) g(pro\014ling) g
(output) g(\014le.) 39 b(Should) 23 b(also) j(write) e(more) h
(information) g(to) g(the) f(pro\014ling) g(output) 274
4812 y(\014le,) 29 b(suc) m(h) e(as) h(the) g(date) g(that) g(it) g(w) m
(as) g(pro) s(duced) e(on) h(and) g(the) g(w) m(ord) h(size) g(of) g
(the) f(pro) s(cessor) g(that) i(it) f(w) m(as) 274 4912
y(pro) s(duced) f(on,) i(so) g(that) p Fl 29 w(mprof) p
Fo 26 w(will) g(not) g(crash) f(when) f(reading) i(a) f(pro\014ling) g
(output) g(\014le) g(pro) s(duced) f(on) 274 5012 y(a) k(pro) s(cessor)
f(that) h(has) f(a) h(di\013eren) m(t) g(w) m(ord) f(size.) p
Fm 169 5129 a(\017) p Fo 60 w(P) m(erhaps) 35 b(add) f(the) g(abilit) m
(y) i(to) f(pro\014le) g(memory) f(op) s(erations) h(suc) m(h) f(as) p
Fl 35 w(memcpy\(\)) p Fo 32 w(and) p Fl 34 w(memset\(\)) p
Fo 32 w(to) 274 5229 y(the) i(existing) g(memory) f(allo) s(cation) i
(pro\014ling) d(facilit) m(y) -8 b(.) 58 b(Also,) 37
b(add) d(options) h(to) p Fl 36 w(mprof) p Fo 34 w(to) g(write) h(out)
274 5329 y(\014les) f(that) g(can) g(b) s(e) f(used) g(b) m(y) g(c) m
(hart) i(dra) m(wing) e(soft) m(w) m(are) i(for) e(a) h(b) s(etter) g
(visualisation) h(of) f(the) f(\014rst) g(few) 274 5428
y(pro\014ling) c(tables.) p Fm 169 5546 a(\017) p Fo
60 w(P) m(erhaps) 38 b(the) f(allo) s(cation) j(call) f(graph) e(table)
h(should) f(ha) m(v) m(e) h(the) g(capabilit) m(y) h(to) g(b) s(e) e
(sorted) g(in) p Fl 37 w(mprof) p Fo 274 5645 a(and) 32
b(the) h(`) p Fl(--leaks) p Fo(') e(option) i(should) e(w) m(ork) i
(with) f(it) h(as) g(w) m(ell.) 48 b(There) 32 b(should) g(b) s(e) f(b)
s(etter) i(handling) f(of) p 90 rotate dyy eop
%%Page: 195 201
195 200 bop Fo 94 -116 a(App) s(endix) 29 b(I:) i(Notes) 2914
b(195) 274 365 y(cycles) 34 b(in) e(the) h(call) h(graph) e(and) g
(there) g(is) h(curren) m(tly) f(a) h(problem) f(in) g(that) p
Fl 34 w(mprof) p Fo 31 w(cannot) h(distinguish) 274 465
y(b) s(et) m(w) m(een) 28 b(call) g(sites) g(with) f(v) m(ery) g(lo) m
(w) h(co) s(de) f(addresses) f(that) i(ha) m(v) m(e) g(no) f(sym) m(b) s
(ols) g(and) f(that) h(con\015ict) h(with) 274 565 y(existing) k(sym) m
(b) s(ol) e(indices.) p Fm 169 695 a(\017) p Fo 60 w(Extend) 35
b(the) p Fl 35 w(mptrace) p Fo 33 w(command) f(to) i(graphically) g
(displa) m(y) f(the) g(size) g(of) g(the) g(heap) g(plotted) h(against)
274 794 y(time) 23 b(and) e(the) h(allo) s(cation) i(size) e(frequency)
-8 b(.) 38 b(Also) 22 b(rewrite) g(the) g(GUI) g(supp) s(ort) e(to) i
(use) g(GNOME) g(instead) 274 894 y(of) 31 b(Motif,) h(p) s(ossibly) d
(also) j(using) d(GLADE.) p Fm 169 1024 a(\017) p Fo
60 w(P) m(ossibly) 36 b(add) e(widgets) i(to) g(the) p
Fl 35 w(mptrace) p Fo 33 w(windo) m(w) f(to) g(pause) g(and) g(quit.) 54
b(Migh) m(t) 37 b(also) f(b) s(e) e(handy) g(to) 274
1124 y(add) c(the) h(abilit) m(y) h(to) f(write) f(out) h(c) m(harts) g
(summarising) e(tracing) j(information.) p Fm 169 1254
a(\017) p Fo 60 w(Handle) 40 b(mark) m(ed) f(memory) g(allo) s(cations)
i(in) e(the) h(leak) g(table,) i(and) d(also) h(p) s(erhaps) d(write) j
(out) f(to) h(the) 274 1354 y(mpatrol) 22 b(log) g(\014le) f(when) f
(an) h(allo) s(cation) j(is) d(mark) m(ed) g(so) h(that) f(the) p
Fl 22 w(mleak) p Fo 19 w(command) g(will) h(w) m(ork) f(correctly) -8
b(.) p Fm 169 1484 a(\017) p Fo 60 w(Impro) m(v) m(e) 35
b(the) g(sp) s(eed) e(of) i(w) m(atc) m(h) g(p) s(oin) m(ts) f(b) m(y) g
(setting) i(a) f(range) f(of) h(allo) s(cation) h(indices) f(for) f
(whic) m(h) g(they) 274 1584 y(will) d(b) s(e) f(used.) 40
b(This) 29 b(ma) m(y) i(require) f(a) h(lot) h(of) e(co) s(de) h(c) m
(hanges) g(in) f(`) p Fl(alloc.c) p Fo('.) p Fm 169 1714
a(\017) p Fo 60 w(Add) g(a) i(soft) m(w) m(are) g(w) m(atc) m(h) g(p) s
(oin) m(t) f(facilit) m(y) i(that) e(can) h(b) s(e) e(placed) h(on) g
(ranges) g(of) g(addresses) f(in) h(the) g(heap.) 274
1814 y(Then,) 42 b(if) f(a) f(heap) g(op) s(eration) h(touc) m(hes) g
(the) g(w) m(atc) m(h) g(p) s(oin) m(t,) i(either) e(the) f(user) g
(can) h(b) s(e) e(noti\014ed) h(or) h(a) 274 1913 y(callbac) m(k) g
(function) e(can) f(b) s(e) g(called.) 67 b(The) 38 b(same) h(could) g
(b) s(e) f(done) g(for) h(lo) s(cal) h(v) -5 b(ariables) 39
b(if) g(the) f(stac) m(k) 274 2013 y(frame) 29 b(can) f(b) s(e) g
(easily) h(determined,) g(whic) m(h) e(w) m(ould) h(also) i(allo) m(w) f
(detecting) h(if) e(a) h(read) f(from) g(or) g(write) g(to) 274
2113 y(memory) j(w) m(as) g(p) s(erformed) d(just) i(b) s(ey) m(ond) g
(the) g(stac) m(k) i(p) s(oin) m(ter.) p Fm 169 2243
a(\017) p Fo 60 w(Add) c(a) i(CR) m(C) e(c) m(hec) m(ksum) i(to) f
(memory) g(blo) s(c) m(ks) g(and) f(use) h(it) g(to) h(c) m(hec) m(k) g
(that) g(freed) e(memory) h(allo) s(cations) 274 2342
y(ha) m(v) m(e) g(not) f(b) s(een) f(corrupted) g(when) g(the) h(`) p
Fl(NOFREE) p Fo(') e(and) h(`) p Fl(PRESERVE) p Fo(') f(options) i(are)
g(in) f(use) g(on) h(platforms) 274 2442 y(whic) m(h) j(ha) m(v) m(e) g
(no) f(memory) h(protection.) p Fm 169 2572 a(\017) p
Fo 60 w(P) m(erhaps) 26 b(extend) g(the) g(`) p Fl(NOFREE) p
Fo(') e(option) i(to) h(prev) m(en) m(t) f(the) g(mpatrol) g(library) g
(from) f(reusing) g(freed) h(mem-) 274 2672 y(ory) e(allo) s(cations) j
(unless) c(it) i(really) f(needs) g(to.) 39 b(This) 24
b(w) m(ould) f(mean) h(that) h(no) f(freed) g(allo) s(cations) i(w) m
(ould) e(b) s(e) 274 2772 y(reused) i(un) m(til) h(there) g(is) g(no) g
(more) g(free) f(memory) h(left) g(and) g(mpatrol) g(w) m(ould) f
(normally) h(ha) m(v) m(e) h(to) f(allo) s(cate) 274
2871 y(more) h(from) e(the) i(system.) 39 b(It) 27 b(could) h(then) e
(con) m(v) m(ert) j(as) e(man) m(y) g(freed) g(allo) s(cations) i(to) f
(free) f(memory) g(as) g(it) 274 2971 y(needs) k(to) g(ful\014l) f(the)
h(allo) s(cation) j(request,) d(although) g(it) g(w) m(ould) g
(probably) f(still) i(ha) m(v) m(e) g(to) f(abide) g(b) m(y) g(the) 274
3071 y(minim) m(um) f(n) m(um) m(b) s(er) f(of) i(freed) f(allo) s
(cations) i(set) f(b) m(y) f(the) h(`) p Fl(NOFREE) p
Fo(') e(option.) p Fm 169 3201 a(\017) p Fo 60 w(P) m(erhaps) 39
b(c) m(hange) h(the) g(b) s(eha) m(viour) e(of) h(the) h(`) p
Fl(NOFREE) p Fo(') d(option) j(so) f(that) h(it) f(do) s(esn't) g(prev)
m(en) m(t) h(in-place) 274 3300 y(reallo) s(cations) 35
b(if) d(there) g(is) g(enough) g(memory) g(to) g(p) s(erform) f(them.)
46 b(Then) 31 b(an) h(option) g(could) g(b) s(e) g(added) 274
3400 y(to) k(force) f(reallo) s(cations) i(to) e(alw) m(a) m(ys) h
(allo) s(cate) h(new) d(memory) h(so) f(that) i(the) e(b) s(eha) m
(viour) g(could) h(also) h(b) s(e) 274 3500 y(used) 30
b(when) f(the) i(`) p Fl(NOFREE) p Fo(') e(option) i(is) f(not) h
(used.) p Fm 169 3630 a(\017) p Fo 60 w(Add) 20 b(an) h(option) g(to) g
(set) g(up) e(a) i(timer) g(that) g(will) g(automatically) j(c) m(hec) m
(k) e(the) e(heap) h(after) g(a) g(certain) g(n) m(um) m(b) s(er) 274
3730 y(of) 37 b(clo) s(c) m(k) h(cycles) g(ha) m(v) m(e) g(elapsed.) 60
b(This) 35 b(could) i(b) s(e) f(useful) g(in) g(programs) g(that) i(ha)
m(v) m(e) f(long) h(p) s(erio) s(ds) d(of) 274 3829 y(time) j(where) f
(no) g(dynamic) h(memory) f(allo) s(cation) i(functions) e(are) h
(called,) i(but) d(heap) g(allo) s(cations) j(are) 274
3929 y(still) 32 b(manipulated.) 42 b(In) 30 b(addition,) h(c) m(hec) m
(ks) h(could) f(automatically) i(b) s(e) d(made) h(up) s(on) e(receipt)
j(of) e(sp) s(ecial) 274 4028 y(signals) 24 b(sen) m(t) g(to) f(the) h
(program) e(b) m(y) h(the) h(user) e(and) g(information) i(ab) s(out) e
(the) i(last) g(successful) e(v) m(eri\014cation) 274
4128 y(of) 29 b(the) f(heap) g(could) g(b) s(e) g(used) f(to) i(narro) m
(w) f(do) m(wn) f(problems.) 39 b(P) m(erhaps) 28 b(ev) m(en) h(some) f
(statistics) i(could) f(b) s(e) 274 4228 y(prin) m(ted) h(on) h
(receipt) g(of) f(a) h(sp) s(ecial) g(signal) g(as) g(w) m(ell.) p
Fm 169 4358 a(\017) p Fo 60 w(Add) 37 b(a) h(diagnostic) g(n) m(um) m
(b) s(er) e(coun) m(t) i(to) g(eac) m(h) g(w) m(arning) g(and) e(error)
h(rep) s(orted) g(in) f(the) i(log) g(\014le.) 62 b(This) 274
4458 y(could) 23 b(then) f(b) s(e) g(used) f(to) i(implemen) m(t) g(a) g
(`) p Fl(DIAGSTOP) p Fo(') e(option) h(whic) m(h) g(w) m(ould) h(stop) f
(the) h(program) f(running) 274 4557 y(after) 31 b(a) g(certain) g(n) m
(um) m(b) s(er) e(of) i(diagnostics) h(ha) m(v) m(e) f(b) s(een) f
(displa) m(y) m(ed.) p Fm 169 4688 a(\017) p Fo 60 w(Add) f(the) h
(abilit) m(y) h(to) f(stop) g(in) f(a) h(debugger) f(when) g(a) g
(memory) h(allo) s(cation) i(is) d(made) h(from) f(a) h(particular) 274
4787 y(\014le) j(and) g(line) g(n) m(um) m(b) s(er,) f(and) g(p) s
(erhaps) f(also) j(trap) f(when) e(a) i(particular) h(address) d(is) i
(allo) s(cated) i(as) e(part) 274 4887 y(of) e(a) g(memory) f(allo) s
(cation.) p Fm 169 5017 a(\017) p Fo 60 w(P) m(erhaps) h(add) f(time) i
(information) f(to) h(the) f(details) h(stored) f(ab) s(out) g(eac) m
(h) h(memory) f(allo) s(cation.) 45 b(This) 30 b(is) 274
5117 y(probably) g(not) h(useful) e(unless) h(the) h(system) f(pro) m
(vides) g(a) h(high-resolution) g(timer.) p Fm 169 5247
a(\017) p Fo 60 w(Add) c(an) h(option) g(\(p) s(erhaps) e(`) p
Fl(NOINTERNAL) p Fo('\)) g(to) i(suppress) d(the) j(displa) m(y) g(of) g
(in) m(ternal) g(\(recursiv) m(e\)) h(mem-) 274 5347
y(ory) k(allo) s(cations) h(in) e(the) g(mpatrol) h(log) g(\014le) f
(and) g(also) h(prev) m(en) m(t) g(information) f(ab) s(out) g(suc) m
(h) g(allo) s(cations) 274 5446 y(b) s(eing) f(written) g(to) g(the) g
(pro\014ling) g(output) f(and) g(tracing) i(output) f(\014les.) 42
b(P) m(erhaps) 30 b(this) h(could) g(b) s(e) f(made) 274
5546 y(the) 35 b(default) g(so) g(that) h(they) f(b) s(eha) m(v) m(e) g
(in) g(the) g(same) g(w) m(a) m(y) h(as) f(mark) m(ed) f(allo) s
(cations,) 39 b(in) 34 b(whic) m(h) h(case) g(w) m(e) 274
5645 y(migh) m(t) g(w) m(an) m(t) f(an) f(option) h(whic) m(h) f(prev) m
(en) m(ts) h(in) m(ternal) g(and) f(mark) m(ed) g(allo) s(cations) j(b)
s(eing) c(hidden.) 49 b(This) p 90 rotate dyy eop
%%Page: 196 202
196 201 bop Fo 94 -116 a(196) 3332 b(mpatrol) 274 365
y(could) 31 b(also) g(b) s(e) e(extended) h(to) h(prev) m(en) m(t) g
(memory) f(leaks) h(from) e(b) s(eing) h(rep) s(orted) f(if) h(the) h
(original) g(allo) s(ca-) 274 465 y(tions) g(w) m(ere) g(made) f(from) g
(a) h(giv) m(en) h(set) e(of) h(functions.) p Fm 169
588 a(\017) p Fo 60 w(Add) 25 b(a) g(function) g(to) h(add) e(a) i(blo)
s(c) m(k) g(of) f(memory) g(to) h(the) f(heap,) h(p) s(ossibly) f(a) g
(memory-mapp) s(ed) f(\014le.) 39 b(Also) 274 687 y(add) 30
b(a) h(function) f(that) h(can) g(shrink) e(the) h(heap) g(if) h(large)
g(areas) g(of) g(free) f(memory) h(exist.) p Fm 169 810
a(\017) p Fo 60 w(Ma) m(yb) s(e) 37 b(sho) m(w) f(the) g(con) m(ten) m
(ts) h(of) f(the) p Fl 37 w(MPATROL_OPTIONS) p Fo 31
w(en) m(vironmen) m(t) h(v) -5 b(ariable) 36 b(in) g(the) g(summary) 274
910 y(as) 31 b(w) m(ell.) p Fm 169 1033 a(\017) p Fo
60 w(Add) 37 b(v) m(ersions) h(of) p Fl 38 w(mallopt\(\)) p
Fo(,) p Fl 37 w(mallinfo\(\)) p Fo(,) p Fl 36 w(memorymap\(\)) p
Fo(,) p Fl 37 w(mallocctl\(\)) p Fo(,) p Fl 36 w(mallocblksize\(\)) p
Fo 274 1132 a(and) p Fl 35 w(msize\(\)) p Fo 34 w(whic) m(h) d(are) h
(pro) m(vided) f(in) g(man) m(y) g(other) h(mallo) s(c) g(libraries.) 56
b(These) 35 b(w) m(on't) h(necessarily) 274 1232 y(b) s(eha) m(v) m(e) h
(in) f(exactly) i(the) f(same) g(w) m(a) m(y) g(as) f(existing) i
(implemen) m(tations,) h(but) d(at) h(least) g(there) g(w) m(on't) g(b)
s(e) 274 1332 y(link) c(errors) f(when) g(compiling) i(source) e(co) s
(de) h(whic) m(h) g(uses) f(them.) 48 b(Also,) 34 b(add) e(supp) s(ort)
f(for) i(setting) h(as) 274 1431 y(man) m(y) e(remaining) g(options) g
(in) p Fl 31 w(__mp_setoption\(\)) p Fo 27 w(as) g(p) s(ossible) f(and)
g(p) s(erhaps) f(ev) m(en) j(some) f(options) 274 1531
y(b) s(efore) e(the) h(mpatrol) g(library) f(has) g(b) s(een) f
(initialised.) p Fm 169 1654 a(\017) p Fo 60 w(Add) f(similar) g
(functions) g(to) h(the) f(GNU) p Fl 29 w(mcheck\(\)) p
Fo 26 w(and) p Fl 27 w(mprobe\(\)) p Fo 26 w(functions.) 40
b(P) m(erhaps) 27 b(also) j(add) d(an) 274 1753 y(mpatrol) k(to) s(ol) h
(to) f(add) e(compatibilit) m(y) k(with) d(the) h(GNU) g(mem) m(usage) g
(to) s(ol.) p Fm 169 1876 a(\017) p Fo 60 w(P) m(erhaps) 49
b(add) g(debugging/tracing) i(v) m(ersions) f(of) f(the) h(string) f
(manipulation) h(functions,) k(suc) m(h) 49 b(as) p Fl
274 1976 a(strlen\(\)) p Fo 40 w(and) p Fl 40 w(strcmp\(\)) p
Fo 40 w(in) 41 b(m) m(uc) m(h) g(the) h(same) f(w) m(a) m(y) i(as) e(w)
m(as) h(done) f(for) h(the) f(memory) g(op) s(eration) 274
2075 y(functions.) 57 b(The) 36 b(only) g(problem) f(with) g(this) h(w)
m(ould) g(b) s(e) f(lo) s(cale) j(supp) s(ort,) d(but) g(p) s(erhaps) g
(it) h(migh) m(t) h(b) s(e) 274 2175 y(easier) k(just) d(to) i(assume) f
(the) h(C) f(lo) s(cale) h(to) g(b) s(egin) f(with.) 67
b(Also) 40 b(need) f(to) h(ha) m(v) m(e) h(b) s(etter) e(detection) i
(of) 274 2275 y(in) m(ternal) 32 b(and) d(free) i(blo) s(c) m(ks) g
(when) e(displa) m(ying) i(memory) f(range) h(errors.) p
Fm 169 2398 a(\017) p Fo 60 w(Add) 40 b(wide-c) m(haracter) i(equiv) -5
b(alen) m(ts) 42 b(of) p Fl 40 w(memset\(\)) p Fo(,) f(etc.) 72
b(These) 40 b(are) g(de\014ned) f(as) p Fl 41 w(wmemset\(\)) p
Fo(,) i(etc.) 274 2497 y(and) g(are) h(no) m(w) f(part) g(of) g(ANSI) g
(C.) g(Also) h(add) p Fl 40 w(wcsdup\(\)) p Fo(,) p Fl
42 w(memdup\(\)) p Fo 39 w(and) p Fl 41 w(xmemdup\(\)) p
Fo 38 w(as) g(w) m(ell) g(as) p Fl 274 2597 a(mempcpy\(\)) p
Fo 28 w(and) p Fl 30 w(memrchr\(\)) p Fo(.) p Fm 169
2720 a(\017) p Fo 60 w(P) m(erhaps) 28 b(reimplemen) m(t) h(the) f
(standard) f(I/O) h(library) g(for) g(in) m(ternal) h(use) e(b) m(y) h
(mpatrol,) h(th) m(us) f(prev) m(en) m(ting) 274 2819
y(recursiv) m(e) 22 b(calls) g(to) p Fl 22 w(malloc\(\)) p
Fo 19 w(eac) m(h) g(time) g(a) g(write) f(to) h(the) f(log) i(\014le) e
(o) s(ccurs) g(on) g(some) g(systems.) 38 b(Example) 274
2919 y(co) s(de) 25 b(to) g(do) f(this) g(w) m(as) h(submitted) f(b) m
(y) g(Alexander) g(Barton) h(\() p Fl(abarton@innotrac.com) p
Fo(\)) 20 b(and) j(this) h(ma) m(y) 274 3019 y(w) m(ell) 32
b(b) s(e) e(incorp) s(orated) g(in) m(to) h(the) g(library) f(at) h
(some) g(p) s(oin) m(t) f(in) g(the) h(future) p Fh 2833
2986 a(3) p Fo 2869 3019 a(.) p Fm 169 3141 a(\017) p
Fo 60 w(The) e(`) p Fl(LOG*) p Fo(') g(options) g(could) h(b) s(e) e
(extended) h(to) h(tak) m(e) h(a) f(list) g(of) f(sp) s(eci\014c) g
(functions) g(to) h(log.) 41 b(They) 29 b(could) 274
3241 y(also) j(only) e(log) i(op) s(erations) e(spanning) g(a) h(range)
f(of) h(addresses) f(or) g(allo) s(cation) j(indices) d(as) h(w) m
(ell.) p Fm 169 3364 a(\017) p Fo 60 w(Add) e(an) g(option) g(to) h
(limit) g(the) f(size) h(of) f(eac) m(h) i(memory) e(allo) s(cation) i
(to) f(a) f(maxim) m(um) g(n) m(um) m(b) s(er) f(of) h(b) m(ytes.) 274
3464 y(This) d(could) h(b) s(e) f(useful) g(if) h(a) g(memory) f(allo) s
(cation) j(function) d(is) h(called) h(with) e(an) h(uninitialised) g
(v) -5 b(ariable.) p Fm 169 3586 a(\017) p Fo 60 w(Add) 35
b(assertion) h(macros) g(to) g(`) p Fl(mpatrol.h) p Fo(') e(that) i
(can) f(b) s(e) g(used) g(in) g(program) g(co) s(de.) 56
b(These) 35 b(could) h(b) s(e) 274 3686 y(used) g(to) i(assert) f(that)
h(p) s(oin) m(ters) e(ha) m(v) m(e) i(not) f(b) s(een) g(freed,) h(are)
f(v) -5 b(alid) 37 b(heap) g(addresses) f(or) h(are) g(strings,) 274
3786 y(or) d(p) s(erhaps) e(ev) m(en) i(that) g(the) g(address) f(is) g
(readable,) i(writable) f(and/or) g(executable.) 51 b(They) 33
b(w) m(ould) h(b) s(e) 274 3885 y(disabled) d(if) p Fl
30 w(NDEBUG) p Fo 29 w(is) f(de\014ned.) p Fm 169 4008
a(\017) p Fo 60 w(Add) 39 b(supp) s(ort) g(functions) g(that) h(could) g
(b) s(e) g(added) f(to) h(user) g(co) s(de) g(to) g(en) m(ter) h(and) e
(lea) m(v) m(e) j(scop) s(es) e(in) g(a) 274 4108 y(source) 33
b(\014le) g(and) e(ensure) h(that) h(all) g(allo) s(cations) i(allo) s
(cated) f(within) e(the) h(scop) s(e) f(are) h(freed) f(b) m(y) h(the) f
(time) 274 4207 y(the) f(scop) s(e) g(has) f(b) s(een) f(exited.) p
Fm 169 4330 a(\017) p Fo 60 w(Add) i(supp) s(ort) e(for) i(the) g(`) p
Fl(-finstrument-functions) p Fo(') 26 b(option) 31 b(of) g(the) h(GNU) f
(compiler.) 44 b(This) 30 b(w) m(ould) 274 4430 y(allo) m(w) 37
b(mpatrol) d(to) i(k) m(eep) f(trac) m(k) h(of) e(the) h(en) m(try) g
(to) g(and) f(exit) i(from) e(ev) m(ery) h(function,) h(but) d(w) m
(ould) i(only) 274 4530 y(w) m(ork) c(for) f(co) s(de) h(compiled) g
(with) f(this) g(option.) p Fm 169 4652 a(\017) p Fo
60 w(Extend) 41 b(the) g(Chec) m(k) m(er-supp) s(ort) f(functions) g
(to) i(store) f(and) g(c) m(hec) m(k) h(information) f(ab) s(out) g
(access) h(p) s(er-) 274 4752 y(missions) 33 b(within) g(heap) f
(memory) h(and) f(p) s(erhaps) g(also) i(in) e(the) h(stac) m(k) i(as) e
(w) m(ell,) i(and) d(also) i(impro) m(v) m(e) g(the) 274
4852 y(diagnostics) 26 b(from) e(the) h(c) m(hec) m(k) m(er) i
(functions) d(if) h(they) f(fail.) 40 b(Curren) m(tly) -8
b(,) 26 b(the) e(Chec) m(k) m(er-supp) s(ort) g(functions) 274
4951 y(only) 39 b(ensure) f(that) i(no) e(memory) h(accesses) h(cross) f
(allo) s(cation) i(b) s(oundaries) d(or) g(access) i(free) f(memory) -8
b(.) 274 5051 y(Could) 26 b(also) i(mak) m(e) g(use) e(of) h(the) p
Fl 27 w(etext) p Fo(,) p Fl 26 w(edata) p Fo 25 w(and) p
Fl 26 w(end) p Fo 26 w(p) s(oin) m(ters) g(that) g(are) g(set) g(at) h
(run-time) e(on) h(most) 274 5151 y(UNIX) k(systems.) 41
b(Need) 31 b(to) g(prop) s(erly) e(implemen) m(t) p Fl
31 w(chkr_check_exec\(\)) p Fo(.) p Fm 169 5273 a(\017) p
Fo 60 w(Details) 38 b(of) d(the) g(segmen) m(ts) h(whic) m(h) f(mak) m
(e) i(up) d(the) h(executable) i(\014le) e(and) g(an) m(y) g(shared) g
(libraries) g(could) 274 5373 y(b) s(e) h(made) g(use) g(of) h(in) f
(order) f(to) i(detect) h(op) s(erations) e(whic) m(h) g(cross) h(suc) m
(h) f(segmen) m(ts.) 59 b(F) -8 b(or) 37 b(example,) i(a) p
94 5462 1200 4 v Fh 143 5522 a(3) p Fg 219 5554 a(This) 83
b(co) r(de) g(can) g(b) r(e) f(applied) g(as) i(an) e(mpatrol) h
(library) g(patc) n(h) f(whic) n(h) g(can) h(b) r(e) f(do) n(wnloaded) h
(from) p Ff 219 5645 a(http://www.cbmamiga.demon.co.) q(uk/m) q(patro) q
(l/pa) q(tches) q(/mpa) q(trol) q(_patc) q(h1.t) q(ar.gz) p
Fg 1 w(.) p 90 rotate dyy eop
%%Page: 197 203
197 202 bop Fo 94 -116 a(App) s(endix) 29 b(I:) i(Notes) 2914
b(197) 274 365 y(memory) 37 b(op) s(eration) g(ma) m(y) g(erroneously) f
(cross) g(the) h(data) g(and) f(BSS) f(segmen) m(ts.) 60
b(The) 36 b(sym) m(b) s(ol) g(table) 274 465 y(for) 31
b(data) h(sym) m(b) s(ols) e(could) h(also) h(b) s(e) e(used) g(to) i
(pro) m(vide) f(m) m(uc) m(h) g(\014ner-grained) f(error-c) m(hec) m
(king.) 44 b(Need) 31 b(to) 274 565 y(mak) m(e) h(use) e(of) g(the) p
Fl 31 w(__mp_memquery\(\)) p Fo 26 w(function.) p Fm
169 697 a(\017) p Fo 60 w(Add) g(garbage) h(detection) h(supp) s(ort) c
(to) j(mpatrol.) 41 b(This) 29 b(w) m(ould) h(b) s(e) f(implemen) m
(ted) i(as) f(a) h(function) e(that) 274 796 y(w) m(ould) 35
b(tra) m(v) m(erse) h(all) g(of) f(the) g(ro) s(ots) g(of) g(the) g
(memory) f(in) h(a) g(pro) s(cess) f(and) h(lo) s(ok) g(for) f(p) s
(oin) m(ters) h(in) m(to) h(free) 274 896 y(memory) 31
b(or) f(the) h(lac) m(k) h(of) e(an) m(y) h(p) s(oin) m(ters) f(in) m
(to) h(allo) s(cated) i(memory) d(\(to) h(detect) h(memory) e(leaks\).)
p Fm 169 1028 a(\017) p Fo 60 w(Add) e(an) h(option) g(to) g(sp) s
(ecify) f(that) h(all) h(failed) f(memory) f(allo) s(cations) j(should)
c(ab) s(ort) i(\(or) f(at) i(least) g(giv) m(e) g(a) 274
1128 y(w) m(arning\)) h(instead) g(of) f(returning) g(a) h(`) p
Fl(NULL) p Fo(') f(p) s(oin) m(ter.) 41 b(Also,) 31 b(p) s(erhaps) e
(add) h(an) g(option) h(to) g(displa) m(y) g(the) 274
1227 y(partial) h(con) m(ten) m(ts) g(of) e(freed) g(and) g(unfreed) f
(allo) s(cations) k(in) d(the) g(mpatrol) h(log) g(\014le.) p
Fm 169 1359 a(\017) p Fo 60 w(P) m(erhaps) f(add) g(memory) h
(protection) g(to) g(the) g(sim) m(ulated) p Fl 31 w(sbrk) p
Fo 29 w(heap.) p Fm 169 1492 a(\017) p Fo 60 w(Add) e(an) f(option) i
(to) f(force) h(the) f(mpatrol) g(library) g(to) g(return) f(`) p
Fl(NULL) p Fo(') h(if) f(it) i(is) f(ask) m(ed) g(to) h(allo) s(cate) i
(a) d(zero-) 274 1591 y(sized) 34 b(blo) s(c) m(k) h(of) e(memory) -8
b(.) 51 b(This) 33 b(migh) m(t) h(b) s(e) f(useful) g(for) g(SVID) h
(complian) m(t) h(programs.) 50 b(P) m(erhaps) 33 b(also) 274
1691 y(extend) g(the) g(mpatrol) g(library) f(to) h(allo) m(w) h
(zero-sized) g(blo) s(c) m(ks.) 48 b(I) 32 b(susp) s(ect) g(the) h
(easiest) h(w) m(a) m(y) f(to) h(do) e(this) 274 1790
y(is) h(to) h(ha) m(v) m(e) g(a) f(sp) s(ecial) h(address) d(that) j
(is) f(alw) m(a) m(ys) h(returned) e(for) g(suc) m(h) h(blo) s(c) m(ks)
g(and) f(that) i(will) f(ha) m(v) m(e) h(the) 274 1890
y(appropriate) d(size) g(of) g(o) m(v) m(er\015o) m(w) g(bu\013ers) f
(dep) s(ending) f(on) h(the) g(options) h(used.) p Fm
169 2022 a(\017) p Fo 60 w(Add) 37 b(an) g(option) h(to) g(rep) s(ort) f
(if) g(one) h(thread) f(resizes) h(or) g(frees) f(another) h(thread's) f
(allo) s(cations.) 64 b(This) 274 2122 y(ma) m(y) 30
b(not) e(b) s(e) g(useful) g(in) g(most) h(cases,) h(but) e(it) h(migh)
m(t) g(b) s(e) f(p) s(ossible) g(to) h(trac) m(k) h(do) m(wn) e(some) h
(obscure) f(bugs) 274 2222 y(in) j(some) f(situations.) p
Fm 169 2354 a(\017) p Fo 60 w(P) m(erhaps) i(add) f(in) m
(ternationalisation) k(supp) s(ort) 30 b(through) h(the) h(use) f(of) h
(lo) s(cales) h(and) e(message) i(catalogs.) 274 2453
y(Unfortunately) -8 b(,) 32 b(there) g(do) s(es) e(not) h(app) s(ear) g
(to) g(b) s(e) f(a) i(uni\014ed) d(metho) s(d) h(for) h(doing) g(this) g
(across) g(all) h(plat-) 274 2553 y(forms) k(and) f(there) h(ma) m(y) h
(also) f(b) s(e) g(issues) f(with) h(third-part) m(y) f(libraries) h
(calling) p Fl 38 w(malloc\(\)) p Fo 33 w(and) g(other) 274
2653 y(related) c(routines) e(when) f(the) i(mpatrol) g(library) f(is) g
(attempting) i(to) f(initialise) h(itself.) p Fm 169
2785 a(\017) p Fo 60 w(There) 27 b(is) h(curren) m(tly) f(a) h(problem)
f(when) f(the) i(mpatrol) g(library) f(encoun) m(ters) g(an) h(illegal)
h(memory) f(access) 274 2884 y(on) 34 b(UNIX) g(and) e(Windo) m(ws) i
(platforms,) g(and) f(there) h(is) g(a) f(further) g(illegal) i(memory)
f(access) g(when) f(it) h(is) 274 2984 y(displa) m(ying) j(the) g
(summary) -8 b(.) 58 b(This) 36 b(should) f(b) s(e) h(prev) m(en) m
(ted) h(b) m(y) f(disabling) g(the) h(signal) g(handler) e(at) j(its)
274 3084 y(\014rst) 30 b(en) m(try) -8 b(.) p Fm 169
3216 a(\017) p Fo 60 w(Need) 25 b(to) g(mak) m(e) g(the) g(mpallo) s(c)
f(library) g(threadsafe) p Fh 2016 3183 a(4) p Fo 2054
3216 a(.) 38 b(This) 24 b(is) g(only) g(lik) m(ely) i(to) f(b) s(e) e
(an) h(issue) g(when) f(calling) p Fl 274 3315 a(MP_FAILURE\(\)) p
Fo(.) 70 b(Should) 40 b(also) i(add) e(something) i(similar) f(to) p
Fl 42 w(xmalloc_set_program_name\() o(\)) p Fo 35 w(in) 274
3415 y(order) 30 b(to) g(sho) m(w) g(the) g(program) f(name) h(when) f
(a) h(memory) f(allo) s(cation) j(fails.) 41 b(If) 30
b(the) g(C) p Fl(++) p Fo 28 w(op) s(erators) g(fail) 274
3515 y(to) 25 b(allo) s(cate) i(memory) d(in) g(libmpallo) s(c) h(then)
f(there) g(should) f(probably) g(also) j(b) s(e) d(an) h(exception) i
(thro) m(wn) d(to) 274 3614 y(mimic) 29 b(the) f(b) s(eha) m(viour) g
(of) g(libmpatrol,) i(although) e(this) g(isn't) g(a) h(big) f(issue) g
(since) h(the) f(program) g(should) 274 3714 y(b) s(e) i(completely) i
(recompiled) e(to) h(remo) m(v) m(e) h(mpatrol) e(debugging) g(b) s
(efore) g(a) g(release.) 42 b(In) 29 b(the) i(same) f(v) m(ein,) 274
3813 y(p) s(erhaps) f(there) i(should) e(b) s(e) h(some) h(sort) f(of) h
(supp) s(ort) d(for) p Fl 31 w(set_new_handler\(\)) p
Fo 25 w(in) i(libmpallo) s(c.) p Fm 169 3946 a(\017) p
Fo 60 w(Add) g(an) h(option) g(to) g(write) g(the) g(mpatrol) g(log) h
(\014le) e(in) h(HTML) f(format,) i(or) e(ev) m(en) i(b) s(etter) e
(XML) h(format.) 274 4045 y(Need) g(to) g(also) h(extend) e(what) g(is)
h(written) f(out) h(b) m(y) f(the) h(`) p Fl(--hatf-file) p
Fo(') d(option.) p Fm 169 4177 a(\017) p Fo 60 w(The) p
Fl 29 w(mpsym) p Fo 28 w(command) h(could) h(optionally) g(preserv) m
(e) g(an) m(y) f(stac) m(k) i(tracebac) m(k) g(lines) f(that) g
(already) g(ha) m(v) m(e) 274 4277 y(sym) m(b) s(olic) 36
b(or) f(debugging) h(information) f(asso) s(ciated) i(with) e(them.) 55
b(It) 35 b(could) h(also) g(supp) s(ort) d(more) j(de-) 274
4377 y(buggers) g(other) f(than) g(just) p Fl 35 w(gdb) p
Fo(.) 55 b(Finally) -8 b(,) 38 b(it) e(could) f(supp) s(ort) f(`) p
Fl(-) p Fo(') h(as) h(the) g(\014lename) f(for) g(reading) h(the) 274
4476 y(mpatrol) 31 b(log) h(\014le) e(from) g(the) h(standard) e(input)
h(\014le) g(stream.) p Fm 169 4608 a(\017) p Fo 60 w(A) f(go) s(o) s(d)
f(idea) h(migh) m(t) g(b) s(e) f(to) h(ha) m(v) m(e) g(the) p
Fl 29 w(mpatrol) p Fo 26 w(command) f(read) g(options) h(from) f(a) g
(con\014guration) h(\014le) 274 4708 y(instead) k(of) f(an) h(en) m
(vironmen) m(t) f(v) -5 b(ariable,) 34 b(but) e(that) h(will) f(only) h
(w) m(ork) f(if) g(it) h(do) s(esn't) f(in) m(v) m(olv) m(e) j(allo) s
(cating) 274 4808 y(an) m(y) c(memory) f(b) s(efore) g(the) h(mpatrol) g
(library) f(has) g(b) s(een) f(initialised.) p Fm 169
4940 a(\017) p Fo 60 w(P) m(erhaps) 36 b(incorp) s(orate) h(a) f(C) p
Fl(++) p Fo 36 w(enco) s(ded) f(name) i(demangler) f(in) m(to) h(the) f
(mpatrol) h(library) -8 b(.) 58 b(The) 36 b(most) 274
5039 y(lik) m(ely) 46 b(candidate) e(is) g(the) g(GNU) h(demangler) f
(that) g(comes) h(with) e(the) h(libib) s(ert) m(y) g(library) -8
b(,) 47 b(but) c(that) 274 5139 y(curren) m(tly) 30 b(allo) s(cates) h
(temp) s(orary) e(space) h(on) f(the) g(heap) g(using) p
Fl 29 w(xmalloc\(\)) p Fo 27 w(whic) m(h) g(means) g(that) h(it) g
(will) 274 5239 y(run) f(un) m(b) s(earably) h(slo) m(wly) h(under) e
(mpatrol) p Fh 1758 5206 a(5) p Fo 1796 5239 a(.) p 94
5365 1200 4 v Fh 143 5425 a(4) p Fg 219 5457 a(And) c(p) r(erhaps) g
(also) i(mak) n(e) f(the) f(mpto) r(ols) i(library) f(threadsafe) g(as)
h(w) n(ell) p Fh 143 5522 a(5) p Fg 219 5554 a(If) e(y) n(ou) f(really)
h(really) h(w) n(an) n(t) e(this) h(functionalit) n(y) g(then) f(co) r
(de) h(to) g(do) g(this) g(is) g(a) n(v) l(ailable) h(as) f(an) f
(mpatrol) i(library) f(patc) n(h) f(whic) n(h) 219 5645
y(can) i(b) r(e) f(do) n(wnloaded) i(from) p Ff 26 w
(http://www.cbmamiga.demon.co.) q(uk/m) q(patr) q(ol/pa) q(tche) q
(s/mpa) q(trol) q(_pat) q(ch4.t) q(ar.g) q(z) p Fg(.) p
90 rotate dyy eop
%%Page: 198 204
198 203 bop Fo 94 -116 a(198) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(Add) 34 b(a) i(script) e(to) i(wrap) e(around) f
(v) -5 b(arious) 35 b(p) s(opular) f(C) g(and) g(C) p
Fl(++) p Fo 34 w(compiler) h(driv) m(ers) f(so) h(that) h(linking) 274
465 y(with) h(the) f(mpatrol) h(library) f(is) h(m) m(uc) m(h) f(less) h
(lab) s(orious.) 59 b(In) 36 b(addition,) i(a) f(user-de\014ned) e
(command) h(or) 274 565 y(script) 31 b(\014le) f(could) h(b) s(e) e
(executed) j(at) f(the) f(end) g(of) h(ev) m(ery) g(in) m(v) m(o) s
(cation) h(of) f(the) p Fl 30 w(mpatrol) p Fo 29 w(command.) p
Fm 169 692 a(\017) p Fo 60 w(Add) 26 b(a) g(script) g(to) h
(automatically) i(run) c(the) h(mpatrol) g(library) g(tests.) 40
b(It) 26 b(could) h(b) s(e) e(quite) i(hard) e(to) i(v) m(erify) 274
792 y(the) 40 b(tests) g(since) g(the) f(heap) g(addresses) g(are) h
(lik) m(ely) h(to) f(b) s(e) f(di\013eren) m(t) g(on) h(ev) m(ery) g
(new) f(build) f(and) h(will) 274 891 y(certainly) 32
b(b) s(e) e(di\013eren) m(t) h(across) g(di\013eren) m(t) f(platforms.)
p Fm 169 1019 a(\017) p Fo 60 w(Impro) m(v) m(e) f(the) g(auto) s
(conf,) h(automak) m(e) g(and) e(libto) s(ol) i(supp) s(ort.) 38
b(Also) 29 b(up) s(date) f(the) p Fl 29 w(mupdate) p
Fo 26 w(shell) h(script) 274 1119 y(to) j(automatically) h(up) s(date) c
(the) i(v) m(ersion) g(n) m(um) m(b) s(ers) e(con) m(tained) i(in) f
(the) h(\014les) f(in) g(the) h(`) p Fl(pkg) p Fo(') f(directory) -8
b(.) p Fm 169 1246 a(\017) p Fo 60 w(The) 36 b(p) s(ostscript) h(v) m
(ersion) g(of) f(the) h(quic) m(k) g(reference) g(card) f(seems) h(to) g
(prin) m(t) f(at) i(an) e(un) m(usual) g(o\013set) h(on) 274
1346 y(some) 23 b(prin) m(ters.) 37 b(In) 22 b(addition,) i(the) e
(mpatrol) h(man) m(ual) f(should) f(also) i(b) s(e) f(formatted) g(in) g
(Do) s(cBo) s(ok) i(format) 274 1445 y(once) 32 b(a) e(suitable) h(T)
947 1465 y(E) 997 1445 y(Xinfo) g(to) g(Do) s(cBo) s(ok) h(translator) f
(is) f(a) m(v) -5 b(ailable.) p Fm 169 1573 a(\017) p
Fo 60 w(P) m(erhaps) 37 b(add) g(b) s(enc) m(hmark) f(tests) i(for) f
(dynamic) g(memory) g(allo) s(cation) i(functions) e(and) g(memory) g
(op-) 274 1673 y(eration) f(functions.) 51 b(Ob) m(viously) 34
b(the) g(mpatrol) g(library) g(w) m(ould) g(p) s(erform) f(m) m(uc) m
(h) h(w) m(orse) g(than) g(normal) 274 1772 y(mallo) s(c) d(libraries,)
f(but) e(it) i(w) m(ould) f(help) g(to) h(see) g(just) f(ho) m(w) g(m) m
(uc) m(h) g(w) m(orse) h(so) f(that) h(sp) s(eed) f(impro) m(v) m(emen)
m(ts) 274 1872 y(could) i(b) s(e) f(made.) p Fm 169 2000
a(\017) p Fo 60 w(Add) e(supp) s(ort) f(for) i(the) g(BeOS) g(op) s
(erating) g(system,) h(as) f(w) m(ell) g(as) g(MacOS,) h(NeXT) f(and) f
(OS/2.) 40 b(P) m(erhaps) 274 2099 y(MS-DOS) 31 b(migh) m(t) g(b) s(e) e
(p) s(ossible) h(as) h(w) m(ell.) p Fn 94 2372 a(I.2) 68
b(Notes) 46 b(for) f(UNIX) g(platforms) p Fm 169 2561
a(\017) p Fo 60 w(Need) 25 b(to) f(impro) m(v) m(e) h(w) m(atc) m(h) g
(p) s(oin) m(t) f(facilit) m(y) i(in) d(order) g(to) i(sp) s(eed) e(it)
h(up) f(b) m(y) g(an) h(order) f(of) h(magnitudes.) 39
b(This) 274 2660 y(will) 33 b(most) g(lik) m(ely) h(in) m(v) m(olv) m
(e) h(remo) m(ving) e(all) g(w) m(atc) m(h) h(p) s(oin) m(ts) e(when) f
(en) m(tering) j(the) e(library) g(and) g(replacing) 274
2760 y(them) f(when) e(returning) h(to) h(user) e(co) s(de.) p
Fm 169 2887 a(\017) p Fo 60 w(Impro) m(v) m(e) d(use) e(of) h(w) m(atc)
m(h) h(p) s(oin) m(ts) e(b) m(y) h(allo) m(wing) h(an) f(option) g
(whic) m(h) g(will) g(only) g(install) g(write) g(w) m(atc) m(h) h(p) s
(oin) m(ts) 274 2987 y(instead) 32 b(of) g(b) s(oth) f(read) h(and) f
(write) h(w) m(atc) m(h) h(p) s(oin) m(ts.) 45 b(Not) 32
b(only) g(will) g(this) g(sp) s(eed) f(up) f(the) i(use) g(of) g(w) m
(atc) m(h) 274 3087 y(p) s(oin) m(ts,) e(but) e(will) i(also) g(cause) g
(less) f(problems) g(with) g(reading) g(from) g(misaligned) g(memory) h
(allo) s(cations.) p Fm 169 3214 a(\017) p Fo 60 w(There) h(seems) h
(to) g(b) s(e) f(a) h(problem) f(on) g(some) h(UNIX) g(systems) g(in) f
(that) h(the) p Fl 31 w(mprotect\(\)) p Fo 29 w(call) h(will) f(not) 274
3314 y(w) m(ork) i(unless) g(it) g(is) g(used) f(on) g(memory) h(that) g
(has) g(b) s(een) f(allo) s(cated) j(with) p Fl 33 w(mmap\(\)) p
Fo(.) 50 b(This) 33 b(needs) g(to) i(b) s(e) 274 3414
y(in) m(v) m(estigated) f(further.) p Fm 169 3541 a(\017) p
Fo 60 w(There) 26 b(is) g(curren) m(tly) g(a) g(problem) f(in) h(that) g
(the) g(call) h(stac) m(k) h(displa) m(y) m(ed) e(from) g(within) f
(the) h(illegal) i(memory) 274 3641 y(access) 34 b(signal) f(handler) f
(is) g(not) h(necessarily) g(accurate) h(with) e(resp) s(ect) g(to) h
(the) g(function) f(at) h(the) f(top) h(of) 274 3740
y(the) k(stac) m(k.) 60 b(In) 36 b(addition,) i(signal) f(handlers) f
(shouldn't) f(tec) m(hnically) k(call) e(I/O) f(functions) g(in) g
(case) i(of) 274 3840 y(additional) 32 b(signals) f(b) s(eing) f(caugh)
m(t) h(so) g(this) f(ma) m(y) h(need) f(to) h(b) s(e) f(impro) m(v) m
(ed.) p Fm 169 3968 a(\017) p Fo 60 w(Need) 46 b(to) g(add) e(a) h(w) m
(a) m(y) h(of) f(initialising) i(the) e(thread-safe) g(v) m(ersion) h
(of) f(the) g(library) f(when) g(it) i(is) f(not) 274
4067 y(compiled) 29 b(on) f(a) h(system) f(that) h(supp) s(orts) d(`) p
Fl(.init) p Fo(') h(sections,) j(or) e(if) g(it) h(is) f(not) h
(compiled) f(with) g(the) g(GNU) 274 4167 y(C) 38 b(compiler,) i(or) e
(if) f(it) h(is) g(not) g(compiled) g(with) f(a) h(C) p
Fl(++) p Fo 37 w(compiler.) 63 b(Also) 38 b(p) s(erhaps) e(need) h(to) i
(supp) s(ort) 274 4266 y(other) 31 b(threads) f(pac) m(k) -5
b(ages) 32 b(instead) f(of) g(just) e(POSIX) h(threads.) p
Fm 169 4394 a(\017) p Fo 60 w(Need) 38 b(to) g(add) e(supp) s(ort) f
(for) i(call) i(stac) m(k) f(tra) m(v) m(ersal) h(for) e(the) g
(Itanium) f(pro) s(cessor) h(arc) m(hitecture.) 62 b(The) 274
4494 y(curren) m(t) 36 b(implemen) m(tation) h(of) e(call) i(stac) m(k)
g(tra) m(v) m(ersal) g(for) e(the) h(Motorola) i(88xx0) e(family) g(is)
g(also) g(a) g(bit) 274 4593 y(\015aky) 27 b(and) e(so) i(should) e
(only) i(b) s(e) e(used) h(when) f(the) i(library) f(and) f(program) h
(are) h(built) f(unoptimised.) 39 b(This) 274 4693 y(could) 31
b(b) s(e) g(impro) m(v) m(ed) g(on) g(DG/UX) h(platforms) f(b) m(y) g
(making) g(use) g(of) g(the) g(TDESC) f(information) h(stored) 274
4793 y(in) g(the) f(ob) 5 b(ject) 31 b(\014les.) p Fm
169 4920 a(\017) p Fo 60 w(Need) 26 b(to) h(add) e(supp) s(ort) e(for) j
(obtaining) g(the) f(program) h(name) f(from) g(the) h(stac) m(k) h
(for) e(the) h(Alpha,) g(Itanium) 274 5020 y(and) 41
b(Motorola) i(88xx0) f(pro) s(cessor) f(arc) m(hitectures.) 74
b(If) 40 b(there) h(is) g(no) g(supp) s(ort) e(for) i(determining) g
(the) 274 5119 y(\014lename) 46 b(that) f(a) g(program) g(w) m(as) g
(in) m(v) m(ok) m(ed) i(with) d(then) h(the) g(`) p Fl(PROGFILE) p
Fo(') e(option) j(can) f(b) s(e) f(used) g(to) 274 5219
y(sp) s(ecify) 31 b(the) f(program) g(name) h(at) g(run-time.) p
Fm 169 5347 a(\017) p Fo 60 w(If) c(the) p Fl 26 w
(MP_LIBRARYSTACK_SUPPORT) p Fo 20 w(prepro) s(cessor) f(macro) h(is) g
(de\014ned) e(when) g(building) h(the) h(mpatrol) 274
5446 y(library) 44 b(on) h(IRIX) f(platforms) g(then) g(the) h(`) p
Fl(libexc) p Fo(') e(library) h(m) m(ust) g(also) i(b) s(e) d(link) m
(ed) i(in.) 83 b(Ho) m(w) m(ev) m(er,) 274 5546 y(execution) 31
b(sp) s(eed) e(will) i(fall) f(dramatically) i(since) e(the) p
Fl 30 w(unwind\(\)) p Fo 27 w(function) g(within) f(that) h(library) g
(calls) p Fl 274 5645 a(malloc\(\)) p Fo(,) p Fl 24 w(free\(\)) p
Fo 23 w(and) 24 b(other) h(memory) f(op) s(eration) h(functions) f(ev) m
(ery) i(time) f(it) g(is) g(in) m(v) m(ok) m(ed.) 40
b(The) 24 b(only) p 90 rotate dyy eop
%%Page: 199 205
199 204 bop Fo 94 -116 a(App) s(endix) 29 b(I:) i(Notes) 2914
b(199) 274 365 y(reason) 29 b(to) g(use) f(this) g(library) g(rather) g
(than) g(the) g(default) h(metho) s(d) e(of) i(stac) m(k) g(tra) m(v) m
(ersal) h(on) e(MIPS) g(w) m(ould) 274 465 y(b) s(e) i(if) h(that) g
(metho) s(d) e(failed) i(due) f(to) h(a) g(bug) f(\(in) g(whic) m(h) g
(case) i(it) e(should) g(b) s(e) g(rep) s(orted) f(an) m(yw) m(a) m
(y\).) p Fm 169 585 a(\017) p Fo 60 w(The) 36 b(mpatrol) h(library) p
Fl 36 w(unwind\(\)) p Fo 34 w(function) g(on) f(MIPS) g(platforms) g
(ma) m(y) h(ha) m(v) m(e) h(problems) e(with) g(call) 274
684 y(stac) m(k) f(tra) m(v) m(ersal) f(in) f(alternativ) m(e) i(stac) m
(ks,) f(suc) m(h) f(as) g(those) g(used) f(b) m(y) g(signal) i
(handlers.) 46 b(The) 33 b(call) g(stac) m(k) 274 784
y(will) f(then) e(terminate) i(at) f(the) g(p) s(oin) m(t) g(at) g
(whic) m(h) f(the) h(handler) f(w) m(as) h(called) h(rather) f(than) f
(un) m(winding) f(to) 274 884 y(the) i(top) g(of) f(the) h(stac) m(k.) p
Fm 169 1004 a(\017) p Fo 60 w(The) c(library) f(cannot) i(curren) m
(tly) f(read) g(an) m(y) g(sym) m(b) s(ols) f(from) h(shared) f(ob) 5
b(jects) 28 b(that) f(ha) m(v) m(e) h(b) s(een) f(read) f(via) p
Fl 274 1103 a(dlopen\(\)) p Fo(,) p Fl 25 w(shl_load\(\)) p
Fo 23 w(or) f(similar) h(functions) p Fh 1973 1070 a(6) p
Fo 2010 1103 a(.) 39 b(In) 25 b(addition,) i(sym) m(b) s(ols) e(cannot)
h(curren) m(tly) g(b) s(e) f(read) 274 1203 y(from) 34
b(an) m(y) g(COFF) f(or) h(X) m(COFF) g(shared) f(libraries) h(on) g
(LynxOS) e(and) h(some) h(w) m(ork) f(needs) h(to) g(b) s(e) f(done) 274
1302 y(to) f(build) d(the) h(mpatrol) h(library) f(as) h(a) g(shared) e
(library) h(on) g(LynxOS.) p Fm 169 1422 a(\017) p Fo
60 w(P) m(erhaps) j(add) g(supp) s(ort) e(for) i(reading) g(HP/UX) h
(executable) h(\014les) e(and) f(libraries) h(in) g(the) g(SOM) g(ob) 5
b(ject) 274 1522 y(\014le) 31 b(format) g(without) f(needing) g(to) h
(use) g(the) f(GNU) h(BFD) h(library) -8 b(.) p Fm 169
1642 a(\017) p Fo 60 w(P) m(erhaps) 36 b(add) e(supp) s(ort) g(for) h
(other) h(p) s(opular) e(text) j(editors) e(in) h(the) p
Fl 35 w(mpedit) p Fo 34 w(command.) 56 b(Also) 36 b(add) f(a) 274
1741 y(w) m(a) m(y) d(to) f(sp) s(ecify) f(editor) h(options) g(to) g
(the) p Fl 30 w(mpedit) p Fo 29 w(command.) p Fm 169
1861 a(\017) p Fo 60 w(Add) 23 b(supp) s(ort) f(for) i(SCO) e(UNIX,) j
(Ultrix) f(and) f(other) h(non-System) g(V) f(UNIX) i(op) s(erating) f
(systems.) 38 b(Also) 274 1961 y(test) 33 b(on) e(NetBSD,) i(Op) s
(enBSD) d(and) h(SunOS) e(as) j(supp) s(ort) d(has) i(b) s(een) g
(written) g(for) g(these) h(systems) g(but) 274 2061
y(is) f(un) m(tested.) 41 b(The) 30 b(SunOS) e(p) s(ort) i(requires) f
(an) i(ANSI) f(C) g(compiler,) h(though.) p Fm 169 2181
a(\017) p Fo 60 w(The) f(`) p Fl(--dynamic) p Fo(') d(option) k(to) f
(the) p Fl 30 w(mpatrol) p Fo 28 w(command) f(do) s(es) h(not) g(alw) m
(a) m(ys) h(w) m(ork) f(on) f(systems) h(whose) 274 2280
y(dynamic) 45 b(link) m(ers) f(supp) s(ort) f(the) p
Fl 45 w(LD_PRELOAD) p Fo 41 w(or) p Fl 45 w(_RLD_LIST) p
Fo 42 w(en) m(vironmen) m(t) i(v) -5 b(ariables.) 83
b(This) 44 b(is) 274 2380 y(b) s(ecause) 31 b(the) f(ob) 5
b(ject) 31 b(\014le) f(format) g(access) h(libraries) g(do) e(not) i
(exist) g(in) e(shared) h(form) f(on) h(suc) m(h) g(systems.) p
Fm 169 2500 a(\017) p Fo 60 w(P) m(erhaps) g(add) g(\014les) h(to) g
(build) e(the) i(mpatrol) f(library) g(and) g(to) s(ols) h(as) g(BSD) f
(pac) m(k) -5 b(ages.) p Fn 94 2743 a(I.3) 68 b(Notes) 46
b(for) f(Amiga) h(platforms) p Fo 219 2921 a(The) e(Amiga) h(has) f(no)
m(w) g(b) s(een) f(re-released) j(as) e(a) h(completely) g(new) f(mac) m
(hine) h(whic) m(h) f(comes) h(with) f(a) 94 3021 y(completely) 34
b(new) e(op) s(erating) g(system.) 46 b(As) 32 b(a) h(result,) g(I) e
(will) i(not) f(b) s(e) g(implemen) m(ting) h(an) m(y) f(of) g(the) g
(follo) m(wing) 94 3120 y(features) g(\(or) f(\014xing) f(an) m(y) h
(of) g(the) g(follo) m(wing) i(problems\)) d(in) h(mpatrol) g(for) f
(the) h(old) g(AmigaOS.) g(Supp) s(ort) e(for) 94 3220
y(the) i(new) f(AmigaOS) h(ma) m(y) g(b) s(e) e(added) h(in) g(the) h
(future.) p Fm 169 3340 a(\017) p Fo 60 w(P) m(erhaps) j(add) f(supp) s
(ort) f(for) h(building) g(mpatrol) h(as) f(an) h(Amiga) g(shared) f
(library) -8 b(.) 51 b(I) 33 b(attempted) i(to) f(do) 274
3439 y(this) f(in) f(a) h(previous) f(release) i(of) f(mpatrol,) g(but)
f(it) h(w) m(ould) f(ha) m(v) m(e) i(in) m(v) m(olv) m(ed) g(to) s(o) g
(man) m(y) e(source) h(c) m(hanges) 274 3539 y(to) 28
b(get) h(w) m(orking) e(fully) -8 b(.) 40 b(P) m(erhaps) 27
b(it's) h(not) f(ev) m(en) h(w) m(orth) g(implemen) m(ting) g(as) f
(the) g(arc) m(hiv) m(e) i(library) e(w) m(orks) 274
3639 y(\014ne.) 69 b(Ho) m(w) m(ev) m(er,) 45 b(if) 39
b(it) i(is) f(built) f(as) h(a) h(shared) e(library) g(and) p
Fl 40 w(malloc\(\)) p Fo 37 w(and) g(related) i(functions) f(are) 274
3738 y(dynamically) c(link) m(ed) g(in) e(some) i(executable) g
(\014les) g(then) e(p) s(erhaps) g(it) h(w) m(ould) g(b) s(e) f(p) s
(ossible) h(to) h(o) m(v) m(erride) 274 3838 y(these) 31
b(functions,) f(th) m(us) g(getting) j(the) d(`) p Fl(--dynamic) p
Fo(') e(option) j(in) f(the) p Fl 31 w(mpatrol) p Fo
28 w(command) g(to) i(w) m(ork.) p Fm 169 3958 a(\017) p
Fo 60 w(Need) 24 b(to) g(\014x) e(the) h(problem) f(where) h(the) g
(maxim) m(um) g(guaran) m(teed) h(alignmen) m(t) g(of) f(an) g(in) m
(ternal) h(mpatrol) f(li-) 274 4058 y(brary) g(memory) g(allo) s
(cation) i(is) e(8) h(b) m(ytes.) 39 b(Ho) m(w) m(ev) m(er,) 27
b(this) c(limitation) i(do) s(es) d(not) i(a\013ect) g(the) p
Fl 24 w(memalign\(\)) p Fo 274 4157 a(and) 35 b(related) g(functions,) h
(and) e(should) g(not) h(ha) m(v) m(e) h(an) m(y) f(e\013ect) h(on) f
(the) g(running) e(of) i(mpatrol) g(since) g(no) 274
4257 y(datat) m(yp) s(es) d(require) e(an) g(alignmen) m(t) i(of) e
(more) h(than) f(8) h(b) m(ytes.) p Fm 169 4377 a(\017) p
Fo 60 w(Need) h(to) f(add) f(prop) s(er) g(supp) s(ort) f(for) h(call) i
(stac) m(k) h(tra) m(v) m(ersal) f(for) f(b) s(oth) f(the) h(Motorola) i
(680x0) g(and) d(P) m(o) m(w-) 274 4476 y(erPC) h(pro) s(cessor) f(arc)
m(hitectures.) 43 b(When) p Fl 31 w(gcc) p Fo 29 w(is) 31
b(b) s(eing) g(used) e(then) i(up) e(to) j(t) m(w) m(o) g(stac) m(k) g
(frames) f(can) g(b) s(e) 274 4576 y(tra) m(v) m(ersed,) c(but) c(this)
g(should) g(really) i(b) s(e) e(extended) g(without) h(requiring) p
Fl 23 w(MP_BUILTINSTACK_SUPPORT) p Fo(.) 274 4676 y(When) 31
b(SAS/C) e(is) i(b) s(eing) f(used) f(then) h(there) h(is) f(no) h
(supp) s(ort) d(for) i(call) i(stac) m(k) g(tra) m(v) m(ersal.) p
Fm 169 4795 a(\017) p Fo 60 w(Need) d(to) h(add) e(prop) s(er) f(supp) s
(ort) f(for) j(reading) f(sym) m(b) s(ols) g(from) g(Amiga) i
(executable) g(\014les.) 40 b(When) p Fl 28 w(gcc) p
Fo 28 w(is) 274 4895 y(b) s(eing) 29 b(used) g(then) f(the) i(BFD) g
(library) f(routines) g(will) g(b) s(e) g(called) h(to) g(determine) f
(the) g(sym) m(b) s(ols) g(from) g(the) 274 4995 y(executable) 37
b(\014le,) f(but) e(this) g(will) h(only) g(w) m(ork) f(for) h(ob) 5
b(jects) 35 b(compiled) g(with) p Fl 34 w(gcc) p Fo 34
w(and) f(there) h(curren) m(tly) 274 5094 y(app) s(ears) k(to) g(b) s
(e) g(a) g(problem) g(getting) h(the) f(`) p Fl(USEDEBUG) p
Fo(') f(option) h(to) h(w) m(ork.) 66 b(When) 39 b(SAS/C) f(is) h(b) s
(eing) 274 5194 y(used) 32 b(then) g(there) h(is) f(no) g(supp) s(ort) f
(for) h(reading) h(sym) m(b) s(ols) f(from) g(executable) i(\014les.) 46
b(Also) 33 b(need) f(to) i(add) 274 5294 y(supp) s(ort) 29
b(for) h(reading) h(sym) m(b) s(ols) f(from) g(an) m(y) g(shared) g
(libraries) g(that) h(are) g(required) f(b) m(y) g(the) h(program.) p
94 5371 1200 4 v Fh 143 5431 a(6) p Fg 219 5463 a(There) 54
b(is) g(an) f(mpatrol) h(library) f(patc) n(h) g(that) g(supp) r(orts) g
(reading) h(sym) n(b) r(ols) g(from) g(shared) f(libraries) i(op) r
(ened) e(b) n(y) p Ff 219 5554 a(dlopen\(\)) p Fg 36
w(whic) n(h) 34 b(can) h(b) r(e) f(do) n(wnloaded) h(from) p
Ff 35 w(http://www.cbmamiga.demon.co) q(.uk/) q(mpatr) q(ol/p) q(atch) q
(es/mp) q(atro) q(l_) 219 5645 y(patch2.tar.gz) p Fg(.) p
90 rotate dyy eop
%%Page: 200 206
200 205 bop Fo 94 -116 a(200) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(P) m(ossibly) 45 b(mak) m(e) f(use) g(of) f
(other) h(soft) m(w) m(are) h(suc) m(h) f(as) g(Enforcer,) j(Mungw) m
(all) d(or) g(MuLib) f(in) g(order) g(to) 274 465 y(pro) m(vide) 32
b(some) g(form) f(of) g(memory) g(protection.) 45 b(The) 31
b(features) h(of) f(SegT) -8 b(rac) m(k) m(er) 33 b(could) f(also) g(b)
s(e) f(put) f(to) 274 565 y(go) s(o) s(d) e(use) e(so) i(that) g(the) f
(\014le) g(and) g(h) m(unk) f(lo) s(cation) j(of) e(en) m(tries) h(on) f
(the) g(call) i(stac) m(k) f(could) g(b) s(e) e(determined.) p
Fm 169 695 a(\017) p Fo 60 w(Could) g(add) f(supp) s(ort) f(for) i(the)
g(`) p Fl(EDIT) p Fo(') f(and) g(`) p Fl(LIST) p Fo(') h(options.) 39
b(This) 25 b(w) m(ould) h(probably) f(in) m(v) m(olv) m(e) j(\014nding)
d(a) 274 795 y(w) m(a) m(y) i(to) f(in) m(v) m(ok) m(e) i(a) e(shell) g
(script) f(without) h(ha) m(ving) g(to) h(searc) m(h) f(for) f(the) h
(script) g(\014le) f(or) h(allo) s(cating) i(memory) 274
894 y(in) j(the) f(pro) s(cess.) p Fm 169 1025 a(\017) p
Fo 60 w(Add) g(GUI) h(supp) s(ort) d(for) i(the) p Fl
31 w(mptrace) p Fo 28 w(command.) p Fm 169 1155 a(\017) p
Fo 60 w(When) g(using) e(SAS/C) h(it) h(is) f(curren) m(tly) g(not) h
(p) s(ossible) f(to) h(o) m(v) m(erride) g(the) f(de\014nition) g(of) p
Fl 30 w(malloc\(\)) p Fo(,) e(etc.,) 274 1255 y(without) 37
b(including) f(the) h(`) p Fl(mpatrol.h) p Fo(') e(header) h(\014le) h
(\014rst.) 59 b(This) 36 b(is) h(b) s(ecause) f(the) h(compiler) g
(startup) 274 1354 y(co) s(de) 43 b(and) e(libraries) h(call) p
Fl 44 w(malloc\(\)) p Fo 39 w(b) s(efore) g(ev) m(erything) h(is) f
(set) h(up,) h(and) d(so) h(the) h(library) e(cannot) 274
1454 y(prop) s(erly) 30 b(initialise) j(itself) e(if) g(the) p
Fl 31 w(malloc\(\)) p Fo 29 w(that) g(the) g(startup) g(co) s(de) g
(\014nds) e(is) i(the) p Fl 31 w(malloc\(\)) p Fo 28
w(in) g(the) 274 1554 y(mpatrol) g(library) -8 b(.) 41
b(This) 29 b(restriction) j(do) s(es) e(not) h(exist) g(when) e(using) p
Fl 30 w(gcc) p Fo(.) p Fm 169 1684 a(\017) p Fo 60 w(Add) 43
b(supp) s(ort) f(for) h(the) h(Amiga) h(in) e(the) h(threads) f(test) i
(in) e(`) p Fl(tests/pass/test5.c) p Fo('.) 76 b(The) 43
b(Amiga) 274 1784 y(do) s(esn't) 31 b(really) g(ha) m(v) m(e) h(supp) s
(ort) c(for) i(threads) g(but) g(its) h(pro) s(cesses) f(are) h
(similar) f(enough) h(to) g(threads.) p Fm 169 1914 a(\017) p
Fo 60 w(P) m(erhaps) f(add) g(an) p Fl 31 w(Installer) p
Fo 27 w(installation) j(script) d(with) g(icons.) p Fn
94 2201 a(I.4) 68 b(Notes) 46 b(for) f(Windo) l(ws) h(platforms) p
Fm 169 2396 a(\017) p Fo 60 w(Need) 40 b(to) f(add) f(supp) s(ort) f
(for) i(pro) s(cessors) f(other) h(than) g(the) g(In) m(tel) g(80x86.)
68 b(Ho) m(w) m(ev) m(er,) 43 b(ab) s(out) 38 b(99\045) i(of) 274
2495 y(Windo) m(ws) 34 b(platforms) g(run) e(on) h(this) h(pro) s
(cessor) f(family) h(|) f(do) s(es) g(an) m(y) m(one) i(really) f(use) g
(Windo) m(ws) f(with) 274 2595 y(other) 41 b(pro) s(cessors?) 70
b(Also) 41 b(\014nish) e(Cygwin) h(supp) s(ort,) h(although) g(this) f
(is) g(e\013ectiv) m(ely) j(mpatrol) e(built) 274 2695
y(with) 31 b(`) p Fl(-DTARGET=TARGET_UNIX) p Fo(') 25
b(supp) s(ort) k(on) h(Windo) m(ws) g(platforms.) p Fm
169 2825 a(\017) p Fo 60 w(P) m(erhaps) g(add) g(supp) s(ort) f(for) h
(compiling) h(the) f(mpatrol) h(library) f(with) p Fl
30 w(gcc) p Fo 29 w(on) g(Windo) m(ws) g(platforms) h(so) 274
2925 y(that) g(the) g(GNU) g(BFD) h(library) d(can) i(b) s(e) f(used) f
(as) i(w) m(ell.) p Fm 169 3055 a(\017) p Fo 60 w(There) j(seems) g(to)
h(b) s(e) e(a) h(problem) g(when) f(mixing) h(the) g(arc) m(hiv) m(e) h
(v) m(ersion) g(of) f(the) g(mpatrol) g(library) g(and) 274
3155 y(the) i(Microsoft) g(C) f(run-time) g(library) g(DLL,) g(and) g
(vice) h(v) m(ersa.) 55 b(This) 35 b(needs) g(to) g(b) s(e) g(lo) s(ok)
m(ed) h(in) m(to,) i(but) 274 3254 y(for) 31 b(the) f(momen) m(t,) h
(don't) g(mix) f(them.) p Fm 169 3385 a(\017) p Fo 60
w(The) 54 b(library) f(cannot) h(curren) m(tly) g(read) f(an) m(y) h
(sym) m(b) s(ols) f(from) g(DLLs) h(that) g(ha) m(v) m(e) h(b) s(een) e
(read) g(via) p Fl 274 3485 a(LoadLibrary\(\)) p Fo(.) p
Fm 169 3615 a(\017) p Fo 60 w(There) 21 b(seems) h(to) g(b) s(e) f(a) g
(disparit) m(y) h(b) s(et) m(w) m(een) g(di\013eren) m(t) g(v) m
(ersions) f(of) h(the) g(imagehlp) f(library) -8 b(.) 38
b(It) 22 b(w) m(ould) f(ap-) 274 3715 y(p) s(ear) i(that) h(the) g
(latest) h(incarnation) f(of) f(the) h(imagehlp) g(library) f(has) g
(had) g(some) g(functions) g(remo) m(v) m(ed) i(and) 274
3814 y(placed) 35 b(in) f(a) g(new) f(library) h(called) h(debughlp.) 50
b(P) m(erhaps) 34 b(this) g(simply) f(means) h(that) h(`) p
Fl(debughlp.lib) p Fo(') 274 3914 y(needs) 30 b(to) i(b) s(e) d(link) m
(ed) i(in) f(as) h(w) m(ell,) g(but) f(ma) m(yb) s(e) g(there's) h
(more) g(to) g(it) g(than) f(that.) p Fm 169 4044 a(\017) p
Fo 60 w(P) m(erhaps) 41 b(add) f(supp) s(ort) f(for) h(the) p
Fl 41 w(mpatrol) p Fo 38 w(command's) h(`) p Fl(--dynamic) p
Fo(') d(option) j(b) m(y) g(preloading) g(the) 274 4144
y(mpatrol) 31 b(DLL) g(from) e(the) p Fl 31 w(mpatrol) p
Fo 28 w(command.) p Fm 169 4274 a(\017) p Fo 60 w(Could) d(add) f(supp)
s(ort) f(for) i(the) g(`) p Fl(EDIT) p Fo(') f(and) g(`) p
Fl(LIST) p Fo(') h(options.) 39 b(This) 25 b(w) m(ould) h(probably) f
(in) m(v) m(olv) m(e) j(\014nding) d(a) 274 4374 y(w) m(a) m(y) 31
b(to) g(in) m(v) m(ok) m(e) h(a) e(batc) m(h) g(\014le) g(without) g
(ha) m(ving) h(to) f(searc) m(h) h(for) f(the) g(batc) m(h) g(\014le) g
(or) g(allo) s(cating) i(memory) 274 4474 y(in) f(the) f(pro) s(cess.) p
Fm 169 4604 a(\017) p Fo 60 w(Add) g(GUI) h(supp) s(ort) d(for) i(the) p
Fl 31 w(mptrace) p Fo 28 w(command.) p Fm 169 4735 a(\017) p
Fo 60 w(Add) 25 b(a) h(Windo) m(ws) g(resource) g(\014le) g(to) g(the) g
(mpatrol) g(library) g(with) f(cop) m(yrigh) m(t) i(and) e(v) m(ersion)
h(information.) p Fm 169 4865 a(\017) p Fo 60 w(P) m(erhaps) k(add) g
(an) p Fl 31 w(InstallShield) p Fo 26 w(installation) j(script) d(with)
g(icons.) p Fn 94 5152 a(I.5) 68 b(Notes) 46 b(for) f(Net) l(w) l(are) i
(platforms) p Fo 219 5347 a(There) 32 b(do) s(esn't) g(app) s(ear) g
(to) h(ha) m(v) m(e) h(b) s(een) d(an) m(y) i(in) m(terest) h(in) e
(the) h(Net) m(w) m(are) h(v) m(ersion) f(of) f(mpatrol) h(and) f(as) h
(a) 94 5446 y(result) k(I) f(will) h(not) g(b) s(e) f(implemen) m(ting)
h(an) m(y) g(of) g(the) f(follo) m(wing) i(features) f(\(or) g
(\014xing) f(an) m(y) h(of) g(the) f(follo) m(wing) 94
5546 y(problems\)) d(in) g(mpatrol) g(for) g(Net) m(w) m(are.) 50
b(I) 33 b(don't) g(ev) m(en) g(ha) m(v) m(e) h(access) h(to) e(a) h
(Net) m(w) m(are) g(mac) m(hine) g(so) f(someone) 94
5645 y(else) f(w) m(ould) e(ha) m(v) m(e) h(had) f(to) h(ha) m(v) m(e) h
(done) e(it) h(an) m(yw) m(a) m(y) -8 b(.) p 90 rotate
dyy eop
%%Page: 201 207
201 206 bop Fo 94 -116 a(App) s(endix) 29 b(I:) i(Notes) 2914
b(201) p Fm 169 365 a(\017) p Fo 60 w(The) 33 b(library) f(has) g(not) h
(y) m(et) h(b) s(een) e(built) g(\(let) i(alone) g(tested\)) g(on) e
(Net) m(w) m(are) j(platforms.) 47 b(The) 32 b(names) h(of) 274
465 y(the) 28 b(system) f(functions) g(that) g(the) h(library) e(calls)
j(for) e(Net) m(w) m(are) i(w) m(ere) e(obtained) h(b) m(y) f(lo) s
(oking) h(at) f(No) m(v) m(ell's) 274 565 y(dev) m(elop) s(er) k(do) s
(cumen) m(tation,) h(so) e(they) h(ma) m(y) g(not) g(ev) m(en) g
(compile) g(correctly) h(without) e(mo) s(di\014cation.) p
Fm 169 689 a(\017) p Fo 60 w(Need) k(to) g(add) e(supp) s(ort) g(for) h
(building) f(the) h(mpatrol) g(library) g(as) h(an) f(NLM.) 49
b(This) 32 b(is) h(not) g(curren) m(tly) h(a) 274 789
y(high) c(priorit) m(y) g(requiremen) m(t) f(as) h(the) g(arc) m(hiv) m
(e) h(library) e(should) f(su\016ce) i(for) f(most) h(purp) s(oses.) 39
b(Ho) m(w) m(ev) m(er,) 274 888 y(if) 27 b(it) h(is) f(built) g(as) g
(an) g(NLM) g(and) p Fl 27 w(malloc\(\)) p Fo 24 w(and) g(related) h
(functions) e(are) i(dynamically) g(link) m(ed) f(in) g(some) 274
988 y(executable) 34 b(\014les) d(then) g(p) s(erhaps) f(it) i(w) m
(ould) f(b) s(e) g(p) s(ossible) g(to) h(o) m(v) m(erride) h(these) f
(functions,) f(th) m(us) g(getting) 274 1088 y(the) g(`) p
Fl(--dynamic) p Fo(') d(option) j(in) f(the) p Fl 31
w(mpatrol) p Fo 28 w(command) g(to) i(w) m(ork.) p Fm
169 1212 a(\017) p Fo 60 w(Need) 40 b(to) f(add) f(supp) s(ort) f(for) i
(pro) s(cessors) f(other) h(than) g(the) g(In) m(tel) g(80x86.) 68
b(Ho) m(w) m(ev) m(er,) 43 b(ab) s(out) 38 b(99\045) i(of) 274
1312 y(Net) m(w) m(are) i(platforms) d(run) f(on) h(this) h(pro) s
(cessor) f(family) h(|) f(do) s(es) g(an) m(y) m(one) i(really) f(use) f
(Net) m(w) m(are) i(with) 274 1411 y(other) 31 b(pro) s(cessors?) p
Fm 169 1536 a(\017) p Fo 60 w(Need) 40 b(to) g(add) e(w) m(a) m(y) j
(to) e(determine) h(when) e(the) h(base) g(of) h(the) f(stac) m(k) i
(has) e(b) s(een) f(reac) m(hed) i(during) e(call) 274
1636 y(stac) m(k) j(tra) m(v) m(ersal,) i(since) d(on) f(Net) m(w) m
(are) i(ev) m(ery) f(application) g(is) f(really) h(a) g(thread) f
(running) e(under) h(one) 274 1735 y(large) 32 b(pro) s(cess.) p
Fm 169 1860 a(\017) p Fo 60 w(Need) 38 b(to) f(add) f(supp) s(ort) f
(for) h(reading) h(sym) m(b) s(ols) f(from) h(Net) m(w) m(are) h(load) g
(mo) s(dules.) 58 b(Also) 38 b(need) e(to) i(add) 274
1959 y(supp) s(ort) 31 b(for) h(reading) g(sym) m(b) s(ols) g(from) g
(an) m(y) h(NLMs) f(that) h(are) g(required) e(b) m(y) h(the) h
(program.) 46 b(This) 31 b(ma) m(y) 274 2059 y(b) s(e) k(p) s(ossible) f
(in) h(a) g(limited) h(fashion) f(b) m(y) g(using) f(the) h(GNU) h(BFD)
g(library) -8 b(,) 36 b(but) f(ma) m(y) g(only) g(w) m(ork) g(with) 274
2159 y(co) s(de) c(compiled) g(with) p Fl 30 w(gcc) p
Fo(.) p Fm 169 2283 a(\017) p Fo 60 w(Could) 26 b(add) f(supp) s(ort) f
(for) i(the) g(`) p Fl(EDIT) p Fo(') f(and) g(`) p Fl(LIST) p
Fo(') h(options.) 39 b(This) 25 b(w) m(ould) h(probably) f(in) m(v) m
(olv) m(e) j(\014nding) d(a) 274 2383 y(w) m(a) m(y) 31
b(to) g(in) m(v) m(ok) m(e) h(a) e(batc) m(h) g(\014le) g(without) g
(ha) m(ving) h(to) f(searc) m(h) h(for) f(the) g(batc) m(h) g(\014le) g
(or) g(allo) s(cating) i(memory) 274 2482 y(in) f(the) f(pro) s(cess.) p
Fm 169 2607 a(\017) p Fo 60 w(Add) g(GUI) h(supp) s(ort) d(for) i(the) p
Fl 31 w(mptrace) p Fo 28 w(command.) p Fm 169 2731 a(\017) p
Fo 60 w(Need) 36 b(to) f(in) m(v) m(estigate) j(if) d(it) g(is) g(safe)
g(\(or) g(ev) m(en) g(p) s(ossible\)) g(to) g(o) m(v) m(erride) h(the) f
(de\014nitions) f(of) p Fl 35 w(malloc\(\)) p Fo(,) 274
2831 y(etc.,) j(without) e(including) f(the) g(`) p Fl(mpatrol.h) p
Fo(') e(header) i(\014le) h(\014rst.) 52 b(Curren) m(tly) -8
b(,) 35 b(non-macro) f(de\014nitions) 274 2931 y(for) j(these) h
(functions) f(ha) m(v) m(e) h(b) s(een) e(disabled) h(in) g(the) g(Net)
m(w) m(are) i(v) m(ersion) f(of) f(the) g(library) g(in) g(case) h
(they) 274 3030 y(a\013ect) 32 b(other) f(NLMs) g(that) g(are) f
(curren) m(tly) h(running.) p 90 rotate dyy eop
%%Page: 202 208
202 207 bop Fo 94 -116 a(202) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 203 209
203 208 bop Fo 94 -116 a(App) s(endix) 29 b(J:) h(F) -8
b(requen) m(tly) 32 b(ask) m(ed) f(questions) 2056 b(203) p
Fk 94 365 a(App) t(endix) 53 b(J) 81 b(F) -13 b(requen) l(tly) 52
b(ask) l(ed) h(questions) p Fo 219 574 a(This) 32 b(section) j(con) m
(tains) f(frequen) m(tly) g(ask) m(ed) f(questions) h(ab) s(out) f(the)
g(mpatrol) h(library) e(and) h(their) g(corre-) 94 673
y(sp) s(onding) c(answ) m(ers) h(or) h(solutions.) p
Fn 94 921 a(J.1) 69 b(Do) t(cumen) l(tation) p Fo 144
1144 a(1.) 60 b(I) 36 b(can't) h(seem) g(to) f(format) h(the) f(T) 1436
1164 y(E) 1486 1144 y(Xinfo) g(man) m(ual) g(for) g(mpatrol) h(in) m
(to) g(an) m(ything) f(that) h(I) e(can) i(view) f(or) 274
1244 y(prin) m(t.) 41 b(What) 31 b(am) f(I) h(doing) f(wrong?) 274
1365 y(Y) -8 b(ou'll) 25 b(need) e(to) i(ha) m(v) m(e) f(the) g
(appropriate) f(do) s(cumen) m(t) h(formatting) g(programs) f
(installed) h(on) f(y) m(our) h(system) 274 1465 y(b) s(efore) 29
b(y) m(ou) f(can) h(do) g(this,) g(and) f(ev) m(en) h(then) f(y) m
(ou'll) i(also) f(need) f(to) i(ha) m(v) m(e) f(suitable) g(soft) m(w) m
(are) h(for) f(viewing) 274 1564 y(or) h(prin) m(ting) f(the) h
(formatted) g(do) s(cumen) m(ts.) 40 b(The) 29 b(mpatrol) h
(distribution) e(should) h(already) h(con) m(tain) h(the) 274
1664 y(latest) 26 b(mpatrol) e(man) m(ual) h(in) e(a) h(v) -5
b(ariet) m(y) 26 b(of) e(formats) g(and) f(should) g(also) i(con) m
(tain) g(a) g(\014le) f(telling) h(y) m(ou) f(where) 274
1764 y(to) 29 b(get) f(programs) g(that) g(can) f(b) s(e) g(used) g(to)
h(view) g(or) f(prin) m(t) h(these) g(\014les.) 39 b(Alternativ) m(ely)
-8 b(,) 31 b(y) m(ou) d(can) g(bro) m(wse) 274 1863 y(the) j(latest) h
(mpatrol) f(man) m(ual) f(on-line) h(at) p Fl 32 w
(http://www.cbmamiga.dem) o(on.) o(co.u) o(k/mp) o(atr) o(ol/) p
Fo(.) 144 1985 y(2.) 60 b(I'd) 30 b(lik) m(e) h(to) f(con) m(v) m(ert) i
(the) e(mpatrol) g(man) m(ual) g(to) h(a) f(di\013eren) m(t) g(do) s
(cumen) m(tation) h(format) f(but) f(there) h(is) g(no) 274
2084 y(supp) s(ort) f(for) h(that) h(format) g(in) f(the) h(`) p
Fl(Makefile) p Fo('.) 39 b(Ho) m(w) 31 b(w) m(ould) f(I) g(go) h(ab) s
(out) f(doing) h(this?) 274 2206 y(Since) 41 b(T) 573
2225 y(E) 623 2206 y(Xinfo) f(is) h(in) m(tended) f(to) h(b) s(e) f
(con) m(v) m(erted) i(to) f(other) f(do) s(cumen) m(tation) i(formats) e
(it) h(should) f(b) s(e) 274 2305 y(fairly) h(easy) g(for) f(y) m(ou) h
(to) g(\014nd) d(a) j(to) s(ol) g(whic) m(h) f(will) h(con) m(v) m(ert)
h(it) e(in) m(to) i(y) m(our) e(desired) g(format.) 70
b(I) 40 b(plan) 274 2405 y(to) h(also) g(pro) m(vide) f(the) h(mpatrol)
f(man) m(ual) h(in) e(Do) s(cBo) s(ok) j(format) e(if) g(and) g(when) f
(a) h(suitable) h(T) 3607 2424 y(E) 3657 2405 y(Xinfo) 274
2504 y(to) 32 b(Do) s(cBo) s(ok) h(con) m(v) m(erter) g(b) s(ecomes) f
(a) m(v) -5 b(ailable,) 34 b(but) c(I) h(w) m(on't) h(pro) m(vide) f
(preformatted) h(v) m(ersions) f(of) h(the) 274 2604
y(mpatrol) f(man) m(ual) g(in) f(an) m(y) h(other) f(format) h(whic) m
(h) f(isn't) h(already) g(supp) s(orted.) 144 2725 y(3.) 60
b(Wh) m(y) 31 b(is) g(the) f(reference) h(card) f(not) h(cen) m(tred) g
(in) f(the) g(middle) g(of) h(the) g(page) g(when) e(I) h(prin) m(t) g
(it?) 274 2847 y(The) i(reference) g(card) f(has) h(three) g(columns) f
(in) g(landscap) s(e) h(format) g(and) f(as) h(a) g(result) f(requires)
g(smaller) 274 2946 y(margins) 25 b(than) g(LaT) 973
2966 y(E) 1023 2946 y(X) g(normally) h(uses.) 38 b(When) p
Fl 25 w(dvips) p Fo 23 w(con) m(v) m(erts) 27 b(the) e(D) m(VI) h
(\014le) f(to) g(a) h(p) s(ostscript) e(\014le) h(it) 274
3046 y(refers) i(to) g(a) g(con\014guration) g(\014le) g(set) g(up) e
(for) i(a) f(sp) s(eci\014c) h(prin) m(ter) f(so) h(that) g(it) g(kno) m
(ws) g(what) f(that) h(prin) m(ter's) 274 3146 y(capabilities) h(are.)
39 b(Ho) m(w) m(ev) m(er,) 29 b(y) m(ou) d(can) g(instruct) p
Fl 25 w(dvips) p Fo 24 w(to) h(o\013set) f(the) g(page) g(b) m(y) g(a) g
(giv) m(en) g(amoun) m(t) g(with) 274 3245 y(the) 35
b(`) p Fl(-O) p Fo(') e(option) i(so) f(that) g(it) g(app) s(ears) f
(cen) m(tred) i(when) e(prin) m(ted.) 50 b(I) 34 b(\014nd) e(that) j(`)
p Fl(-O) 30 b(-0.75in,0.25in) p Fo(') 274 3345 y(w) m(orks) k(for) g
(me.) 51 b(Note) 35 b(that) f(the) g(default) g(pap) s(er) e(size) j
(for) f(the) f(reference) i(card) e(is) h(DIN) g(A4,) i(but) d(y) m(ou)
274 3445 y(can) e(c) m(hange) h(it) f(to) g(US) f(letter) h(in) f(the) h
(LaT) 1751 3464 y(E) 1801 3445 y(X) g(source) f(\014le.) 144
3566 y(4.) 60 b(Ho) m(w) 32 b(do) e(I) g(install) h(the) g(mpatrol) f
(man) m(ual) h(as) g(a) g(GNU) g(info) f(\014le?) 274
3687 y(Assuming) i(y) m(ou) g(ha) m(v) m(e) h(the) f(GNU) h(info) e
(\014le) h(built) g(and) f(copied) h(to) h(y) m(our) f(system's) g
(info) g(\014le) g(directory) -8 b(,) 274 3787 y(y) m(ou) 29
b(should) f(use) g(the) p Fl 28 w(install-info) p Fo
26 w(command) g(to) h(place) g(an) g(en) m(try) f(for) g(mpatrol) h(in)
f(y) m(our) h(system's) 274 3887 y(GNU) 44 b(info) f(directory) g
(\014le,) j(otherwise) e(the) f(GNU) g(info) g(reader) g(ma) m(y) g
(not) g(b) s(e) f(able) i(to) f(lo) s(cate) i(the) 274
3986 y(mpatrol) 37 b(en) m(try) -8 b(.) 59 b(Y) -8 b(ou) 37
b(ma) m(y) f(also) h(need) f(to) h(mo) s(dify) f(y) m(our) p
Fl 36 w(INFOPATH) p Fo 34 w(en) m(vironmen) m(t) g(v) -5
b(ariable) 37 b(if) g(y) m(ou) 274 4086 y(installed) 32
b(the) e(GNU) h(info) f(\014le) h(in) f(a) h(non-standard) e(place.) 144
4207 y(5.) 60 b(Ho) m(w) 32 b(do) e(I) g(install) h(the) g(mpatrol) f
(man) m(ual) h(pages?) 274 4329 y(This) 21 b(is) g(v) m(ery) h
(system-dep) s(enden) m(t,) h(but) d(need) h(only) h(b) s(e) e(done) i
(on) f(UNIX) g(systems) h(since) f(they) h(cannot) g(b) s(e) 274
4428 y(used) g(on) h(other) g(platforms.) 38 b(The) 23
b(unformatted) f(man) m(ual) h(pages) g(exist) h(in) e(`) p
Fl(man/man1) p Fo(') g(and) g(`) p Fl(man/man3) p Fo(') 274
4528 y(and) 28 b(should) f(b) s(e) h(copied) h(to) g(y) m(our) f
(system's) g(man) m(ual) h(page) g(directory) -8 b(.) 41
b(If) 27 b(y) m(ou) i(don't) f(ha) m(v) m(e) i(the) p
Fl 28 w(nroff) p Fo(,) p Fl 274 4627 a(troff) p Fo 35
w(or) p Fl 36 w(groff) p Fo 34 w(commands) 35 b(installed) i(on) f(y) m
(our) f(system) h(then) g(y) m(ou) g(ma) m(y) g(also) h(need) f(to) g
(cop) m(y) h(the) 274 4727 y(formatted) 43 b(man) m(ual) f(pages,) k
(lo) s(cated) d(in) f(`) p Fl(man/cat1) p Fo(') e(and) i(`) p
Fl(man/cat3) p Fo('.) 73 b(Y) -8 b(ou) 43 b(ma) m(y) g(also) f(need) g
(to) 274 4827 y(mo) s(dify) g(y) m(our) p Fl 42 w(MANPATH) p
Fo 41 w(en) m(vironmen) m(t) g(v) -5 b(ariable) 44 b(if) e(y) m(ou) g
(installed) i(the) e(man) m(ual) h(pages) g(in) f(a) g(non-) 274
4926 y(standard) 24 b(place,) j(and) d(some) h(systems) f(require) h(y)
m(ou) f(to) i(up) s(date) d(the) p Fi 25 w(whatis) p
Fo 33 w(database) j(after) f(installing) 274 5026 y(new) 30
b(man) m(ual) h(pages,) g(b) m(y) g(running) p Fl 28
w(makewhatis) p Fo(,) p Fl 28 w(catman) p Fo 29 w(or) f(equiv) -5
b(alen) m(t.) 274 5147 y(Alternativ) m(ely) d(,) 29 b(the) 24
b(mpatrol) g(man) m(ual) h(pages) f(can) h(b) s(e) e(built) h(in) g(a) g
(v) -5 b(ariet) m(y) 25 b(of) g(di\013eren) m(t) f(do) s(cumen) m
(tation) 274 5247 y(formats) 35 b(that) g(can) f(b) s(e) g(view) m(ed) g
(or) h(prin) m(ted) e(without) h(the) h(need) f(for) g(a) p
Fl 34 w(man) p Fo 34 w(command.) 51 b(If) 34 b(y) m(ou) h(ha) m(v) m(e)
274 5347 y(the) 30 b(correct) h(to) s(ols) g(installed) f(on) g(y) m
(our) g(system) g(then) f(y) m(ou) h(should) f(b) s(e) g(able) h(to) h
(do) e(this) h(b) m(y) f(examining) 274 5446 y(the) i(`) p
Fl(Makefile) p Fo(') d(in) i(the) g(`) p Fl(man) p Fo(') g(directory) -8
b(.) 41 b(The) 30 b(mpatrol) g(distribution) g(should) f(already) h
(con) m(tain) i(the) 274 5546 y(latest) 38 b(mpatrol) e(man) m(ual) h
(pages) f(in) g(a) g(v) -5 b(ariet) m(y) 37 b(of) g(formats) f(and) f
(should) g(also) i(con) m(tain) g(a) g(\014le) f(telling) 274
5645 y(y) m(ou) 31 b(where) f(to) h(get) h(programs) e(that) h(can) f
(b) s(e) g(used) g(to) h(view) f(or) h(prin) m(t) f(these) h(\014les.) p
90 rotate dyy eop
%%Page: 204 210
204 209 bop Fo 94 -116 a(204) 3332 b(mpatrol) 144 365
y(6.) 60 b(Wh) m(y) 35 b(do) s(es) e(the) i(`) p Fl(libmpatrol.3) p
Fo(') c(man) m(ual) j(page) h(not) f(displa) m(y) g(correctly) i(when) d
(I) g(view) i(it) f(with) g(the) p Fl 274 465 a(man) p
Fo 30 w(command?) 274 587 y(This) 40 b(is) h(lik) m(ely) g(to) h(b) s
(e) d(due) h(to) h(the) p Fl 41 w(tbl) p Fo 39 w(command) g(not) f(b) s
(eing) g(run) f(to) i(pro) s(cess) f(the) h(tables) g(when) 274
686 y(the) p Fl 39 w(man) p Fo 38 w(command) d(displa) m(ys) h(the) g
(man) m(ual) g(page.) 66 b(Man) m(y) 40 b(UNIX) f(systems) f(lo) s(ok) h
(at) h(the) f(\014rst) f(line) 274 786 y(of) d(the) f(man) m(ual) g
(page) h(to) g(see) g(what) f(\014lters) g(to) g(run) f(the) h(page) h
(through) e(b) s(efore) h(it) h(is) f(displa) m(y) m(ed,) i(but) 274
886 y(some) j(systems) f(do) g(not) g(recognise) h(this) f(and) g
(instead) g(rely) g(on) g(an) g(en) m(vironmen) m(t) g(v) -5
b(ariable) 39 b(suc) m(h) f(as) p Fl 274 985 a(MANROFFSEQ) p
Fo 34 w(to) f(sp) s(ecify) f(whic) m(h) h(\014lters) f(are) h(to) g(b) s
(e) f(run.) 57 b(Lo) s(ok) 37 b(at) g(the) g(man) m(ual) g(page) g(for)
f(the) p Fl 37 w(man) p Fo 274 1085 a(command) 31 b(on) f(y) m(our) g
(system) h(to) g(\014nd) e(out) h(more) h(information.) p
Fn 94 1335 a(J.2) 69 b(Building) p Fo 144 1559 a(1.) 60
b(Wh) m(y) 39 b(do) s(es) f(the) g(`) p Fl(Makefile) p
Fo(') e(assume) i(that) g(I) g(am) g(building) g(mpatrol) g(on) g
(platform) g(X) g(when) f(I) h(am) 274 1659 y(really) 32
b(building) d(on) i(platform) f(Y?) 274 1781 y(The) 43
b(`) p Fl(src/config.h) p Fo(') e(and) h(`) p Fl(src/target.h) p
Fo(') f(header) i(\014les) g(attempt) i(to) f(obtain) f(as) h(m) m(uc) m
(h) f(infor-) 274 1880 y(mation) h(from) f(the) g(compiler) h(as) f(p) s
(ossible,) j(mainly) d(from) g(an) m(y) g(prede\014ned) e(prepro) s
(cessor) h(macros) 274 1980 y(that) c(it) g(de\014nes) e(during) g
(compilation.) 63 b(If) 36 b(this) h(information) h(is) f(incorrect) h
(then) f(y) m(ou) g(can) h(o) m(v) m(erride) 274 2080
y(the) p Fl 35 w(TARGET) p Fo(,) p Fl 33 w(SYSTEM) p
Fo(,) p Fl 33 w(ARCH) p Fo(,) p Fl 34 w(ENVIRON) p Fo(,) p
Fl 33 w(FORMAT) p Fo 33 w(and) p Fl 33 w(DYNLINK) p Fo
32 w(prepro) s(cessor) 33 b(macros) i(de\014ned) d(in) 274
2179 y(`) p Fl(src/target.h) p Fo(') 25 b(to) i(suit) g(y) m(our) g
(particular) g(system) g(b) m(y) g(explicitly) h(de\014ning) e(them) h
(in) p Fl 26 w(CFLAGS) p Fo 25 w(within) 274 2279 y(the) 34
b(`) p Fl(Makefile) p Fo(') d(when) i(y) m(ou) g(build) f(mpatrol.) 50
b(Y) -8 b(ou) 34 b(could) f(also) h(c) m(ho) s(ose) h(to) f(build) e
(di\013eren) m(t) i(v) m(ersions) 274 2379 y(of) c(mpatrol) g(with) f
(di\013eren) m(t) h(settings) g(of) p Fl 29 w(ENVIRON) p
Fo(,) p Fl 28 w(FORMAT) p Fo 28 w(or) p Fl 29 w(DYNLINK) p
Fo 28 w(on) f(a) h(single) g(system) f(if) h(y) m(ou) 274
2478 y(wish) g(to) h(b) m(y) f(c) m(hanging) p Fl 32
w(ENVIRON) p Fo(,) p Fl 28 w(FORMAT) p Fo 29 w(or) p
Fl 30 w(DYNLINK) p Fo 29 w(for) g(di\013eren) m(t) h(builds.) 144
2600 y(2.) 60 b(The) 24 b(pro) s(cessor) f(family) h(I) g(am) f
(compiling) i(on) e(supp) s(orts) f(b) s(oth) h(32-bit) i(and) e
(64-bit) i(mo) s(des) e(of) h(op) s(eration.) 274 2700
y(Ho) m(w) 32 b(do) e(I) g(sp) s(ecify) g(whic) m(h) g(I) g(w) m(an) m
(t?) 274 2822 y(Y) -8 b(ou) 31 b(will) g(ha) m(v) m(e) h(to) f(lo) s
(ok) g(at) g(the) g(do) s(cumen) m(tation) g(for) g(the) f(compiler) h
(y) m(ou) g(are) g(using) f(in) g(order) g(to) i(\014nd) 274
2921 y(out) k(ho) m(w) g(to) g(sp) s(ecify) f(whic) m(h) g(op) s
(erating) h(en) m(vironmen) m(t) h(y) m(ou) e(wish) g(to) h(target.) 58
b(F) -8 b(or) 36 b(example,) i(if) e(y) m(ou) 274 3021
y(are) 41 b(using) e(the) h(Sun) e(C) h(compiler) h(on) g(a) g(SP) -8
b(AR) m(C) 40 b(V9) g(Solaris) g(mac) m(hine) g(then) g(y) m(ou) g
(should) e(sp) s(ecify) 274 3121 y(the) 29 b(`) p Fl(-xarch=v9) p
Fo(') e(option) i(in) f(the) g(`) p Fl(Makefile) p Fo(') f(when) h(y) m
(ou) h(are) f(building) g(mpatrol) h(in) f(order) g(to) h(target) 274
3220 y(the) 39 b(64-bit) h(en) m(vironmen) m(t.) 67 b(If) 38
b(y) m(ou) h(think) f(that) i(y) m(ou) f(are) g(already) g(using) f
(the) h(correct) h(option,) i(but) 274 3320 y(the) 32
b(mpatrol) g(co) s(de) g(is) g(still) g(b) s(eing) f(built) h(to) g
(supp) s(ort) e(the) i(wrong) f(en) m(vironmen) m(t) h(then) f(y) m(ou)
h(could) g(try) 274 3419 y(explicitly) g(setting) g(the) p
Fl 30 w(ENVIRON) p Fo 29 w(prepro) s(cessor) d(macro) i(in) f(the) h(`)
p Fl(Makefile) p Fo('.) 144 3541 y(3.) 60 b(I) 32 b(cannot) g(include) f
(`) p Fl(mpatrol.h) p Fo(') f(from) h(m) m(y) h(C) p
Fl(++) p Fo 30 w(source) g(co) s(de) g(as) g(I) f(get) i(lots) f(of) g
(compilation) h(errors.) 274 3641 y(Wh) m(y) e(is) g(this) f(and) g
(what) g(can) h(I) f(do) g(to) h(prev) m(en) m(t) g(them?) 274
3763 y(The) 40 b(most) h(lik) m(ely) h(reason) e(that) h(y) m(ou) g
(are) f(getting) i(errors) e(is) g(b) s(ecause) g(y) m(ou) h(are) g
(calling) g(placemen) m(t) p Fl 274 3863 a(new) p Fo(,) e(and) e(the) g
(w) m(a) m(y) h(that) g(mpatrol) g(deriv) m(es) g(source) f
(information) h(from) f(calls) h(to) p Fl 38 w(operator) 28
b(new) p Fo 37 w(is) 274 3962 y(b) m(y) 33 b(de\014ning) f(a) h(macro) h
(called) p Fl 34 w(new) p Fo(,) f(th) m(us) f(causing) h(lots) h(of) f
(problems) f(when) g(calling) j(placemen) m(t) p Fl 34
w(new) p Fo 274 4062 a(or) k(explicitly) i(calling) p
Fl 40 w(operator) 28 b(new) p Fo(.) 66 b(Y) -8 b(ou) 39
b(can) h(either) f(try) g(not) g(to) h(use) e(placemen) m(t) p
Fl 41 w(new) p Fo 38 w(or) h(y) m(ou) 274 4161 y(can) 29
b(de\014ne) f(the) g(prepro) s(cessor) g(macro) p Fl
29 w(MP_NOCPLUSPLUS) p Fo 25 w(when) f(compiling) i(y) m(our) f(source)
h(\014le,) g(whic) m(h) 274 4261 y(will) f(disable) g(the) f(o) m(v) m
(erriding) i(of) e(an) m(y) h(C) p Fl(++) p Fo 26 w(op) s(erators) g
(in) f(`) p Fl(mpatrol.h) p Fo('.) 38 b(Alternativ) m(ely) -8
b(,) 31 b(if) c(y) m(ou) h(de\014ne) p Fl 274 4361 a(MP_NONEWDELETE) p
Fo 36 w(then) 38 b(y) m(ou) i(can) f(use) p Fl 39 w(MP_NEW) p
Fo(,) p Fl 39 w(MP_NEW_NOTHROW) p Fo 35 w(and) p Fl 39
w(MP_DELETE) p Fo 36 w(in) g(order) f(to) 274 4460 y(call) 32
b(the) f(mpatrol) f(v) m(ersions) h(of) g(the) f(C) p
Fl(++) p Fo 30 w(op) s(erators.) 144 4582 y(4.) 60 b(I) 24
b(still) h(ha) m(v) m(e) g(the) f(ab) s(o) m(v) m(e) h(problem,) g(but)
e(I) h(don't) g(think) f(it's) i(due) e(to) i(placemen) m(t) p
Fl 25 w(new) p Fo 23 w(since) f(the) g(compiler) 274
4682 y(complains) 31 b(ab) s(out) p Fl 30 w(operator) d(new[]) p
Fo(,) i(so) g(could) h(that) g(b) s(e) e(a) i(clue?) 274
4804 y(Y) -8 b(es.) 49 b(The) 32 b(most) h(lik) m(ely) h(reason) f(is) g
(that) g(the) g(C) p Fl(++) p Fo 31 w(compiler) h(do) s(es) e(not) h
(supp) s(ort) e(the) i(arra) m(y) p Fl 33 w(new) p Fo
32 w(and) p Fl 274 4903 a(delete) p Fo 28 w(op) s(erators.) 41
b(These) 29 b(w) m(ere) h(in) m(tro) s(duced) f(some) g(time) h(b) s
(efore) f(the) h(standardisation) g(of) f(the) h(C) p
Fl(++) p Fo 274 5003 a(language) i(but) d(some) h(compilers) g(ma) m(y)
h(not) f(y) m(et) h(ha) m(v) m(e) g(supp) s(ort) d(for) h(them.) 41
b(It) 30 b(ma) m(y) g(b) s(e) f(that) i(y) m(ou) f(ha) m(v) m(e) 274
5103 y(to) 35 b(use) e(a) h(sp) s(ecial) g(compiler) h(option) f(to) g
(enable) g(supp) s(ort) e(for) h(these) h(op) s(erators,) h(but) e(if) h
(not) g(y) m(ou) g(will) 274 5202 y(probably) c(ha) m(v) m(e) i(to) f
(edit) g(`) p Fl(mpatrol.h) p Fo(') d(to) j(temp) s(orarily) f(allo) m
(w) i(y) m(our) f(\014les) f(to) h(compile.) 144 5324
y(5.) 60 b(I) 32 b(tried) g(b) s(oth) g(of) g(the) g(ab) s(o) m(v) m(e)
h(suggestions,) h(but) d(I) h(still) h(can't) g(get) g(m) m(y) f(C) p
Fl(++) p Fo 31 w(source) h(co) s(de) f(to) h(compile.) 274
5424 y(I'm) e(using) f(an) g(old) g(C) p Fl(++) p Fo
30 w(compiler) h(so) f(could) h(that) g(b) s(e) e(a) i(problem?) 274
5546 y(Y) -8 b(es.) 42 b(The) 30 b(`) p Fl(mpatrol.h) p
Fo(') f(header) h(\014le) g(de\014nes) g(new) g(v) m(ersions) h(of) f
(the) h(C) p Fl(++) p Fo 29 w(dynamic) g(memory) f(allo) s(ca-) 274
5645 y(tion) h(op) s(erators) f(using) f(exceptions) i(and) f
(namespaces) g(as) g(required) f(b) m(y) h(the) g(ANSI) g(C) p
Fl(++) p Fo 29 w(standard.) 39 b(If) p 90 rotate dyy
eop
%%Page: 205 211
205 210 bop Fo 94 -116 a(App) s(endix) 29 b(J:) h(F) -8
b(requen) m(tly) 32 b(ask) m(ed) f(questions) 2056 b(205) 274
365 y(y) m(our) 31 b(C) p Fl(++) p Fo 30 w(compiler) g(has) g(no) f
(supp) s(ort) f(for) i(these) g(then) f(y) m(ou) h(should) f(compile) i
(y) m(our) e(C) p Fl(++) p Fo 30 w(source) h(\014les) 274
465 y(with) p Fl 36 w(MP_NOCPLUSPLUS) p Fo 32 w(de\014ned.) 55
b(Y) -8 b(ou) 36 b(ma) m(y) g(also) h(b) s(e) e(using) g(an) g(older) h
(C) p Fl(++) p Fo 35 w(library) f(in) g(whic) m(h) h(the) 274
565 y(`) p Fl(new) p Fo(') 29 b(header) f(\014le) h(do) s(es) f(not) h
(de\014ne) p Fl 27 w(set_new_handler\(\)) p Fo 24 w(to) g(b) s(e) f(in)
g(the) p Fl 29 w(std) p Fo 28 w(namespace.) 41 b(Y) -8
b(ou) 29 b(will) 274 664 y(then) i(ha) m(v) m(e) g(to) g(c) m(hange) h
(the) e(`) p Fl(mpatrol.h) p Fo(') f(header) h(\014le) g(and) g(`) p
Fl(cplus.c) p Fo(') f(source) i(\014le) f(accordingly) -8
b(.) 144 780 y(6.) 60 b(I'm) 26 b(calling) p Fl 28 w(operator) i(new) p
Fo 25 w(\(not) e(the) p Fi 27 w(nothr) -5 b(ow) p Fo
38 w(v) m(ersion\)) 27 b(from) e(m) m(y) h(C) p Fl(++) p
Fo 25 w(source) g(co) s(de) h(but) e(when) g(m) m(y) 274
880 y(program) 30 b(runs) e(out) h(of) h(memory) g(the) f(`) p
Fl(OUTMEM) p Fo(') g(error) g(is) g(giv) m(en) i(in) e(the) h(mpatrol) g
(log) g(\014le) g(rather) f(than) 274 980 y(thro) m(wing) i(a) p
Fl 31 w(std::bad_alloc) p Fo 26 w(exception.) 42 b(Wh) m(y) 31
b(is) f(this?) 274 1096 y(Sounds) 40 b(lik) m(e) j(the) e(mpatrol) h
(library) f(w) m(as) h(built) f(with) g(a) h(C) f(compiler.) 74
b(In) 41 b(order) g(for) g(the) h(mpatrol) 274 1196 y(v) m(ersions) 36
b(of) p Fl 36 w(operator) 28 b(new) p Fo 35 w(and) p
Fl 35 w(operator) g(new[]) p Fo 35 w(to) 36 b(thro) m(w) g(an) f
(exception) i(when) e(they) g(run) g(out) 274 1295 y(of) g(memory) -8
b(,) 36 b(the) e(mpatrol) g(library) g(m) m(ust) g(ha) m(v) m(e) i(b) s
(een) d(built) h(with) g(a) h(C) p Fl(++) p Fo 33 w(compiler.) 52
b(The) 34 b(`) p Fl(OUTMEM) p Fo(') 274 1395 y(error) c(is) h(only) f
(giv) m(en) i(when) d(there) i(is) f(no) g(w) m(a) m(y) i(to) f(thro) m
(w) f(an) g(exception.) 144 1511 y(7.) 60 b(Wh) m(y) 38
b(am) g(I) f(unable) g(to) h(call) h(the) f(mpatrol) g(v) m(ersion) g
(of) p Fl 37 w(alloca\(\)) p Fo(?) 60 b(I) 37 b(only) h(ev) m(er) g
(seem) g(to) g(call) h(the) 274 1611 y(default) 31 b(v) m(ersion.) 274
1727 y(Most) 39 b(implemen) m(tations) g(of) e(the) p
Fl 38 w(alloca\(\)) p Fo 35 w(function) g(are) h(compiler) g(builtins) f
(whic) m(h) g(will) h(b) s(e) e(con-) 274 1826 y(v) m(erted) 26
b(to) g(inline) f(assem) m(bler) h(or) f(ob) 5 b(ject) 26
b(co) s(de) f(in) g(order) f(for) h(them) g(to) h(b) s(e) f(able) g(to)
h(dynamically) g(mo) s(dify) 274 1926 y(the) d(calling) i(function's) d
(stac) m(k) j(frame) d(at) i(run-time.) 38 b(As) 22 b(a) i(result,) g
(the) f(call) h(to) p Fl 24 w(alloca\(\)) p Fo 20 w(is) f(recognised)
274 2026 y(as) 30 b(an) f(in) m(trinsic) g(k) m(eyw) m(ord) h(and) e
(is) h(dealt) h(with) f(sp) s(ecially) h(b) m(y) f(the) g(compiler.) 41
b(Ho) m(w) m(ev) m(er,) 31 b(if) e(this) g(can) h(b) s(e) 274
2125 y(in) m(tercepted) d(b) m(y) f(the) g(prepro) s(cessor) f(b) s
(efore) g(the) h(compiler) h(parses) e(the) h(source) g(co) s(de) g
(then) g(the) g(call) h(can) 274 2225 y(b) s(e) 34 b(redirected) h(to) g
(another) g(function.) 52 b(This) 34 b(is) g(one) h(of) f(the) h
(functions) f(of) g(the) h(`) p Fl(mpatrol.h) p Fo(') d(header) 274
2325 y(\014le,) h(whic) m(h) f(means) g(that) h(it) f(m) m(ust) g(b) s
(e) f(included) h(b) s(efore) f(the) h(\014rst) g(call) h(the) p
Fl 32 w(alloca\(\)) p Fo(.) 44 b(If) p Fl 31 w(alloca.h) p
Fo 274 2424 a(is) 31 b(also) h(b) s(eing) e(included) g(then) p
Fl 31 w(mpatrol.h) p Fo 28 w(m) m(ust) h(b) s(e) f(included) g(after) h
(it,) h(otherwise) f(it) g(ma) m(y) h(rede\014ne) p Fl
274 2524 a(alloca\(\)) p Fo 29 w(bac) m(k) f(to) g(the) f(default) h(v)
m(ersion.) 144 2640 y(8.) 60 b(Wh) m(y) 35 b(do) e(some) i(of) f(the) g
(`) p Fl(Makefile) p Fo('s) e(con) m(tain) j(the) f(`) p
Fl(-fno-inline-functions) p Fo(') 29 b(option) 34 b(as) g(part) g(of) p
Fl 274 2740 a(OFLAGS) p Fo(?) 274 2856 y(The) 28 b(`) p
Fl(-fno-inline-functions) p Fo(') 23 b(option) 28 b(is) g(a) p
Fl 29 w(gcc) p Fo(-sp) s(eci\014c) f(option) i(whic) m(h) e(instructs) h
(the) g(compiler) 274 2956 y(not) 33 b(to) g(inline) f(an) m(y) h
(functions.) 45 b(This) 32 b(is) g(necessary) h(on) f(some) g
(platforms) g(where) g(function) g(call) h(stac) m(k) 274
3055 y(tra) m(v) m(ersal) 39 b(is) e(supp) s(orted,) h(since) f
(function) g(inlining) g(ma) m(y) g(signi\014can) m(tly) h(alter) g
(the) g(la) m(y) m(out) h(of) e(a) g(pro-) 274 3155 y(gram's) 30
b(stac) m(k.) 42 b(Normally) 31 b(this) e(option) h(is) g(only) f
(required) g(when) f(building) h(the) h(mpatrol) g(library) -8
b(,) 30 b(but) 274 3254 y(on) 36 b(some) g(platforms) f(function) g
(call) i(stac) m(k) g(tra) m(v) m(ersal) h(ma) m(y) e(not) f(w) m(ork) h
(prop) s(erly) e(unless) h(this) g(option) 274 3354 y(\(or) c(equiv) -5
b(alen) m(t\)) 32 b(is) f(used) e(for) i(all) g(compiled) g(co) s(de.)
144 3470 y(9.) 60 b(What) 32 b(do) s(es) e(the) p Fl
30 w(MP_ALIGN) p Fo 28 w(de\014nition) g(in) g(`) p Fl(mpatrol.h) p
Fo(') f(do?) 274 3587 y(It) i(is) f(a) g(prepro) s(cessor) g(macro) g
(function) g(that) h(is) f(used) g(to) g(return) f(the) i(minim) m(um) e
(alignmen) m(t) j(in) d(b) m(ytes) 274 3686 y(required) 24
b(for) f(a) i(sp) s(eci\014ed) e(t) m(yp) s(e) h(at) g(compile-time.) 41
b(It) 24 b(is) g(used) f(in) h(the) p Fl 24 w(MP_MALLOC) p
Fo 21 w(family) g(of) g(functions) 274 3786 y(to) 34
b(sp) s(ecify) e(the) g(required) g(alignmen) m(t) i(of) f(the) f
(memory) h(allo) s(cation) h(that) f(is) g(to) g(b) s(e) f(used) f(to) j
(store) f(the) 274 3885 y(sp) s(eci\014ed) 21 b(t) m(yp) s(e.) 38
b(Some) 21 b(compilers) h(pro) m(vide) f(a) g(feature) h(that) g(can) f
(b) s(e) g(used) f(to) i(determine) f(the) h(minim) m(um) 274
3985 y(alignmen) m(t) 32 b(of) f(a) g(t) m(yp) s(e) f(at) h
(compile-time.) 43 b(F) -8 b(or) 31 b(all) g(others,) g(this) f(macro) h
(ev) -5 b(aluates) 32 b(to) f(`) p Fl(0) p Fo('.) 98
4101 y(10.) 61 b(What) 32 b(do) s(es) e(the) p Fl 30
w(MP_INLINE) p Fo 28 w(de\014nition) g(in) g(`) p Fl(mpatrol.h) p
Fo(') e(do?) 274 4218 y(It) 35 b(is) f(used) f(in) h(the) g
(de\014nition) g(of) g(the) h(debugging) f(v) m(ersions) g(of) g(the) h
(C) p Fl(++) p Fo 33 w(op) s(erators) f(in) g(`) p Fl(mpatrol.h) p
Fo(') 274 4317 y(so) 28 b(that) g(they) g(are) f(inlined) g(correctly)
-8 b(.) 42 b(W) -8 b(e) 28 b(w) m(an) m(t) h(to) f(de\014ne) e(the) i
(C) p Fl(++) p Fo 26 w(op) s(erators) g(so) f(that) h(they) g(will) g
(b) s(e) 274 4417 y(inlined) d(in) f(ev) m(ery) i(source) f(\014le) g
(that) g(uses) g(them) g(and) f(also) i(not) f(clash) g(with) f(the) h
(v) m(ersions) h(de\014ned) d(in) i(the) 274 4516 y(mpatrol) 36
b(library) f(or) h(the) f(standard) g(C) p Fl(++) p Fo
34 w(library) -8 b(.) 56 b(T) -8 b(raditionally) g(,) 38
b(this) e(is) f(done) g(b) m(y) h(de\014ning) e(them) 274
4616 y(to) 41 b(b) s(e) p Fl 39 w(static) 29 b(inline) p
Fo(,) 41 b(whic) m(h) e(means) h(that) g(an) m(y) g(non-inlined) f
(de\014nition) h(will) g(b) s(e) f(lo) s(cal) i(to) g(eac) m(h) 274
4716 y(ob) 5 b(ject) 33 b(\014le.) 44 b(An) 32 b(ev) m(en) g(b) s
(etter) g(tec) m(hnique) g(is) g(a) m(v) -5 b(ailable) 34
b(with) d(the) h(new) f(C) p Fl(++) p Fo 30 w(standard) g(whic) m(h) h
(allo) m(ws) p Fl 274 4815 a(extern) d(inline) p Fo 36
w(de\014nitions,) 38 b(meaning) g(that) g(no) f(de\014nition) g(will) g
(b) s(e) g(a) m(v) -5 b(ailable) 39 b(if) f(the) f(function) g(is) 274
4915 y(not) i(inlined.) 62 b(Unfortunately) -8 b(,) 41
b(if) c(optimisation) j(is) d(turned) g(o\013) h(in) g(the) g(compiler)
g(then) f(no) h(inlining) 274 5015 y(will) h(usually) f(b) s(e) g(p) s
(erformed) f(and) h(so) g(the) h(de\014nitions) f(will) g(b) s(e) g
(real) h(functions.) 64 b(Luc) m(kily) -8 b(,) 42 b(on) c(ELF) 274
5114 y(platforms) 30 b(the) p Fl 31 w(extern) e(inline) p
Fo 28 w(function) i(de\014nition) g(will) g(ha) m(v) m(e) h(a) g(w) m
(eak) g(visibilit) m(y) g(and) e(so) h(will) h(not) 274
5214 y(clash) g(with) f(library) g(functions.) 98 5330
y(11.) 61 b(Wh) m(y) 46 b(do) g(I) f(get) i(di\013eren) m(t) f(stac) m
(k) h(traces) g(in) e(the) h(mpatrol) g(log) g(\014le) g(from) f(the) h
(C) p Fl(++) p Fo 45 w(op) s(erators) f(in) 274 5430
y(`) p Fl(mpatrol.h) p Fo(') 29 b(when) g(optimisation) j(is) e(turned)
g(on) g(and) g(o\013) g(in) g(the) h(compiler?) 274 5546
y(When) 39 b(the) h(compiler) g(is) f(optimising) h(it) f(will) h(in) m
(v) -5 b(ariably) 40 b(b) s(e) e(p) s(erforming) g(inlining,) k(in) d
(whic) m(h) g(case) 274 5645 y(eac) m(h) 29 b(inlined) e(function) f
(will) i(share) f(the) g(stac) m(k) i(frame) e(of) g(its) h(caller) g
(when) e(it) i(is) f(called) h(|) f(the) h(mpatrol) p
90 rotate dyy eop
%%Page: 206 212
206 211 bop Fo 94 -116 a(206) 3332 b(mpatrol) 274 365
y(library) 38 b(cannot) g(detect) i(this.) 63 b(In) 37
b(order) g(to) i(cop) s(e) f(in) f(b) s(oth) h(situations,) i(the) e
(non-inlined) g(case) h(will) 274 465 y(con) m(tain) 27
b(the) f(name) f(of) h(the) f(C) p Fl(++) p Fo 25 w(op) s(erator) h(at)
g(the) f(top) h(of) f(its) h(stac) m(k,) i(ev) m(en) e(though) g(it) f
(will) h(b) s(e) f(remo) m(v) m(ed) 274 565 y(in) 31
b(the) f(inlined) g(case.) 98 691 y(12.) 61 b(Ho) m(w) 32
b(do) e(I) g(build) f(the) p Fl 31 w(mptrace) p Fo 28
w(command) h(with) g(GUI) h(supp) s(ort?) 274 817 y(The) g(GUI) g(supp)
s(ort) f(for) g(the) p Fl 32 w(mptrace) p Fo 29 w(command) g(is) h
(curren) m(tly) g(written) g(to) h(use) f(Motif) h(and) e(X) i(Win-) 274
916 y(do) m(ws) g(and) e(so) i(can) f(only) h(b) s(e) e(built) i(on) f
(systems) g(with) g(these) h(libraries) f(and) g(run) f(on) h(systems) g
(with) g(an) 274 1016 y(X) k(serv) m(er.) 52 b(This) 34
b(will) g(most) h(lik) m(ely) h(b) s(e) d(p) s(ossible) h(only) g(on) g
(UNIX) h(platforms.) 52 b(LessTif) 34 b(can) g(b) s(e) g(used) 274
1116 y(instead) c(of) f(Motif) h(if) f(that) h(is) f(all) h(that) g(is)
f(a) m(v) -5 b(ailable) 32 b(on) d(y) m(our) g(system.) 40
b(The) 29 b(UNIX) g(`) p Fl(Makefile) p Fo(') f(has) h(a) 274
1215 y(macro) h(called) p Fl 30 w(GUISUP) p Fo 27 w(whic) m(h) f(can) g
(b) s(e) f(set) h(to) p Fl 30 w(true) p Fo 28 w(or) p
Fl 28 w(false) p Fo 28 w(dep) s(ending) e(on) i(whether) f(y) m(ou) h
(wish) f(to) 274 1315 y(ha) m(v) m(e) 33 b(GUI) f(supp) s(ort) e(or) h
(not.) 45 b(The) 31 b(default) h(is) p Fl 31 w(false) p
Fo(.) 43 b(GUI) 32 b(supp) s(ort) e(is) h(automatically) k(enabled) c
(on) 274 1415 y(platforms) g(that) g(supp) s(ort) d(it) j(if) g(the) f
(`) p Fl(configure) p Fo(') f(script) h(in) g(`) p Fl(pkg/auto) p
Fo(') f(is) h(used.) 98 1541 y(13.) 61 b(Ho) m(w) 32
b(do) e(I) g(build) f(the) p Fl 31 w(mptrace) p Fo 28
w(command) h(without) h(GUI) f(supp) s(ort?) 274 1667
y(This) 35 b(is) h(done) f(b) m(y) g(default) h(on) f(most) h
(platforms) g(when) e(using) h(the) h(`) p Fl(Makefile) p
Fo('s) e(in) h(the) g(`) p Fl(build) p Fo(') g(di-) 274
1766 y(rectory) -8 b(.) 45 b(Ho) m(w) m(ev) m(er,) 33
b(if) f(for) f(some) g(reason) h(that) f(is) h(not) f(the) g(case) i
(then) d(on) h(UNIX) h(platforms) f(y) m(ou) h(will) 274
1866 y(ha) m(v) m(e) 37 b(to) g(set) f(the) p Fl 36 w(GUISUP) p
Fo 34 w(`) p Fl(Makefile) p Fo(') e(macro) i(to) p Fl
37 w(false) p Fo 34 w(when) f(compiling) p Fl 36 w(mptrace) p
Fo(.) 55 b(Y) -8 b(ou) 36 b(migh) m(t) 274 1966 y(need) h(to) h(do) f
(this) g(if) f(y) m(our) h(UNIX) h(system) f(do) s(es) f(not) h(ha) m
(v) m(e) i(the) e(correct) h(header) f(\014les) f(and) h(libraries) 274
2065 y(installed) i(needed) e(for) g(GUI) h(supp) s(ort.) 61
b(If) 37 b(y) m(ou) h(are) g(using) f(the) g(`) p Fl(configure) p
Fo(') f(script) h(in) h(`) p Fl(pkg/auto) p Fo(') 274
2165 y(then) 32 b(GUI) g(supp) s(ort) f(will) h(b) s(e) f
(automatically) k(disabled) d(on) g(platforms) g(that) g(do) g(not) g
(supp) s(ort) e(it,) k(but) 274 2265 y(y) m(ou) d(can) g(force) g(it) g
(to) g(b) s(e) f(disabled) g(b) m(y) g(using) g(the) g(`) p
Fl(--without-x) p Fo(') e(option.) p Fn 94 2530 a(J.3) 69
b(Linking) p Fo 144 2770 a(1.) 60 b(Wh) m(y) 31 b(do) f(I) h(get) g
(unde\014ned) d(sym) m(b) s(ols) i(when) g(linking) g(with) g(the) h
(mpatrol) f(library?) 274 2896 y(This) 45 b(is) g(most) g(lik) m(ely) i
(caused) e(b) m(y) g(the) g(mpatrol) g(library) g(requiring) g
(additional) h(sym) m(b) s(ols) e(de\014ned) 274 2996
y(in) 55 b(an) h(ob) 5 b(ject) 56 b(\014le) f(access) i(library) -8
b(.) 115 b(If) 55 b(mpatrol) h(w) m(as) g(built) f(with) p
Fl 55 w(FORMAT=FORMAT_COFF) p Fo 50 w(or) p Fl 274 3096
a(FORMAT=FORMAT_XCOFF) p Fo 25 w(then) 30 b(y) m(ou'll) h(need) e(to) i
(add) e(`) p Fl(-lld) p Fo(') g(\(or) h(equiv) -5 b(alen) m(t\)) 32
b(to) f(the) f(compiler) g(com-) 274 3195 y(mand) i(line) h(straigh) m
(t) g(after) g(`) p Fl(-lmpatrol) p Fo('.) 45 b(If) 32
b(mpatrol) h(w) m(as) g(built) f(with) p Fl 32 w(FORMAT=FORMAT_ELF32) p
Fo 27 w(or) p Fl 274 3295 a(FORMAT=FORMAT_ELF64) p Fo
21 w(then) 26 b(y) m(ou'll) h(need) e(to) i(add) e(`) p
Fl(-lelf) p Fo(') g(\(or) h(equiv) -5 b(alen) m(t\)) 28
b(to) f(the) f(compiler) g(com-) 274 3394 y(mand) 32
b(line) h(straigh) m(t) g(after) g(`) p Fl(-lmpatrol) p
Fo('.) 45 b(If) 32 b(mpatrol) h(w) m(as) f(built) h(with) p
Fl 32 w(FORMAT=FORMAT_BFD) p Fo 27 w(then) 274 3494 y(y) m(ou'll) 25
b(need) e(to) h(add) e(`) p Fl(-lbfd) 29 b(-liberty) p
Fo(') 22 b(\(or) h(equiv) -5 b(alen) m(t\)) 25 b(instead.) 39
b(If) 22 b(y) m(ou) i(are) f(using) g(the) g(thread-safe) 274
3594 y(v) m(ersion) 31 b(of) g(mpatrol) g(then) f(y) m(ou) g(ma) m(y) h
(also) h(need) e(to) h(link) f(with) g(the) h(system) f(threads) g
(library) -8 b(.) 144 3720 y(2.) 60 b(Wh) m(y) 45 b(do) f(I) f(still) i
(get) g(unde\014ned) d(sym) m(b) s(ols) i(on) g(HP/UX,) h(IRIX,) f(T) -8
b(ru64) 44 b(or) g(Windo) m(ws) g(platforms,) 274 3819
y(despite) 31 b(follo) m(wing) h(the) e(ab) s(o) m(v) m(e) i
(instructions?) 274 3946 y(If) f(the) f(sym) m(b) s(ol) h(is) f(called)
p Fl 32 w(U_get_previous_frame) p Fo 25 w(on) h(HP/UX) g(then) g(y) m
(ou) f(still) i(need) e(to) i(link) e(with) 274 4045
y(the) j(system) g(stac) m(k) h(tracebac) m(k) g(library) -8
b(,) 33 b(`) p Fl(libcl.sl) p Fo('.) 46 b(If) 32 b(the) g(sym) m(b) s
(ols) g(are) h(called) p Fl 34 w(exc_setjmp) p Fo 30
w(and) p Fl 274 4145 a(unwind) p Fo 40 w(on) 41 b(IRIX) g(or) g(T) -8
b(ru64) 41 b(and) g(y) m(ou) h(de\014ned) e(the) p Fl
41 w(MP_LIBRARYSTACK_SUPPORT) p Fo 35 w(prepro) s(cessor) 274
4244 y(macro) e(when) e(building) g(the) h(mpatrol) g(library) f(then) h
(y) m(ou) g(still) h(need) e(to) i(link) f(with) f(the) h(system) g
(ex-) 274 4344 y(ception) 29 b(library) -8 b(,) 29 b(`) p
Fl(libexc.so) p Fo('.) 38 b(If) 27 b(the) i(sym) m(b) s(ols) e(all) i
(b) s(egin) f(with) p Fl 27 w(Sym) p Fo 27 w(on) g(Windo) m(ws) g
(platforms) g(then) 274 4444 y(y) m(ou) j(still) g(need) g(to) g(link) f
(with) g(the) h(system) f(sym) m(b) s(ol) g(access) i(library) -8
b(,) 31 b(`) p Fl(imagehlp.lib) p Fo('.) 144 4570 y(3.) 60
b(I) 42 b(tried) f(all) h(of) f(the) h(ab) s(o) m(v) m(e,) j(but) c(wh)
m(y) g(is) g(the) p Fl 42 w(SymGetLineFromAddr) p Fo
36 w(sym) m(b) s(ol) g(still) h(unde\014ned) d(on) 274
4669 y(Windo) m(ws) 31 b(platforms?) 274 4796 y(This) 36
b(is) h(due) f(to) h(the) g(`) p Fl(imagehlp.lib) p Fo(') d(or) j(`) p
Fl(imagehlp.dll) p Fo(') d(libraries) i(on) h(y) m(our) g(system) f(b) s
(eing) h(out) 274 4895 y(of) g(date.) 60 b(The) p Fl
36 w(SymGetLineFromAddr\(\)) p Fo 31 w(function) 36 b(w) m(as) h(added)
f(to) i(this) e(library) g(at) h(a) g(m) m(uc) m(h) g(later) 274
4995 y(date) e(from) e(the) g(original) i(release) g(so) f(if) f(y) m
(ou) h(w) m(an) m(t) h(the) p Fl 33 w(USEDEBUG) p Fo
32 w(option) f(to) g(w) m(ork) g(y) m(ou) g(should) e(try) 274
5094 y(to) 37 b(get) g(an) e(up) s(dated) g(library) g(from) g
(Microsoft.) 59 b(Alternativ) m(ely) -8 b(,) 40 b(y) m(ou) c(can) g
(disable) g(the) g(call) h(to) f(it) g(in) p Fl 274 5194
a(__mp_findsource\(\)) p Fo 26 w(but) 30 b(the) g(`) p
Fl(USEDEBUG) p Fo(') f(option) i(will) g(no) f(longer) h(w) m(ork.) 144
5320 y(4.) 60 b(Wh) m(y) 27 b(is) g(the) g(mpatrol) g(library) f
(unable) g(to) i(read) e(an) m(y) h(sym) m(b) s(ols) g(from) f(DLLs) g
(despite) h(the) g(fact) h(that) f(m) m(y) 274 5420 y(program) k(uses) f
(them?) 274 5546 y(Windo) m(ws) c(executable) i(\014les) d(and) h(DLLs)
f(only) h(con) m(tain) h(a) f(list) h(of) f(sym) m(b) s(ol) f(names) h
(whic) m(h) f(are) i(imp) s(orted) 274 5645 y(and) 34
b(exp) s(orted) g(but) f(do) h(not) g(con) m(tain) h(details) g(of) f
(suc) m(h) g(sym) m(b) s(ols) g(at) g(the) h(same) f(lev) m(el) i(as) e
(ob) 5 b(ject) 35 b(\014les.) p 90 rotate dyy eop
%%Page: 207 213
207 212 bop Fo 94 -116 a(App) s(endix) 29 b(J:) h(F) -8
b(requen) m(tly) 32 b(ask) m(ed) f(questions) 2056 b(207) 274
365 y(T) -8 b(o) 32 b(do) e(this) h(requires) g(the) g(sym) m(b) s
(olic) g(information) g(to) h(b) s(e) e(retained) h(b) m(y) g(the) g
(link) m(er,) g(but) f(this) h(has) g(not) 274 465 y(b) s(een) i(done) g
(for) f(the) i(system) f(DLLs.) 48 b(The) 33 b(mpatrol) g(library) g
(uses) g(the) g(imagehlp) g(system) h(library) e(to) 274
565 y(read) f(sym) m(b) s(ols) f(from) g(DLLs) g(but) f(this) i(will) f
(only) h(w) m(ork) f(if) g(the) h(required) f(system) g(debugging) g
(sym) m(b) s(ols) 274 664 y(are) k(installed) g(on) g(y) m(our) f(mac) m
(hine.) 50 b(In) 33 b(Visual) h(C) p Fl(++) p Fo(,) f(this) g(can) h(b)
s(e) f(done) g(b) m(y) g(selecting) i(the) f(`) p Fl(Windows) 274
764 y(NT) c(Symbols) f(Setup) p Fo(') g(start) i(men) m(u) f(item.) 144
892 y(5.) 60 b(Wh) m(y) 31 b(do) f(I) h(get) g(duplicate) g
(de\014nitions) f(of) g(sym) m(b) s(ols) g(when) g(linking) g(with) g
(the) h(mpatrol) g(library?) 274 1020 y(This) d(is) g(most) h(lik) m
(ely) h(caused) e(b) m(y) g(y) m(our) g(co) s(de,) h(or) g(a) f
(library) -8 b(,) 29 b(pro) m(viding) f(de\014nitions) g(of) p
Fl 29 w(malloc\(\)) p Fo 26 w(and) p Fl 274 1120 a(free\(\)) p
Fo 23 w(whic) m(h) d(con\015ict) g(with) g(those) g(de\014ned) f(in) g
(the) h(mpatrol) g(library) -8 b(.) 39 b(Y) -8 b(ou'll) 26
b(need) e(to) i(disable) e(these) 274 1219 y(in) 31 b(order) e(to) j(p)
s(erform) c(a) j(successful) f(link) h(and) e(use) i(the) f(replacemen)
m(ts) i(in) e(mpatrol) h(instead.) 144 1347 y(6.) 60
b(Wh) m(y) 29 b(do) g(I) f(get) p Fl 29 w(xmalloc\(\)) p
Fo 26 w(as) h(a) g(m) m(ultiply-de\014ned) f(sym) m(b) s(ol) g(when) f
(I) h(link) h(with) f(the) h(arc) m(hiv) m(e) g(v) m(ersion) 274
1447 y(of) i(the) g(mpatrol) f(library?) 274 1575 y(If) 35
b(the) f(mpatrol) h(library) f(w) m(as) h(built) f(with) p
Fl 34 w(FORMAT=FORMAT_BFD) p Fo 30 w(then) g(it) h(is) g(b) s(ecause) f
(the) h(libib) s(ert) m(y) 274 1675 y(library) i(con) m(tains) h
(de\014nitions) f(of) g(the) p Fl 38 w(xmalloc\(\)) p
Fo 34 w(family) h(of) f(functions) g(as) g(w) m(ell.) 62
b(Y) -8 b(ou) 38 b(should) e(re-) 274 1774 y(build) j(the) g(mpatrol) g
(library) g(without) g(the) g(de\014nitions) g(of) g(the) h(relev) -5
b(an) m(t) p Fl 40 w(xmalloc\(\)) p Fo 37 w(functions) 38
b(in) 274 1874 y(`) p Fl(malloc.c) p Fo('.) 53 b(Y) -8
b(ou're) 36 b(also) f(lik) m(ely) i(to) e(get) h(this) f(error) g(if) f
(y) m(ou) i(link) e(with) h(the) g(arc) m(hiv) m(e) h(v) m(ersion) g
(of) f(the) 274 1973 y(mpatrol) 29 b(library) f(and) g(one) h(or) f
(more) h(of) f(the) p Fl 29 w(xmalloc\(\)) p Fo 26 w(family) h(of) f
(functions) g(is) g(de\014ned) g(in) g(another) 274 2073
y(arc) m(hiv) m(e) k(library) e(that) h(y) m(ou) g(are) g(linking) f
(with.) 144 2201 y(7.) 60 b(I) 36 b(link) m(ed) h(m) m(y) f(program) g
(to) g(a) h(shared) e(library) h(v) m(ersion) g(of) g(mpatrol.) 58
b(No) m(w,) 39 b(when) c(I) h(try) f(to) i(run) e(m) m(y) 274
2301 y(program,) f(the) f(system) g(complains) g(that) g(it) g(cannot) h
(\014nd) d(the) i(mpatrol) g(library) -8 b(.) 48 b(Ho) m(w) 33
b(do) g(I) f(get) i(this) 274 2400 y(to) e(w) m(ork?) 274
2528 y(Y) -8 b(ou) 30 b(need) f(to) h(tell) h(the) e(system) g(where) g
(to) h(\014nd) e(the) h(shared) g(library) g(v) m(ersion) g(of) h(the) f
(mpatrol) h(library) -8 b(,) 274 2628 y(either) 37 b(b) m(y) f(setting)
h(y) m(our) p Fl 36 w(LD_LIBRARY_PATH) p Fo 31 w(en) m(vironmen) m(t) g
(v) -5 b(ariable) 37 b(\(or) f(just) p Fl 35 w(PATH) p
Fo 35 w(on) g(Windo) m(ws) 274 2728 y(platforms\),) 31
b(or) f(b) m(y) g(em) m(b) s(edding) g(the) g(full) g(path) g(to) h
(the) f(library) g(in) m(to) h(the) g(executable) g(when) f(y) m(ou) g
(link) 274 2827 y(y) m(our) h(program) f(b) m(y) g(setting) i(the) p
Fl 30 w(LD_RUN_PATH) p Fo 28 w(en) m(vironmen) m(t) f(v) -5
b(ariable.) 144 2955 y(8.) 60 b(I) 29 b(link) m(ed) g(m) m(y) f
(program) h(to) g(a) g(shared) f(library) g(v) m(ersion) h(of) f
(mpatrol.) 41 b(Will) 30 b(future) d(releases) j(of) f(mpatrol) 274
3055 y(remain) i(compatible) g(with) f(this) h(v) m(ersion) g(or) f
(will) h(I) f(ha) m(v) m(e) h(to) h(relink) e(m) m(y) g(program?) 274
3183 y(Bac) m(kw) m(ards) 37 b(compatibilit) m(y) h(is) d(not) h
(generally) h(guaran) m(teed,) h(but) c(should) h(b) s(e) g(preserv) m
(ed) g(if) g(only) h(the) 274 3283 y(bug) 26 b(\014x) f(part) g(of) h
(the) g(mpatrol) g(v) m(ersion) h(n) m(um) m(b) s(er) d(has) h(c) m
(hanged,) j(with) d(the) h(ma) 5 b(jor) 26 b(and) f(minor) h(v) m
(ersions) 274 3382 y(sta) m(ying) e(the) e(same.) 38
b(F) -8 b(or) 22 b(example,) j(v) m(ersions) d(1.0.3) i(and) d(1.0.8) j
(should) c(b) s(e) i(compatible,) j(but) c(upgrading) 274
3482 y(to) 32 b(v) m(ersion) e(1.1.0) j(ma) m(y) e(require) f(a) g
(relink.) 144 3610 y(9.) 60 b(I) 37 b(ha) m(v) m(e) i(link) m(ed) e(m) m
(y) g(program) g(with) g(the) g(DLL) g(v) m(ersion) h(of) f(the) g
(mpatrol) h(library) f(on) f(Windo) m(ws) i(but) 274
3710 y(it) 33 b(crashes) g(when) e(I) h(run) f(it.) 47
b(I) 32 b(susp) s(ect) f(that) i(the) g(crash) f(is) g(o) s(ccurring) g
(when) f(the) h(mpatrol) h(library) f(is) 274 3809 y(b) s(eing) e
(initialised,) i(so) f(what) f(is) h(going) g(wrong?) 274
3937 y(There) h(app) s(ears) f(to) i(b) s(e) f(a) g(problem) f(when) g
(using) h(the) g(mpatrol) h(DLL) f(and) f(the) h(static) i(v) m(ersion)
f(of) f(the) 274 4037 y(Microsoft) h(C) f(run-time) f(library) -8
b(,) 32 b(and) f(also) h(a) g(problem) f(when) g(using) g(the) h
(static) h(v) m(ersion) f(of) g(mpatrol) 274 4136 y(and) f(the) g
(Microsoft) i(C) d(run-time) h(library) g(DLL.) g(Luc) m(kily) -8
b(,) 33 b(if) e(y) m(ou) g(ensure) f(that) i(y) m(ou) f(use) g(either) h
(b) s(oth) 274 4236 y(static) 39 b(libraries) e(or) g(b) s(oth) f(DLLs)
g(at) i(the) f(same) g(time) h(then) e(the) h(problem) g(should) e(go) j
(a) m(w) m(a) m(y) -8 b(.) 62 b(There) 274 4336 y(do) s(esn't) 30
b(seem) f(to) h(b) s(e) f(an) g(easier) h(w) m(a) m(y) h(around) d(it) i
(at) g(this) f(time) h(or,) g(for) f(that) h(matter,) h(an) e
(explanation) 274 4435 y(for) i(wh) m(y) f(it) g(happ) s(ens.) 98
4563 y(10.) 61 b(Wh) m(y) 31 b(are) g(mpatrol) g(library) f(functions) g
(not) g(called) i(from) e(shared) f(libraries) i(on) f(AIX?) 274
4691 y(AIX) k(uses) f(static) j(shared) c(libraries) i(instead) g(of) g
(dynamic) f(shared) g(libraries,) i(whic) m(h) e(means) h(that) g(all)
274 4791 y(shared) 24 b(library) h(bindings) e(are) i(resolv) m(ed) g
(at) h(link) e(time) i(rather) e(than) g(load) i(time) f(\(i.e.) h(y) m
(ou) f(m) m(ust) f(sp) s(ecify) 274 4891 y(whic) m(h) e(shared) f
(libraries) h(resolv) m(e) h(all) g(of) f(the) g(unde\014ned) d(sym) m
(b) s(ols) j(that) g(result) g(when) f(building) g(a) h(shared) 274
4990 y(library\).) 41 b(If) 28 b(y) m(ou) h(w) m(ould) g(lik) m(e) h
(mpatrol) g(library) e(functions) h(to) h(b) s(e) e(called) i(from) f
(a) g(shared) f(library) -8 b(,) 30 b(y) m(ou) 274 5090
y(m) m(ust) 39 b(rebuild) e(the) h(shared) g(library) g(with) g(`) p
Fl(-lmpatrol) p Fo(') e(on) j(the) f(link) g(line.) 65
b(Ho) m(w) m(ev) m(er,) 43 b(this) 38 b(means) 274 5190
y(that) 31 b(y) m(ou) f(cannot) h(o) m(v) m(erride) p
Fl 31 w(malloc\(\)) p Fo(,) d(etc.,) k(in) d(shared) g(libraries) h
(that) h(y) m(ou) f(cannot) h(rebuild) e(unless) 274
5289 y(y) m(ou) i(link) g(statically) h(with) e(the) h(arc) m(hiv) m(e)
h(library) e(v) m(ersions) h(instead.) p Fn 94 5564 a(J.4) 69
b(Running) p 90 rotate dyy eop
%%Page: 208 214
208 213 bop Fo 94 -116 a(208) 3332 b(mpatrol) 144 365
y(1.) 60 b(I'v) m(e) 41 b(just) e(link) m(ed) g(and) g(run) f(m) m(y) h
(program) h(with) f(the) g(mpatrol) h(library) -8 b(,) 42
b(but) c(the) i(resulting) f(log) i(\014le) 274 465 y(do) s(esn't) k
(con) m(tain) h(an) m(y) e(useful) g(information.) 83
b(Wh) m(y) 45 b(do) s(es) f(it) h(not) g(con) m(tain) h(a) f(list) g
(of) g(all) g(memory) 274 565 y(transactions) 32 b(or) e(sho) m(w) g
(an) m(y) h(unfreed) e(memory) h(allo) s(cations?) 274
691 y(By) h(default,) f(the) g(mpatrol) g(library) g(will) g(only) g
(write) g(a) g(summary) f(of) h(library) f(settings) i(and) e
(statistics) 274 791 y(to) d(the) f(log) h(\014le,) h(and) d(that) h
(will) h(only) f(o) s(ccur) f(on) h(successful) g(program) g
(termination) g(\(i.e.) i(when) p Fl 24 w(exit\(\)) p
Fo 274 891 a(is) i(called\).) 42 b(If) 28 b(this) g(do) s(es) g(not) h
(app) s(ear) f(then) g(it) h(is) f(lik) m(ely) i(that) f(y) m(our) g
(program) f(\(or) h(some) g(other) f(library) 274 990
y(function\)) 35 b(called) p Fl 35 w(abort\(\)) p Fo
32 w(due) e(to) i(a) f(fatal) i(error.) 51 b(Ho) m(w) m(ev) m(er,) 37
b(there) d(are) h(a) f(m) m(ultitude) g(of) g(di\013eren) m(t) 274
1090 y(options) 39 b(that) g(y) m(ou) g(can) f(pass) g(to) h(the) g
(mpatrol) g(library) f(via) h(the) p Fl 38 w(MPATROL_OPTIONS) p
Fo 34 w(en) m(vironmen) m(t) 274 1189 y(v) -5 b(ariable) 23
b(that) g(will) g(allo) m(w) g(y) m(ou) g(to) f(con) m(trol) i(what) e
(is) g(logged) i(and) d(what) h(is) g(not.) 39 b(Note) 23
b(that) g(the) p Fl 22 w(mpatrol) p Fo 274 1289 a(command) 31
b(will) f(alw) m(a) m(ys) i(log) g(all) f(calls) h(to) f(allo) s(cate,)
i(reallo) s(cate) g(and) c(free) i(memory) f(b) m(y) g(default.) 144
1416 y(2.) 60 b(Wh) m(y) 24 b(do) s(es) f(m) m(y) h(C) p
Fl(++) p Fo 22 w(program) f(crash) g(at) h(program) g(termination) g
(when) e(it) i(is) f(link) m(ed) h(with) f(the) h(mpatrol) 274
1516 y(library) 30 b(and) g(it) h(app) s(ears) f(to) h(b) s(e) f(doing)
g(nothing) g(wrong?) 274 1642 y(If) c(y) m(our) g(program) g(con) m
(tains) h(\014le-scop) s(e) f(ob) 5 b(jects) 27 b(whose) f
(constructors) g(get) h(called) h(b) s(efore) p Fl 25
w(main\(\)) p Fo 25 w(and) 274 1742 y(whose) 41 b(destructors) g(get) h
(called) h(after) p Fl 41 w(main\(\)) p Fo 40 w(then) d(it) i(is) f
(lik) m(ely) h(that) g(one) f(of) h(these) f(destructors) 274
1842 y(is) h(allo) s(cating) i(memory) d(after) h(the) g(mpatrol) g
(library) f(has) g(terminated.) 75 b(This) 41 b(should) f(already) j(b)
s(e) 274 1941 y(resolv) m(ed) 36 b(if) e(y) m(ou) g(built) g(the) h
(mpatrol) f(library) g(on) g(a) h(platform) f(that) h(supp) s(orts) d
(`) p Fl(.init) p Fo(') h(and) h(`) p Fl(.fini) p Fo(') 274
2041 y(sections) h(or) f(if) g(y) m(ou) g(built) f(it) i(with) e(the) h
(GNU) g(compiler) h(or) e(a) i(C) p Fl(++) p Fo 32 w(compiler.) 52
b(Ho) m(w) m(ev) m(er,) 37 b(in) c(certain) 274 2140
y(circumstances) 26 b(this) g(ma) m(y) g(not) f(w) m(ork) g(so) h(y) m
(ou) g(ma) m(y) f(wish) g(to) h(try) f(terminating) h(the) g(mpatrol) f
(library) g(b) m(y) 274 2240 y(getting) k(it) e(to) h(register) g
(itself) f(with) p Fl 27 w(atexit\(\)) p Fo 24 w(instead,) h(whic) m(h)
f(will) g(hop) s(efully) f(resolv) m(e) i(the) f(problem.) 274
2340 y(Y) -8 b(ou) 38 b(can) g(do) f(this) g(b) m(y) g(rebuilding) f
(the) i(mpatrol) f(library) g(with) g(the) p Fl 37 w(MP_USE_ATEXIT) p
Fo 34 w(prepro) s(cessor) 274 2439 y(macro) 31 b(de\014ned.) 144
2566 y(3.) 60 b(I) 35 b(link) m(ed) f(m) m(y) h(program) f(with) g(the)
g(mpatrol) h(library) f(to) h(trace) h(all) f(of) f(its) h(memory) f
(op) s(erations,) i(suc) m(h) 274 2666 y(as) p Fl 31
w(memcpy\(\)) p Fo 28 w(and) p Fl 30 w(memcmp\(\)) p
Fo(,) 28 b(but) i(I) g(get) i(nothing) e(in) g(the) h(log) g(\014le.) 41
b(Wh) m(y) 31 b(is) f(this?) 274 2793 y(On) h(systems) g(that) g(do) g
(not) g(supp) s(ort) f(`) p Fl(.init) p Fo(') g(and) g(`) p
Fl(.fini) p Fo(') g(sections) i(or) f(are) h(not) p Fl
31 w(gcc) p Fo 30 w(or) f(C) p Fl(++) p Fo 30 w(based) 274
2892 y(then) k(the) g(memory) g(op) s(eration) g(functions) g(will) g
(not) g(automatically) j(initialise) e(the) f(mpatrol) g(library) 274
2992 y(since) h(on) f(man) m(y) g(systems) h(the) f(startup) g
(routines) g(call) h(them) g(v) m(ery) f(early) h(on.) 55
b(On) 34 b(suc) m(h) h(systems,) i(if) 274 3091 y(y) m(our) 25
b(program) f(do) s(es) g(not) h(call) g(an) m(y) g(memory) f(allo) s
(cation) j(functions) d(to) h(initialise) h(the) f(mpatrol) f(library)
274 3191 y(then) 35 b(y) m(ou) h(m) m(ust) f(explicitly) i(call) f(the)
p Fl 36 w(__mp_init\(\)) p Fo 32 w(function.) 55 b(All) 36
b(memory) f(op) s(eration) g(functions) 274 3291 y(follo) m(wing) d
(that) f(call) h(with) e(then) g(b) s(e) g(traced.) 144
3417 y(4.) 60 b(Wh) m(y) 31 b(do) s(es) f(the) h(`) p
Fl(USEDEBUG) p Fo(') d(option) j(not) g(w) m(ork) f(for) g(me?) 274
3544 y(Firstly) -8 b(,) 41 b(y) m(ou) d(ha) m(v) m(e) h(to) f(ensure) f
(that) h(y) m(ou) g(ha) m(v) m(e) h(built) e(the) h(mpatrol) g(library)
f(with) h(supp) s(ort) d(for) j(the) 274 3644 y(GNU) 23
b(BFD) h(ob) 5 b(ject) 23 b(\014le) g(access) g(library) f(b) m(y) g
(compiling) i(with) e(the) p Fl 22 w(FORMAT=FORMAT_BFD) p
Fo 18 w(prepro) s(cessor) 274 3744 y(macro) 30 b(de\014nition,) e(or) h
(y) m(ou) g(are) g(running) d(on) j(a) g(Windo) m(ws) f(platform.) 40
b(Secondly) -8 b(,) 30 b(y) m(ou) f(ha) m(v) m(e) g(to) h(ensure) 274
3843 y(that) 25 b(y) m(ou) g(ha) m(v) m(e) g(compiled) g(all) g(relev)
-5 b(an) m(t) 26 b(ob) 5 b(ject) 25 b(\014les) f(with) g(debugging) g
(information) h(enabled) f(\(usually) 274 3943 y(b) m(y) 29
b(adding) f(an) g(option) h(to) g(the) f(compiler) h(command) f
(line\),) i(although) f(the) f(mpatrol) h(library) f(do) s(es) g(not)
274 4042 y(need) 39 b(to) g(b) s(e) f(compiled) h(this) f(w) m(a) m(y)
-8 b(.) 66 b(The) 38 b(\014le) h(and) e(line) i(n) m(um) m(b) s(er) e
(information) i(will) g(hop) s(efully) e(then) 274 4142
y(app) s(ear) c(in) h(the) f(log) i(\014le) f(for) f(all) i(sym) m(b) s
(ols) e(that) h(ha) m(v) m(e) h(asso) s(ciated) g(debugging) e
(information.) 51 b(If) 33 b(none) 274 4242 y(of) c(the) f(ab) s(o) m
(v) m(e) h(suggestions) g(w) m(ork,) f(y) m(ou) h(ma) m(y) f(still) h
(b) s(e) e(able) i(to) f(get) i(this) d(information) i(with) e(the) p
Fl 28 w(mpsym) p Fo 274 4341 a(command.) 144 4468 y(5.) 60
b(Wh) m(y) 36 b(do) s(es) f(the) p Fl 36 w(mpatrol) p
Fo 33 w(command) h(ignore) g(the) f(curren) m(t) h(v) -5
b(alue) 36 b(of) f(the) p Fl 36 w(MPATROL_OPTIONS) p
Fo 31 w(en) m(vi-) 274 4568 y(ronmen) m(t) c(v) -5 b(ariable?) 274
4695 y(Because) 26 b(I) d(w) m(ould) h(most) h(lik) m(ely) g(get) g
(lots) g(of) f(bug) f(rep) s(orts) h(or) g(queries) f(from) h(p) s
(eople) g(who) f(had) h(forgotten) 274 4794 y(that) 42
b(they) f(had) g(set) g(some) h(options) f(in) g(the) g(en) m(vironmen)
m(t) h(v) -5 b(ariable) 42 b(and) e(had) h(then) f(not) i(seen) f(the)
274 4894 y(exp) s(ected) d(b) s(eha) m(viour) g(from) f(the) g(options)
h(they) g(sp) s(eci\014ed) f(to) h(the) p Fl 38 w(mpatrol) p
Fo 36 w(command.) 62 b(Recen) m(tly) -8 b(,) 274 4993
y(though,) 31 b(I'v) m(e) g(added) f(the) g(`) p Fl(--read-env) p
Fo(') e(option) j(so) g(that) g(this) f(can) h(b) s(e) e(ac) m(hiev) m
(ed.) 144 5120 y(6.) 60 b(Wh) m(y) 21 b(do) g(I) f(get) h(an) g(error) f
(from) g(the) g(dynamic) h(link) m(er) f(ab) s(out) h(not) f(b) s(eing)
g(able) h(to) h(lo) s(cate) g(`) p Fl(libiberty.so) p
Fo(') 274 5220 y(when) 30 b(I) g(use) g(the) h(`) p Fl(--dynamic) p
Fo(') d(option) j(with) f(the) p Fl 30 w(mpatrol) p Fo
29 w(command?) 274 5347 y(The) 24 b(GNU) g(libib) s(ert) m(y) f
(library) h(is) f(required) g(when) f(the) i(mpatrol) g(library) f(is) h
(build) e(with) i(supp) s(ort) d(for) j(the) 274 5446
y(GNU) i(BFD) h(library) d(but) h(is) g(unfortunately) g(only) g(a) m
(v) -5 b(ailable) 27 b(in) e(arc) m(hiv) m(e) i(form) d(on) h(man) m(y)
h(systems.) 39 b(See) 274 5546 y(the) 26 b(section) h(on) e(the) p
Fl 26 w(mpatrol) p Fo 24 w(command) g(\(see) h(Section) h(9.1) f([The) g
(mpatrol) f(command],) i(page) f(53\)) h(for) 274 5645
y(information) 34 b(on) e(ho) m(w) h(to) g(get) h(around) e(this) h
(problem,) g(either) g(b) m(y) g(em) m(b) s(edding) f(the) h(libib) s
(ert) m(y) f(library) p 90 rotate dyy eop
%%Page: 209 215
209 214 bop Fo 94 -116 a(App) s(endix) 29 b(J:) h(F) -8
b(requen) m(tly) 32 b(ask) m(ed) f(questions) 2056 b(209) 274
365 y(in) m(to) 32 b(the) e(mpatrol) g(library) g(when) f(y) m(ou) i
(are) f(building) g(it,) h(or) f(b) m(y) g(con) m(v) m(erting) i(the) e
(arc) m(hiv) m(e) i(form) d(of) i(the) 274 465 y(libib) s(ert) m(y) g
(library) f(in) m(to) h(its) g(corresp) s(onding) e(shared) h(library) g
(v) m(ersion.) 144 583 y(7.) 60 b(Wh) m(y) 43 b(do) s(es) f(the) h
(mpatrol) g(library) f(not) h(read) f(the) h(sym) m(b) s(ols) f(in) g
(m) m(y) h(executable) h(\014le) e(on) h(Windo) m(ws) 274
682 y(platforms?) 274 800 y(If) 23 b(the) g(mpatrol) g(library) f(w) m
(as) h(compiled) g(with) g(the) p Fl 23 w(FORMAT=FORMAT_PE) p
Fo 18 w(prepro) s(cessor) f(macro) h(de\014ned) 274 900
y(then) h(y) m(ou) f(m) m(ust) h(ensure) e(that) i(y) m(ou) g(compile) h
(y) m(our) e(\014les) g(with) h(debugging) f(information) h(enabled) f
(\(using) 274 999 y(the) f(`) p Fl(-Z7) p Fo(') e(or) h(`) p
Fl(-Zi) p Fo(') f(options) h(in) g(Visual) g(C) p Fl(++) p
Fo(\)) f(and) h(that) g(y) m(ou) g(tell) h(the) f(link) m(er) h(that) f
(y) m(ou) g(wish) f(to) i(preserv) m(e) 274 1099 y(the) g(debugging) f
(information) g(in) g(the) g(executable) h(\014le) f(\(using) g(the) g
(`) p Fl(-debug) p Fo(') f(and) h(`) p Fl(-pdb:none) p
Fo(') e(options) 274 1199 y(in) i(the) g(Microsoft) h(link) m(er\).) 39
b(Unfortunately) -8 b(,) 23 b(if) e(y) m(ou) g(do) g(not) g(do) g(this)
f(then) h(the) g(\014nal) f(executable) j(\014le) e(will) 274
1298 y(not) 31 b(ha) m(v) m(e) g(a) f(sym) m(b) s(ol) g(table) h(and) e
(so) i(the) f(mpatrol) g(library) g(cannot) g(giv) m(e) i(sym) m(b) s
(olic) e(stac) m(k) i(tracebac) m(ks.) 144 1416 y(8.) 60
b(Wh) m(y) 29 b(do) g(some) f(mpatrol) h(log) h(\014le) e(en) m(tries) h
(only) g(con) m(tain) g(a) g(partial) h(call) f(stac) m(k) h(rather) e
(than) g(follo) m(wing) 274 1516 y(the) j(function) f(call) i(stac) m
(k) g(bac) m(k) f(to) g(the) f(call) i(to) p Fl 31 w(main\(\)) p
Fo(?) 274 1633 y(This) k(could) g(b) s(e) g(b) s(ecause) h(the) f
(mpatrol) h(library) f(w) m(as) h(compiled) f(with) h(limited) g(call) g
(stac) m(k) h(tra) m(v) m(ersal) 274 1733 y(supp) s(ort) f(via) j(the) p
Fl 39 w(MP_BUILTINSTACK_SUPPORT) p Fo 32 w(con\014guration) f(macro.) 66
b(Ho) m(w) m(ev) m(er,) 43 b(it) c(could) g(also) 274
1833 y(mean) g(that) h(the) f(mpatrol) g(library) f(encoun) m(tered) i
(a) f(corrupt) f(frame) h(p) s(oin) m(ter) g(when) f(tra) m(v) m
(ersing) i(the) 274 1932 y(call) 35 b(stac) m(k) f(and) e(had) h(to) g
(terminate) h(the) f(recursion.) 48 b(The) 33 b(frame) g(p) s(oin) m
(ter) p Fi 33 w(must) p Fo 42 w(b) s(e) f(preserv) m(ed) g(from) 274
2032 y(function) f(to) h(function) f(on) g(most) h(platforms,) f
(otherwise) h(the) f(stac) m(k) i(cannot) f(b) s(e) e(tra) m(v) m
(ersed.) 45 b(See) 31 b(y) m(our) 274 2131 y(compiler) g(man) m(ual) g
(for) f(further) f(details.) 144 2249 y(9.) 60 b(I) 25
b(am) g(trying) f(to) i(use) e(the) p Fl 25 w(mpatrol) p
Fo 22 w(command) h(to) g(debug) f(an) h(executable) h(\014le) e(that) i
(w) m(as) f(not) g(originally) 274 2349 y(compiled) 34
b(with) f(the) g(mpatrol) h(library) -8 b(.) 49 b(Ho) m(w) m(ev) m(er,)
36 b(ev) m(en) e(though) f(it) g(runs) f(successfully) -8
b(,) 35 b(no) e(mpatrol) 274 2448 y(log) f(\014le) e(is) h(pro) s
(duced.) 39 b(Wh) m(y) 31 b(is) f(this?) 274 2566 y(First,) 41
b(c) m(hec) m(k) e(that) g(y) m(ou) f(are) h(passing) e(the) h(`) p
Fl(--dynamic) p Fo(') e(option) j(to) f(the) p Fl 39
w(mpatrol) p Fo 36 w(command) f(and,) 274 2666 y(if) 44
b(necessary) -8 b(,) 48 b(the) 43 b(`) p Fl(--threads) p
Fo(') f(option) i(as) g(w) m(ell.) 81 b(If) 43 b(that) h(do) s(esn't) f
(w) m(ork) g(then) h(c) m(hec) m(k) h(that) f(the) 274
2765 y(executable) 34 b(\014le) f(has) f(b) s(een) f(dynamically) i
(link) m(ed;) h(statically) h(link) m(ed) e(executables) g(cannot) g(b)
s(e) f(forced) 274 2865 y(to) 27 b(use) f(the) g(mpatrol) g(library) -8
b(.) 39 b(If) 26 b(it) g(still) h(do) s(esn't) f(w) m(ork) g(then) f
(it) i(ma) m(y) f(b) s(e) f(that) i(the) f(dynamic) g(link) m(er) g(on)
274 2965 y(y) m(our) f(system) g(do) s(esn't) g(ha) m(v) m(e) h(the) f
(abilit) m(y) i(to) e(preload) g(an) m(y) h(shared) e(libraries) h
(that) g(ha) m(v) m(e) h(b) s(een) f(sp) s(eci\014ed) 274
3064 y(in) 31 b(a) f(sp) s(ecial) h(en) m(vironmen) m(t) g(v) -5
b(ariable,) 32 b(in) e(whic) m(h) g(case) h(y) m(ou) g(can't) g(use) f
(this) h(feature.) 98 3182 y(10.) 61 b(I) 33 b(am) g(attempting) h(to) g
(run) d(a) i(m) m(ultithreaded) g(C) p Fl(++) p Fo 32
w(program) g(with) f(the) h(mpatrol) g(library) g(on) f(Lin) m(ux.) 274
3282 y(Ho) m(w) m(ev) m(er,) h(m) m(y) e(program) g(crashes) f(b) s
(efore) p Fl 30 w(main\(\)) p Fo 29 w(and) g(the) h(debugger) f(sho) m
(ws) h(that) g(the) g(failure) g(is) f(in) p Fl 274 3381
a(__sigaction\(\)) p Fo 31 w(whic) m(h) k(is) h(called) h(from) p
Fl 34 w(__mp_initsignals\(\)) p Fo(.) 47 b(Is) 35 b(the) f(fault) h
(with) f(the) h(mpatrol) 274 3481 y(library?) 274 3599
y(There) c(ha) m(v) m(e) h(b) s(een) e(man) m(y) h(rep) s(orts) f(of) h
(this) f(problem) g(and) h(it) g(turns) e(out) i(to) h(b) s(e) e(an) h
(issue) f(with) h(shared) 274 3698 y(library) 40 b(dep) s(endencies.) 70
b(ELF) 40 b(shared) g(libraries) g(ma) m(y) h(con) m(tain) h
(initialisation) h(functions) d(that) h(are) 274 3798
y(executed) c(b) s(efore) p Fl 35 w(main\(\)) p Fo(.) 53
b(Ho) m(w) m(ev) m(er,) 39 b(sometimes) d(the) g(order) f(in) g(whic) m
(h) g(these) g(functions) g(are) h(exe-) 274 3898 y(cuted) e(is) f
(critical.) 51 b(In) 33 b(this) g(case) h(it) g(is) g(lik) m(ely) g
(that) g(the) g(mpatrol) f(and) g(pthreads) f(libraries) i(are) f(b) s
(eing) 274 3997 y(initialised) 39 b(in) f(the) f(wrong) h(order.) 61
b(Y) -8 b(ou) 39 b(m) m(ust) e(ensure) g(that) h(`) p
Fl(-lpthread) p Fo(') d(app) s(ears) i(near) h(the) g(v) m(ery) 274
4097 y(end) 32 b(of) g(the) h(link) f(line) g(after) h(all) g(user) e
(libraries,) i(and) f(y) m(ou) g(m) m(ust) g(also) h(ensure) e(that) i
(none) f(of) g(the) h(user) 274 4196 y(libraries) i(ha) m(v) m(e) g(a) g
(dep) s(endency) e(on) h(`) p Fl(libpthread.so) p Fo('.) 49
b(Y) -8 b(ou) 35 b(can) g(v) m(erify) f(this) h(b) m(y) f(running) e
(the) p Fl 35 w(ldd) p Fo 274 4296 a(command) f(on) f(them.) 98
4414 y(11.) 61 b(I) 30 b(kno) m(w) h(that) f(there's) h(a) f
(de\014nite) h(heap) f(corruption) f(problem) h(in) g(m) m(y) g
(program) g(as) h(it) f(k) m(eeps) h(crashing) 274 4513
y(in) 37 b(unrelated) f(co) s(de) h(due) e(to) j(p) s(oin) m(ter) e
(corruption,) i(and) e(when) f(I) h(link) h(with) f(the) h(mpatrol) f
(library) g(it) 274 4613 y(stops) 31 b(crashing.) 41
b(What) 31 b(can) f(I) g(do?) 274 4731 y(T) -8 b(ry) 32
b(as) h(man) m(y) f(of) h(the) g(relev) -5 b(an) m(t) 33
b(mpatrol) g(run-time) f(options) g(as) h(p) s(ossible) f(and) g(mak) m
(e) h(sure) f(that) h(y) m(ou) 274 4830 y(closely) 28
b(examine) e(the) g(mpatrol) g(log) h(\014le) e(for) h(w) m(arnings) f
(and) g(errors) g(|) h(y) m(our) f(problem) h(ma) m(y) g(ha) m(v) m(e) h
(b) s(een) 274 4930 y(noticed) g(b) m(y) f(the) g(mpatrol) g(library) g
(but) f(it) h(ma) m(y) h(not) f(ha) m(v) m(e) h(considered) f(it) g(a) g
(fatal) h(error) f(and) f(con) m(tin) m(ued) 274 5030
y(execution.) 55 b(If) 34 b(this) g(still) h(do) s(esn't) f(sho) m(w) h
(up) e(an) m(ything) i(then) f(y) m(ou) h(can) g(probably) e(rest) i
(assured) e(that) 274 5129 y(y) m(ou) 39 b(ha) m(v) m(e) h(a) e(memory)
g(corruption) g(problem) g(but) f(y) m(ou) i(ma) m(y) g(need) f(to) h
(use) f(a) g(commercial) i(pro) s(duct) 274 5229 y(suc) m(h) f(as) h
(Purify) e(to) i(isolate) i(it.) 68 b(If) 39 b(that) g(fails) h(then) f
(y) m(ou'll) i(just) d(ha) m(v) m(e) j(to) f(emplo) m(y) g(the) g
(traditional) 274 5329 y(debugging) 32 b(metho) s(d) e(of) h
(single-stepping) h(through) f(y) m(our) g(program) g(in) g(a) g
(debugger) g(un) m(til) g(something) 274 5428 y(un) m(usual) f(or) g
(unexp) s(ected) g(happ) s(ens.) 98 5546 y(12.) 61 b(If) 32
b(I) g(link) g(m) m(y) h(program) f(to) g(v) m(ersion) h(1.0) g(of) g
(the) f(mpatrol) h(library) e(then) h(I) g(cannot) h(in) m(terrupt) f
(it) g(using) 274 5645 y(the) f(k) m(eyb) s(oard,) g(whic) m(h) f(I) g
(w) m(ould) g(normally) g(b) s(e) g(able) h(to) g(do) f(without) h
(using) f(mpatrol.) 41 b(Is) 30 b(this) g(a) h(bug?) p
90 rotate dyy eop
%%Page: 210 216
210 215 bop Fo 94 -116 a(210) 3332 b(mpatrol) 274 365
y(Not) 36 b(really) -8 b(,) 38 b(but) c(it) h(is) g(undesirable) f(b) s
(eha) m(viour) g(in) g(most) i(cases,) h(whic) m(h) d(is) h(wh) m(y) f
(it) h(w) m(as) h(remo) m(v) m(ed) f(in) 274 465 y(later) c(releases) g
(of) f(mpatrol) h(and) e(replaced) h(with) g(the) g(`) p
Fl(SAFESIGNALS) p Fo(') d(option.) 41 b(The) 29 b(reason) h(that) h
(the) 274 565 y(program) h(could) f(not) h(b) s(e) e(in) m(terrupted) h
(using) g(the) h(k) m(eyb) s(oard) f(w) m(as) h(that) f(mpatrol) h(w) m
(ould) f(ignore) h(suc) m(h) 274 664 y(signals) 24 b(when) e(its) i
(library) f(co) s(de) g(w) m(as) h(b) s(eing) e(executed,) k(otherwise)
e(user-de\014ned) d(signal) j(handlers) e(that) 274 764
y(used) p Fl 28 w(malloc\(\)) p Fo 27 w(and) 28 b(related) h(functions)
f(w) m(ould) h(ha) m(v) m(e) h(the) f(capabilit) m(y) h(to) f(cause) g
(lots) h(of) f(undesirable) 274 863 y(side) 42 b(e\013ects.) 76
b(Ho) m(w) m(ev) m(er,) 47 b(this) 42 b(do) s(es) f(not) h(normally) g
(happ) s(en,) i(whic) m(h) d(is) h(wh) m(y) f(the) h(b) s(eha) m(viour)
g(w) m(as) 274 963 y(mo) m(v) m(ed) 32 b(to) f(an) f(option) h(for) f
(those) h(that) g(needed) f(it.) 98 1083 y(13.) 61 b(Wh) m(y) 36
b(do) s(es) f(mpatrol) h(not) f(rep) s(ort) g(an) g(illegal) j(memory) d
(access) i(when) d(it) i(can) g(b) s(e) e(detected) j(b) m(y) e(a) h
(de-) 274 1182 y(bugger?) 274 1302 y(First) f(of) e(all,) j(illegal) g
(memory) e(accesses) h(can) f(only) g(b) s(e) f(detected) i(on) f
(systems) f(that) i(supp) s(ort) d(virtual) 274 1401
y(memory) -8 b(,) 45 b(so) d(that) g(precludes) f(AmigaOS) g(and) g
(Net) m(w) m(are.) 76 b(Secondly) -8 b(,) 45 b(it) d(migh) m(t) g(b) s
(e) e(p) s(ossible) h(that) 274 1501 y(something) 34
b(is) f(o) m(v) m(erriding) h(the) g(illegal) h(memory) e(access) i
(handler) d(that) i(mpatrol) f(sets) h(up) e(when) g(it) i(is) 274
1601 y(\014rst) 23 b(initialised.) 40 b(If) 23 b(y) m(our) h(program,) h
(or) e(an) g(external) i(library) -8 b(,) 25 b(sets) f(up) f(a) g
(signal) i(handler) d(that) j(handles) p Fl 274 1700
a(SIGBUS) p Fo 26 w(or) p Fl 27 w(SIGSEGV) p Fo 25 w(\(or) i(their) g
(equiv) -5 b(alen) m(t) 29 b(on) e(Windo) m(ws) g(platforms\)) g(then) g
(mpatrol) g(will) g(no) g(longer) 274 1800 y(b) s(e) i(able) g(to) h
(catc) m(h) g(illegal) h(memory) e(accesses.) 42 b(Y) -8
b(ou) 29 b(can) g(either) h(try) e(to) i(liv) m(e) g(with) f(that,) h
(or) f(y) m(ou) g(could) 274 1900 y(try) i(disabling) f(the) h(o) m(v) m
(erriding) g(handlers.) 98 2019 y(14.) 61 b(Ho) m(w) 34
b(do) f(I) g(set) h(a) f(breakp) s(oin) m(t) g(on) g(the) p
Fl 34 w(malloc\(\)) p Fo 30 w(function) g(when) f(it) i(is) f(implemen)
m(ted) h(as) f(a) h(prepro-) 274 2119 y(cessor) d(macro) g(in) f(`) p
Fl(mpatrol.h) p Fo('?) 274 2238 y(There) 41 b(are) g(four) f
(di\013eren) m(t) i(mpatrol) f(in) m(terface) i(functions) d(whic) m(h)
h(are) g(used) f(to) i(allo) s(cate) h(memory) -8 b(,) 274
2338 y(duplicate) 39 b(strings,) g(reallo) s(cate) h(memory) d(and) g
(deallo) s(cate) j(memory) -8 b(.) 63 b(If) 37 b(y) m(ou) h(lo) s(ok) g
(in) f(`) p Fl(mpatrol.h) p Fo(') 274 2438 y(y) m(ou) e(should) f(b) s
(e) f(able) i(to) g(see) g(the) g(name) g(of) f(the) h(function) f
(that) h(will) g(b) s(e) e(called) j(when) d(the) i(macro) g(is) 274
2537 y(in) m(v) m(ok) m(ed.) 43 b(The) 30 b(same) g(go) s(es) h(for) f
(the) h(memory) f(op) s(eration) h(functions.) 98 2657
y(15.) 61 b(I'v) m(e) 35 b(link) m(ed) g(and) e(run) g(m) m(y) h
(program) g(with) g(mpatrol) g(under) f(UNIX) h(and) f(it) i(uses) f(a)
g(large) h(amoun) m(t) g(of) 274 2756 y(heap) g(memory) -8
b(.) 55 b(Ho) m(w) m(ev) m(er,) 38 b(it) e(crashes) f(near) f(the) i
(end) e(of) h(execution) h(and) e(then) h(pro) s(ceeds) f(to) i(freeze)
274 2856 y(up) 30 b(the) g(whole) h(system,) g(sometimes) g(requiring) f
(a) h(reb) s(o) s(ot.) 40 b(What) 31 b(am) g(I) f(doing) g(wrong?) 274
2976 y(The) f(most) g(common) g(p) s(ossible) f(explanation) i(for) e
(this) h(is) g(that) g(y) m(ou) g(are) g(running) e(y) m(our) i
(program) f(with) 274 3075 y(to) s(o) 39 b(m) m(uc) m(h) f(access) h
(to) f(system) g(resources.) 63 b(What) 38 b(is) g(lik) m(ely) h(to) g
(b) s(e) e(happ) s(ening) f(is) i(that) g(when) f(y) m(our) 274
3175 y(program) f(crashes) g(the) g(system) h(attempts) f(to) h(dump) d
(the) j(en) m(tire) f(pro) s(cess) g(image) h(to) g(a) f(core) h
(\014le) f(for) 274 3274 y(later) e(debugging) e(in) g(a) h(non-sym) m
(b) s(olic) f(debugger.) 47 b(If) 32 b(the) g(pro) s(cess) g(has) g(a) h
(h) m(uge) f(heap) h(then) f(the) g(core) 274 3374 y(\014le) k(is) g
(also) h(going) g(to) g(b) s(e) e(h) m(uge,) j(th) m(us) d(resulting) h
(in) g(a) g(massiv) m(e) h(\014le) f(that) g(ma) m(y) h(lead) f(to) h
(the) f(system) 274 3474 y(thrashing) 31 b(while) g(it) h(attempts) g
(to) g(write) f(it) h(to) f(the) h(disk.) 42 b(T) -8
b(ec) m(hnically) g(,) 34 b(the) d(system) g(has) g(not) h(frozen,) 274
3573 y(but) 40 b(it) g(is) g(lik) m(ely) h(to) g(tak) m(e) g(a) g(long)
f(time) h(to) f(\014nish) f(writing) g(the) h(\014le.) 70
b(The) 39 b(b) s(est) g(solution) i(in) m(v) m(olv) m(es) 274
3673 y(setting) 30 b(y) m(our) f(program's) g(maxim) m(um) f(core) i
(\014le) f(size) g(to) h(a) f(reasonable) h(limit) f(\(or) g(just) f
(zero\),) j(and) d(also) 274 3773 y(p) s(ossibly) 38
b(limiting) i(y) m(our) f(program's) g(maxim) m(um) g(data) g(segmen) m
(t) h(size) g(as) f(w) m(ell.) 67 b(These) 39 b(can) g(b) s(e) f(set)
274 3872 y(from) 30 b(the) h(shell) g(but) e(the) i(exact) h(details) f
(on) f(ho) m(w) h(to) g(do) f(this) g(di\013er) g(b) s(et) m(w) m(een) h
(shells.) 98 3992 y(16.) 61 b(Wh) m(y) 31 b(do) s(es) f(m) m(y) h
(program) f(run) f(so) h(slo) m(wly) i(after) f(I) f(link) g(it) h
(with) f(the) h(mpatrol) f(library?) 274 4111 y(Normal) j(mallo) s(c) g
(libraries) g(are) f(optimised) h(for) f(sp) s(eed) f(but) g(will) i(t)
m(ypically) h(fall) f(o) m(v) m(er) g(at) g(the) f(sligh) m(test) 274
4211 y(hin) m(t) 42 b(of) g(an) f(error.) 73 b(Debugging) 43
b(mallo) s(c) f(libraries) g(are) g(written) f(to) h(pro) m(vide) g(as)
f(m) m(uc) m(h) h(debugging) 274 4311 y(information) 37
b(as) g(p) s(ossible) f(whilst) h(p) s(erforming) e(a) i(m) m(ultitude)
g(of) f(additional) i(c) m(hec) m(ks,) i(whic) m(h) c(is) g(wh) m(y) 274
4410 y(they) k(ma) m(y) g(run) d(m) m(uc) m(h) j(slo) m(w) m(er.) 68
b(Ho) m(w) m(ev) m(er,) 44 b(y) m(ou) 39 b(can) h(con) m(trol) g(whic) m
(h) f(c) m(hec) m(ks) i(are) f(p) s(erformed) d(\(and) 274
4510 y(when\)) 29 b(b) m(y) g(using) g(the) p Fl 29 w(MPATROL_OPTIONS) p
Fo 26 w(en) m(vironmen) m(t) g(v) -5 b(ariable.) 42 b(P) m(erformance)
29 b(ma) m(y) h(also) g(b) s(e) f(lost) 274 4609 y(if) 24
b(y) m(ou) h(mak) m(e) g(lots) g(of) f(small) g(memory) g(allo) s
(cations) j(rather) c(than) h(few) m(er) h(larger) f(allo) s(cations,) k
(but) 23 b(that) i(is) 274 4709 y(mainly) k(due) f(to) i(the) e(o) m(v)
m(erhead) i(of) f(storing) g(the) g(extra) g(tracing) h(details) g(for)
e(eac) m(h) i(memory) e(allo) s(cation.) 98 4829 y(17.) 61
b(My) 32 b(program) e(is) h(written) g(in) g(C) p Fl(++) p
Fo 30 w(and) f(is) h(link) m(ed) g(to) h(the) f(mpatrol) g(library) -8
b(,) 31 b(but) f(ho) m(w) h(do) g(I) g(go) g(ab) s(out) 274
4928 y(demangling) h(the) f(C) p Fl(++) p Fo 29 w(sym) m(b) s(ol) g
(names) g(that) g(are) g(sho) m(wn) f(in) h(the) g(stac) m(k) h
(tracebac) m(ks) g(in) f(the) g(resulting) 274 5028 y(log) h(\014le?)
274 5147 y(Because) 38 b(there) e(is) f(no) h(standard) f(w) m(a) m(y) i
(of) f(mangling) g(C) p Fl(++) p Fo 35 w(sym) m(b) s(ol) f(names,) j(v)
-5 b(arious) 35 b(compilers) i(and) 274 5247 y(op) s(erating) c
(systems) g(ha) m(v) m(e) h(tak) m(en) f(di\013eren) m(t) g(approac) m
(hes) h(to) f(C) p Fl(++) p Fo 31 w(name) g(mangling,) h(man) m(y) f
(of) f(whic) m(h) 274 5347 y(di\013er) d(signi\014can) m(tly) h(from) e
(the) h(metho) s(d) f(suggested) h(in) p Fi 29 w(The) i(A) n(nnotate) -5
b(d) 32 b(C) p Fl(++) p Fi 31 w(R) -5 b(efer) g(enc) g(e) 31
b(Manual) p Fo 39 w(b) m(y) 274 5446 y(Margaret) 36 b(Ellis) e(and) g
(Bjarne) g(Stroustrup.) 50 b(Ho) m(w) m(ev) m(er,) 37
b(most) d(compilers) h(come) f(with) g(a) g(demangling) 274
5546 y(to) s(ol) d(whic) m(h) e(can) g(b) s(e) g(used) f(in) h(a) g
(command) g(pip) s(e) g(to) h(accept) g(mangled) g(names) f(on) g(its) h
(standard) e(input) 274 5645 y(\014le) 35 b(stream) h(and) e(demangle) h
(them) g(on) g(its) g(standard) f(output) h(\014le) g(stream,) h(and) f
(so) g(can) g(b) s(e) f(used) g(to) p 90 rotate dyy eop
%%Page: 211 217
211 216 bop Fo 94 -116 a(App) s(endix) 29 b(J:) h(F) -8
b(requen) m(tly) 32 b(ask) m(ed) f(questions) 2056 b(211) 274
365 y(pro) s(cess) 24 b(the) h(mpatrol) f(log) h(\014le.) 39
b(Note) 26 b(that) f(mpatrol) f(automatically) j(demangles) e(C) p
Fl(++) p Fo 23 w(sym) m(b) s(ol) f(names) 274 465 y(on) h(Windo) m(ws) f
(platforms) h(as) g(Microsoft's) h(name) e(mangling) h(is) g(quite) g
(unreadable) f(and) g(w) m(ould) g(b) s(e) g(hard) 274
565 y(to) 32 b(demangle) f(using) f(a) g(command) g(line) h(to) s(ol.)
98 694 y(18.) 61 b(Wh) m(y) 31 b(do) s(es) f(m) m(y) h(program) f(not) h
(stop) f(when) f(the) i(mpatrol) g(library) f(notices) h(an) f(error?)
274 823 y(The) 35 b(library) f(w) m(as) i(written) f(to) g(giv) m(e) h
(as) g(m) m(uc) m(h) f(information) g(as) g(p) s(ossible) f(and) h(so) g
(sometimes,) i(when) 274 922 y(a) e(non-fatal) h(error) e(is) h(disco) m
(v) m(ered,) i(the) d(library) g(will) h(write) g(the) g(error) f
(message) h(to) h(the) e(log) i(\014le) f(and) 274 1022
y(con) m(tin) m(ue) 45 b(in) f(the) f(hop) s(e) g(of) h(b) s(eing) f
(able) h(to) h(unco) m(v) m(er) f(more) g(errors) f(during) f(the) i
(execution) h(of) f(the) 274 1122 y(program.) 70 b(This) 39
b(means) g(that) i(y) m(ou) f(should) f(alw) m(a) m(ys) i(c) m(hec) m
(k) h(the) e(n) m(um) m(b) s(er) f(of) h(w) m(arnings) f(and) g(errors)
274 1221 y(giv) m(en) 34 b(in) e(the) g(summary) f(at) i(the) g(end) e
(of) i(program) f(execution,) i(and) d(then) h(searc) m(h) h(bac) m(kw)
m(ards) g(in) f(the) 274 1321 y(log) g(\014le) e(for) h(`) p
Fl(WARNING) p Fo(') d(or) j(`) p Fl(ERROR) p Fo('.) 98
1450 y(19.) 61 b(I) 31 b(ha) m(v) m(e) i(link) m(ed) e(m) m(y) h
(program) e(with) h(the) h(mpatrol) f(library) g(on) g(an) g(Amiga) h
(or) f(Net) m(w) m(are) i(mac) m(hine,) g(but) 274 1550
y(when) d(it) h(runs) e(it) h(still) i(crashes) e(the) h(en) m(tire) g
(system.) 41 b(Wh) m(y) 31 b(is) f(this?) 274 1679 y(AmigaOS) f(and) e
(Net) m(w) m(are) k(do) d(not) g(ha) m(v) m(e) h(virtual) g(memory) f
(and) f(so) i(do) f(not) g(ha) m(v) m(e) i(memory) e(protection) 274
1779 y(turned) 22 b(on) h(b) m(y) g(default.) 38 b(This) 22
b(means) h(that) h(an) m(y) f(rogue) g(write) h(to) f(an) g(erroneous) g
(address) f(ma) m(y) h(actually) 274 1878 y(o) m(v) m(erwrite) 33
b(the) e(data) g(of) g(another) h(pro) s(cess) e(or) h(p) s(erhaps) e
(ev) m(en) i(the) g(op) s(erating) h(system,) f(th) m(us) f(bringing)
274 1978 y(the) 38 b(en) m(tire) h(mac) m(hine) g(do) m(wn.) 62
b(There) 37 b(are) h(sev) m(eral) h(third-part) m(y) f(system) g
(utilities) h(a) m(v) -5 b(ailable) 40 b(for) e(the) 274
2077 y(Amiga) 43 b(to) f(add) f(memory) h(protection) h(to) f(mac) m
(hines) g(with) f(built-in) h(MMUs,) j(whic) m(h) c(can) h(then) g(b) s
(e) 274 2177 y(used) 32 b(in) g(conjunction) h(with) f(mpatrol.) 47
b(I'm) 32 b(not) h(sure) f(ab) s(out) g(the) h(a) m(v) -5
b(ailabilit) m(y) 36 b(of) c(suc) m(h) g(soft) m(w) m(are) i(for) 274
2277 y(Net) m(w) m(are.) 98 2406 y(20.) 61 b(I) 36 b(ha) m(v) m(e) h
(built) f(the) g(mpatrol) g(library) g(with) p Fl 35
w(gcc) p Fo 35 w(on) g(AmigaOS) g(and) g(ha) m(v) m(e) h(successfully) f
(link) m(ed) g(it) g(to) 274 2505 y(m) m(y) c(program.) 44
b(Ho) m(w) m(ev) m(er,) 34 b(wh) m(y) d(are) h(none) f(of) h(the) f
(options) h(in) f(the) p Fl 32 w(MPATROL_OPTIONS) p Fo
27 w(en) m(vironmen) m(t) 274 2605 y(v) -5 b(ariable) 32
b(recognised) f(when) e(I) h(run) f(it?) 274 2734 y(The) p
Fl 23 w(getenv\(\)) p Fo 22 w(function) 23 b(in) g(the) h(GNU) g(C) f
(library) g(is) g(not) h(compatible) h(with) e(the) h(AmigaDOS) p
Fl 24 w(SetEnv) p Fo 274 2834 a(and) p Fl 23 w(GetEnv) p
Fo 21 w(commands) f(since) g(it) h(do) s(es) e(not) h(treat) h(en) m
(vironmen) m(t) g(v) -5 b(ariables) 24 b(as) f(\014les) g(lo) s(cated) h
(in) f(`) p Fl(ENV:) p Fo(') 274 2933 y(and) 32 b(is) g(only) g
(compatible) h(with) f(soft) m(w) m(are) i(that) e(uses) g(the) g(ixem)
m(ul) g(library) -8 b(.) 46 b(Ho) m(w) m(ev) m(er,) 35
b(the) p Fl 32 w(env) p Fo 31 w(com-) 274 3033 y(mand) c(that) h(comes)
g(with) f(most) g(GNU) h(soft) m(w) m(are) h(distributions) d(allo) m
(ws) j(y) m(ou) e(to) h(set) g(an) f(en) m(vironmen) m(t) 274
3133 y(v) -5 b(ariable) 32 b(that) f(the) f(GNU) p Fl
31 w(getenv\(\)) p Fo 28 w(function) g(can) h(read) f(when) g(y) m(ou) g
(are) h(running) e(in) h(AmigaDOS.) 98 3262 y(21.) 61
b(Ho) m(w) 32 b(do) e(I) g(suppress) e(all) k(diagnostic) f(output) f
(from) g(the) h(mpatrol) g(library?) 274 3391 y(Y) -8
b(ou) 41 b(can) f(do) g(this) g(b) m(y) g(setting) h(the) f(mpatrol) g
(log) h(\014le) f(to) h(b) s(e) e(y) m(our) h(system's) p
Fi 40 w(bit) h(bucket) p Fo(,) h(whic) m(h) e(is) 274
3491 y(`) p Fl(/dev/null) p Fo(') 34 b(on) h(UNIX) h(platforms) f(and) g
(`) p Fl(NIL:) p Fo(') g(on) g(AmigaOS.) h(There) f(do) s(esn't) g(app)
s(ear) g(to) h(b) s(e) f(an) 274 3590 y(equiv) -5 b(alen) m(t) 32
b(w) m(a) m(y) g(to) f(do) f(this) g(on) h(Windo) m(ws) f(or) g(Net) m
(w) m(are.) p Fn 94 3871 a(J.5) 69 b(Files) p Fo 144
4063 a(1.) 60 b(Wh) m(y) 31 b(is) g(there) f(a) h(`) p
Fl(libmpatrol.o) p Fo(') c(target) 32 b(in) e(the) h(UNIX) g(and) e
(Amiga) j(`) p Fl(Makefile) p Fo('s?) 274 4192 y(This) 24
b(is) h(simply) f(used) g(to) h(build) f(the) h(mpatrol) g(library) f
(as) h(one) g(large) h(ob) 5 b(ject) 25 b(\014le) g(for) f(full) h
(incorp) s(oration) 274 4291 y(in) m(to) 33 b(other) f(libraries) f
(and) g(w) m(as) h(used) f(during) f(the) i(dev) m(elopmen) m(t) h(of) f
(mpatrol.) 44 b(On) 31 b(UNIX) h(platforms) 274 4391
y(some) i(link) m(ers) e(supp) s(ort) f(the) i(`) p Fl(-r) p
Fo(') g(option) g(for) f(com) m(bining) h(man) m(y) g(ob) 5
b(ject) 33 b(\014les) g(in) m(to) g(one) g(large) h(ob) 5
b(ject) 274 4491 y(\014le,) 33 b(but) d(this) i(is) f(not) h(univ) m
(ersally) g(supp) s(orted,) e(hence) i(the) g(reason) f(for) h(using) f
(the) g(compiler) h(instead.) 274 4590 y(Because) 23
b(all) e(of) g(the) g(source) g(\014les) f(are) h(compiled) g(at) h
(once,) h(there) e(ma) m(y) h(b) s(e) e(con\015icts) h(with) f(system) h
(header) 274 4690 y(\014les) 39 b(when) p Fl 38 w(malloc\(\)) p
Fo 36 w(and) f(its) h(related) h(functions) e(are) h(b) s(eing) g
(compiled,) i(whic) m(h) e(is) f(wh) m(y) h(suc) m(h) f(an) 274
4789 y(ob) 5 b(ject) 23 b(\014le) e(is) g(not) h(built) f(b) m(y) g
(default.) 38 b(In) 21 b(addition,) i(platforms) f(whic) m(h) f
(require) g(the) g(assem) m(bler) h(routines) 274 4889
y(in) 32 b(`) p Fl(machine.c) p Fo(') d(cannot) j(build) e(the) i
(mpatrol) g(library) f(as) h(one) f(large) i(ob) 5 b(ject) 32
b(\014le) g(from) f(`) p Fl(library.c) p Fo('.) 274 4989
y(Note) h(that) f(the) g(Windo) m(ws) f(and) g(Net) m(w) m(are) i(`) p
Fl(Makefile) p Fo('s) d(use) h(`) p Fl(libmpatrol.obj) p
Fo('.) 144 5118 y(2.) 60 b(What) 32 b(are) e(the) h(`) p
Fl(CVS) p Fo(') f(sub) s(directories) g(that) h(come) g(with) f(the) h
(mpatrol) f(distribution?) 274 5247 y(CVS) f(stands) f(for) h
(Concurren) m(t) f(V) -8 b(ersions) 29 b(System) g(and) f(is) h(a) g
(pro) 5 b(ject) 29 b(v) m(ersion) h(con) m(trol) g(system.) 40
b(All) 30 b(of) 274 5347 y(the) i(source) f(\014les) f(that) i
(comprise) f(an) g(mpatrol) g(release) h(are) g(stored) f(in) f(a) h
(cen) m(tral) i(CVS) d(rep) s(ository) h(so) 274 5446
y(that) i(previous) e(releases) i(can) g(b) s(e) e(easily) i(retriev) m
(ed,) g(but) e(the) h(CVS) g(system) g(needs) f(to) i(ha) m(v) m(e) g
(a) f(w) m(a) m(y) h(of) 274 5546 y(determining) d(the) g(v) m(ersions)
g(of) g(curren) m(tly) f(c) m(hec) m(k) m(ed-out) k(\014les,) d(hence) f
(the) h(`) p Fl(CVS) p Fo(') g(sub) s(directories.) 39
b(The) 274 5645 y(`) p Fl(.cvsignore) p Fo(') 33 b(\014les) h(within) g
(these) h(directories) h(simply) e(inform) g(CVS) g(ab) s(out) g(whic) m
(h) g(\014les) h(to) g(ignore) p 90 rotate dyy eop
%%Page: 212 218
212 217 bop Fo 94 -116 a(212) 3332 b(mpatrol) 274 365
y(when) 33 b(lo) s(oking) i(for) f(c) m(hanges.) 52 b(Y) -8
b(ou) 34 b(shouldn't) f(need) g(to) i(w) m(orry) f(ab) s(out) f(them,) i
(so) f(just) f(ignore) i(them,) 274 465 y(and) 30 b(in) g(later) i
(releases) f(they) g(should) e(ha) m(v) m(e) j(b) s(een) d(remo) m(v) m
(ed) j(b) s(efore) e(a) h(distribution) e(w) m(as) i(made.) 144
589 y(3.) 60 b(Wh) m(y) 31 b(do) s(es) f(the) p Fl 31
w(mpsym) p Fo 29 w(command) g(not) g(w) m(ork) h(for) f(me?) 274
714 y(Firstly) -8 b(,) 33 b(y) m(ou) e(ha) m(v) m(e) i(to) f(ensure) e
(that) i(y) m(ou) f(ha) m(v) m(e) h(compiled) g(all) g(relev) -5
b(an) m(t) 32 b(ob) 5 b(ject) 32 b(\014les) f(with) g(debugging) 274
814 y(information) g(enabled) f(\(usually) g(b) m(y) g(adding) g(an) g
(option) h(to) g(the) f(compiler) h(command) f(line\).) 41
b(The) 30 b(\014le) 274 913 y(and) h(line) h(n) m(um) m(b) s(er) e
(information) i(will) g(hop) s(efully) f(then) g(app) s(ear) g(in) g
(the) g(log) i(\014le) f(for) f(all) h(sym) m(b) s(ols) f(that) 274
1013 y(ha) m(v) m(e) k(asso) s(ciated) h(debugging) d(information) h
(when) f(y) m(ou) h(run) e(the) p Fl 34 w(mpsym) p Fo
33 w(command) h(on) h(the) g(log) h(\014le.) 274 1112
y(Alternativ) m(ely) -8 b(,) 33 b(it) d(could) f(b) s(e) g(that) g(y) m
(our) g(system) h(do) s(es) f(not) g(ha) m(v) m(e) p
Fl 30 w(gdb) p Fo 29 w(or) g(an) m(y) h(of) f(the) g(required) g(UNIX)
274 1212 y(text) j(pro) s(cessing) e(to) s(ols) h(installed,) h(in) e
(whic) m(h) g(case) h(y) m(ou) g(migh) m(t) g(w) m(an) m(t) g(to) g
(try) g(installing) g(them.) 144 1337 y(4.) 60 b(Ho) m(w) 32
b(can) e(I) g(customise) h(the) p Fl 31 w(mpedit) p Fo
28 w(command) g(if) f(I) g(do) g(not) h(ha) m(v) m(e) g(the) g
(appropriate) f(p) s(ermissions) f(to) 274 1436 y(edit) i(the) g
(\014le) f(that) h(w) m(as) g(installed) g(on) f(m) m(y) h(system?) 274
1561 y(Y) -8 b(ou) 28 b(just) e(need) h(to) g(tak) m(e) h(a) g(cop) m
(y) f(of) g(the) g(installed) p Fl 28 w(mpedit) p Fo
25 w(command) f(and) h(place) g(it) h(somewhere) e(that) 274
1660 y(will) i(b) s(e) f(pic) m(k) m(ed) h(up) f(earlier) h(on) f(y) m
(our) h(command) f(searc) m(h) h(path.) 39 b(Y) -8 b(ou) 28
b(can) g(then) f(edit) h(y) m(our) f(cop) m(y) h(of) g(the) 274
1760 y(\014le) j(and) f(add) f(supp) s(ort) g(for) h(y) m(our) h(fa) m
(v) m(ourite) h(text) f(editor.) 144 1885 y(5.) 60 b(What) 32
b(do) s(es) e(the) p Fl 30 w(mupdate) p Fo 29 w(shell) g(script) g(do?)
274 2009 y(This) 36 b(is) g(for) g(m) m(y) g(use) g(in) g(order) f(to) i
(automate) h(ev) m(ery) f(new) e(release) j(of) e(mpatrol.) 58
b(Y) -8 b(ou) 37 b(should) e(nev) m(er) 274 2109 y(need) 29
b(to) g(run) d(this) j(script) f(and) f(it) i(should) f(not) g(b) s(e) g
(installed) h(an) m(ywhere) f(on) g(y) m(our) g(system.) 41
b(This) 27 b(script) 274 2208 y(also) 32 b(uses) e(and) g(mo) s
(di\014es) f(the) i(`) p Fl(VERSION) p Fo(') e(\014le) h(and) g(up) s
(dates) f(the) i(`) p Fl(NEWS) p Fo(') e(and) h(`) p
Fl(ChangeLog) p Fo(') f(\014les.) p 90 rotate dyy eop
%%Page: 213 219
213 218 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(213) p Fk 94 365 a(App) t(endix) 53 b(K) 81
b(Related) 53 b(soft) l(w) l(are) p Fo 219 750 a(The) 35
b(mpatrol) g(library) g(w) m(as) h(designed) f(to) h(solv) m(e) h(most)
e(common) h(heap-related) g(problems,) g(but) f(there) 94
849 y(ma) m(y) f(b) s(e) f(some) h(cases) g(where) f(a) h(di\013eren) m
(t) g(approac) m(h) f(is) h(needed,) g(or) f(a) h(commercial) h(pac) m
(k) -5 b(age) 35 b(is) f(required.) 94 949 y(I) f(ha) m(v) m(e) g
(attempted) h(to) f(pro) m(vide) g(an) f(o) m(v) m(erview) i(of) f(the)
g(di\013eren) m(t) g(t) m(yp) s(es) f(of) h(mallo) s(c) h(libraries) e
(and) g(memory) 94 1048 y(debuggers) e(a) m(v) -5 b(ailable) 33
b(b) s(elo) m(w,) e(along) g(with) g(a) f(comprehensiv) m(e) h(list) g
(of) g(related) g(soft) m(w) m(are.) 219 1226 y(The) d(most) h(basic) g
(t) m(yp) s(e) g(of) f(heap) h(debugging) f(system) h(simply) f
(requires) g(the) h(rede\014nition) f(of) p Fl 29 w(malloc\(\)) p
Fo(,) p Fl 94 1326 a(realloc\(\)) p Fo 26 w(and) p Fl
28 w(free\(\)) p Fo 26 w(\(and) g(related) i(functions\)) e(with) g
(debugging) g(v) m(ersions) h(that) g(record) f(the) g(\014le) h(and) 94
1426 y(line) 39 b(n) m(um) m(b) s(er) e(at) h(whic) m(h) g(allo) s
(cations) i(o) s(ccur.) 64 b(This) 37 b(migh) m(t) i(require) e(mo) s
(di\014cations) i(to) f(the) h(source) f(co) s(de) 94
1525 y(in) c(order) g(to) g(call) i(these) e(new) g(functions) f(or) h
(it) h(can) f(b) s(e) f(done) h(through) f(prepro) s(cessor) g(macros) i
(whic) m(h) f(will) 94 1625 y(require) f(all) g(source) g(\014les) g
(using) f(the) g(memory) h(allo) s(cation) i(functions) d(to) h(b) s(e)
f(recompiled.) 48 b(Suc) m(h) 32 b(a) h(system) 94 1724
y(will) e(most) g(lik) m(ely) h(liv) m(e) g(on) e(top) h(of) g(the) f
(existing) i(system) e(mallo) s(c) i(library) -8 b(,) 31
b(but) e(will) i(pro) m(vide) g(an) f(additional) 94
1824 y(la) m(y) m(er) k(with) d(whic) m(h) h(to) g(store) h(more) f
(information) g(for) g(debugging) f(purp) s(oses.) 43
b(MEM) 33 b(b) m(y) e(W) -8 b(alter) 34 b(Brigh) m(t) f(is) 94
1924 y(a) e(go) s(o) s(d) f(example) i(of) e(this) g(t) m(yp) s(e) h
(of) f(library) -8 b(.) 219 2102 y(On) 20 b(man) m(y) h(op) s(erating) g
(systems) f(it) i(is) e(usually) h(p) s(ossible) f(to) h(write) g
(replacemen) m(ts) h(for) f(the) f(normal) h(memory) 94
2201 y(allo) s(cation) j(routines) d(and) f(place) i(them) f(in) g(a) g
(library) g(so) g(that) h(they) f(can) g(b) s(e) g(link) m(ed) g(in) g
(to) g(o) m(v) m(erride) i(the) e(system) 94 2301 y(mallo) s(c) 37
b(library) e(without) g(requiring) g(recompilation) i(of) f(an) m(y) g
(source) f(\014les.) 56 b(Suc) m(h) 35 b(mallo) s(c) i(libraries) e(m) m
(ust) 94 2401 y(tak) m(e) g(con) m(trol) g(of) e(the) g(heap) g
(directly) h(and) f(so) g(usually) g(con) m(tain) h(more) g(features,) g
(including) f(b) s(eing) g(able) g(to) 94 2500 y(trac) m(k) d(memory) d
(leaks) i(and) e(place) i(fence) f(p) s(osts) f(around) g(allo) s
(cations.) 42 b(Dbmallo) s(c) 29 b(b) m(y) f(Conor) f(P) -8
b(.) 28 b(Cahill) h(and) 94 2600 y(Dmallo) s(c) k(b) m(y) e(Gra) m(y) h
(W) -8 b(atson) 33 b(are) f(t) m(w) m(o) h(of) e(the) g(most) h(p) s
(opular) e(of) i(these) f(t) m(yp) s(es) h(of) f(libraries) g(since) h
(they) g(are) 94 2699 y(a) m(v) -5 b(ailable) 38 b(on) d(a) h(wide) f
(range) g(of) g(platforms.) 55 b(Electric) 37 b(F) -8
b(ence) 37 b(b) m(y) e(Bruce) g(P) m(erens) g(also) i(mak) m(es) f(use)
e(of) i(the) 94 2799 y(memory) 30 b(protection) g(facilities) i(found) c
(in) h(UNIX) h(systems) f(in) g(order) g(to) h(force) g(programs) f
(that) h(access) h(free) 94 2899 y(or) 24 b(freed) f(memory) g(or) h
(read) f(or) g(write) h(b) s(ey) m(ond) f(the) g(b) s(ounds) e(of) j(a)
g(memory) f(allo) s(cation) j(to) e(crash) f(at) h(the) g(p) s(oin) m
(t) 94 2998 y(that) 31 b(the) g(illegal) i(memory) d(access) i(is) e
(made,) h(rather) f(than) g(crashing) g(at) i(the) e(next) h(memory) f
(allo) s(cation.) 219 3176 y(F) -8 b(or) 27 b(debugging) f(all) h
(memory) f(access) h(errors) f(\(not) g(just) g(those) g(on) g(the) h
(heap\)) f(it) g(is) g(necessary) h(to) g(mo) s(dify) 94
3276 y(\(instrumen) m(t\)) j(the) g(mac) m(hine) g(co) s(de) f(that) h
(is) g(to) g(b) s(e) f(run) e(so) j(that) g(eac) m(h) h(individual) d
(load) i(from) f(memory) h(and) 94 3375 y(store) e(to) f(memory) g
(will) g(b) s(e) f(c) m(hec) m(k) m(ed.) 41 b(One) 27
b(metho) s(d) f(of) h(doing) f(this) h(is) g(to) g(mo) s(dify) f(the) h
(co) s(de) g(pro) s(duced) e(b) m(y) i(a) 94 3475 y(compiler) i(\(suc) m
(h) f(as) g(is) g(done) g(b) m(y) g(Chec) m(k) m(er) h(written) f(b) m
(y) f(T) -8 b(ristan) 28 b(Gingold\)) h(but) f(this) g(has) f(the) h
(disadv) -5 b(an) m(tage) 94 3575 y(of) 39 b(only) g(w) m(orking) g
(within) f(the) h(ob) 5 b(ject) 39 b(\014les) g(that) g(ha) m(v) m(e) h
(b) s(een) e(pro) s(duced) f(b) m(y) h(that) i(compiler.) 66
b(It) 38 b(is) h(also) 94 3674 y(p) s(ossible) 32 b(to) i(mo) s(dify) d
(the) i(source) g(co) s(de) f(itself) h(using) f(source) h(to) g
(source) g(translation) g(\(suc) m(h) g(as) f(is) h(done) f(b) m(y) 94
3774 y(P) m(arasoft) e(Insure) p Fl(++) p Fo(\)) d(or) h(instrumen) m
(t) g(all) h(accesses) h(to) f(memory) f(in) g(assem) m(bler) h(source)
f(\014les) h(\(as) f(p) s(erformed) 94 3874 y(b) m(y) g(APurify) e
(written) i(b) m(y) f(Sam) m(uel) g(Devulder\).) 41 b(Ho) m(w) m(ev) m
(er,) 30 b(b) s(oth) c(of) i(these) g(metho) s(ds) e(su\013er) h(from) g
(the) h(same) 94 3973 y(dra) m(wbac) m(k) 33 b(as) g
(compiler-generated) h(instrumen) m(tation.) 48 b(Y) -8
b(et) 33 b(another) g(alternativ) m(e) i(is) d(to) i(w) m(ait) f(un) m
(til) g(link-) 94 4073 y(time) d(and) f(then) g(instrumen) m(t) f(the) i
(individual) e(ob) 5 b(ject) 30 b(\014les) f(and) g(libraries) g(b) s
(efore) g(they) g(are) h(link) m(ed) f(in) m(to) h(an) 94
4172 y(executable) k(\014le.) 47 b(This) 31 b(is) i(e\013ectiv) m(ely) i
(what) d(Purify) f(from) h(Rational) i(Soft) m(w) m(are) f(do) s(es,) g
(although) f(Memory) 94 4272 y(Advisor) 37 b(from) f(PLA) -8
b(TINUM) 37 b(T) -8 b(ec) m(hnology) 39 b(do) s(es) d(roughly) h(the) f
(same) i(except) f(that) g(it) h(disassem) m(bles) f(the) 94
4372 y(ob) 5 b(ject) 32 b(\014les) e(in) m(to) h(a) g(platform-indep) s
(enden) m(t) f(format) g(b) s(efore) g(instrumen) m(ting) h(them.) 219
4550 y(Rather) i(than) g(mo) s(difying) f(a) h(program) g(in) g(order) f
(to) i(add) e(debugging) h(co) s(de,) h(it) f(is) g(sometimes) h(p) s
(ossible) 94 4649 y(to) j(use) e(a) h(dedicated) g(memory) f(debugger) g
(in) g(order) g(to) i(quic) m(kly) f(catc) m(h) h(an) m(y) f(problems.)
55 b(ZeroF) -8 b(ault) 36 b(from) 94 4749 y(The) 25 b(Kernel) f(Group) g
(debugs) g(all) i(memory-related) f(op) s(erations) g(in) g(a) g
(program) f(while) h(it) g(is) g(running,) f(whilst) 94
4848 y(AProb) s(e) 31 b(from) f(OC) g(Systems) g(allo) m(ws) i(users) e
(to) h(dynamically) g(add) f(prob) s(e) g(mo) s(dules) g(at) h
(run-time) f(in) g(order) 94 4948 y(to) c(lo) s(cate) g(errors) f(or) f
(p) s(erform) g(pro\014ling.) 38 b(If) 24 b(suc) m(h) g(a) i(memory) e
(debugger) h(is) f(not) h(a) m(v) -5 b(ailable) 27 b(for) e(y) m(our) g
(system,) 94 5048 y(y) m(ou) 35 b(ma) m(y) f(still) h(b) s(e) e(able) i
(to) f(dynamically) h(link) f(a) g(mallo) s(c) h(library) e(in) m(to) i
(y) m(our) f(application) h(at) g(run-time) e(if) 94
5147 y(the) i(op) s(erating) h(system) f(supp) s(orts) e(it.) 54
b(NJAMD) 36 b(b) m(y) e(Mik) m(e) j(P) m(erry) d(mak) m(es) i(extensiv)
m(e) g(use) f(of) g(this) g(feature) 94 5247 y(on) g(some) h(UNIX) f
(systems.) 55 b(On) 34 b(op) s(erating) i(systems) f(that) g(do) g(not)
h(supp) s(ort) d(virtual) i(memory) g(but) g(ha) m(v) m(e) 94
5347 y(hardw) m(are) c(memory) f(protection,) i(it) g(is) e(sometimes) i
(p) s(ossible) e(to) i(trap) e(memory) h(errors) f(b) s(efore) g(they) h
(bring) 94 5446 y(do) m(wn) h(the) h(whole) f(system.) 47
b(On) 31 b(the) i(Amiga,) h(Enforcer) e(b) m(y) g(Mic) m(hael) i(Sinz) e
(runs) f(in) h(the) g(bac) m(kground) h(and) 94 5546
y(detects) h(man) m(y) e(common) g(memory) g(access) h(errors) f(in) f
(running) g(applications,) i(whilst) f(on) g(the) g(Macin) m(tosh,) 94
5645 y(QC) e(b) m(y) g(On) m(yx) g(T) -8 b(ec) m(hnology) 33
b(pro) m(vides) d(roughly) g(the) h(same) f(functionalit) m(y) -8
b(.) p 90 rotate dyy eop
%%Page: 214 220
214 219 bop Fo 94 -116 a(214) 3332 b(mpatrol) 219 365
y(A) 36 b(list) h(of) g(o) m(v) m(er) g(ninet) m(y) g(di\013eren) m(t) f
(items) h(of) g(soft) m(w) m(are) g(whic) m(h) f(help) g(in) g
(debugging) g(dynamic) g(memory) 94 465 y(allo) s(cation) 28
b(problems) d(is) g(giv) m(en) h(b) s(elo) m(w) p Fh
1437 432 a(1) p Fo 1475 465 a(.) 39 b(They) 25 b(all) h(pro) m(vide) f
(some) h(of) f(the) h(features) f(that) h(mpatrol) g(con) m(tains) 94
565 y(and) 31 b(y) m(ou) g(ma) m(y) g(wish) f(to) h(use) g(one) g(of) g
(them) f(to) i(solv) m(e) g(y) m(our) f(problem) f(if) g(y) m(ou) h(ha)
m(v) m(e) h(trouble) f(using) f(mpatrol.) 94 664 y(I) 36
b(ha) m(v) m(e) h(only) g(ev) m(er) f(used) f(CSRI) g(mallo) s(c,) k
(Dbmallo) s(c,) g(Dmallo) s(c,) g(Electric) e(F) -8 b(ence) 37
b(and) f(Mprof,) h(so) f(I) g(can't) 94 764 y(v) m(ouc) m(h) 30
b(for) f(an) m(y) g(of) h(the) f(others,) g(although) h(if) f(y) m(ou) g
(ha) m(v) m(e) h(an) m(y) g(recommendations) f(feel) h(free) f(to) h
(let) g(me) f(kno) m(w) 94 863 y(so) 39 b(I) e(can) h(add) f(them) h
(to) h(this) e(list.) 64 b(In) 37 b(particular,) j(there) e(seems) g
(to) h(b) s(e) e(a) h(shortage) h(of) f(suc) m(h) f(programs) 94
963 y(for) 42 b(Net) m(w) m(are) h(platforms.) 74 b(Note) 42
b(that) g(there) g(is) f(a) h(comparison) g(of) f(a) h(few) f(of) h
(the) f(follo) m(wing) i(programs) 94 1063 y(at) p Fl
36 w(http://www.consistent.o) o(rg/) o(terr) o(an/m) o(emo) o(rych) o
(eck.) o(sht) o(ml) p Fo 28 w(whic) m(h) 34 b(migh) m(t) h(help) f
(illustrate) i(the) 94 1162 y(di\013erences) 31 b(b) s(et) m(w) m(een) g
(the) g(v) -5 b(arious) 30 b(to) s(ols.) p Fm 169 1288
a(\017) p Fo 60 w(AProb) s(e) 274 1439 y(Author) 194
b(OC) 30 b(Systems) g(\() p Fl(info@ocsystems.com) p
Fo(\)) 274 1591 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
1742 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
1893 y(Lo) s(cation) p Fl 134 w(http://www.aprobe.com/) p
Fo 274 2044 a(Ov) m(erview) 109 b(Instrumen) m(ts) 32
b(a) h(program) g(using) f(Dynamic) h(Action) h(Linking) e(in) h(order)
f(to) i(trac) m(k) f(do) m(wn) 754 2143 y(memory) e(corruption) f(and) f
(monitor) i(memory) f(usage,) i(among) f(other) f(things.) p
Fm 169 2320 a(\017) p Fo 60 w(APurify) 274 2471 y(Author) 194
b(Sam) m(uel) 31 b(Devulder) g(\() p Fl(Samuel.Devulder@info.uni) o
(caen) o(.fr) p Fo -1 w(\)) 274 2622 y(License) 191 b(F) -8
b(ree) 32 b(Soft) m(w) m(are) 274 2773 y(Platforms) 92
b(AmigaOS) 274 2924 y(Lo) s(cation) p Fl 134 w
(http://wuarchive.wustl.edu) o(/~am) o(ine) o(t/di) o(rs/d) o(ev_) o
(debu) o(g.ht) o(ml) p Fo 274 3075 a(Ov) m(erview) 109
b(Instrumen) m(ts) 43 b(an) h(assem) m(bler) h(source) f(\014le) g(to) h
(insert) f(co) s(de) g(that) h(c) m(hec) m(ks) g(all) g(memory) 754
3175 y(accesses.) p Fm 169 3352 a(\017) p Fo 60 w(BoundsChec) m(k) m
(er) 274 3503 y(Author) 194 b(NuMega) 32 b(Corp) s(oration) e(\() p
Fl(info@numega.com) p Fo(\)) 274 3654 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 3805 y(Platforms) 92
b(Windo) m(ws,) 31 b(MS-DOS) 274 3956 y(Lo) s(cation) p
Fl 134 w(http://www.numega.com/) p Fo 274 4107 a(Ov) m(erview) 109
b(Detects) 32 b(and) d(diagnoses) h(errors) f(in) h(static,) h(stac) m
(k) g(and) e(heap) g(memory) h(and) f(in) g(memory) 754
4206 y(and) h(resource) h(leaks.) p Fm 169 4383 a(\017) p
Fo 60 w(C) p Fl(++) p Fo 30 w(Debugging) g(Supp) s(ort) d(Library) i
(\(lib) s(cwd\)) 274 4534 y(Author) 194 b(Carlo) 31 b(W) -8
b(o) s(o) s(d) p Fl 31 w(carlo@alinoe.com) p Fo 274 4685
a(License) 191 b(Q) 31 b(Public) f(License) 274 4836
y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274 4987
y(Lo) s(cation) p Fl 134 w(http://sourceforge.net/pro) o(ject) o(s/l) o
(ibcw) o(/) p Fo 274 5138 a(Ov) m(erview) 109 b(A) 30
b(C) p Fl(++) p Fo 28 w(debugging) f(library) g(that) h(can) f(also) h
(detect) h(memory) e(corruption) f(and) h(memory) 754
5238 y(leaks.) p 94 5371 1200 4 v Fh 143 5431 a(1) p
Fg 219 5463 a(This) d(list) h(can) e(b) r(e) h(considered) g(to) g(b) r
(e) f(a) h(sligh) n(tly) h(more) f(up) f(to) g(date) h(v) n(ersion) g
(of) p Fa 26 w(Debugging) g(T) -6 b(o) r(ols) 27 b(for) g(Dynamic) e
(Storage) 219 5554 y(Allo) r(cation) 19 b(and) f(Memory) g(Managemen) n
(t) p Fg 20 w(\() p Ff(http://www.cs.colorado.edu/~zo) q(rn/Ma) q(lloc)
q(Debu) q(g.htm) q(l) p Fg(\)) 23 b(b) n(y) 17 b(Ben) h(Zorn) 219
5645 y(\() p Ff(zorn@microsoft.com) p Fg(\).) p 90 rotate
dyy eop
%%Page: 215 221
215 220 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(215) p Fm 169 365 a(\017) p Fo 60 w(Ccmallo) s(c) 274
514 y(Author) 194 b(Armin) 30 b(Biere) h(\() p Fl(biere@inf.ethz.ch) p
Fo(\)) 274 663 y(License) 191 b(GNU) 31 b(General) h(Public) e(License)
274 811 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
960 y(Lo) s(cation) p Fl 134 w(http://www.inf.ethz.ch/per) o(sona) o
(l/b) o(iere) o(/pro) o(jec) o(ts/c) o(cmal) o(loc) o(/) p
Fo 274 1109 a(Ov) m(erview) 109 b(Can) 29 b(in) m(terface) i(with) p
Fl 28 w(gdb) p Fo 28 w(to) f(\014nd) d(memory) i(leaks,) i(m) m
(ultiple) e(deallo) s(cations) i(and) e(mem-) 754 1209
y(ory) i(corruptions) f(in) g(C) g(or) g(C) p Fl(++) p
Fo 29 w(programs.) p Fm 169 1382 a(\017) p Fo 60 w(Chap) s(eron) 274
1531 y(Author) 194 b(John) 30 b(Reiser) h(\() p Fl
(jreiser@BitWagon.com) p Fo(\)) 274 1679 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 1828 y(Platforms) 92
b(Lin) m(ux) 274 1977 y(Lo) s(cation) p Fl 134 w
(http://www.bitwagon.com/ch) o(aper) o(on.) o(html) p
Fo 274 2125 a(Ov) m(erview) 109 b(Runs) 32 b(existing) i(In) m(tel) f
(Lin) m(ux) g(binary) f(application) i(programs,) f(but) g(c) m(hec) m
(ks) h(for) e(and) h(re-) 754 2225 y(p) s(orts) d(bad) g(b) s(eha) m
(viour) g(in) g(accessing) i(memory) -8 b(.) p Fm 169
2398 a(\017) p Fo 60 w(Chec) m(k) m(er) 274 2547 y(Author) 194
b(T) -8 b(ristan) 31 b(Gingold) g(\() p Fl(bug-checker@gnu.org) p
Fo(\)) 274 2696 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 2845 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX) 274 2993 y(Lo) s(cation) p Fl 134 w(http://www.gnu.org/softwar)
o(e/ch) o(eck) o(er/c) o(heck) o(er.) o(html) p Fo 274
3142 a(Ov) m(erview) 109 b(Detects) 31 b(illegal) f(memory) e(accesses)
i(when) d(reading) i(from) e(uninitialised) i(memory) -8
b(,) 29 b(writ-) 754 3242 y(ing) f(to) h(freed) e(memory) h(or) f
(outside) h(memory) g(blo) s(c) m(ks.) 40 b(Also) 29
b(con) m(tains) f(a) h(garbage) g(collec-) 754 3341 y(tor) i(for) f
(detecting) i(memory) f(leaks.) p Fm 169 3515 a(\017) p
Fo 60 w(CMEM) 274 3663 y(Author) 194 b(Brett) 32 b(Hunsak) m(er) e(\() p
Fl(hunsaker@eisner.decus.org) p Fo(\)) 274 3812 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 3961 y(Platforms) 92
b(VMS) 274 4110 y(Lo) s(cation) p Fl 134 w(http://www.openvms.compaq.) o
(com/) o(fre) o(ewar) o(e/CM) o(EM/) p Fo 274 4258 a(Ov) m(erview) 109
b(Pro) m(vides) 33 b(debugging) e(v) m(ersions) h(of) g(the) g(C) g
(run-time) f(library) g(memory) h(allo) s(cation) i(rou-) 754
4358 y(tines,) d(with) f(supp) s(ort) f(for) h(stac) m(k) i(tracebac) m
(ks) g(and) e(page) h(protection.) p Fm 169 4531 a(\017) p
Fo 60 w(CMM) g(\(Customisable) g(Memory) g(Manager\)) 274
4680 y(Author) 194 b(Giusepp) s(e) 27 b(A) m(ttardi) i(\() p
Fl(attardi@di.unipi.it) p Fo(\),) 24 b(Tito) k(Flagella) j(\() p
Fl(tito@di.unipi.it) p Fo(\)) 754 4779 y(and) f(Pietro) i(Iglio) f(\() p
Fl(iglio@di.unipi.it) p Fo(\)) 274 4928 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 5077 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws,) h(MacOS,) g(DOS) 274
5226 y(Lo) s(cation) p Fl 134 w(ftp://ftp.di.unipi.ti/pub/) o(proj) o
(ect) o(/pos) o(so/c) o(mm/) p Fo 274 5374 a(Ov) m(erview) 109
b(A) 40 b(memory) f(managemen) m(t) h(facilit) m(y) h(supp) s(orting) d
(memory) h(in) m(tensiv) m(e) h(applications) g(in) 754
5474 y(C) p Fl(++) p Fo(,) 30 b(with) g(supp) s(ort) f(for) h(m) m
(ultiple) h(heaps) f(\(eac) m(h) i(one) f(optionally) g(implemen) m
(ting) g(a) g(dif-) 754 5574 y(feren) m(t) g(storage) h(discipline\)) f
(and) f(garbage) h(collection.) p 90 rotate dyy eop
%%Page: 216 222
216 221 bop Fo 94 -116 a(216) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(CSRI) 30 b(mallo) s(c) 274 516
y(Author) 194 b(Mark) 31 b(Moraes) h(\() p Fl(moraes@deshaw.com) p
Fo(\)) 274 666 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
816 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
966 y(Lo) s(cation) p Fl 134 w(ftp://ftp.cs.toronto.edu/p) o(ub/m) o
(ora) o(es/m) o(allo) o(c.t) o(ar.g) o(z) p Fo 274 1116
a(Ov) m(erview) 109 b(A) 31 b(library) f(of) g(dynamic) g(memory) h
(allo) s(cation) h(functions) e(with) g(limited) h(debugging) g(and) 754
1216 y(pro\014ling) h(supp) s(ort) e(and) h(detection) i(of) f(memory) g
(leaks.) 46 b(Also) 32 b(comes) h(with) e(a) h(graphical) 754
1316 y(to) s(ol) g(to) f(displa) m(y) g(a) f(dynamic) g(picture) h(of) f
(the) h(heap.) p Fm 169 1441 a(\017) p Fo 60 w(Dbmallo) s(c) 274
1591 y(Author) 194 b(Conor) 30 b(P) -8 b(.) 31 b(Cahill) g(\() p
Fl(cpcahil@virtech.vti.com) p Fo(\)) 274 1741 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 1891 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 2042 y(Lo) s(cation) p
Fl 134 w(http://dickey.his.com/dbma) o(lloc) o(/db) o(mall) o(oc.h) o
(tml) p Fo 274 2192 a(Ov) m(erview) 109 b(Pro) m(vides) 30
b(replacemen) m(ts) g(for) f(memory) f(managemen) m(t) j(library) d
(functions) h(and) f(pro) m(vides) 754 2291 y(a) i(full) f(set) h(of) g
(debugging) f(features) h(whic) m(h) f(detect) h(memory) f(o) m(v) m
(erruns) h(and) e(other) i(t) m(yp) s(es) 754 2391 y(of) h(misuse.) p
Fm 169 2516 a(\017) p Fo 60 w(Dbmallo) s(c) 274 2666
y(Author) 194 b(Mic) m(hael) 33 b(McT) -8 b(ernan) 30
b(\() p Fl(mm7323@bris.ac.uk) p Fo(\)) 274 2816 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 2967 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274 3117
y(Lo) s(cation) p Fl 134 w(http://www.cs.bris.ac.uk/~) o(mm73) o(23/) o
(DbMa) o(lloc) o(/) p Fo 274 3267 a(Ov) m(erview) 109
b(A) 30 b(drop-in) f(replacemen) m(t) i(for) f(the) g(C) f(memory) h
(allo) s(cation) i(functions,) e(pro) m(viding) f(facili-) 754
3367 y(ties) j(for) e(quic) m(kly) h(\014nding) e(memory) h(leaks.) p
Fm 169 3542 a(\017) p Fo 60 w(Debauc) m(h) 274 3693 y(Author) 194
b(Jon) 30 b(A.) h(Christopher) e(\() p Fl(jac8792@tamu.edu) p
Fo(\)) 274 3843 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 3993 y(Platforms) 92 b(Lin) m(ux) 274 4143
y(Lo) s(cation) p Fl 134 w(http://mackerel.tamu.edu/j) o(on/g) o(nu/) p
Fo 274 4293 a(Ov) m(erview) 109 b(A) 25 b(memory) g(allo) s(cation) i
(debugger) d(for) h(C) f(whic) m(h) g(will) h(detect) h(memory) f
(leaks,) i(corrupted) 754 4393 y(memory) -8 b(,) 31 b(stores) g(to) g
(freed) f(memory) h(and) e(more.) p Fm 169 4569 a(\017) p
Fo 60 w(Debug) i(Heap) 274 4719 y(Author) 194 b(IBM) 31
b(Corp) s(oration) f(\() p Fl(info@ibm.com) p Fo(\)) 274
4869 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
5019 y(Platforms) 92 b(IBM) 31 b(AS/400) 274 5170 y(Lo) s(cation) p
Fl 134 w(http://www.as400.ibm.com/d) o(evel) o(ope) o(r/po) o(rtin) o
(g/h) o(eape) o(xter) o(nal) o(.htm) o(l) p Fo 274 5320
a(Ov) m(erview) 109 b(A) 31 b(heap) f(debugging) g(en) m(vironmen) m(t)
h(with) g(stac) m(k) g(tracebac) m(k) i(for) d(IBM) h(AS/400) h(serv) m
(ers.) p Fm 169 5495 a(\017) p Fo 60 w(DebugOb) 5 b(ject) 274
5645 y(Author) 194 b(Beniamin) 31 b(Chernia) m(vsky) f(\() p
Fl(cben@israel.crosswinds.net) p Fo(\)) p 90 rotate dyy
eop
%%Page: 217 223
217 222 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(217) 274 365 y(License) 191 b(GNU) 31 b(General) h
(Public) e(License) 274 515 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX,) e(Windo) m(ws) 274 666 y(Lo) s(cation) p Fl
134 w(http://www.crosswinds.net/) o(~cbe) o(n/o) o(bjc/) p
Fo 274 816 a(Ov) m(erview) 109 b(A) 31 b(set) g(of) f(classes) i(for) e
(debugging) g(dynamic) g(memory) h(problems) e(in) h(Ob) 5
b(jectiv) m(e) 32 b(C.) p Fm 169 991 a(\017) p Fo 60
w(Dmallo) s(c) 274 1141 y(Author) 194 b(Gra) m(y) 32
b(W) -8 b(atson) 31 b(\() p Fl(gray@burger.letters.com) p
Fo(\)) 274 1292 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
1442 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws,) h
(MS-DOS) 274 1592 y(Lo) s(cation) p Fl 134 w(http://www.dmalloc.com/) p
Fo 274 1742 a(Ov) m(erview) 109 b(A) 30 b(drop-in) f(replacemen) m(t) i
(for) f(the) g(system's) g(memory) g(managemen) m(t) h(routines,) f
(pro) m(vid-) 754 1842 y(ing) j(p) s(o) m(w) m(erful) f(debugging) g
(facilities) i(con\014gurable) e(at) h(run-time.) 46
b(F) -8 b(ormerly) 33 b(kno) m(wn) f(as) 754 1941 y(Mallo) s(c) p
1025 1941 28 4 v 35 w(Dbg.) p Fm 169 2117 a(\017) p Fo
60 w(DPCR) -8 b(TLMM) 274 2267 y(Author) 194 b(Da) m(vid) 32
b(Duncan) e(Ross) g(P) m(almer) i(\() p Fl(overlord@daybologic.co.u) o
(k) p Fo(\)) 274 2417 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 2567 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX,) e(Windo) m(ws,) h(MS-DOS) 274 2718 y(Lo) s(cation) p
Fl 134 w(http://www.daybologic.co.u) o(k/de) o(v/d) o(pcrt) o(lmm/) p
Fo 274 2868 a(Ov) m(erview) 109 b(Detects) 34 b(failures) d(to) h
(release) h(memory) e(and) g(attempts) h(to) g(release) h(memory) e
(whic) m(h) g(has) 754 2967 y(not) g(b) s(een) f(allo) s(cated,) i(and)
e(can) h(also) g(pro) m(vide) g(statistics) h(and) e(logging) i
(facilities.) p Fm 169 3143 a(\017) p Fo 60 w(Electric) g(F) -8
b(ence) 274 3293 y(Author) 194 b(Bruce) 31 b(P) m(erens) g(\() p
Fl(bruce@pixar.com) p Fo(\)) 274 3443 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 3593 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 3744 y(Lo) s(cation) p
Fl 134 w(ftp://ftp.perens.com/pub/E) o(lect) o(ric) o(Fenc) o(e/) p
Fo 274 3894 a(Ov) m(erview) 109 b(Uses) 44 b(virtual) g(memory) f
(hardw) m(are) g(to) h(protect) h(dynamically) f(allo) s(cated) h
(memory) e(in) 754 3993 y(order) 30 b(to) h(detect) h(illegal) h
(memory) d(accesses.) p Fm 169 4169 a(\017) p Fo 60 w(Enforcer) 274
4319 y(Author) 194 b(Mic) m(hael) 33 b(Sinz) d(\() p
Fl(Enforcer@sinz.org) p Fo(\)) 274 4469 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 4619 y(Platforms) 92
b(AmigaOS) 274 4770 y(Lo) s(cation) p Fl 134 w
(http://www.iam.com/amiga/e) o(nfor) o(cer) o(.htm) o(l) p
Fo 274 4920 a(Ov) m(erview) 109 b(Sets) 35 b(up) f(MMU) h(tables) g(to)
h(w) m(atc) m(h) f(for) g(illegal) i(accesses) f(to) f(memory) -8
b(,) 36 b(suc) m(h) f(as) f(the) h(lo) m(w) 754 5019
y(page) d(and) d(non-existen) m(t) j(pages.) p Fm 169
5195 a(\017) p Fo 60 w(FD) m(A) g(\(F) -8 b(ree) 32 b(Debug) f(Allo) s
(cator\)) 274 5345 y(Author) 194 b(Thomas) 30 b(Helv) m(ey) i(\() p
Fl(tomh@inxpress.net) p Fo(\)) 274 5495 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 5645 y(Platforms) 92
b(Lin) m(ux,) 31 b(Windo) m(ws) p 90 rotate dyy eop
%%Page: 218 224
218 223 bop Fo 94 -116 a(218) 3332 b(mpatrol) 274 365
y(Lo) s(cation) p Fl 134 w(http://www.debian.org/Pack) o(ages) o(/un) o
(stab) o(le/d) o(eve) o(l/fd) o(a.ht) o(ml) p Fo 274
513 a(Ov) m(erview) 109 b(Pro) m(vides) 51 b(routines) f(that) h(can) g
(b) s(e) e(plugged) i(in) e(to) i(replace) p Fl 52 w(malloc\(\)) p
Fo(,) p Fl 53 w(calloc\(\)) p Fo(,) p Fl 754 612 a(realloc\(\)) p
Fo 28 w(and) p Fl 30 w(free\(\)) p Fo(.) p Fm 169 783
a(\017) p Fo 60 w(F) -8 b(ortify) 274 930 y(Author) 194
b(Simon) 30 b(Bullen) h(\() p Fl(sbullen@cybergraphic.com.) o(au) p
Fo(\)) 274 1078 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
1225 y(Platforms) 92 b(AmigaOS) 274 1372 y(Lo) s(cation) p
Fl 134 w(http://www.geocities.com/S) o(ilic) o(onV) o(alle) o(y/Ho) o
(riz) o(on/8) o(596/) o(for) o(tify) o(.htm) o(l) p Fo
274 1519 a(Ov) m(erview) 109 b(Pro) m(vides) 26 b(a) f(forti\014ed) g
(shell) g(for) f(memory) h(allo) s(cations,) k(trapping) 24
b(memory) h(leaks,) i(writes) 754 1619 y(b) s(ey) m(ond) j(and) g(b) s
(efore) g(memory) g(blo) s(c) m(ks) h(and) f(writes) g(to) h(freed) f
(memory) -8 b(.) p Fm 169 1790 a(\017) p Fo 60 w(Gab) s(e's) 31
b(Debug) g(Library) 274 1937 y(Author) 194 b(Gabriel) 32
b(Sec) m(han) p Fl 30 w(gsechan@hotmail.com) p Fo 274
2084 a(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2231 y(Platforms) 92 b(Windo) m(ws) 274 2379 y(Lo) s(cation) p
Fl 134 w(http://sourceforge.net/pro) o(ject) o(s/d) o(ebug) o(lib/) p
Fo 274 2526 a(Ov) m(erview) 109 b(A) 42 b(debugging) g(library) f(for) g
(C) p Fl(++) p Fo 41 w(whic) m(h) g(p) s(erforms) f(dynamic) h(memory) g
(managemen) m(t) 754 2625 y(and) 30 b(lo) s(oks) h(for) f(p) s(oten) m
(tial) i(problems) e(and) f(memory) i(leaks.) p Fm 169
2796 a(\017) p Fo 60 w(GC) g(\(Garbage) h(Collector\)) 274
2944 y(Author) 194 b(Hans-J.) 31 b(Bo) s(ehm) f(\() p
Fl(boehm@acm.org) p Fo(\)) 274 3091 y(License) 191 b(F) -8
b(ree) 32 b(Soft) m(w) m(are) 274 3238 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(AmigaOS,) h(Windo) m(ws,) g(MS-DOS,) f
(MacOS) 274 3385 y(Lo) s(cation) p Fl 134 w(http://www.hpl.hp.com/pers)
o(onal) o(/Ha) o(ns_B) o(oehm) o(/gc) o(/) p Fo 274 3533
a(Ov) m(erview) 109 b(A) 36 b(general-purp) s(ose,) g
(garbage-collecting) j(storage) e(allo) s(cator) g(that) f(is) f(in) m
(tended) g(to) h(b) s(e) 754 3632 y(used) k(as) h(a) f(plug-in) g
(replacemen) m(t) i(for) p Fl 40 w(malloc\(\)) p Fo(,) f(but) e(can) i
(also) g(b) s(e) f(used) g(to) h(detect) 754 3732 y(memory) 31
b(leaks.) p Fm 169 3903 a(\017) p Fo 60 w(GCAllo) s(c) 274
4050 y(Author) 194 b(Jo) s(el) 31 b(Bartlett) i(\() p
Fl(bartlett@decwrl.dec.com) p Fo(\)) 274 4197 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 4344 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 4492 y(Lo) s(cation) p
Fl 134 w(ftp://gatekeeper.dec.com/p) o(ub/D) o(EC/) o(CCgc) o(/) p
Fo 274 4639 a(Ov) m(erview) 109 b(A) 31 b(highly-p) s(ortable) g
(generational,) h(mostly-cop) m(ying) h(garbage) e(collector) i(for) d
(C) p Fl(++) p Fo(.) p Fm 169 4810 a(\017) p Fo 60 w(Glo) m(wCo) s(de)
274 4957 y(Author) 194 b(Electric) 32 b(Soft) m(w) m(are,) g(Inc.) 40
b(\() p Fl(info@glowcode.com) p Fo(\)) 274 5104 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 5251 y(Platforms) 92
b(Windo) m(ws) 274 5399 y(Lo) s(cation) p Fl 134 w
(http://www.glowcode.com/) p Fo 274 5546 a(Ov) m(erview) 109
b(Pro) m(vides) 40 b(a) g(pro\014ler,) h(call) f(co) m(v) m(erage) i
(to) s(ol) f(and) d(resource) i(bro) m(wser) e(whic) m(h) h(can) h
(detail) 754 5645 y(memory) 31 b(leaks.) p 90 rotate
dyy eop
%%Page: 219 225
219 224 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(219) p Fm 169 365 a(\017) p Fo 60 w(GMemLogger) 274
514 y(Author) 194 b(Yv) m(es) 32 b(Mettier) g(\() p Fl
(ymettier@libertysurf.fr) p Fo(\)) 274 663 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 811 y(Platforms) 92
b(Lin) m(ux) 274 960 y(Lo) s(cation) p Fl 134 w
(http://sourceforge.net/pro) o(ject) o(s/g) o(meml) o(ogge) o(r/) p
Fo 274 1109 a(Ov) m(erview) 109 b(Logs) 31 b(allo) s(cated) i(memory) d
(for) g(the) h(purp) s(ose) d(of) j(detecting) h(memory) e(leaks.) p
Fm 169 1282 a(\017) p Fo 60 w(Great) i(Circle) 274 1431
y(Author) 194 b(Geo) s(desic) 32 b(Systems) e(\() p Fl
(info@geodesic.com) p Fo(\)) 274 1580 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 1728 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274 1877
y(Lo) s(cation) p Fl 134 w(http://www.geodesic.com/) p
Fo 274 2026 a(Ov) m(erview) 109 b(Pro) m(vides) 30 b(complete) h(heap) e
(pro\014ling,) g(allo) m(wing) i(programmers) e(to) h(see) g(what) f
(parts) g(of) h(a) 754 2125 y(program) h(are) f(using) g(the) h(most) g
(memory) f(with) g(sym) m(b) s(olic) h(stac) m(k) h(tracing.) p
Fm 169 2299 a(\017) p Fo 60 w(HeapAgen) m(t) 274 2447
y(Author) 194 b(MicroQuill) 32 b(\() p Fl(info@microquill.com) p
Fo(\)) 274 2596 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
2745 y(Platforms) 92 b(Windo) m(ws) 274 2893 y(Lo) s(cation) p
Fl 134 w(http://www.microquill.com/) p Fo 274 3042 a(Ov) m(erview) 109
b(Instrumen) m(ts) 34 b(the) g(heap) g(to) h(pro) m(vide) f(heap) g
(error) g(detection) i(without) e(the) h(need) f(to) h(re-) 754
3142 y(compile) d(an) m(y) f(source) f(co) s(de.) p Fm
169 3315 a(\017) p Fo 60 w(HeapChec) m(k) 274 3464 y(Author) 194
b(Thanassis) 30 b(Tsio) s(dras) g(\() p Fl(ttsiod@softlab.ntua.gr) p
Fo(\)) 274 3613 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 3761 y(Platforms) 92 b(Windo) m(ws) 274
3910 y(Lo) s(cation) p Fl 134 w(http://www.image.ece.ntua.) o(gr/~) o
(tts) o(iod/) o(Heap) o(Che) o(ck.h) o(tml) p Fo 274
4059 a(Ov) m(erview) 109 b(A) 36 b(debugging) g(memory) g(allo) s
(cator) i(that) e(can) g(detect) h(in) m(v) -5 b(alid) 36
b(read/write) h(accesses) g(to) 754 4158 y(heap) 31 b(memory) -8
b(,) 31 b(and) e(also) j(detects) f(memory) g(leaks.) p
Fm 169 4332 a(\017) p Fo 60 w(HeapManager) 274 4480 y(Author) 194
b(Andrew) 30 b(W) -8 b(ulf) 30 b(\() p Fl(heapmanager@biit.com) p
Fo(\)) 274 4629 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
4778 y(Platforms) 92 b(MacOS) 274 4926 y(Lo) s(cation) p
Fl 134 w(http://www.biit.com/) p Fo 274 5075 a(Ov) m(erview) 109
b(Pro) m(vides) 23 b(a) g(general-purp) s(ose) e(dynamic) h(memory) g
(allo) s(cation) j(debugging) d(pac) m(k) -5 b(age) 24
b(with) 754 5175 y(sym) m(b) s(olic) 31 b(stac) m(k) h(tracebac) m(k.) p
Fm 169 5348 a(\017) p Fo 60 w(IDH) 274 5497 y(Author) 194
b(Iv) -5 b(an) 31 b(Skytte) f(Jorgensen) h(\() p Fl(isj@image.dk) p
Fo(\)) 274 5645 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) p
90 rotate dyy eop
%%Page: 220 226
220 225 bop Fo 94 -116 a(220) 3332 b(mpatrol) 274 365
y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274 512
y(Lo) s(cation) p Fl 134 w(http://www.platypus.adsl.d) o(k/id) o(h/i) o
(ndex) o(.htm) o(l/) p Fo 274 659 a(Ov) m(erview) 109
b(Detects) 38 b(most) d(o) m(v) m(erwrites,) j(stale) e(p) s(oin) m
(ters,) h(wild) d(p) s(oin) m(ters,) j(double-free) e(and) f(in) m(v) -5
b(alid) 754 759 y(mix) 31 b(of) f(heap) g(managemen) m(t) i(functions.)
p Fm 169 930 a(\017) p Fo 60 w(Insure) p Fl(++) p Fo
274 1077 a(Author) 194 b(P) m(araSoft) 32 b(\() p Fl(info@parasoft.com)
p Fo(\)) 274 1224 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are)
274 1371 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws)
274 1518 y(Lo) s(cation) p Fl 134 w(http://www.parasoft.com/) p
Fo 274 1665 a(Ov) m(erview) 109 b(Uses) 29 b(Source) g(Co) s(de) f
(Instrumen) m(tation) g(and) g(Run) m(time) h(P) m(oin) m(ter) h(T) -8
b(rac) m(king) 29 b(tec) m(hnologies) 754 1765 y(to) 23
b(pinp) s(oin) m(t) f(memory) g(corruption,) h(memory) g(leaks,) h(op) s
(erations) f(on) f(unrelated) g(p) s(oin) m(ters) 754
1864 y(and) j(more.) 40 b(The) 25 b(In) m(use) f(graphical) j(memory) e
(usage) h(displa) m(y) g(to) s(ol) g(is) g(also) g(pro) m(vided) f
(with) 754 1964 y(this) 31 b(soft) m(w) m(are.) p Fm
169 2135 a(\017) p Fo 60 w(JMallo) s(c) 274 2282 y(Author) 194
b(Je\013) 31 b(Dunlop) 274 2429 y(License) 191 b(F) -8
b(ree) 32 b(Soft) m(w) m(are) 274 2576 y(Platforms) 92
b(Windo) m(ws,) 31 b(MS-DOS) 274 2723 y(Lo) s(cation) p
Fl 134 w(http://www.snippets.org/) p Fo 274 2870 a(Ov) m(erview) 109
b(Pro) m(vides) 31 b(tracing) h(and) d(debugging) i(for) p
Fl 30 w(malloc\(\)) p Fo 28 w(and) p Fl 30 w(operator) d(new) p
Fo(.) p Fm 169 3041 a(\017) p Fo 60 w(JProb) s(e) 274
3188 y(Author) 194 b(KL) 30 b(Group) g(\() p Fl(info@klgroup.com) p
Fo(\)) 274 3335 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
3482 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
3629 y(Lo) s(cation) p Fl 134 w(http://www.klgroup.com/) p
Fo 274 3776 a(Ov) m(erview) 109 b(Helps) 40 b(pinp) s(oin) m(t) e
(memory) h(leaks) h(in) f(Ja) m(v) -5 b(a) 40 b(applications) h(b) m(y)
e(trac) m(king) h(whic) m(h) f(ob) 5 b(jects) 754 3876
y(hold) 36 b(references) h(to) g(other) f(ob) 5 b(jects,) 39
b(and) c(allo) m(ws) j(visualisation) f(of) f(memory) h(usage) f(in) 754
3976 y(real-time.) p Fm 169 4146 a(\017) p Fo 60 w(Leak) 274
4293 y(Author) 194 b(Christopher) 30 b(Phillips) g(\() p
Fl(pefv700@hermes.chpc.utex) o(as.e) o(du) p Fo(\)) 274
4440 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
4588 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
4735 y(Lo) s(cation) p Fl 134 w(http://sources.isc.org/dev) o(el/m) o
(eml) o(eak/) o(leak) o(.tx) o(t) p Fo 274 4882 a(Ov) m(erview) 109
b(Logs) 31 b(all) g(calls) h(to) p Fl 31 w(malloc\(\)) p
Fo 28 w(and) e(related) h(functions) f(to) h(database) g(\014les) f
(with) g(the) h(\014le-) 754 4981 y(name) 22 b(and) e(line) i(n) m(um) m
(b) s(er,) g(then) f(attempts) h(to) g(v) -5 b(alidate) 23
b(reallo) s(cations) g(and) e(deallo) s(cations) 754
5081 y(and) 30 b(detect) i(memory) e(leaks.) p Fm 169
5204 a(\017) p Fo 60 w(Leak) 274 5351 y(Author) 194 b(Josh) 30
b(McCormic) m(k) i(\() p Fl(jmccorm@galstar.com) p Fo(\)) 274
5498 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
5645 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) p 90 rotate
dyy eop
%%Page: 221 227
221 226 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(221) 274 365 y(Lo) s(cation) p Fl 134 w
(http://www.galstar.com/~jm) o(ccor) o(m/l) o(eak/) p
Fo 274 514 a(Ov) m(erview) 109 b(A) 29 b(simple) f(shell) g(script) g
(that) h(monitors) f(the) g(system) g(lo) s(oking) h(for) f(pro) s
(cesses) g(whic) m(h) g(leak) 754 614 y(memory) -8 b(.) p
Fm 169 787 a(\017) p Fo 60 w(LeakBug) 274 935 y(Author) 194
b(Christian) 87 b(Hammond) g(\() p Fl(chipx86@portaldesign.net) p
Fo(\),) 96 b(Domenico) 89 b(Andreoli) 754 1035 y(\() p
Fl(cavok@filibusta.crema.unimi) o(.it) p Fo(\)) 16 b(and) 22
b(Gerry) g(Jo) g(Jellestad) i(\() p Fl(gerry@c64.org) p
Fo(\)) 274 1184 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 1332 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX) 274 1481 y(Lo) s(cation) p Fl 134 w(http://www.gnupdate.org/) p
Fo 274 1630 a(Ov) m(erview) 109 b(A) 29 b(memory) g(leak) h(tracer) g
(that) f(sp) s(ecializes) i(in) d(detecting) j(leaks) e(from) g(a) g
(program's) g(o) m(wn) 754 1729 y(calls) 41 b(to) p Fl
41 w(malloc\(\)) p Fo(,) p Fl 40 w(strdup\(\)) p Fo(,) f(etc,) j(but) c
(do) s(es) g(not) h(detect) h(leaks) g(from) e(outside) h(li-) 754
1829 y(braries.) p Fm 169 2002 a(\017) p Fo 60 w(Leak) m(ers) 274
2151 y(Author) 194 b(Gabriel) 32 b(M.) e(Deal) i(\() p
Fl(gmd@yellowleaf.org) p Fo(\)) 274 2300 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 2448 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 2597 y(Lo) s(cation) p
Fl 134 w(http://www.yellowleaf.org/) o(gmd/) o(sof) o(twar) o(e/le) o
(ake) o(rs/) p Fo 274 2746 a(Ov) m(erview) 109 b(Detects) 39
b(memory) e(allo) s(cation) i(errors) d(b) m(y) h(writing) f(a) h(log) h
(\014le) f(and) f(then) g(examining) h(it) 754 2845 y(for) 31
b(memory) f(leaks) h(and) f(attempts) h(to) g(free) g(memory) f(m) m
(ultiple) h(times.) p Fm 169 3018 a(\017) p Fo 60 w(LeakT) -8
b(racer) 274 3167 y(Author) 194 b(Erwin) 30 b(Andreasen) f(\() p
Fl(erwin@andreasen.org) p Fo(\)) 274 3316 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 3464 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 3613 y(Lo) s(cation) p
Fl 134 w(http://www.andreasen.org/L) o(eakT) o(rac) o(er/) p
Fo 274 3762 a(Ov) m(erview) 109 b(Detects) 59 b(memory) d(leaks) h(in) f
(C) p Fl(++) p Fo 55 w(programs) g(b) m(y) g(o) m(v) m(erriding) p
Fl 57 w(operator) 28 b(new) p Fo 56 w(and) p Fl 754 3861
a(operator) h(delete) p Fo(.) p Fm 169 4035 a(\017) p
Fo 60 w(Leaky) 274 4183 y(Author) 194 b(Kipp) 30 b(Hic) m(kman) h(\() p
Fl(kipp@netscape.com) p Fo(\)) 274 4332 y(License) 191
b(Netscap) s(e) 32 b(Public) e(License) 274 4481 y(Platforms) 92
b(Lin) m(ux) 274 4629 y(Lo) s(cation) p Fl 134 w
(http://www.mozilla.org/uni) o(x/le) o(aky) o(.htm) o(l) p
Fo 274 4778 a(Ov) m(erview) 109 b(A) 42 b(program) g(whic) m(h) g
(helps) f(\014nd) g(memory) g(leaks) i(and) e(helps) h(debug) f
(reference) h(coun) m(t) 754 4878 y(problems) 30 b(with) g(xp) s(com) g
(ob) 5 b(jects.) p Fm 169 5051 a(\017) p Fo 60 w(LibKmallo) s(c) 274
5199 y(Author) 194 b(Akira) 31 b(Higuc) m(hi) h(\() p
Fl(a@kondara.org) p Fo(\)) 274 5348 y(License) 191 b(GNU) 31
b(General) h(Public) e(License) 274 5497 y(Platforms) 92
b(Lin) m(ux) 274 5645 y(Lo) s(cation) p Fl 134 w
(http://www.kondara.org/~a/) o(libk) o(mal) o(loc.) o(html) p
90 rotate dyy eop
%%Page: 222 228
222 227 bop Fo 94 -116 a(222) 3332 b(mpatrol) 274 365
y(Ov) m(erview) 109 b(A) 37 b(tin) m(y) g(mallo) s(c) h(debugger) e
(whic) m(h) h(detects) h(m) m(ultiple) f(frees) g(and) f(bu\013er) f(o)
m(v) m(erruns) i(and) 754 465 y(underruns.) p Fm 169
639 a(\017) p Fo 60 w(LibSafe) 274 789 y(Author) 194
b(A) -8 b(T&T) 30 b(Bell) i(Labs) e(\() p Fl(libsafe@research.bell-lab)
o(s.co) o(m) p Fo(\)) 274 938 y(License) 191 b(GNU) 31
b(General) h(Public) e(License) 274 1088 y(Platforms) 92
b(Lin) m(ux) 274 1237 y(Lo) s(cation) p Fl 134 w
(http://www.bell-labs.com/o) o(rg/1) o(135) o(6/li) o(bsaf) o(e.h) o
(tml) p Fo 274 1386 a(Ov) m(erview) 109 b(Protects) 33
b(a) f(pro) s(cess) f(against) i(the) e(exploitation) j(of) e(bu\013er)
e(o) m(v) m(er\015o) m(w) j(vulnerabilities) f(in) 754
1486 y(pro) s(cess) e(stac) m(ks.) p Fm 169 1660 a(\017) p
Fo 60 w(Mallo) s(c) i(Debug) 274 1810 y(Author) 194 b(Brandon) 30
b(S.) g(Allb) s(ery) p Fl 30 w(allbery@ncoast.org) p
Fo 274 1959 a(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2109 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
2258 y(Lo) s(cation) p Fl 134 w(http://www.leo.org/pub/com) o(p/us) o
(ene) o(t/co) o(mp.s) o(our) o(ces.) o(misc) o(/ma) o(lloc) o(-deb) o
(ug/) p Fo 274 2408 a(Ov) m(erview) 109 b(A) 31 b(debugging) f(mallo) s
(c) i(pac) m(k) -5 b(age) 32 b(with) e(stac) m(k) i(tracebac) m(k) g
(capabilit) m(y) -8 b(.) p Fm 169 2582 a(\017) p Fo 60
w(Mallo) s(c) 32 b(Debug) f(Library) 274 2731 y(Author) 194
b(Rammi) 31 b(\() p Fl(rammi@quincunx.escape.de) p Fo(\)) 274
2881 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
3030 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
3180 y(Lo) s(cation) p Fl 134 w(http://www.escape.de/users) o(/qui) o
(ncu) o(nx/r) o(mdeb) o(ug.) o(html) p Fo 274 3329 a(Ov) m(erview) 109
b(Implemen) m(ts) 31 b(wrapp) s(ers) d(for) i(the) h(normal) f(heap) h
(handling) e(functions.) p Fm 169 3504 a(\017) p Fo 60
w(Mallo) s(cT) -8 b(race) 274 3653 y(Author) 194 b(Mark) 31
b(Brader) f(\() p Fl(msb@sq.sq.com) p Fo(\)) 274 3802
y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
3952 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
4101 y(Lo) s(cation) p Fl 134 w(ftp://ftp.uu.net/usenet/co) o(mp.s) o
(our) o(ces.) o(unix) o(/vo) o(lume) o(18/m) o(all) o(oc-t) o(race) o
(.Z) p Fo 274 4251 a(Ov) m(erview) 109 b(A) 31 b(mallo) s(c) g(pac) m
(k) -5 b(age) 33 b(with) d(call) i(stac) m(k) f(tracebac) m(ks.) p
Fm 169 4425 a(\017) p Fo 60 w(MalT) -8 b(race) 274 4575
y(Author) 194 b(Mic) m(hael) 33 b(Sc) m(h) m(w) m(artz) e(\() p
Fl(schwartz@cs.washington.edu) p Fo(\)) 274 4724 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 4873 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 5023 y(Lo) s(cation) p
Fl 134 w(http://www.mit.edu/afs/sip) o(b/us) o(er/) o(tyts) o(o/Ne) o
(ws/) o(malt) o(race) p Fo 274 5172 a(Ov) m(erview) 109
b(T) -8 b(races) 32 b(all) f(calls) g(to) p Fl 32 w(malloc\(\)) p
Fo 28 w(and) p Fl 29 w(free\(\)) p Fo 29 w(in) f(order) g(to) h(detect)
h(memory) e(leaks.) p Fm 169 5347 a(\017) p Fo 60 w(Mark) p
491 5347 28 4 v 34 w(Mallo) s(c) 274 5496 y(Author) 194
b(Sed) 30 b(\() p Fl(sed@free.fr) p Fo(\)) 274 5645 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) p 90 rotate dyy
eop
%%Page: 223 229
223 228 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(223) 274 365 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX) 274 514 y(Lo) s(cation) p Fl 134 w(http://sed.free.fr/mark_ma) o
(lloc) p Fo 274 662 a(Ov) m(erview) 109 b(Marks) 31 b(memory) f(allo) s
(cations) j(in) d(order) g(to) h(detect) h(memory) e(leaks.) p
Fm 169 834 a(\017) p Fo 60 w(MChec) m(k) 274 982 y(Author) 194
b(Ronald) 31 b(V) -8 b(eldema) 32 b(\() p Fl(rveldema@cs.vu.nl) p
Fo(\)) 274 1131 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 1279 y(Platforms) 92 b(Lin) m(ux) 274 1427
y(Lo) s(cation) p Fl 134 w(http://www.cs.vu.nl/~rveld) o(ema/) o(mch) o
(eck/) o(mche) o(ck.) o(html) p Fo 274 1575 a(Ov) m(erview) 109
b(A) 30 b(memory) f(usage) h(and) f(mallo) s(c) h(c) m(hec) m(k) m(er) h
(for) e(C) g(and) g(C) p Fl(++) p Fo(.) 39 b(Comes) 30
b(with) f(a) g(Ja) m(v) -5 b(a) 31 b(appli-) 754 1675
y(cation) h(for) e(bro) m(wsing) g(the) h(trace) h(\014les) e(pro) s
(duced.) p Fm 169 1847 a(\017) p Fo 60 w(MEM) 274 1996
y(Author) 194 b(W) -8 b(alter) 33 b(Brigh) m(t) 274 2144
y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2292 y(Platforms) 92 b(MS-DOS) 274 2440 y(Lo) s(cation) p
Fl 134 w(http://www.snippets.org/) p Fo 274 2588 a(Ov) m(erview) 109
b(A) 31 b(set) g(of) f(functions) g(for) g(debugging) h(p) s(oin) m
(ter) f(and) g(memory) g(allo) s(cation) j(problems.) p
Fm 169 2761 a(\017) p Fo 60 w(MemChec) m(k) 274 2909
y(Author) 194 b(Stratosw) m(are) 32 b(Corp) s(oration) e(\() p
Fl(info@stratosware.com) p Fo(\)) 274 3057 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 3205 y(Platforms) 92
b(Windo) m(ws) 274 3354 y(Lo) s(cation) p Fl 134 w
(http://www.stratosware.com) o(/) p Fo 274 3502 a(Ov) m(erview) 109
b(Detects) 33 b(v) -5 b(arious) 30 b(run-time) f(errors) h(related) h
(to) f(op) s(erating) h(system) f(resources) g(and) f(pro-) 754
3602 y(vides) i(information) f(on) h(memory) f(leaks.) p
Fm 169 3725 a(\017) p Fo 60 w(MemChec) m(k) 274 3874
y(Author) 194 b(IBM) 31 b(Corp) s(oration) f(\() p Fl(info@ibm.com) p
Fo(\)) 274 4022 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
4170 y(Platforms) 92 b(IBM) 31 b(OS/390) 274 4318 y(Lo) s(cation) p
Fl 134 w(http://www.s390.ibm.com/oe) o(/too) o(ls/) o(memc) o(heck) o
(_2_) o(1.ht) o(ml) p Fo 274 4466 a(Ov) m(erview) 109
b(Aids) 33 b(the) g(disco) m(v) m(ery) i(of) e(memory) g(leaks) h(in) e
(single-) i(and) e(m) m(ulti-threaded) i(C/C) p Fl(++) p
Fo 32 w(pro-) 754 4566 y(grams.) p Fm 169 4739 a(\017) p
Fo 60 w(MemDebug) 274 4887 y(Author) 194 b(Rene) 31 b(Sc) m(hmit) g(\()
p Fl(rene.schmit@bss.lu) p Fo(\)) 274 5035 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 5183 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws,) h(MS-DOS,) g(MacOS) 274
5331 y(Lo) s(cation) p Fl 134 w(http://www.bss.lu/Memdebug) o(/Mem) o
(deb) o(ug.h) o(tml) p Fo 274 5480 a(Ov) m(erview) 109
b(Pro) m(vides) 33 b(memory) e(managemen) m(t) i(error) f(detection,) i
(memory) d(usage) i(error) e(detection,) 754 5579 y(memory) g(usage) g
(pro\014ling) f(and) f(error) h(sim) m(ulation.) p 90 rotate
dyy eop
%%Page: 224 230
224 229 bop Fo 94 -116 a(224) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(MemLeak) 274 514 y(Author) 194
b(Keith) 31 b(P) m(ac) m(k) -5 b(ard) 31 b(\() p Fl(keithp@ncd.com) p
Fo(\)) 274 663 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
811 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
960 y(Lo) s(cation) p Fl 134 w(ftp://ftp.x.org/pub/R6.4/x) o(c/ut) o
(il/) o(meml) o(eak/) p Fo 274 1109 a(Ov) m(erview) 109
b(Replaces) 47 b(the) f(C) f(library) h(allo) s(cation) i(functions) d
(and) g(pro) m(vides) h(extensiv) m(e) h(memory) 754
1208 y(c) m(hec) m(king,) 30 b(lo) s(cating) f(lost) g(memory) -8
b(,) 28 b(detecting) h(free) e(memory) h(still) g(in) f(use) g(and) f
(stores) i(to) 754 1308 y(free) j(memory) f(along) i(with) e(stac) m(k)
i(tracebac) m(ks.) p Fm 169 1481 a(\017) p Fo 60 w(Memory) f(Advisor)
274 1630 y(Author) 194 b(PLA) -8 b(TINUM) 31 b(T) -8
b(ec) m(hnology) 33 b(\() p Fl(info@platinum.com) p Fo(\)) 274
1778 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
1927 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
2076 y(Lo) s(cation) p Fl 134 w(http://www.platinum.com/) p
Fo 274 2224 a(Ov) m(erview) 109 b(Disassem) m(bles) 25
b(an) f(ob) 5 b(ject) 24 b(mo) s(dule) f(in) m(to) h(system-indep) s
(enden) m(t) f(assem) m(bler) h(co) s(de,) h(inserts) 754
2324 y(error) k(c) m(hec) m(king) h(instructions,) f(then) f(re-assem) m
(bles) i(the) e(co) s(de.) 41 b(Can) 28 b(also) h(replace) h(exist-) 754
2424 y(ing) e(mallo) s(c) h(libraries) e(in) h(order) f(to) h(pro) m
(vide) g(greater) g(error) g(c) m(hec) m(king.) 41 b(F) -8
b(ormerly) 28 b(kno) m(wn) 754 2523 y(as) j(Sen) m(tinel.) p
Fm 169 2697 a(\017) p Fo 60 w(Memory) g(Sleuth) 274 2845
y(Author) 194 b(T) -8 b(urb) s(oP) m(o) m(w) m(er) 31
b(\() p Fl(info@turbopower.com) p Fo(\)) 274 2994 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 3143 y(Platforms) 92
b(Windo) m(ws) 274 3291 y(Lo) s(cation) p Fl 134 w
(http://www.turbopower.com/) p Fo 274 3440 a(Ov) m(erview) 109
b(Quic) m(kly) 66 b(trac) m(ks) h(do) m(wn) e(memory) g(leaks) h(and) f
(resource) h(allo) s(cation) h(errors) e(with) 754 3540
y(C) p Fl(++) p Fo(Builder) 30 b(and) g(Delphi.) p Fm
169 3713 a(\017) p Fo 60 w(Memprof) 274 3861 y(Author) 194
b(Ow) m(en) 31 b(T) -8 b(a) m(ylor) 31 b(\() p Fl(otaylor@redhat.com) p
Fo(\)) 274 4010 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 4159 y(Platforms) 92 b(Lin) m(ux) 274 4307
y(Lo) s(cation) p Fl 134 w(http://people.redhat.com/o) o(tayl) o(or/) o
(memp) o(rof/) p Fo 274 4456 a(Ov) m(erview) 109 b(A) 31
b(to) s(ol) g(for) f(pro\014ling) g(memory) h(usage) g(and) e
(detecting) j(memory) f(leaks.) p Fm 169 4629 a(\017) p
Fo 60 w(Mempro) s(of) 274 4778 y(Author) 194 b(AutomatedQA) 32
b(\() p Fl(info@totalqa.com) p Fo(\)) 274 4927 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 5075 y(Platforms) 92
b(Windo) m(ws) 274 5224 y(Lo) s(cation) p Fl 134 w
(http://www.totalqa.com/) p Fo 274 5373 a(Ov) m(erview) 109
b(A) 35 b(memory) f(and) g(resource) h(leak) g(debugger) f(for) h
(Borland's) f(family) h(of) g(Windo) m(ws) f(com-) 754
5472 y(pilers.) p Fm 169 5645 a(\017) p Fo 60 w(MemT) -8
b(est) p 90 rotate dyy eop
%%Page: 225 231
225 230 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(225) 274 365 y(Author) 194 b(Jim) 31 b(Buc) m(hanan) f
(\() p Fl(jbuchana@iquest.net) p Fo(\)) 274 514 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 663 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 811 y(Lo) s(cation) p
Fl 134 w(ftp://ftp.loxinfo.co.th/pu) o(b/un) o(ix/) o(util) o(s/me) o
(m_t) o(est-) o(0_10) o(_ta) o(r.gz) p Fo 274 960 a(Ov) m(erview) 109
b(Helps) 33 b(lo) s(cate) i(memory) e(leaks) g(in) g(a) g(program) f
(under) g(dev) m(elopmen) m(t) i(b) m(y) f(creating) h(a) f(log) 754
1060 y(\014le) e(that) g(records) f(most) h(memory) f(allo) s(cations) j
(and) c(deallo) s(cations.) p Fm 169 1233 a(\017) p Fo
60 w(MemT) -8 b(race) 274 1381 y(Author) 194 b(Nico) 32
b(Ho) s(ogerv) m(orst) g(\() p Fl(nico@knoware.nl) p
Fo(\)) 274 1530 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
1679 y(Platforms) 92 b(Windo) m(ws) 274 1828 y(Lo) s(cation) p
Fl 134 w(http://utopia.knoware.nl/u) o(sers) o(/ni) o(co/t) o(ools) o
(/c/) o(memt) o(race) o(/) p Fo 274 1976 a(Ov) m(erview) 109
b(A) 29 b(simple) f(enhancemen) m(t) i(for) e(C) g(source) g(co) s(de) h
(whic) m(h) f(mak) m(es) i(it) f(easier) g(to) g(\014nd) e(memory) 754
2076 y(leaks.) p Fm 169 2200 a(\017) p Fo 60 w(MemT) -8
b(race) 274 2349 y(Author) 194 b(F) -8 b(rank) 31 b(Pilhofer) g(\() p
Fl(fp@informatik.uni-frankf) o(urt.) o(de) p Fo(\)) 274
2497 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2646 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
2795 y(Lo) s(cation) p Fl 134 w(http://www.informatik.uni-) o(fran) o
(kfu) o(rt.d) o(e/~f) o(p/T) o(ools) o(/Mem) o(Tra) o(ce/) p
Fo 274 2943 a(Ov) m(erview) 109 b(Searc) m(hes) 29 b(for) g(memory) f
(leaks) h(in) f(a) h(program) f(and) g(uses) g(v) -5
b(arious) 28 b(platform-sp) s(eci\014c) h(fea-) 754 3043
y(tures) i(to) g(record) f(a) h(stac) m(k) h(trace) f(eac) m(h) h(time)
f(a) f(memory) h(c) m(h) m(unk) f(is) g(allo) s(cated.) p
Fm 169 3216 a(\017) p Fo 60 w(MemW) -8 b(atc) m(h) 274
3365 y(Author) 194 b(Johan) 30 b(Lindh) f(\() p Fl(johan@link-data.com)
p Fo(\)) 274 3513 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are)
274 3662 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws)
274 3811 y(Lo) s(cation) p Fl 134 w(http://www.link-data.com/) p
Fo 274 3960 a(Ov) m(erview) 109 b(A) 31 b(fault-toleran) m(t) i(memory)
d(leak) h(and) f(corruption) g(detection) i(to) s(ol.) p
Fm 169 4084 a(\017) p Fo 60 w(MemW) -8 b(atc) m(h) 274
4232 y(Author) 194 b(Doug) 32 b(W) -8 b(alk) m(er) 32
b(\() p Fl(walker@unx.sas.com) p Fo(\)) 274 4381 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 4530 y(Platforms) 92
b(AmigaOS) 274 4678 y(Lo) s(cation) p Fl 134 w
(http://wuarchive.wustl.edu) o(/~am) o(ine) o(t/di) o(rs/d) o(ev_) o
(debu) o(g.ht) o(ml) p Fo 274 4827 a(Ov) m(erview) 109
b(Pro) m(vides) 41 b(replacemen) m(t) h(memory) e(allo) s(cation) j
(routines) d(for) g(adding) g(lots) i(of) e(memory) 754
4927 y(debugging) 31 b(features) g(that) f(y) m(ou) h(link) f(in) m(to)
i(y) m(our) e(program.) p Fm 169 5051 a(\017) p Fo 60
w(MemW) -8 b(atc) m(h) 274 5199 y(Author) 194 b(Sundial) 30
b(Services) g(\() p Fl(info@sundialservices.com) p Fo(\)) 274
5348 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
5497 y(Platforms) 92 b(Windo) m(ws) 274 5645 y(Lo) s(cation) p
Fl 134 w(http://www.sundialservices) o(.com) o(/do) o(wnlo) o(ad/m) o
(emw) o(atch) o(.pas) p 90 rotate dyy eop
%%Page: 226 232
226 231 bop Fo 94 -116 a(226) 3332 b(mpatrol) 274 365
y(Ov) m(erview) 109 b(Pro) m(vides) 38 b(replacemen) m(t) h(dynamic) e
(memory) g(allo) s(cation) i(functions) e(for) g(Delphi) g(whic) m(h)
754 465 y(lo) s(ok) 31 b(for) g(memory) f(underwrites) f(and) h(o) m(v)
m(erwrites.) p Fm 169 636 a(\017) p Fo 60 w(MM) h(\(Shared) f(Memory) h
(Library\)) 274 783 y(Author) 194 b(Ralf) 31 b(S.) f(Engelsc) m(hall) i
(\() p Fl(rse@engelschall.com) p Fo(\)) 274 930 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 1077 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274 1224
y(Lo) s(cation) p Fl 134 w(http://www.engelschall.com) o(/sw/) o(mm/) p
Fo 274 1371 a(Ov) m(erview) 109 b(Simpli\014es) 34 b(the) h(usage) g
(\(and) f(can) h(help) f(debug\)) g(the) h(use) f(of) g(shared) g
(memory) g(b) s(et) m(w) m(een) 754 1471 y(related) e(pro) s(cesses.) p
Fm 169 1594 a(\017) p Fo 60 w(MM) 274 1741 y(Author) 194
b(Da) m(v) m(e) 33 b(Clemen) m(ts) e(\() p Fl(clements@cs.uoregon.edu) p
Fo(\)) 274 1888 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2035 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
2182 y(Lo) s(cation) p Fl 134 w(http://www.cirl.uoregon.ed) o(u/cl) o
(eme) o(nts/) o(memo) o(ryM) o(anag) o(er.h) o(tml) p
Fo 274 2329 a(Ov) m(erview) 109 b(Ov) m(errides) 26 b(the) h(C) f
(dynamic) g(memory) g(allo) s(cation) i(functions) e(to) h(pro) m(vide)
f(b) s(etter) g(debug-) 754 2429 y(ging) 31 b(capabilities.) p
Fm 169 2600 a(\017) p Fo 60 w(Mmallo) s(c) 274 2747 y(Author) 194
b(Mik) m(e) 32 b(Haertel) g(\() p Fl(mike@ai.mit.edu) p
Fo(\)) 27 b(and) j(F) -8 b(red) 30 b(Fish) h(\() p Fl(fnf@cygnus.com) p
Fo(\)) 274 2894 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 3041 y(Platforms) 92 b(V) -8 b(arious) 32
b(UNIX) 274 3188 y(Lo) s(cation) p Fl 134 w(http://www.gnu.org/) p
Fo 274 3335 a(Ov) m(erview) 109 b(Uses) p Fl 33 w(mmap\(\)) p
Fo 31 w(to) 33 b(allo) s(cate) h(separate) f(p) s(o) s(ols) f(of) h
(memory) f(whic) m(h) g(can) g(b) s(e) g(mapp) s(ed) f(on) m(to) 754
3435 y(\014les) g(for) f(later) h(reuse.) p Fm 169 3606
a(\017) p Fo 60 w(MPR) 274 3753 y(Author) 194 b(T) -8
b(a) 5 b(j) 31 b(Khattra) g(\() p Fl(taj.khattra@pobox.com) p
Fo(\)) 274 3900 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
4047 y(Platforms) 92 b(Lin) m(ux) 274 4194 y(Lo) s(cation) p
Fl 134 w(http://metalab.unc.edu/pub) o(/Lin) o(ux/) o(deve) o(l/la) o
(ng/) o(c/mp) o(r-2.) o(0.t) o(ar.g) o(z) p Fo 274 4341
a(Ov) m(erview) 109 b(A) m(ttempts) 30 b(to) f(\014nd) d(memory) i
(leaks) h(in) f(C/C) p Fl(++) p Fo 27 w(programs) g(b) m(y) g(writing) g
(a) h(log) g(\014le) f(during) 754 4440 y(program) g(execution,) h
(whic) m(h) f(can) g(then) f(b) s(e) g(pro) s(cessed) g(for) g
(obtaining) i(further) d(informa-) 754 4540 y(tion.) p
Fm 169 4711 a(\017) p Fo 60 w(Mprof) 274 4858 y(Author) 194
b(Ben) 31 b(Zorn) f(\() p Fl(zorn@microsoft.com) p Fo(\)) 274
5005 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
5152 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
5299 y(Lo) s(cation) p Fl 134 w(ftp://gatekeeper.dec.com/p) o(ub/m) o
(isc) o(/mpr) o(of-3) o(.0.) o(tar.) o(Z) p Fo 274 5446
a(Ov) m(erview) 109 b(Pro\014les) 32 b(the) h(dynamic) f(memory) g
(allo) s(cation) i(b) s(eha) m(viour) e(of) g(programs) g(b) m(y) g
(logging) i(de-) 754 5546 y(tails) 41 b(for) f(eac) m(h) h(function) e
(than) g(mak) m(es) i(a) f(memory) g(allo) s(cation,) k(including) c
(call) g(stac) m(k) 754 5645 y(tracebac) m(ks.) p 90 rotate
dyy eop
%%Page: 227 233
227 232 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(227) p Fm 169 365 a(\017) p Fo 60 w(MSS) 30
b(\(Memory) h(Sup) s(ervision) e(System\)) 274 514 y(Author) 194
b(Juan) 56 b(Jesus) h(Alcolea) i(Picazo) f(\() p Fl
(a920101@zipi.fi.upm.es) p Fo(\)) 52 b(and) k(P) m(eter) i(P) m(alotas)
754 614 y(\() p Fl(blizzar@hem1.passagen.se) p Fo(\)) 274
762 y(License) 191 b(GNU) 31 b(General) h(Public) e(License) 274
911 y(Platforms) 92 b(Lin) m(ux,) 31 b(Windo) m(ws,) f(MS-DOS) 274
1060 y(Lo) s(cation) p Fl 134 w(http://hem.passagen.se/bli) o(zzar) o
(/ms) o(s/) p Fo 274 1208 a(Ov) m(erview) 109 b(F) -8
b(ull-featured) 24 b(mallo) s(c) g(library) f(for) f(C) h(and) f(C) p
Fl(++) p Fo 22 w(pro) m(viding) h(detection) h(of) f(memory) g(leaks,)
754 1308 y(use) 35 b(of) g(uninitialised) h(memory) e(and) h(out) g(of)
g(range) h(blo) s(c) m(k) f(accesses) i(as) e(w) m(ell) h(as) f(lots) h
(of) 754 1408 y(tracing) c(facilities.) p Fm 169 1532
a(\017) p Fo 60 w(MT) -8 b(race) 274 1680 y(Author) 194
b(Morris) 31 b(R.) f(Do) m(v) m(ey) j(\() p Fl(mrdovey@iedu.com) p
Fo(\)) 274 1829 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
1978 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
2126 y(Lo) s(cation) p Fl 134 w(http://www.iedu.com/mrd/c/) o(mtra) o
(ce.) o(c) p Fo 274 2275 a(Ov) m(erview) 109 b(A) 31
b(v) m(ery) g(simple) f(mallo) s(c) h(tracing) h(pac) m(k) -5
b(age.) p Fm 169 2448 a(\017) p Fo 60 w(MuF) d(orce) 274
2597 y(Author) 194 b(Thomas) 30 b(Ric) m(h) m(ter) i(\() p
Fl(thor@einstein.math.tu-berl) o(in.d) o(e) p Fo(\)) 274
2746 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2894 y(Platforms) 92 b(AmigaOS) 274 3043 y(Lo) s(cation) p
Fl 134 w(http://www.math.tu-berlin.) o(de/~) o(tho) o(r/th) o(or/i) o
(nde) o(x.ht) o(ml) p Fo 274 3192 a(Ov) m(erview) 109
b(Uses) 35 b(the) g(MMU) g(to) g(monitor) f(the) h(system) f(for) g(an)
m(y) h(writes) f(to) h(non-existen) m(t) h(memory) 754
3291 y(and) 30 b(rep) s(orts) g(them) g(o) m(v) m(er) i(the) e(serial) i
(p) s(ort) d(or) i(an) m(y) f(other) h(output) f(stream.) p
Fm 169 3464 a(\017) p Fo 60 w(MuGuardianAngel) 274 3613
y(Author) 194 b(Thomas) 30 b(Ric) m(h) m(ter) i(\() p
Fl(thor@einstein.math.tu-berl) o(in.d) o(e) p Fo(\)) 274
3762 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
3910 y(Platforms) 92 b(AmigaOS) 274 4059 y(Lo) s(cation) p
Fl 134 w(http://www.math.tu-berlin.) o(de/~) o(tho) o(r/th) o(or/i) o
(nde) o(x.ht) o(ml) p Fo 274 4208 a(Ov) m(erview) 109
b(An) 28 b(extension) g(to) g(the) g(MuF) -8 b(orce) 29
b(program) e(whic) m(h) g(protects) i(free) e(memory) h(and) f(detects)
754 4307 y(all) 32 b(illegal) g(memory) f(accesses.) p
Fm 169 4481 a(\017) p Fo 60 w(MuLib) 274 4629 y(Author) 194
b(Thomas) 30 b(Ric) m(h) m(ter) i(\() p Fl(thor@einstein.math.tu-berl) o
(in.d) o(e) p Fo(\)) 274 4778 y(License) 191 b(F) -8
b(ree) 32 b(Soft) m(w) m(are) 274 4927 y(Platforms) 92
b(AmigaOS) 274 5075 y(Lo) s(cation) p Fl 134 w
(http://www.math.tu-berlin.) o(de/~) o(tho) o(r/th) o(or/i) o(nde) o
(x.ht) o(ml) p Fo 274 5224 a(Ov) m(erview) 109 b(Pro) m(vides) 27
b(access) h(to) g(the) f(MMU) g(in) f(mo) s(dern) g(Amigas) h(so) g
(that) g(features) g(suc) m(h) g(as) g(virtual) 754 5324
y(memory) k(can) f(b) s(e) g(implemen) m(ted.) p Fm 169
5497 a(\017) p Fo 60 w(MUL) -8 b(TI) 274 5645 y(Author) 194
b(Green) 31 b(Hills) g(Soft) m(w) m(are,) h(Inc.) 40
b(\() p Fl(sales@ghs.com) p Fo(\)) p 90 rotate dyy eop
%%Page: 228 234
228 233 bop Fo 94 -116 a(228) 3332 b(mpatrol) 274 365
y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
515 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
666 y(Lo) s(cation) p Fl 134 w(http://www.ghs.com) p
Fo 274 816 a(Ov) m(erview) 109 b(Inserts) 34 b(sp) s(ecial) h(c) m(hec)
m(ks) h(in) m(to) f(a) g(program) f(to) i(w) m(atc) m(h) f(for) f(and) g
(rep) s(ort) g(a) h(broad) f(v) -5 b(ariet) m(y) 754
915 y(of) 31 b(run-time) f(errors,) g(including) g(freeing) h(unallo) s
(cated) g(memory) f(and) g(memory) g(leaks.) p Fm 169
1091 a(\017) p Fo 60 w(Mungw) m(all) 274 1241 y(Author) 194
b(Commo) s(dore-Amiga,) 32 b(Inc.) 40 b(\() p Fl(info@amiga.de) p
Fo(\)) 274 1391 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
1541 y(Platforms) 92 b(AmigaOS) 274 1692 y(Lo) s(cation) p
Fl 134 w(http://wuarchive.wustl.edu) o(/~am) o(ine) o(t/di) o(rs/d) o
(ev_) o(debu) o(g.ht) o(ml) p Fo 274 1842 a(Ov) m(erview) 109
b(P) m(atc) m(hes) 33 b(the) d(system) h(to) g(c) m(hec) m(k) h(for) e
(free) g(memory) h(corruption.) p Fm 169 2017 a(\017) p
Fo 60 w(NJAMD) h(\(Not) f(Just) f(Another) g(Mallo) s(c) i(Debugger\))
274 2167 y(Author) 194 b(Mik) m(e) 32 b(P) m(erry) e(\() p
Fl(mikepery@fscked.org) p Fo(\)) 274 2318 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 2468 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 2618 y(Lo) s(cation) p
Fl 134 w(http://fscked.org/proj/nja) o(md.s) o(htm) o(l/) p
Fo 274 2768 a(Ov) m(erview) 109 b(Helps) 34 b(trac) m(k) h(do) m(wn) f
(a) g(wide) g(range) g(of) g(memory) f(allo) s(cation) j(problems) e
(and) f(is) h(divided) 754 2868 y(in) m(to) e(a) f(fron) m(t) f(end) g
(executable) i(and) e(a) g(library) g(bac) m(k) h(end.) p
Fm 169 3043 a(\017) p Fo 60 w(Ob) 5 b(jectCen) m(ter) 274
3193 y(Author) 194 b(Cen) m(terLine) 31 b(Dev) m(elopmen) m(t) i
(Systems) d(\() p Fl(info@centerline.com) p Fo(\)) 274
3344 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
3494 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
3644 y(Lo) s(cation) p Fl 134 w(http://www.centerline.com/) p
Fo 274 3794 a(Ov) m(erview) 109 b(Pro) m(vides) 24 b(a) f(C) f(and) g
(C) p Fl(++) p Fo 22 w(programming) h(en) m(vironmen) m(t) g(that) h
(can) f(detect) h(memory) f(leaks,) 754 3894 y(duplicate) 38
b(frees) f(and) f(illegal) j(access) f(errors) f(including) f(loads) h
(from) g(uninitialised) g(ob-) 754 3993 y(jects.) p Fm
169 4169 a(\017) p Fo 60 w(Optimizeit) 274 4319 y(Author) 194
b(In) m(tuitiv) m(e) 32 b(Systems,) e(Inc.) 41 b(\() p
Fl(info@optimizeit.com) p Fo(\)) 274 4469 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 4619 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274 4770
y(Lo) s(cation) p Fl 134 w(http://www.optimizeit.com/) p
Fo 274 4920 a(Ov) m(erview) 109 b(A) m(ttempts) 43 b(to) f(lo) s(cate) i
(memory) d(leaks) h(and) f(p) s(erformance) g(b) s(ottlenec) m(ks) i
(in) e(Ja) m(v) -5 b(a) 42 b(pro-) 754 5019 y(grams.) p
Fm 169 5195 a(\017) p Fo 60 w(Plum) m(b) s(er) 274 5345
y(Author) 194 b(Ow) m(en) 31 b(O'Malley) g(\() p Fl
(omalley@ics.uci.edu) p Fo(\)) 274 5495 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 5645 y(Platforms) 92
b(Lin) m(ux,) 31 b(Solaris,) g(SunOS) p 90 rotate dyy
eop
%%Page: 229 235
229 234 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(229) 274 365 y(Lo) s(cation) p Fl 134 w
(http://www.ics.uci.edu/~so) o(ftte) o(st/) o(plum) o(ber.) o(htm) o(l)
p Fo 274 514 a(Ov) m(erview) 109 b(A) 36 b(to) s(ol) g(that) g
(replaces) g(the) f(normal) g(Ada) h(and) e(C/C) p Fl(++) p
Fo 35 w(dynamic) h(memory) g(allo) s(cation) 754 613
y(functions) 30 b(and) g(detects) i(unfreed) d(memory) h(blo) s(c) m
(ks.) p Fm 169 786 a(\017) p Fo 60 w(Purify) 274 934
y(Author) 194 b(Rational) 32 b(Soft) m(w) m(are) g(\() p
Fl(info@rational.com) p Fo(\)) 274 1082 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 1230 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274 1378
y(Lo) s(cation) p Fl 134 w(http://www.rational.com/) p
Fo 274 1527 a(Ov) m(erview) 109 b(Uses) 30 b(Ob) 5 b(ject) 30
b(Co) s(de) f(Insertion) h(tec) m(hnology) h(to) g(pro) m(vide) f
(run-time) f(error) g(c) m(hec) m(king) j(and) 754 1626
y(memory) f(leak) g(detection.) p Fm 169 1799 a(\017) p
Fo 60 w(QC) 274 1947 y(Author) 194 b(On) m(yx) 30 b(T) -8
b(ec) m(hnology) 33 b(\() p Fl(sales@onyx-tech.com) p
Fo(\)) 274 2095 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
2243 y(Platforms) 92 b(MacOS) 274 2392 y(Lo) s(cation) p
Fl 134 w(http://www.onyx-tech.com/) p Fo 274 2540 a(Ov) m(erview) 109
b(Runs) 31 b(in) h(the) g(bac) m(kground) g(as) h(a) f(con) m(trol) i
(panel) e(and) f(detects) i(v) -5 b(arious) 33 b(memory) e(errors) 754
2639 y(whic) m(h) g(can) f(then) g(b) s(e) g(caugh) m(t) i(and) d(run) g
(under) g(a) i(debugger.) p Fm 169 2812 a(\017) p Fo
60 w(SBase) 274 2960 y(Author) 194 b(Ben) 31 b(Lilburne) e(\() p
Fl(blilburn@cit.nepean.uws.ed) o(u.au) p Fo -1 w(\)) 274
3108 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
3257 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
3405 y(Lo) s(cation) p Fl 134 w(http://www.cit.uws.edu.au/) o(~bli) o
(lbu) o(rn/s) o(base) o(/) p Fo 274 3553 a(Ov) m(erview) 109
b(A) 31 b(set) g(of) f(classes) i(for) e(debugging) g(dynamic) g
(memory) h(problems) e(in) h(Ob) 5 b(jectiv) m(e) 32
b(C.) p Fm 169 3725 a(\017) p Fo 60 w(SCID) 274 3874
y(Author) 194 b(Ric) m(hard) 31 b(Mills) g(\() p Fl
(rich@xerp.freeserve.co.uk) p Fo(\)) 274 4022 y(License) 191
b(GNU) 31 b(General) h(Public) e(License) 274 4170 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 4318 y(Lo) s(cation) p
Fl 134 w(http:///www.xerp.demon.co.) o(uk/) p Fo 274
4466 a(Ov) m(erview) 109 b(A) 32 b(program) e(that) i(tries) f(to) h
(help) e(lo) s(cate) j(bugs) d(caused) h(b) m(y) g(the) g(reading) g
(and) g(writing) g(of) 754 4566 y(in) m(v) -5 b(alid) 31
b(p) s(oin) m(ters) g(in) f(C) g(co) s(de) g(b) m(y) h(source) f(co) s
(de) h(insertion.) p Fm 169 4739 a(\017) p Fo 60 w(SmartAllo) s(c) 274
4887 y(Author) 194 b(John) 30 b(W) -8 b(alk) m(er) 274
5035 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
5183 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(MS-DOS) 274
5331 y(Lo) s(cation) p Fl 134 w(http://www.fourmilab.ch/sm) o(arta) o
(ll/) p Fo 274 5480 a(Ov) m(erview) 109 b(Detects) 30
b(orphaned) d(bu\013ers) f(of) i(dynamic) f(memory) g(allo) s(cations) j
(and) d(also) h(helps) f(to) h(\014nd) 754 5579 y(other) j(common) g
(problems) e(in) h(managemen) m(t) i(of) f(dynamic) f(storage.) p
90 rotate dyy eop
%%Page: 230 236
230 235 bop Fo 94 -116 a(230) 3332 b(mpatrol) p Fm 169
365 a(\017) p Fo 60 w(SmartHeap) 274 515 y(Author) 194
b(MicroQuill) 32 b(\() p Fl(info@microquill.com) p Fo(\)) 274
664 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
814 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws,) h
(OS/2,) g(MS-DOS,) f(MacOS) 274 963 y(Lo) s(cation) p
Fl 134 w(http://www.microquill.com/) p Fo 274 1112 a(Ov) m(erview) 109
b(Pro) m(vides) 23 b(optimised) g(heap) f(p) s(erformance) f(along) j
(with) e(detecting) i(memory) e(leaks,) j(mem-) 754 1212
y(ory) 31 b(o) m(v) m(erwrites,) h(double-freeing,) f(wild) f(p) s(oin)
m(ters,) g(in) m(v) -5 b(alid) 31 b(parameters,) g(etc.) p
Fm 169 1386 a(\017) p Fo 60 w(Sp) s(otligh) m(t) 274
1536 y(Author) 194 b(On) m(yx) 30 b(T) -8 b(ec) m(hnology) 33
b(\() p Fl(sales@onyx-tech.com) p Fo(\)) 274 1685 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 1835 y(Platforms) 92
b(MacOS) 274 1984 y(Lo) s(cation) p Fl 134 w(http://www.onyx-tech.com/)
p Fo 274 2134 a(Ov) m(erview) 109 b(P) m(erforms) 23
b(memory) h(protection) g(on) f(P) m(o) m(w) m(erPC) h(executables) h
(and) e(helps) f(detect) j(memory) 754 2233 y(leaks.) p
Fm 169 2408 a(\017) p Fo 60 w(Stac) m(kT) -8 b(race) 274
2557 y(Author) 194 b(Bjorn) 31 b(Reese) g(\() p Fl
(breese@mail1.stofanet.dk) p Fo(\)) 274 2707 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 2856 y(Platforms) 92
b(V) -8 b(arious) 32 b(UNIX) 274 3005 y(Lo) s(cation) p
Fl 134 w(http://home1.stofanet.dk/b) o(rees) o(e/d) o(ebug) o(/deb) o
(ug.) o(tar.) o(gz) p Fo 274 3155 a(Ov) m(erview) 109
b(Pro) m(vides) 41 b(co) s(de) f(to) h(generate) h(a) e(stac) m(k) h
(trace) h(of) e(the) g(program) g(at) h(an) m(y) f(p) s(oin) m(t) g
(during) 754 3254 y(execution) j(using) e(either) g(a) h(debugger) f
(or) g(built-in) g(metho) s(ds) f(found) g(in) h(the) h(GNU) f(C) 754
3354 y(compiler) 31 b(or) g(on) f(some) h(systems.) p
Fm 169 3528 a(\017) p Fo 60 w(T) -8 b(estCen) m(ter) 274
3678 y(Author) 194 b(Cen) m(terLine) 31 b(Dev) m(elopmen) m(t) i
(Systems) d(\() p Fl(info@centerline.com) p Fo(\)) 274
3827 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
3977 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX) 274
4126 y(Lo) s(cation) p Fl 134 w(http://www.centerline.com/) p
Fo 274 4276 a(Ov) m(erview) 109 b(Detects) 35 b(memory) e(leaks,) h
(duplicate) f(frees) g(and) f(illegal) i(access) g(errors) e(including)
g(loads) 754 4375 y(from) e(uninitialised) h(ob) 5 b(jects.) p
Fm 169 4550 a(\017) p Fo 60 w(Third) 29 b(Degree) 274
4699 y(Author) 194 b(Digital) 33 b(Equipmen) m(t) d(Corp) s(oration) g
(\() p Fl(info@digital.com) p Fo(\)) 274 4848 y(License) 191
b(Commercial) 32 b(Soft) m(w) m(are) 274 4998 y(Platforms) 92
b(Digital) 33 b(UNIX) 274 5147 y(Lo) s(cation) p Fl 134
w(http://www.digital.com/) p Fo 274 5297 a(Ov) m(erview) 109
b(A) 35 b(to) s(ol) h(that) g(p) s(erforms) d(memory) i(access) h(c) m
(hec) m(ks) g(and) e(memory) h(leak) h(detection) g(of) f(C,) 754
5396 y(C) p Fl(++) p Fo 23 w(and) 22 b(F) -8 b(ortran) 24
b(programs) e(at) i(run-time.) 38 b(Applications) 24
b(are) f(mo) s(di\014ed) f(using) h(A) -8 b(TOM) 754
5496 y(to) 28 b(determine) g(if) f(an) m(y) h(memory) f(lo) s(cations) h
(are) g(accessed) g(when) f(not) g(prop) s(erly) f(allo) s(cated) 754
5596 y(or) 31 b(initialised.) p 90 rotate dyy eop
%%Page: 231 237
231 236 bop Fo 94 -116 a(App) s(endix) 29 b(K:) h(Related) i(soft) m(w)
m(are) 2441 b(231) p Fm 169 365 a(\017) p Fo 60 w(Vmallo) s(c) 274
514 y(Author) 194 b(Kiem-Phong) 31 b(V) -8 b(o) 31 b(\() p
Fl(kpv@research.att.com) p Fo(\)) 274 663 y(License) 191
b(A) -8 b(T&T) 30 b(Source) h(Co) s(de) e(License) 274
811 y(Platforms) 92 b(V) -8 b(arious) 32 b(UNIX,) e(Windo) m(ws) 274
960 y(Lo) s(cation) p Fl 134 w(http://akpublic.research.a) o(tt.c) o
(om/) o(sw/t) o(ools) o(/vm) o(allo) o(c/) p Fo 274 1109
a(Ov) m(erview) 109 b(A) 32 b(discipline) f(and) f(metho) s(d) g
(library) h(for) g(dynamic) g(memory) f(allo) s(cation,) k(with) d
(supp) s(ort) 754 1209 y(for) g(regions,) g(debugging) f(and) g
(pro\014ling.) p Fm 169 1382 a(\017) p Fo 60 w(Wip) s(eout) 274
1530 y(Author) 194 b(Olaf) 31 b(Barthel) g(\() p Fl
(olsen@sourcery.han.de) p Fo(\)) 274 1679 y(License) 191
b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274 1828 y(Platforms) 92
b(AmigaOS) 274 1977 y(Lo) s(cation) p Fl 134 w
(http://wuarchive.wustl.edu) o(/~am) o(ine) o(t/di) o(rs/d) o(ev_) o
(debu) o(g.ht) o(ml) p Fo 274 2125 a(Ov) m(erview) 109
b(Runs) 30 b(in) g(the) g(bac) m(kground) g(c) m(hec) m(king) j(free) d
(memory) g(for) g(corruption.) p Fm 169 2299 a(\017) p
Fo 60 w(Y) -8 b(aMa) 274 2447 y(Author) 194 b(V) -8 b(enk) j(atesha) 32
b(Murth) m(y) e(G.) h(\() p Fl(gvmt@vsnl.com) p Fo(\)) 274
2596 y(License) 191 b(F) -8 b(ree) 32 b(Soft) m(w) m(are) 274
2745 y(Platforms) 92 b(Lin) m(ux) 274 2893 y(Lo) s(cation) p
Fl 134 w(http://www.geocities.com/i) o(psgv) o(m/l) o(ibya) o(ma/) p
Fo 274 3042 a(Ov) m(erview) 109 b(A) 30 b(memory) e(allo) s(cator) k
(with) c(leak) i(tracing) g(and) e(some) i(an) m(ti-heap) g(corruption)
e(facilities.) p Fm 169 3215 a(\017) p Fo 60 w(Y) -8
b(AMD) 32 b(\(Y) -8 b(et) 32 b(Another) f(Mallo) s(c) h(Debugger\)) 274
3364 y(Author) 194 b(Nate) 32 b(Eldredge) e(\() p Fl(neldredge@hmc.edu)
p Fo(\)) 274 3513 y(License) 191 b(GNU) 31 b(General) h(Public) e
(License) 274 3662 y(Platforms) 92 b(Lin) m(ux,) 31 b(MS-DOS) 274
3810 y(Lo) s(cation) p Fl 134 w(http://www3.hmc.edu/~neldr) o(edge) o
(/ya) o(md/) p Fo 274 3959 a(Ov) m(erview) 109 b(A) 36
b(to) s(ol) h(for) e(\014nding) f(bugs) h(related) i(to) f(dynamic) g
(memory) f(allo) s(cation) j(in) d(C) h(and) f(C) p Fl(++) p
Fo(,) 754 4059 y(and) 30 b(includes) g(paging) h(mec) m(hanisms) g(to) g
(catc) m(h) h(bugs) d(immediately) -8 b(.) p Fm 169 4232
a(\017) p Fo 60 w(ZeroF) g(ault) 274 4381 y(Author) 194
b(The) 30 b(Kernel) h(Group) e(\() p Fl(info@zerofault.com) p
Fo(\)) 274 4529 y(License) 191 b(Commercial) 32 b(Soft) m(w) m(are) 274
4678 y(Platforms) 92 b(AIX) 31 b(UNIX) 274 4827 y(Lo) s(cation) p
Fl 134 w(http://www.zerofault.com/) p Fo 274 4976 a(Ov) m(erview) 109
b(Uses) 21 b(run-time) g(em) m(ulator) g(tec) m(hnology) i(to) e(pro) m
(vide) g(run-time) f(error) g(c) m(hec) m(king) j(and) d(mem-) 754
5075 y(ory) 31 b(leak) g(detection.) 219 5248 y(Ho) m(w) m(ev) m(er,) e
(b) s(efore) d(y) m(ou) g(try) g(out) g(an) m(y) g(of) g(the) g(ab) s
(o) m(v) m(e) h(soft) m(w) m(are,) i(there) d(ma) m(y) g(already) h(b) s
(e) e(a) h(mallo) s(c) h(library) 94 5348 y(with) 35
b(debugging) g(supp) s(ort) e(on) i(y) m(our) g(system) g(that) g(migh)
m(t) h(b) s(e) e(suitable) h(for) g(solving) h(y) m(our) f(problem.) 53
b(F) -8 b(or) 94 5448 y(example,) 32 b(on) e(Solaris) h(the) f(follo) m
(wing) i(libraries) f(are) f(a) m(v) -5 b(ailable:) p
Fe 94 5645 a(mallo) s(c\(3c\)) p Fo 66 w(T) d(rade-o\013) 32
b(b) s(et) m(w) m(een) f(p) s(erformance) e(and) h(e\016ciency) -8
b(.) p 90 rotate dyy eop
%%Page: 232 238
232 237 bop Fo 94 -116 a(232) 3332 b(mpatrol) p Fe 94
365 a(mallo) s(c\(3x\)) p Fo 574 465 a(Slo) m(w) m(er) 32
b(p) s(erformance,) e(space-e\016cien) m(t.) p Fe 94
614 a(bsdmallo) s(c\(3x\)) p Fo 574 714 a(Better) i(p) s(erformance,) e
(space-ine\016cien) m(t.) p Fe 94 863 a(m) m(tmallo) s(c\(3t\)) p
Fo 574 963 a(Thread-safe) h(memory) f(allo) s(cator.) p
Fe 94 1112 a(mapmallo) s(c\(3x\)) p Fo 574 1212 a(Uses) p
Fl 31 w(mmap\(\)) p Fo 29 w(instead) g(of) p Fl 31 w(sbrk\(\)) p
Fo 29 w(to) h(allo) s(cate) i(heap) d(space.) p Fe 94
1362 a(w) m(atc) m(hmallo) s(c\(3x\)) p Fo 574 1461 a(Uses) h(w) m(atc)
m(h) h(p) s(oin) m(t) e(areas) h(to) g(c) m(hec) m(k) h(for) e(o) m(v) m
(er\015o) m(ws.) 219 1636 y(On) 36 b(platforms) h(with) g(the) h(GNU) f
(C) g(library) -8 b(,) 39 b(suc) m(h) e(as) h(Lin) m(ux,) g(there) g
(are) f(sev) m(eral) i(en) m(vironmen) m(t) e(v) -5 b(ari-) 94
1735 y(ables) 36 b(that) g(can) g(b) s(e) f(used) f(to) i(enable) g(v)
-5 b(arious) 35 b(debugging) h(features) f(of) p Fl 36
w(malloc\(\)) p Fo(,) g(etc.) 56 b(There) 35 b(are) h(also) 94
1835 y(extra) f(functions) e(pro) m(vided) g(in) g(the) h(library) f
(whic) m(h) g(can) h(b) s(e) f(used) g(to) h(aid) g(in) f(debugging,) i
(and) e(some) h(shell) 94 1934 y(scripts) 26 b(whic) m(h) g(can) g
(translate) h(return) e(addresses) g(or) h(lo) s(cate) i(unfreed) c
(memory) i(allo) s(cations) i(in) e(the) g(log) h(\014les) 94
2034 y(pro) s(duced.) 42 b(Useful) 31 b(information) h(on) f(the) h
(debugging) f(features) g(a) m(v) -5 b(ailable) 34 b(within) d(the) g
(GNU) h(C) f(library) g(is) 94 2134 y(lo) s(cated) h(at) p
Fl 31 w(http://sdb.suse.de/sdb/en) o(/htm) o(l/aj) o(_de) o(bug.) o
(html) p Fo -1 w(.) 219 2258 y(If) 27 b(y) m(ou) i(susp) s(ect) e(that)
i(the) f(debugging) g(problem) f(y) m(ou) h(are) g(lo) s(oking) h(at) g
(is) f(lik) m(ely) h(to) g(b) s(e) e(related) i(to) g(UNIX) 94
2358 y(system) 40 b(calls) g(then) f(some) h(systems) f(come) h(with) f
(the) p Fl 40 w(strace) p Fo 37 w(or) p Fl 39 w(truss) p
Fo 38 w(commands) g(whic) m(h) g(allo) m(w) i(y) m(ou) 94
2457 y(to) d(trace) h(all) f(of) f(the) g(system) g(calls) i(that) e(a)
h(program) f(mak) m(es) h(when) e(running.) 59 b(This) 36
b(can) h(sometimes) i(b) s(e) 94 2557 y(in) m(v) -5 b(aluable) 37
b(in) f(pinp) s(oin) m(ting) f(the) h(exact) h(p) s(oin) m(t) f(at) g
(whic) m(h) g(a) g(program) g(fails,) i(but) d(as) h(it) g(only) g(op) s
(erates) g(at) 94 2657 y(the) 31 b(system) g(call) g(lev) m(el,) i(no) d
(information) g(ab) s(out) h(individual) e(memory) i(allo) s(cations) h
(is) f(a) m(v) -5 b(ailable.) 219 2781 y(On) 36 b(Windo) m(ws) g(2000) j
(\(and) d(probably) f(later) j(releases) g(of) e(the) h(op) s(erating) g
(system) g(as) f(w) m(ell\)) i(there) f(is) g(a) 94 2881
y(utilit) m(y) 28 b(called) p Fl 27 w(pageheap) p Fo
24 w(whic) m(h) e(acts) h(in) f(a) h(similar) f(w) m(a) m(y) h(to) g
(the) p Fl 27 w(mpatrol) p Fo 24 w(command) f(in) g(that) g(it) h(o) m
(v) m(errides) 94 2980 y(the) h(de\014nitions) f(of) p
Fl 27 w(malloc\(\)) p Fo 26 w(and) f(related) j(functions) d(for) i(an)
m(y) f(programs) g(that) h(it) g(runs.) 38 b(It) 28 b(has) f(a) h
(similar) 94 3080 y(b) s(eha) m(viour) 33 b(to) g(the) g(`) p
Fl(--page-alloc-upper) p Fo(') 28 b(option) 34 b(but) e(has) g(far) h
(less) g(features.) 48 b(Ho) m(w) m(ev) m(er,) 36 b(it) d(could) g(b) s
(e) 94 3180 y(v) m(ery) e(useful) f(if) g(y) m(ou) h(can't) g(get) h
(mpatrol) e(to) h(w) m(ork) g(for) f(y) m(ou.) p 90 rotate
dyy eop
%%Page: 233 239
233 238 bop Fo 94 -116 a(App) s(endix) 29 b(L:) i(References) 2696
b(233) p Fk 94 365 a(App) t(endix) 53 b(L) 81 b(References) p
Fo 219 587 a(This) 26 b(section) i(con) m(tains) h(references) e(to) h
(in) m(teresting) g(pap) s(ers) e(and) h(resources) g(on) g(related) h
(topics) f(and) g(the) 94 687 y(\014eld) 36 b(of) g(memory) g
(managemen) m(t) i(in) e(general.) 59 b(The) 35 b(v) -5
b(ast) 37 b(ma) 5 b(jorit) m(y) 37 b(of) f(theoretical) j(information) d
(can) h(b) s(e) 94 787 y(found) 23 b(at) i(the) f(Memory) g(Managemen) m
(t) i(Reference,) h(although) d(this) g(do) s(es) f(tend) h(to) h
(concen) m(trate) h(on) e(garbage) 94 886 y(collection.) 43
b(The) 29 b(other) g(references) h(tak) m(e) h(a) e(more) g(practical) i
(approac) m(h) e(to) h(memory) f(managemen) m(t) i(and) d(in) 94
986 y(some) e(cases) h(pro) m(vide) e(implemen) m(tation) i(details.) 40
b(Let) 26 b(me) f(kno) m(w) h(if) f(y) m(ou'd) h(lik) m(e) g(to) g(see)
g(an) m(y) g(other) g(references) 94 1086 y(or) 31 b(resources) f
(added) g(to) h(this) f(list.) p Fm 169 1210 a(\017) p
Fo 60 w(Av) m(oiding) i(Motif) f(Memory) g(Leaks) 274
1358 y(Author) 194 b(Ken) m(ton) 31 b(Lee) g(\() p Fl(kenton@rahul.net)
p Fo(\)) 274 1507 y(Lo) s(cation) p Fl 134 w
(http://www.rahul.net/kento) o(n/tx) o(a/m) o(ar96) o(.htm) o(l) p
Fo 274 1656 a(Ov) m(erview) 109 b(An) 30 b(article) j(on) d(a) m(v) m
(oiding) i(memory) e(leaks) h(in) f(Motif) i(applications.) p
Fm 169 1780 a(\017) p Fo 60 w(C) p Fl(++) p Fo 30 w(F) -10
b(A) m(Q) 31 b(Lite:) 41 b(F) -8 b(reestore) 32 b(Managemen) m(t) 274
1928 y(Author) 194 b(Marshall) 32 b(Cline) e(\() p Fl
(cline@parashift.com) p Fo(\)) 274 2077 y(Lo) s(cation) p
Fl 134 w(http://www.parashift.com/c) o(++-f) o(aq-) o(lite) o(/fre) o
(est) o(ore-) o(mgmt) o(.ht) o(ml) p Fo 274 2226 a(Ov) m(erview) 109
b(Ev) m(erything) 31 b(y) m(ou) g(ev) m(er) g(w) m(an) m(ted) g(to) g
(kno) m(w) g(ab) s(out) f(C) p Fl(++) p Fo 29 w(memory) g(managemen) m
(t.) p Fm 169 2350 a(\017) p Fo 60 w(Debugging) i(Memory) f(On) e(Lin) m
(ux) 274 2498 y(Author) 194 b(P) m(etr) 32 b(Sorfa) e(\() p
Fl(editor@ssc.com) p Fo(\)) 274 2647 y(Lo) s(cation) p
Fl 134 w(http://www.linuxjournal.co) o(m/ar) o(tic) o(le.p) o(hp?s) o
(id=) o(4681) p Fo 274 2796 a(Ov) m(erview) 109 b(An) 30
b(article) j(detailing) e(the) g(to) s(ols) g(a) m(v) -5
b(ailable) 33 b(to) e(debug) f(memory) g(problems) f(on) i(Lin) m(ux.) p
Fm 169 2920 a(\017) p Fo 60 w(E\013ectiv) m(e) i(C) p
Fl(++) p Fo 29 w(Memory) e(Allo) s(cation) 274 3068 y(Author) 194
b(Aaron) 31 b(Dailey) h(\() p Fl(adailey@chaparraltec.com) p
Fo(\)) 274 3217 y(Lo) s(cation) p Fl 134 w(http://www.embedded.com/19) o
(99/9) o(901) o(/990) o(1fea) o(t2.) o(htm) p Fo 274
3366 a(Ov) m(erview) 109 b(Do) s(cumen) m(ts) 39 b(tec) m(hniques) g
(for) f(b) s(etter) g(use) g(of) h(the) f(C) p Fl(++) p
Fo 38 w(dynamic) g(memory) g(allo) s(cation) 754 3465
y(op) s(erators.) p Fm 169 3638 a(\017) p Fo 60 w(Ho) m(w) 32
b(T) -8 b(o) 30 b(Debug) h(Memory) g(Leaks) 274 3787
y(Author) 194 b(The) 30 b(Mozilla) j(Organization) f(\() p
Fl(webmaster@mozilla.org) p Fo(\)) 274 3936 y(Lo) s(cation) p
Fl 134 w(http://www.lxr.mozilla.org) o(/moz) o(ill) o(a/so) o(urce) o
(/xp) o(com/) o(doc/) o(Mem) o(oryT) o(ools) o(.ht) o(ml) p
Fo 274 4084 a(Ov) m(erview) 109 b(A) 31 b(list) h(of) f(memory) g
(analysis) g(to) s(ols) h(that) f(the) g(Mozilla) i(team) f(ha) m(v) m
(e) g(dev) m(elop) s(ed) f(in) f(order) 754 4184 y(to) i(quic) m(kly) f
(sp) s(ot) f(and) g(\014x) f(memory) i(leaks.) p Fm 169
4308 a(\017) p Fo 60 w(Just) f(Sa) m(y) h(No) g(T) -8
b(o) 31 b(Memory) g(Leaks) 274 4457 y(Author) 194 b(Stev) m(e) 32
b(Litt) f(\() p Fl(slitt@troubleshooters.com) p Fo(\)) 274
4605 y(Lo) s(cation) p Fl 134 w(http://www.troubleshooters) o(.com) o
(/co) o(deco) o(rn/m) o(eml) o(eak.) o(htm) p Fo 274
4754 a(Ov) m(erview) 109 b(An) 30 b(article) j(discussing) c(memory) i
(leaks) g(and) f(ho) m(w) g(to) h(a) m(v) m(oid) h(them.) p
Fm 169 4878 a(\017) p Fo 60 w(A) f(Memory) g(Allo) s(cator) 274
5027 y(Author) 194 b(Doug) 32 b(Lea) f(\() p Fl(dl@gee.cs.oswego.edu) p
Fo(\)) 274 5175 y(Lo) s(cation) p Fl 134 w(http://gee.cs.oswego.edu/d) o
(l/ht) o(ml/) o(mall) o(oc.h) o(tml) p Fo 274 5324 a(Ov) m(erview) 109
b(Information) 31 b(on) f(general) h(memory) g(allo) s(cation) h
(principles.) p Fm 169 5497 a(\017) p Fo 60 w(The) e(Memory) h
(Managemen) m(t) i(Reference) 274 5645 y(Author) 194
b(XANAL) -8 b(YS) 31 b(Soft) m(w) m(are) h(T) -8 b(o) s(ols) 31
b(\() p Fl(mm-web@xanalys.com) p Fo(\)) p 90 rotate dyy
eop
%%Page: 234 240
234 239 bop Fo 94 -116 a(234) 3332 b(mpatrol) 274 365
y(Lo) s(cation) p Fl 134 w(http://www.xanalys.com/sof) o(twar) o(e_t) o
(ools) o(/mm/) p Fo 274 515 a(Ov) m(erview) 109 b(Links) 29
b(to) i(man) m(y) f(do) s(cumen) m(ts) f(and) g(researc) m(h) h(pap) s
(ers) f(in) g(the) h(\014eld) f(of) h(memory) g(manage-) 754
614 y(men) m(t,) i(and) d(has) h(a) h(large) h(glossary) f(whic) m(h) f
(lists) h(and) f(explains) g(related) h(terms.) p Fm
169 739 a(\017) p Fo 60 w(My) g(Ran) m(t) g(on) f(C) p
Fl(++) p Fo('s) p Fl 30 w(operator) e(new) p Fo 274 888
a(Author) 194 b(Da) m(vid) 32 b(Mazieres) g(\() p Fl(dm@cs.nyu.edu) p
Fo(\)) 274 1038 y(Lo) s(cation) p Fl 134 w(http://www.pdos.lcs.mit.ed) o
(u/~d) o(m/c) o(++-n) o(ew.h) o(tml) p Fo 274 1187 a(Ov) m(erview) 109
b(Pro) m(vides) 29 b(a) f(scathing) h(critique) g(on) f(the) g(C) p
Fl(++) p Fo 27 w(dynamic) g(memory) g(allo) s(cation) j(op) s(erators.)
p Fm 169 1362 a(\017) p Fo 60 w(The) f(Virtual) h(Memory) g(T) -8
b(utorial) 274 1511 y(Author) 194 b(The) 30 b(Hyp) s(erlearning) g(Cen)
m(ter) h(\() p Fl(webmaster@cne.gmu.edu) p Fo(\)) 274
1660 y(Lo) s(cation) p Fl 134 w(http://www.cne.gmu.edu/mod) o(ules) o
(/vm) o(/) p Fo 274 1810 a(Ov) m(erview) 109 b(Pro) m(vides) 37
b(a) g(comprehensiv) m(e) g(tutorial) h(on) e(virtual) h(memory) -8
b(,) 39 b(as) d(w) m(ell) i(as) f(detailing) h(its) 754
1910 y(history) -8 b(,) 31 b(theory) g(and) f(implemen) m(tation.) p
Fm 169 2034 a(\017) p Fo 60 w(X) h(Windo) m(w) g(System) f(Memory) h
(Leaks) f(and) g(Other) g(Memory) h(Bugs) 274 2183 y(Author) 194
b(Ken) m(ton) 31 b(Lee) g(\() p Fl(kenton@rahul.net) p
Fo(\)) 274 2333 y(Lo) s(cation) p Fl 134 w(http://www.rahul.net/kento) o
(n/tx) o(a/f) o(eb96) o(.htm) o(l) p Fo 274 2482 a(Ov) m(erview) 109
b(An) 30 b(article) j(on) d(debugging) g(memory) g(problems) g(in) g(X)
h(applications.) p 90 rotate dyy eop
%%Page: 235 241
235 240 bop Fo 94 -116 a(App) s(endix) 29 b(M:) i(Ab) s(out) f(the) g
(author) 2386 b(235) p Fk 94 365 a(App) t(endix) 53 b(M) 81
b(Ab) t(out) 53 b(the) g(author) p Fo 219 589 a(I) 30
b(liv) m(e) i(in) f(Edin) m(burgh) d(\(the) k(capital) g(cit) m(y) g
(of) f(Scotland\)) g(and) f(w) m(ork) h(for) f(an) h(American) g
(compan) m(y) g(called) 94 689 y(Analog) k(Devices) f(whic) m(h) f
(designs) f(and) g(man) m(ufactures) h(digital) i(and) d(analogue) i
(electronic) h(equipmen) m(t,) f(as) 94 789 y(w) m(ell) 28
b(as) f(Digital) i(Signal) e(Pro) s(cessors) f(\(DSPs\).) 40
b(The) 26 b(compan) m(y) h(I) f(used) g(to) h(w) m(ork) g(for) f(w) m
(as) h(called) h(Edin) m(burgh) 94 888 y(P) m(ortable) c(Compilers,) f
(a) g(small) f(Edin) m(burgh-based) f(compan) m(y) h(whic) m(h) g
(designed,) i(wrote) e(and) f(sold) i(compilers) 94 988
y(for) j(v) -5 b(arious) 26 b(programming) f(languages) j(and) d(op) s
(erating) h(systems) g(\(mainly) g(UNIX) g(v) -5 b(arian) m(ts\).) 41
b(A) 26 b(few) f(y) m(ears) 94 1088 y(ago) 33 b(it) f(b) s(ecame) g(a) g
(wholly-o) m(wned) g(subsidiary) e(of) i(Analog) h(Devices) g(and) e
(our) g(fo) s(cus) g(w) m(as) g(shifted) h(to) g(write) 94
1187 y(C) e(and) g(C) p Fl(++) p Fo 30 w(compilers) g(for) h(the) f(v)
-5 b(arious) 30 b(ADI) h(DSPs.) 219 1312 y(I) 20 b(started) h(w) m
(orking) g(at) g(EPC) e(immediately) j(after) f(obtaining) g(m) m(y) f
(honours) g(degree) h(in) f(Computer) f(Science) 94 1411
y(at) 34 b(Edin) m(burgh) e(Univ) m(ersit) m(y) -8 b(.) 51
b(My) 33 b(in) m(terests) h(lie) g(in) f(op) s(erating) h(systems) f
(and) g(programming) g(to) s(ols) h(so) f(this) 94 1511
y(w) m(as) c(an) f(ideal) g(w) m(orking) h(en) m(vironmen) m(t) f(for) g
(me) g(to) h(apply) e(m) m(y) i(kno) m(wledge) g(and) e(learn) h(more) g
(ab) s(out) g(the) g(bits) 94 1611 y(and) i(pieces) h(that) g(most) g
(programmers) f(and) g(computer) g(users) f(kno) m(w) i(little) h(or) e
(nothing) h(ab) s(out.) 219 1735 y(W) -8 b(riting) 41
b(compilers) f(is) f(a) h(complex) h(business) d(that) i(most) g(p) s
(eople) g(tak) m(e) h(for) e(gran) m(ted.) 69 b(The) 39
b(p) s(opular) 94 1835 y(view) 28 b(is) f(that) h(once) g(y) m(ou) g
(ha) m(v) m(e) h(a) e(lexer) h(and) f(a) h(parser) e(for) h(a) h
(particular) g(programming) f(language) i(then) e(y) m(ou) 94
1934 y(are) 34 b(90\045) f(of) g(the) g(w) m(a) m(y) h(to) f(ha) m
(ving) h(a) f(compiler.) 48 b(Ho) m(w) m(ev) m(er,) 36
b(mo) s(dern) 31 b(compilers) j(are) f(required) f(to) h(p) s(erform) 94
2034 y(more) f(and) e(more) h(aggressiv) m(e) j(optimisations) e(on) f
(user) f(co) s(de,) i(all) g(of) f(whic) m(h) g(require) g(complex) h
(algorithms,) 94 2134 y(and) 27 b(most) h(of) f(whic) m(h) g(are) h
(applied) f(at) h(the) g(co) s(de-generator) h(lev) m(el.) 41
b(Add) 27 b(accurate) h(debugging) g(information) 94
2233 y(generation,) 41 b(C) p Fl(++) p Fo 36 w(exceptions) e(and) d
(templates,) 41 b(inline) c(assem) m(bler) h(supp) s(ort) e(and) g(an) i
(e\016cien) m(t) g(run-time) 94 2333 y(library) 30 b(and) g(y) m(ou) h
(b) s(egin) f(to) h(see) g(wh) m(y) f(writing) g(and) g(main) m
(taining) i(a) e(compiler) h(is) g(not) f(a) h(solo) g(e\013ort!) 219
2457 y(I) 39 b(originally) h(wrote) f(the) h(mpatrol) f(library) f(in) h
(m) m(y) g(spare) g(time) h(with) e(the) h(in) m(ten) m(tion) i(of) e
(selling) h(it) f(to) 94 2557 y(EPC) 25 b(as) h(a) g(comprehensiv) m(e)
g(memory) g(debugging) f(solution) h(for) g(in) m(tegration) h(with) f
(their) f(UNIX) h(compilers.) 94 2657 y(Unfortunately) -8
b(,) 31 b(EPC) e(w) m(as) h(tak) m(en) g(o) m(v) m(er) h(b) m(y) f(ADI)
g(b) s(efore) f(it) h(w) m(as) g(\014nished) e(and) h(ADI) g(had) g(no)
h(use) f(for) g(suc) m(h) 94 2756 y(a) 39 b(library) f(in) f(their) h
(DSP) g(to) s(olc) m(hain.) 65 b(Ho) m(w) m(ev) m(er,) 43
b(I) 38 b(still) g(feel) h(that) g(it) g(w) m(as) f(w) m(orth) g(the) g
(e\013ort) h(\(not) g(least) 94 2856 y(b) s(ecause) 33
b(of) g(all) h(the) f(kno) m(wledge) h(of) f(other) h(op) s(erating) f
(systems) g(that) g(I) g(gained) h(whilst) e(writing) h(it\),) i(and) d
(I) 94 2956 y(hop) s(e) e(y) m(ou) h(do) f(to) s(o!) p
90 rotate dyy eop
%%Page: 236 242
236 241 bop Fo 94 -116 a(236) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Page: 237 243
237 242 bop Fo 94 -116 a(App) s(endix) 29 b(N:) i(Cop) m(ying) 2775
b(237) p Fk 94 365 a(App) t(endix) 53 b(N) 81 b(Cop) l(ying) p
Fl 1194 560 a(GNU) 46 b(LIBRARY) g(GENERAL) g(PUBLIC) g(LICENSE) 1432
664 y(Version) g(2,) h(June) g(1991) 382 872 y(Copyright) e(\(C\)) i
(1991) g(Free) g(Software) e(Foundation,) g(Inc.) 1098
976 y(59) i(Temple) f(Place,) g(Suite) h(330,) f(Boston,) g(MA) h
(02111-1307,) e(USA) 382 1079 y(Everyone) h(is) h(permitted) e(to) i
(copy) g(and) g(distribute) e(verbatim) g(copies) 382
1183 y(of) i(this) g(license) f(document,) f(but) i(changing) f(it) h
(is) g(not) g(allowed.) 334 1391 y([This) g(is) g(the) g(first) f
(released) g(version) g(of) h(the) g(library) f(GPL.) 94
b(It) 47 b(is) 382 1494 y(numbered) f(2) h(because) f(it) h(goes) g
(with) f(version) g(2) i(of) f(the) g(ordinary) e(GPL.]) 1671
1702 y(Preamble) 430 1910 y(The) i(licenses) e(for) i(most) g(software)
e(are) i(designed) f(to) h(take) g(away) f(your) 334
2013 y(freedom) g(to) h(share) g(and) g(change) f(it.) 94
b(By) 48 b(contrast,) d(the) i(GNU) g(General) f(Public) 334
2117 y(Licenses) g(are) h(intended) e(to) j(guarantee) d(your) i
(freedom) e(to) j(share) e(and) h(change) 334 2221 y(free) g
(software--to) e(make) h(sure) h(the) g(software) e(is) i(free) g(for) g
(all) g(its) g(users.) 430 2428 y(This) g(license,) e(the) i(Library) f
(General) g(Public) g(License,) f(applies) h(to) h(some) 334
2532 y(specially) f(designated) f(Free) h(Software) g(Foundation) f
(software,) g(and) i(to) g(any) 334 2636 y(other) g(libraries) e(whose)
h(authors) g(decide) g(to) i(use) e(it.) 95 b(You) 47
b(can) g(use) g(it) g(for) 334 2740 y(your) g(libraries,) e(too.) 430
2947 y(When) i(we) g(speak) f(of) h(free) g(software,) e(we) i(are) g
(referring) f(to) h(freedom,) e(not) 334 3051 y(price.) 94
b(Our) 47 b(General) f(Public) g(Licenses) g(are) h(designed) e(to) i
(make) g(sure) g(that) f(you) 334 3155 y(have) h(the) g(freedom) f(to) h
(distribute) e(copies) h(of) h(free) g(software) e(\(and) i(charge) f
(for) 334 3259 y(this) h(service) f(if) h(you) g(wish\),) f(that) h
(you) g(receive) e(source) i(code) f(or) h(can) g(get) g(it) 334
3362 y(if) h(you) f(want) f(it,) h(that) g(you) g(can) g(change) f(the)
h(software) e(or) i(use) g(pieces) f(of) h(it) 334 3466
y(in) h(new) f(free) f(programs;) f(and) i(that) g(you) g(know) g(you) f
(can) h(do) h(these) e(things.) 430 3674 y(To) h(protect) f(your) h
(rights,) e(we) j(need) e(to) h(make) g(restrictions) d(that) j(forbid)
334 3778 y(anyone) g(to) g(deny) f(you) h(these) g(rights) f(or) h(to) g
(ask) g(you) g(to) g(surrender) e(the) i(rights.) 334
3881 y(These) g(restrictions) d(translate) i(to) h(certain) f
(responsibilities) d(for) k(you) g(if) 334 3985 y(you) g(distribute) e
(copies) h(of) i(the) f(library,) e(or) i(if) g(you) g(modify) f(it.)
430 4193 y(For) h(example,) e(if) j(you) e(distribute) f(copies) i(of) g
(the) g(library,) e(whether) h(gratis) 334 4296 y(or) i(for) f(a) g
(fee,) g(you) g(must) f(give) h(the) g(recipients) e(all) i(the) g
(rights) f(that) g(we) h(gave) 334 4400 y(you.) 95 b(You) 47
b(must) f(make) h(sure) g(that) f(they,) h(too,) f(receive) g(or) h
(can) g(get) g(the) g(source) 334 4504 y(code.) 95 b(If) 47
b(you) g(link) f(a) i(program) e(with) g(the) h(library,) f(you) h
(must) f(provide) 334 4608 y(complete) g(object) g(files) g(to) i(the) f
(recipients) e(so) i(that) f(they) h(can) g(relink) f(them) 334
4711 y(with) h(the) g(library,) f(after) g(making) g(changes) g(to) h
(the) g(library) f(and) h(recompiling) 334 4815 y(it.) 95
b(And) 47 b(you) g(must) g(show) f(them) h(these) f(terms) h(so) g
(they) f(know) h(their) f(rights.) 430 5023 y(Our) h(method) f(of) h
(protecting) e(your) i(rights) f(has) h(two) g(steps:) f(\(1\)) h
(copyright) 334 5127 y(the) g(library,) f(and) h(\(2\)) g(offer) f(you)
h(this) g(license) e(which) i(gives) f(you) h(legal) 334
5230 y(permission) e(to) j(copy,) e(distribute) f(and/or) h(modify) g
(the) h(library.) 430 5438 y(Also,) f(for) h(each) g(distributor's) d
(protection,) h(we) i(want) g(to) g(make) f(certain) 334
5542 y(that) h(everyone) f(understands) e(that) j(there) f(is) i(no) f
(warranty) e(for) i(this) g(free) 334 5645 y(library.) 94
b(If) 47 b(the) g(library) f(is) h(modified) e(by) j(someone) d(else) i
(and) g(passed) f(on,) h(we) p 90 rotate dyy eop
%%Page: 238 244
238 243 bop Fo 94 -116 a(238) 3332 b(mpatrol) p Fl 334
365 a(want) 47 b(its) g(recipients) e(to) i(know) g(that) f(what) h
(they) g(have) f(is) i(not) e(the) h(original) 334 469
y(version,) f(so) h(that) g(any) g(problems) e(introduced) g(by) i
(others) g(will) f(not) h(reflect) f(on) 334 573 y(the) h(original) f
(authors') f(reputations.) 430 780 y(Finally,) g(any) i(free) g
(program) f(is) h(threatened) e(constantly) g(by) i(software) 334
884 y(patents.) 94 b(We) 47 b(wish) g(to) g(avoid) f(the) h(danger) f
(that) h(companies) e(distributing) f(free) 334 988 y(software) i(will)
h(individually) d(obtain) i(patent) g(licenses,) g(thus) g(in) h
(effect) 334 1092 y(transforming) e(the) i(program) f(into) g
(proprietary) f(software.) 93 b(To) 47 b(prevent) f(this,) 334
1196 y(we) i(have) e(made) h(it) g(clear) f(that) h(any) g(patent) f
(must) h(be) g(licensed) e(for) i(everyone's) 334 1299
y(free) g(use) g(or) g(not) g(licensed) f(at) h(all.) 430
1507 y(Most) g(GNU) f(software,) g(including) f(some) i(libraries,) e
(is) i(covered) f(by) h(the) g(ordinary) 334 1611 y(GNU) g(General) f
(Public) g(License,) g(which) g(was) h(designed) f(for) h(utility) e
(programs.) 93 b(This) 334 1714 y(license,) 46 b(the) h(GNU) g(Library)
f(General) f(Public) i(License,) e(applies) h(to) h(certain) 334
1818 y(designated) e(libraries.) 93 b(This) 47 b(license) f(is) h
(quite) f(different) f(from) i(the) g(ordinary) 334 1922
y(one;) g(be) g(sure) g(to) g(read) g(it) g(in) g(full,) f(and) h
(don't) g(assume) f(that) g(anything) g(in) h(it) g(is) 334
2026 y(the) g(same) g(as) g(in) g(the) g(ordinary) f(license.) 430
2233 y(The) h(reason) f(we) h(have) g(a) g(separate) f(public) g
(license) g(for) h(some) f(libraries) f(is) j(that) 334
2337 y(they) f(blur) g(the) g(distinction) d(we) k(usually) d(make) i
(between) f(modifying) f(or) i(adding) f(to) i(a) 334
2441 y(program) e(and) h(simply) f(using) h(it.) 94 b(Linking) 46
b(a) i(program) d(with) i(a) g(library,) f(without) 334
2545 y(changing) g(the) h(library,) e(is) j(in) f(some) f(sense) h
(simply) f(using) g(the) h(library,) f(and) h(is) 334
2648 y(analogous) f(to) h(running) f(a) h(utility) f(program) g(or) h
(application) e(program.) 93 b(However,) 46 b(in) 334
2752 y(a) i(textual) e(and) h(legal) f(sense,) g(the) h(linked) f
(executable) f(is) i(a) h(combined) d(work,) i(a) 334
2856 y(derivative) e(of) j(the) f(original) e(library,) h(and) h(the) f
(ordinary) g(General) g(Public) g(License) 334 2960 y(treats) h(it) g
(as) g(such.) 430 3167 y(Because) f(of) h(this) g(blurred) e
(distinction,) g(using) h(the) h(ordinary) f(General) 334
3271 y(Public) h(License) e(for) i(libraries) f(did) g(not) h
(effectively) e(promote) h(software) 334 3375 y(sharing,) g(because) g
(most) g(developers) f(did) i(not) g(use) g(the) g(libraries.) 93
b(We) 334 3479 y(concluded) 46 b(that) g(weaker) g(conditions) f(might)
i(promote) f(sharing) f(better.) 430 3686 y(However,) g(unrestricted) g
(linking) h(of) h(non-free) e(programs) h(would) g(deprive) g(the) 334
3790 y(users) h(of) g(those) f(programs) g(of) h(all) g(benefit) f
(from) g(the) h(free) g(status) f(of) h(the) 334 3894
y(libraries) f(themselves.) 92 b(This) 47 b(Library) f(General) f
(Public) i(License) e(is) j(intended) d(to) 334 3998
y(permit) i(developers) e(of) i(non-free) e(programs) h(to) h(use) g
(free) g(libraries,) e(while) 334 4101 y(preserving) g(your) i(freedom)
f(as) h(a) h(user) e(of) h(such) g(programs) f(to) h(change) f(the) h
(free) 334 4205 y(libraries) f(that) g(are) h(incorporated) e(in) i
(them.) 94 b(\(We) 47 b(have) g(not) f(seen) h(how) g(to) g(achieve) 334
4309 y(this) g(as) g(regards) f(changes) g(in) h(header) f(files,) g
(but) h(we) g(have) g(achieved) f(it) h(as) g(regards) 334
4413 y(changes) f(in) h(the) g(actual) f(functions) g(of) h(the) g
(Library.\)) 93 b(The) 47 b(hope) f(is) i(that) e(this) 334
4516 y(will) h(lead) g(to) g(faster) f(development) f(of) i(free) g
(libraries.) 430 4724 y(The) g(precise) f(terms) g(and) h(conditions) e
(for) i(copying,) e(distribution) g(and) 334 4828 y(modification) g
(follow.) 93 b(Pay) 47 b(close) g(attention) e(to) i(the) g(difference)
e(between) h(a) 334 4932 y("work) h(based) f(on) h(the) g(library") f
(and) h(a) g("work) g(that) f(uses) h(the) g(library".) 93
b(The) 334 5035 y(former) 47 b(contains) e(code) i(derived) f(from) g
(the) h(library,) f(while) g(the) h(latter) f(only) 334
5139 y(works) h(together) e(with) i(the) g(library.) 430
5347 y(Note) g(that) f(it) h(is) h(possible) d(for) i(a) g(library) f
(to) h(be) h(covered) d(by) j(the) f(ordinary) 334 5450
y(General) f(Public) g(License) g(rather) g(than) h(by) g(this) g
(special) f(one.) p 90 rotate dyy eop
%%Page: 239 245
239 244 bop Fo 94 -116 a(App) s(endix) 29 b(N:) i(Cop) m(ying) 2775
b(239) p Fl 1194 365 a(GNU) 46 b(LIBRARY) g(GENERAL) g(PUBLIC) g
(LICENSE) 478 469 y(TERMS) g(AND) h(CONDITIONS) e(FOR) i(COPYING,) e
(DISTRIBUTION) g(AND) i(MODIFICATION) 430 677 y(0.) g(This) g(License) f
(Agreement) f(applies) h(to) h(any) g(software) e(library) h(which) 334
780 y(contains) g(a) h(notice) g(placed) f(by) h(the) g(copyright) e
(holder) h(or) h(other) g(authorized) 334 884 y(party) g(saying) f(it) h
(may) g(be) g(distributed) e(under) h(the) h(terms) g(of) g(this) f
(Library) 334 988 y(General) g(Public) g(License) g(\(also) h(called) f
("this) g(License"\).) 93 b(Each) 46 b(licensee) g(is) 334
1092 y(addressed) g(as) h("you".) 430 1299 y(A) g("library") f(means) g
(a) h(collection) e(of) j(software) d(functions) g(and/or) i(data) 334
1403 y(prepared) f(so) h(as) g(to) h(be) f(conveniently) d(linked) i
(with) h(application) e(programs) 334 1507 y(\(which) i(use) f(some) h
(of) g(those) g(functions) e(and) i(data\)) f(to) h(form) g
(executables.) 430 1714 y(The) g("Library",) e(below,) h(refers) g(to) h
(any) g(such) g(software) e(library) h(or) h(work) 334
1818 y(which) g(has) g(been) f(distributed) f(under) h(these) h(terms.)
94 b(A) 47 b("work) f(based) h(on) g(the) 334 1922 y(Library") f(means)
g(either) g(the) h(Library) f(or) h(any) g(derivative) e(work) i(under)
334 2026 y(copyright) f(law:) g(that) h(is) g(to) g(say,) g(a) g(work) g
(containing) e(the) i(Library) f(or) h(a) 334 2130 y(portion) f(of) h
(it,) g(either) f(verbatim) g(or) h(with) g(modifications) d(and/or) i
(translated) 334 2233 y(straightforwardly) e(into) i(another) g
(language.) 93 b(\(Hereinafter,) 44 b(translation) h(is) 334
2337 y(included) h(without) g(limitation) f(in) i(the) g(term) g
("modification".\)) 430 2545 y("Source) f(code") g(for) h(a) g(work) g
(means) f(the) h(preferred) f(form) g(of) h(the) g(work) g(for) 334
2648 y(making) g(modifications) d(to) j(it.) 95 b(For) 46
b(a) i(library,) d(complete) h(source) g(code) h(means) 334
2752 y(all) g(the) g(source) f(code) h(for) g(all) g(modules) f(it) h
(contains,) e(plus) i(any) g(associated) 334 2856 y(interface) f
(definition) f(files,) h(plus) g(the) h(scripts) f(used) h(to) g
(control) f(compilation) 334 2960 y(and) h(installation) e(of) i(the) g
(library.) 430 3167 y(Activities) e(other) h(than) h(copying,) e
(distribution) g(and) i(modification) d(are) j(not) 334
3271 y(covered) f(by) h(this) g(License;) f(they) g(are) h(outside) f
(its) h(scope.) 94 b(The) 47 b(act) g(of) 334 3375 y(running) f(a) i
(program) e(using) g(the) h(Library) f(is) h(not) g(restricted,) d(and)
j(output) f(from) 334 3479 y(such) h(a) h(program) d(is) j(covered) d
(only) i(if) g(its) g(contents) f(constitute) f(a) i(work) g(based) 334
3582 y(on) h(the) f(Library) e(\(independent) g(of) i(the) g(use) g(of)
g(the) g(Library) f(in) h(a) g(tool) g(for) 334 3686
y(writing) f(it\).) 95 b(Whether) 45 b(that) i(is) g(true) g(depends) f
(on) h(what) g(the) f(Library) g(does) 334 3790 y(and) h(what) g(the) g
(program) f(that) g(uses) h(the) g(Library) f(does.) 430
3998 y(1.) h(You) g(may) g(copy) g(and) f(distribute) f(verbatim) h
(copies) g(of) h(the) g(Library's) 334 4101 y(complete) f(source) g
(code) h(as) g(you) g(receive) f(it,) h(in) g(any) g(medium,) e
(provided) h(that) 334 4205 y(you) h(conspicuously) e(and) h
(appropriately) f(publish) g(on) j(each) e(copy) h(an) 334
4309 y(appropriate) e(copyright) g(notice) i(and) f(disclaimer) f(of) j
(warranty;) d(keep) i(intact) 334 4413 y(all) g(the) g(notices) f(that)
h(refer) f(to) h(this) g(License) f(and) h(to) g(the) g(absence) f(of) h
(any) 334 4516 y(warranty;) f(and) h(distribute) e(a) i(copy) g(of) g
(this) g(License) e(along) i(with) f(the) 334 4620 y(Library.) 430
4828 y(You) h(may) g(charge) f(a) h(fee) g(for) g(the) g(physical) f
(act) g(of) i(transferring) c(a) k(copy,) 334 4932 y(and) f(you) g(may)
g(at) g(your) g(option) f(offer) g(warranty) g(protection) f(in) i
(exchange) f(for) h(a) 334 5035 y(fee.) 430 5243 y(2.) g(You) g(may) g
(modify) f(your) h(copy) f(or) h(copies) g(of) g(the) g(Library) e(or) j
(any) f(portion) 334 5347 y(of) h(it,) f(thus) f(forming) g(a) h(work) g
(based) f(on) i(the) f(Library,) e(and) i(copy) g(and) 334
5450 y(distribute) e(such) i(modifications) d(or) j(work) g(under) f
(the) h(terms) g(of) g(Section) f(1) 334 5554 y(above,) h(provided) e
(that) i(you) g(also) f(meet) h(all) g(of) g(these) f(conditions:) p
90 rotate dyy eop
%%Page: 240 246
240 245 bop Fo 94 -116 a(240) 3332 b(mpatrol) p Fl 525
469 a(a\)) 48 b(The) e(modified) g(work) h(must) f(itself) g(be) i(a) f
(software) f(library.) 525 677 y(b\)) i(You) e(must) h(cause) f(the) h
(files) g(modified) e(to) i(carry) g(prominent) e(notices) 525
780 y(stating) h(that) h(you) g(changed) f(the) g(files) h(and) g(the) g
(date) f(of) h(any) g(change.) 525 988 y(c\)) h(You) e(must) h(cause) f
(the) h(whole) g(of) g(the) g(work) f(to) i(be) f(licensed) e(at) j(no)
525 1092 y(charge) e(to) i(all) f(third) f(parties) g(under) g(the) h
(terms) f(of) i(this) e(License.) 525 1299 y(d\)) i(If) f(a) g
(facility) f(in) h(the) g(modified) e(Library) h(refers) g(to) h(a) h
(function) d(or) j(a) 525 1403 y(table) f(of) g(data) g(to) g(be) g
(supplied) e(by) j(an) f(application) e(program) g(that) i(uses) 525
1507 y(the) g(facility,) f(other) g(than) h(as) g(an) g(argument) e
(passed) i(when) f(the) h(facility) 525 1611 y(is) h(invoked,) d(then) i
(you) g(must) f(make) h(a) g(good) g(faith) f(effort) g(to) i(ensure) e
(that,) 525 1714 y(in) i(the) e(event) h(an) g(application) e(does) h
(not) h(supply) f(such) h(function) f(or) 525 1818 y(table,) g(the) h
(facility) f(still) g(operates,) g(and) g(performs) g(whatever) g(part)
g(of) 525 1922 y(its) h(purpose) f(remains) g(meaningful.) 525
2130 y(\(For) h(example,) f(a) h(function) f(in) h(a) g(library) f(to) h
(compute) f(square) g(roots) g(has) 525 2233 y(a) i(purpose) e(that) g
(is) h(entirely) f(well-defined) e(independent) h(of) i(the) 525
2337 y(application.) 93 b(Therefore,) 45 b(Subsection) g(2d) i
(requires) e(that) i(any) 525 2441 y(application-supplied) c(function) i
(or) i(table) g(used) f(by) i(this) e(function) g(must) 525
2545 y(be) i(optional:) d(if) i(the) g(application) e(does) h(not) h
(supply) f(it,) h(the) g(square) 525 2648 y(root) g(function) f(must) g
(still) h(compute) e(square) h(roots.\)) 334 2856 y(These) h
(requirements) d(apply) j(to) g(the) g(modified) e(work) i(as) g(a) h
(whole.) 93 b(If) 334 2960 y(identifiable) 45 b(sections) g(of) j(that)
e(work) h(are) g(not) g(derived) f(from) g(the) h(Library,) 334
3064 y(and) g(can) g(be) g(reasonably) e(considered) g(independent) g
(and) i(separate) f(works) g(in) 334 3167 y(themselves,) f(then) i
(this) f(License,) g(and) h(its) g(terms,) f(do) h(not) g(apply) f(to) i
(those) 334 3271 y(sections) e(when) h(you) g(distribute) e(them) h(as)
h(separate) f(works.) 94 b(But) 47 b(when) f(you) 334
3375 y(distribute) f(the) i(same) g(sections) f(as) h(part) f(of) i(a) f
(whole) f(which) h(is) g(a) g(work) g(based) 334 3479
y(on) h(the) f(Library,) e(the) i(distribution) d(of) k(the) f(whole) f
(must) h(be) g(on) g(the) g(terms) f(of) 334 3582 y(this) h(License,) f
(whose) g(permissions) f(for) i(other) f(licensees) f(extend) h(to) i
(the) 334 3686 y(entire) f(whole,) f(and) h(thus) f(to) h(each) g(and) g
(every) f(part) h(regardless) e(of) i(who) g(wrote) 334
3790 y(it.) 334 3998 y(Thus,) g(it) g(is) g(not) g(the) g(intent) f(of)
h(this) g(section) f(to) h(claim) f(rights) g(or) i(contest) 334
4101 y(your) f(rights) f(to) h(work) g(written) f(entirely) f(by) j
(you;) e(rather,) g(the) h(intent) f(is) h(to) 334 4205
y(exercise) f(the) h(right) f(to) h(control) f(the) h(distribution) e
(of) i(derivative) e(or) 334 4309 y(collective) g(works) i(based) f(on)
h(the) g(Library.) 334 4516 y(In) h(addition,) d(mere) i(aggregation) d
(of) j(another) f(work) h(not) g(based) f(on) h(the) g(Library) 334
4620 y(with) g(the) g(Library) f(\(or) h(with) f(a) i(work) e(based) h
(on) g(the) g(Library\)) e(on) j(a) f(volume) f(of) 334
4724 y(a) i(storage) e(or) h(distribution) d(medium) i(does) h(not) g
(bring) f(the) h(other) g(work) f(under) 334 4828 y(the) h(scope) g(of)
g(this) g(License.) 430 5035 y(3.) g(You) g(may) g(opt) g(to) g(apply) f
(the) h(terms) g(of) g(the) g(ordinary) e(GNU) i(General) f(Public) 334
5139 y(License) g(instead) g(of) h(this) g(License) f(to) h(a) g(given)
g(copy) f(of) i(the) e(Library.) 94 b(To) 47 b(do) 334
5243 y(this,) g(you) g(must) f(alter) h(all) g(the) g(notices) e(that) i
(refer) f(to) i(this) e(License,) g(so) 334 5347 y(that) h(they) g
(refer) f(to) h(the) g(ordinary) f(GNU) h(General) e(Public) i
(License,) e(version) h(2,) 334 5450 y(instead) g(of) h(to) h(this) e
(License.) 94 b(\(If) 46 b(a) i(newer) e(version) g(than) h(version) f
(2) h(of) g(the) 334 5554 y(ordinary) f(GNU) h(General) f(Public) g
(License) g(has) h(appeared,) e(then) h(you) h(can) g(specify) p
90 rotate dyy eop
%%Page: 241 247
241 246 bop Fo 94 -116 a(App) s(endix) 29 b(N:) i(Cop) m(ying) 2775
b(241) p Fl 334 365 a(that) 47 b(version) f(instead) g(if) h(you) g
(wish.\)) 94 b(Do) 47 b(not) g(make) f(any) h(other) g(change) f(in) 334
469 y(these) h(notices.) 430 677 y(Once) g(this) f(change) g(is) h
(made) g(in) g(a) h(given) e(copy,) g(it) i(is) f(irreversible) d(for)
334 780 y(that) j(copy,) f(so) i(the) f(ordinary) e(GNU) i(General) f
(Public) g(License) g(applies) g(to) h(all) 334 884 y(subsequent) e
(copies) i(and) f(derivative) f(works) i(made) f(from) h(that) g(copy.)
430 1092 y(This) g(option) f(is) h(useful) f(when) h(you) f(wish) h(to)
g(copy) g(part) g(of) g(the) g(code) f(of) 334 1196 y(the) h(Library) f
(into) h(a) g(program) f(that) h(is) g(not) g(a) g(library.) 430
1403 y(4.) g(You) g(may) g(copy) g(and) f(distribute) f(the) i(Library)
f(\(or) h(a) h(portion) d(or) 334 1507 y(derivative) g(of) j(it,) f
(under) f(Section) g(2\)) h(in) g(object) f(code) h(or) g(executable) e
(form) 334 1611 y(under) i(the) g(terms) f(of) h(Sections) f(1) h(and) g
(2) h(above) e(provided) g(that) g(you) h(accompany) 334
1714 y(it) h(with) e(the) h(complete) f(corresponding) e
(machine-readable) f(source) j(code,) h(which) 334 1818
y(must) g(be) g(distributed) e(under) h(the) h(terms) g(of) g(Sections)
e(1) j(and) f(2) g(above) g(on) g(a) 334 1922 y(medium) g(customarily) d
(used) j(for) g(software) e(interchange.) 430 2130 y(If) i
(distribution) e(of) i(object) f(code) g(is) i(made) e(by) h(offering) f
(access) g(to) h(copy) 334 2233 y(from) g(a) h(designated) d(place,) h
(then) g(offering) g(equivalent) f(access) h(to) h(copy) g(the) 334
2337 y(source) g(code) f(from) h(the) g(same) f(place) h(satisfies) e
(the) i(requirement) e(to) 334 2441 y(distribute) g(the) i(source) f
(code,) h(even) f(though) h(third) f(parties) g(are) h(not) 334
2545 y(compelled) f(to) h(copy) g(the) f(source) h(along) f(with) h
(the) f(object) h(code.) 430 2752 y(5.) g(A) h(program) d(that) i
(contains) f(no) h(derivative) e(of) i(any) g(portion) f(of) h(the) 334
2856 y(Library,) f(but) h(is) g(designed) f(to) h(work) f(with) h(the) g
(Library) f(by) h(being) f(compiled) g(or) 334 2960 y(linked) h(with) f
(it,) h(is) g(called) f(a) i("work) e(that) h(uses) f(the) h(Library".)
93 b(Such) 47 b(a) 334 3064 y(work,) g(in) g(isolation,) e(is) i(not) g
(a) h(derivative) d(work) h(of) h(the) g(Library,) f(and) 334
3167 y(therefore) g(falls) g(outside) g(the) h(scope) f(of) h(this) g
(License.) 430 3375 y(However,) e(linking) h(a) i("work) e(that) h
(uses) f(the) h(Library") f(with) g(the) h(Library) 334
3479 y(creates) f(an) h(executable) e(that) i(is) g(a) h(derivative) d
(of) i(the) g(Library) f(\(because) f(it) 334 3582 y(contains) h
(portions) g(of) h(the) g(Library\),) e(rather) h(than) h(a) g("work) f
(that) h(uses) g(the) 334 3686 y(library".) 93 b(The) 47
b(executable) e(is) j(therefore) d(covered) h(by) h(this) f(License.)
334 3790 y(Section) g(6) i(states) e(terms) g(for) h(distribution) e
(of) i(such) f(executables.) 430 3998 y(When) h(a) g("work) f(that) h
(uses) g(the) g(Library") e(uses) i(material) e(from) i(a) g(header) f
(file) 334 4101 y(that) h(is) g(part) g(of) g(the) g(Library,) f(the) g
(object) h(code) f(for) h(the) g(work) g(may) g(be) g(a) 334
4205 y(derivative) e(work) i(of) g(the) g(Library) f(even) h(though) f
(the) h(source) f(code) g(is) i(not.) 334 4309 y(Whether) e(this) h(is)
g(true) g(is) g(especially) e(significant) g(if) i(the) g(work) f(can) h
(be) 334 4413 y(linked) g(without) e(the) i(Library,) f(or) h(if) g
(the) g(work) g(is) g(itself) f(a) h(library.) 94 b(The) 334
4516 y(threshold) 46 b(for) h(this) f(to) h(be) h(true) e(is) h(not) g
(precisely) f(defined) f(by) j(law.) 430 4724 y(If) f(such) g(an) g
(object) f(file) h(uses) f(only) h(numerical) e(parameters,) g(data) 334
4828 y(structure) h(layouts) g(and) g(accessors,) f(and) i(small) g
(macros) f(and) h(small) f(inline) 334 4932 y(functions) g(\(ten) g
(lines) h(or) g(less) g(in) g(length\),) e(then) i(the) g(use) g(of) g
(the) g(object) 334 5035 y(file) g(is) g(unrestricted,) d(regardless) h
(of) j(whether) d(it) j(is) f(legally) f(a) h(derivative) 334
5139 y(work.) 95 b(\(Executables) 44 b(containing) h(this) i(object) f
(code) g(plus) h(portions) f(of) h(the) 334 5243 y(Library) f(will) h
(still) f(fall) h(under) f(Section) g(6.\)) 430 5450
y(Otherwise,) f(if) i(the) g(work) g(is) g(a) g(derivative) e(of) i
(the) g(Library,) f(you) h(may) 334 5554 y(distribute) e(the) i(object)
f(code) h(for) g(the) g(work) g(under) f(the) h(terms) f(of) h(Section)
f(6.) p 90 rotate dyy eop
%%Page: 242 248
242 247 bop Fo 94 -116 a(242) 3332 b(mpatrol) p Fl 334
365 a(Any) 47 b(executables) e(containing) g(that) i(work) f(also) h
(fall) g(under) f(Section) g(6,) 334 469 y(whether) g(or) h(not) g
(they) g(are) g(linked) f(directly) g(with) g(the) h(Library) f
(itself.) 430 677 y(6.) h(As) g(an) g(exception) f(to) h(the) g
(Sections) e(above,) h(you) h(may) g(also) g(compile) f(or) 334
780 y(link) h(a) h("work) e(that) h(uses) f(the) h(Library") f(with) g
(the) h(Library) f(to) h(produce) f(a) 334 884 y(work) h(containing) e
(portions) h(of) h(the) g(Library,) e(and) i(distribute) e(that) i
(work) 334 988 y(under) g(terms) f(of) h(your) g(choice,) f(provided) f
(that) i(the) g(terms) f(permit) 334 1092 y(modification) f(of) i(the) g
(work) g(for) g(the) f(customer's) f(own) i(use) g(and) g(reverse) 334
1196 y(engineering) e(for) i(debugging) e(such) i(modifications.) 430
1403 y(You) g(must) f(give) h(prominent) e(notice) h(with) h(each) g
(copy) f(of) i(the) e(work) h(that) g(the) 334 1507 y(Library) f(is) h
(used) g(in) g(it) g(and) g(that) g(the) g(Library) f(and) h(its) g
(use) f(are) h(covered) f(by) 334 1611 y(this) h(License.) 93
b(You) 47 b(must) g(supply) f(a) h(copy) g(of) g(this) g(License.) 93
b(If) 47 b(the) g(work) 334 1714 y(during) g(execution) e(displays) g
(copyright) h(notices,) f(you) i(must) g(include) f(the) 334
1818 y(copyright) g(notice) g(for) h(the) g(Library) e(among) i(them,) f
(as) h(well) g(as) g(a) h(reference) 334 1922 y(directing) e(the) h
(user) f(to) h(the) g(copy) g(of) g(this) g(License.) 93
b(Also,) 46 b(you) h(must) g(do) g(one) 334 2026 y(of) h(these) e
(things:) 525 2233 y(a\)) i(Accompany) d(the) i(work) f(with) h(the) g
(complete) e(corresponding) 525 2337 y(machine-readable) f(source) i
(code) g(for) h(the) g(Library) f(including) f(whatever) 525
2441 y(changes) h(were) h(used) f(in) i(the) f(work) f(\(which) g(must)
h(be) g(distributed) e(under) 525 2545 y(Sections) h(1) h(and) g(2) h
(above\);) e(and,) g(if) h(the) g(work) g(is) g(an) g(executable) e
(linked) 525 2648 y(with) i(the) g(Library,) e(with) i(the) g(complete)
f(machine-readable) d("work) j(that) 525 2752 y(uses) h(the) g
(Library",) e(as) i(object) f(code) h(and/or) f(source) g(code,) h(so) g
(that) f(the) 525 2856 y(user) h(can) g(modify) f(the) h(Library) f
(and) h(then) f(relink) g(to) i(produce) d(a) j(modified) 525
2960 y(executable) d(containing) g(the) i(modified) f(Library.) 93
b(\(It) 47 b(is) g(understood) 525 3064 y(that) g(the) g(user) g(who) f
(changes) g(the) h(contents) f(of) h(definitions) e(files) h(in) h(the)
525 3167 y(Library) f(will) h(not) g(necessarily) d(be) k(able) e(to) h
(recompile) f(the) h(application) 525 3271 y(to) h(use) e(the) h
(modified) f(definitions.\)) 525 3479 y(b\)) i(Accompany) d(the) i
(work) f(with) h(a) g(written) f(offer,) g(valid) h(for) g(at) 525
3582 y(least) g(three) f(years,) g(to) h(give) g(the) g(same) g(user) f
(the) h(materials) 525 3686 y(specified) f(in) h(Subsection) e(6a,) i
(above,) f(for) h(a) g(charge) f(no) h(more) 525 3790
y(than) g(the) g(cost) g(of) g(performing) e(this) h(distribution.) 525
3998 y(c\)) i(If) f(distribution) d(of) j(the) g(work) g(is) g(made) g
(by) g(offering) e(access) i(to) g(copy) 525 4101 y(from) g(a) g
(designated) e(place,) i(offer) f(equivalent) f(access) h(to) h(copy) g
(the) g(above) 525 4205 y(specified) f(materials) f(from) i(the) f
(same) h(place.) 525 4413 y(d\)) h(Verify) e(that) g(the) h(user) g
(has) g(already) f(received) f(a) j(copy) e(of) h(these) 525
4516 y(materials) f(or) h(that) f(you) h(have) g(already) f(sent) g
(this) h(user) g(a) g(copy.) 430 4724 y(For) g(an) g(executable,) e
(the) i(required) e(form) i(of) g(the) g("work) f(that) h(uses) g(the)
334 4828 y(Library") f(must) h(include) e(any) i(data) g(and) g
(utility) f(programs) f(needed) h(for) 334 4932 y(reproducing) f(the) i
(executable) e(from) i(it.) 94 b(However,) 46 b(as) h(a) h(special) d
(exception,) 334 5035 y(the) i(source) f(code) h(distributed) e(need) h
(not) h(include) f(anything) g(that) g(is) i(normally) 334
5139 y(distributed) d(\(in) i(either) f(source) g(or) h(binary) g
(form\)) f(with) h(the) f(major) 334 5243 y(components) f(\(compiler,) g
(kernel,) h(and) h(so) g(on\)) g(of) g(the) g(operating) f(system) g
(on) 334 5347 y(which) h(the) g(executable) e(runs,) h(unless) g(that) h
(component) e(itself) h(accompanies) 334 5450 y(the) h(executable.) p
90 rotate dyy eop
%%Page: 243 249
243 248 bop Fo 94 -116 a(App) s(endix) 29 b(N:) i(Cop) m(ying) 2775
b(243) p Fl 430 365 a(It) 47 b(may) g(happen) f(that) h(this) f
(requirement) f(contradicts) g(the) i(license) 334 469
y(restrictions) e(of) i(other) f(proprietary) f(libraries) g(that) i
(do) g(not) g(normally) 334 573 y(accompany) f(the) h(operating) e
(system.) 93 b(Such) 47 b(a) h(contradiction) c(means) i(you) h(cannot)
334 677 y(use) g(both) g(them) g(and) g(the) f(Library) g(together) g
(in) h(an) g(executable) e(that) i(you) 334 780 y(distribute.) 430
988 y(7.) g(You) g(may) g(place) f(library) g(facilities) f(that) i
(are) g(a) g(work) g(based) f(on) h(the) 334 1092 y(Library) f
(side-by-side) f(in) i(a) g(single) f(library) g(together) g(with) g
(other) h(library) 334 1196 y(facilities) e(not) i(covered) f(by) h
(this) g(License,) f(and) g(distribute) f(such) i(a) h(combined) 334
1299 y(library,) e(provided) g(that) g(the) h(separate) f(distribution)
e(of) j(the) g(work) g(based) f(on) 334 1403 y(the) h(Library) f(and) h
(of) g(the) g(other) g(library) e(facilities) g(is) j(otherwise) 334
1507 y(permitted,) d(and) i(provided) f(that) h(you) f(do) i(these) e
(two) h(things:) 525 1714 y(a\)) h(Accompany) d(the) i(combined) e
(library) h(with) h(a) g(copy) g(of) g(the) g(same) g(work) 525
1818 y(based) g(on) g(the) g(Library,) e(uncombined) g(with) i(any) g
(other) f(library) 525 1922 y(facilities.) 93 b(This) 46
b(must) h(be) g(distributed) e(under) h(the) h(terms) g(of) g(the) 525
2026 y(Sections) f(above.) 525 2233 y(b\)) i(Give) e(prominent) f
(notice) i(with) f(the) h(combined) f(library) f(of) j(the) f(fact) 525
2337 y(that) g(part) g(of) g(it) g(is) g(a) h(work) e(based) h(on) g
(the) g(Library,) e(and) i(explaining) 525 2441 y(where) g(to) g(find) g
(the) f(accompanying) f(uncombined) g(form) i(of) g(the) g(same) f
(work.) 430 2648 y(8.) h(You) g(may) g(not) g(copy,) f(modify,) g
(sublicense,) f(link) h(with,) h(or) g(distribute) 334
2752 y(the) g(Library) f(except) g(as) h(expressly) f(provided) f
(under) i(this) f(License.) 94 b(Any) 334 2856 y(attempt) 46
b(otherwise) g(to) h(copy,) f(modify,) g(sublicense,) f(link) h(with,) h
(or) 334 2960 y(distribute) e(the) i(Library) f(is) h(void,) g(and) g
(will) f(automatically) e(terminate) i(your) 334 3064
y(rights) h(under) f(this) h(License.) 93 b(However,) 45
b(parties) h(who) h(have) g(received) e(copies,) 334
3167 y(or) j(rights,) d(from) i(you) g(under) f(this) h(License) f
(will) g(not) h(have) g(their) f(licenses) 334 3271 y(terminated) f(so)
j(long) e(as) h(such) g(parties) f(remain) g(in) h(full) g(compliance.)
430 3479 y(9.) g(You) g(are) g(not) g(required) e(to) j(accept) e(this)
g(License,) g(since) g(you) h(have) g(not) 334 3582 y(signed) g(it.) 94
b(However,) 46 b(nothing) g(else) g(grants) g(you) h(permission) e(to) i
(modify) f(or) 334 3686 y(distribute) f(the) i(Library) f(or) h(its) g
(derivative) e(works.) 94 b(These) 46 b(actions) g(are) 334
3790 y(prohibited) f(by) j(law) f(if) g(you) g(do) g(not) g(accept) f
(this) g(License.) 94 b(Therefore,) 45 b(by) 334 3894
y(modifying) h(or) h(distributing) d(the) j(Library) f(\(or) h(any) g
(work) g(based) f(on) h(the) 334 3998 y(Library\),) f(you) h(indicate) e
(your) i(acceptance) e(of) i(this) g(License) e(to) j(do) f(so,) g(and)
334 4101 y(all) g(its) g(terms) g(and) g(conditions) e(for) h(copying,)
g(distributing) e(or) k(modifying) 334 4205 y(the) f(Library) f(or) h
(works) g(based) f(on) h(it.) 430 4413 y(10.) g(Each) f(time) h(you) g
(redistribute) d(the) j(Library) f(\(or) h(any) g(work) g(based) f(on) h
(the) 334 4516 y(Library\),) f(the) h(recipient) e(automatically) f
(receives) i(a) h(license) f(from) h(the) 334 4620 y(original) f
(licensor) g(to) h(copy,) f(distribute,) f(link) h(with) h(or) g
(modify) f(the) h(Library) 334 4724 y(subject) f(to) h(these) g(terms) f
(and) h(conditions.) 93 b(You) 46 b(may) h(not) g(impose) f(any) h
(further) 334 4828 y(restrictions) e(on) i(the) g(recipients') e
(exercise) g(of) i(the) g(rights) f(granted) g(herein.) 334
4932 y(You) h(are) g(not) g(responsible) e(for) i(enforcing) e
(compliance) g(by) i(third) g(parties) e(to) 334 5035
y(this) i(License.) 430 5243 y(11.) g(If,) g(as) g(a) g(consequence) e
(of) i(a) h(court) e(judgment) g(or) h(allegation) e(of) i(patent) 334
5347 y(infringement) e(or) i(for) g(any) g(other) f(reason) g(\(not) h
(limited) f(to) h(patent) f(issues\),) 334 5450 y(conditions) f(are) i
(imposed) f(on) h(you) g(\(whether) f(by) h(court) f(order,) g
(agreement) g(or) 334 5554 y(otherwise\)) f(that) i(contradict) e(the) i
(conditions) e(of) i(this) g(License,) e(they) i(do) g(not) p
90 rotate dyy eop
%%Page: 244 250
244 249 bop Fo 94 -116 a(244) 3332 b(mpatrol) p Fl 334
365 a(excuse) 47 b(you) f(from) h(the) g(conditions) e(of) i(this) g
(License.) 93 b(If) 47 b(you) g(cannot) 334 469 y(distribute) e(so) j
(as) f(to) g(satisfy) f(simultaneously) e(your) i(obligations) f(under)
h(this) 334 573 y(License) g(and) h(any) g(other) f(pertinent) g
(obligations,) e(then) j(as) g(a) g(consequence) e(you) 334
677 y(may) i(not) g(distribute) e(the) i(Library) f(at) h(all.) 95
b(For) 46 b(example,) g(if) h(a) h(patent) 334 780 y(license) e(would) h
(not) g(permit) f(royalty-free) e(redistribution) g(of) j(the) g
(Library) f(by) 334 884 y(all) h(those) g(who) g(receive) e(copies) i
(directly) e(or) i(indirectly) e(through) h(you,) h(then) 334
988 y(the) g(only) g(way) g(you) g(could) f(satisfy) g(both) h(it) g
(and) g(this) f(License) g(would) h(be) g(to) 334 1092
y(refrain) f(entirely) g(from) g(distribution) f(of) i(the) g(Library.)
334 1299 y(If) h(any) f(portion) e(of) j(this) e(section) g(is) h(held)
g(invalid) f(or) h(unenforceable) d(under) i(any) 334
1403 y(particular) f(circumstance,) g(the) i(balance) e(of) j(the) e
(section) g(is) h(intended) f(to) h(apply,) 334 1507
y(and) g(the) g(section) f(as) h(a) h(whole) e(is) h(intended) f(to) h
(apply) f(in) i(other) e(circumstances.) 334 1714 y(It) i(is) f(not) g
(the) g(purpose) e(of) j(this) e(section) g(to) h(induce) f(you) h(to) g
(infringe) f(any) 334 1818 y(patents) g(or) h(other) g(property) e
(right) i(claims) f(or) h(to) g(contest) f(validity) g(of) h(any) 334
1922 y(such) g(claims;) f(this) h(section) e(has) i(the) g(sole) g
(purpose) f(of) h(protecting) e(the) 334 2026 y(integrity) h(of) h(the)
g(free) f(software) g(distribution) e(system) j(which) f(is) 334
2130 y(implemented) f(by) i(public) f(license) g(practices.) 93
b(Many) 47 b(people) f(have) g(made) 334 2233 y(generous) g
(contributions) e(to) j(the) g(wide) g(range) f(of) h(software) f
(distributed) 334 2337 y(through) g(that) h(system) f(in) h(reliance) f
(on) h(consistent) e(application) g(of) i(that) 334 2441
y(system;) f(it) h(is) h(up) f(to) g(the) g(author/donor) d(to) k
(decide) e(if) h(he) g(or) g(she) g(is) g(willing) 334
2545 y(to) h(distribute) d(software) g(through) h(any) h(other) f
(system) g(and) h(a) h(licensee) d(cannot) 334 2648 y(impose) i(that) f
(choice.) 334 2856 y(This) h(section) f(is) h(intended) f(to) h(make) f
(thoroughly) f(clear) i(what) f(is) i(believed) d(to) 334
2960 y(be) j(a) f(consequence) e(of) i(the) g(rest) g(of) g(this) f
(License.) 430 3167 y(12.) h(If) g(the) g(distribution) d(and/or) i
(use) h(of) h(the) e(Library) g(is) h(restricted) e(in) 334
3271 y(certain) h(countries) g(either) g(by) h(patents) f(or) h(by) g
(copyrighted) e(interfaces,) f(the) 334 3375 y(original) i(copyright) f
(holder) h(who) h(places) f(the) h(Library) f(under) g(this) h(License)
f(may) h(add) 334 3479 y(an) h(explicit) d(geographical) g
(distribution) f(limitation) h(excluding) g(those) i(countries,) 334
3582 y(so) h(that) e(distribution) f(is) i(permitted) e(only) i(in) g
(or) g(among) g(countries) e(not) i(thus) 334 3686 y(excluded.) 93
b(In) 48 b(such) e(case,) h(this) f(License) g(incorporates) f(the) h
(limitation) f(as) j(if) 334 3790 y(written) e(in) h(the) g(body) g(of)
g(this) g(License.) 430 3998 y(13.) g(The) g(Free) f(Software) g
(Foundation) f(may) i(publish) f(revised) f(and/or) i(new) 334
4101 y(versions) f(of) h(the) g(Library) f(General) g(Public) g
(License) g(from) g(time) h(to) g(time.) 334 4205 y(Such) g(new) g
(versions) f(will) g(be) h(similar) f(in) h(spirit) f(to) i(the) f
(present) e(version,) 334 4309 y(but) i(may) g(differ) f(in) i(detail) e
(to) h(address) f(new) h(problems) e(or) i(concerns.) 334
4516 y(Each) g(version) f(is) h(given) f(a) i(distinguishing) c
(version) i(number.) 93 b(If) 47 b(the) g(Library) 334
4620 y(specifies) f(a) h(version) f(number) g(of) h(this) g(License) f
(which) g(applies) g(to) h(it) g(and) 334 4724 y("any) g(later) f
(version",) g(you) h(have) f(the) h(option) f(of) h(following) f(the) h
(terms) f(and) 334 4828 y(conditions) f(either) i(of) g(that) f
(version) g(or) h(of) h(any) e(later) h(version) f(published) f(by) 334
4932 y(the) i(Free) g(Software) f(Foundation.) 92 b(If) 47
b(the) g(Library) f(does) h(not) f(specify) g(a) 334
5035 y(license) g(version) g(number,) g(you) h(may) g(choose) f(any) h
(version) f(ever) g(published) f(by) 334 5139 y(the) i(Free) g
(Software) f(Foundation.) 430 5347 y(14.) h(If) g(you) g(wish) g(to) g
(incorporate) d(parts) j(of) g(the) g(Library) f(into) g(other) h(free)
334 5450 y(programs) f(whose) g(distribution) f(conditions) g(are) i
(incompatible) d(with) j(these,) 334 5554 y(write) g(to) g(the) g
(author) f(to) h(ask) g(for) g(permission.) 92 b(For) 47
b(software) f(which) g(is) p 90 rotate dyy eop
%%Page: 245 251
245 250 bop Fo 94 -116 a(App) s(endix) 29 b(N:) i(Cop) m(ying) 2775
b(245) p Fl 334 365 a(copyrighted) 45 b(by) i(the) g(Free) g(Software) e
(Foundation,) g(write) i(to) g(the) g(Free) 334 469 y(Software) f
(Foundation;) f(we) i(sometimes) e(make) i(exceptions) e(for) i(this.)
94 b(Our) 334 573 y(decision) 46 b(will) h(be) g(guided) f(by) h(the) g
(two) g(goals) f(of) h(preserving) e(the) i(free) g(status) 334
677 y(of) h(all) f(derivatives) d(of) j(our) g(free) g(software) f(and)
g(of) i(promoting) d(the) i(sharing) 334 780 y(and) g(reuse) g(of) g
(software) e(generally.) 1671 988 y(NO) i(WARRANTY) 430
1196 y(15.) g(BECAUSE) f(THE) h(LIBRARY) e(IS) j(LICENSED) d(FREE) i
(OF) g(CHARGE,) f(THERE) g(IS) h(NO) 334 1299 y(WARRANTY) f(FOR) h(THE)
g(LIBRARY,) e(TO) j(THE) e(EXTENT) h(PERMITTED) e(BY) i(APPLICABLE) e
(LAW.) 334 1403 y(EXCEPT) i(WHEN) f(OTHERWISE) f(STATED) i(IN) g
(WRITING) f(THE) g(COPYRIGHT) g(HOLDERS) g(AND/OR) 334
1507 y(OTHER) h(PARTIES) f(PROVIDE) f(THE) i(LIBRARY) f("AS) h(IS") g
(WITHOUT) f(WARRANTY) f(OF) j(ANY) 334 1611 y(KIND,) f(EITHER) f
(EXPRESSED) f(OR) i(IMPLIED,) f(INCLUDING,) f(BUT) i(NOT) g(LIMITED) f
(TO,) g(THE) 334 1714 y(IMPLIED) g(WARRANTIES) f(OF) i(MERCHANTABILITY)
d(AND) j(FITNESS) f(FOR) h(A) g(PARTICULAR) 334 1818
y(PURPOSE.) 94 b(THE) 47 b(ENTIRE) f(RISK) g(AS) i(TO) f(THE) g
(QUALITY) e(AND) i(PERFORMANCE) e(OF) i(THE) 334 1922
y(LIBRARY) f(IS) h(WITH) g(YOU.) 94 b(SHOULD) 47 b(THE) f(LIBRARY) g
(PROVE) h(DEFECTIVE,) e(YOU) i(ASSUME) 334 2026 y(THE) g(COST) g(OF) g
(ALL) g(NECESSARY) e(SERVICING,) g(REPAIR) h(OR) i(CORRECTION.) 430
2233 y(16.) f(IN) g(NO) g(EVENT) g(UNLESS) f(REQUIRED) f(BY) i
(APPLICABLE) e(LAW) i(OR) g(AGREED) g(TO) g(IN) 334 2337
y(WRITING) f(WILL) h(ANY) g(COPYRIGHT) e(HOLDER,) h(OR) h(ANY) g(OTHER)
f(PARTY) h(WHO) g(MAY) g(MODIFY) 334 2441 y(AND/OR) g(REDISTRIBUTE) d
(THE) j(LIBRARY) f(AS) h(PERMITTED) e(ABOVE,) h(BE) h(LIABLE) g(TO) g
(YOU) 334 2545 y(FOR) g(DAMAGES,) f(INCLUDING) f(ANY) i(GENERAL,) f
(SPECIAL,) f(INCIDENTAL) g(OR) 334 2648 y(CONSEQUENTIAL) g(DAMAGES) g
(ARISING) h(OUT) h(OF) g(THE) g(USE) g(OR) g(INABILITY) f(TO) h(USE) g
(THE) 334 2752 y(LIBRARY) f(\(INCLUDING) f(BUT) i(NOT) g(LIMITED) f(TO)
h(LOSS) g(OF) g(DATA) g(OR) g(DATA) f(BEING) 334 2856
y(RENDERED) g(INACCURATE) f(OR) i(LOSSES) f(SUSTAINED) g(BY) h(YOU) g
(OR) g(THIRD) f(PARTIES) g(OR) h(A) 334 2960 y(FAILURE) f(OF) h(THE) g
(LIBRARY) f(TO) h(OPERATE) f(WITH) h(ANY) g(OTHER) f(SOFTWARE\),) f
(EVEN) i(IF) 334 3064 y(SUCH) g(HOLDER) f(OR) h(OTHER) g(PARTY) f(HAS) h
(BEEN) g(ADVISED) e(OF) j(THE) f(POSSIBILITY) d(OF) j(SUCH) 334
3167 y(DAMAGES.) 1337 3375 y(END) g(OF) g(TERMS) f(AND) h(CONDITIONS)
907 3582 y(How) g(to) g(Apply) g(These) f(Terms) g(to) i(Your) e(New) h
(Libraries) 430 3790 y(If) g(you) g(develop) f(a) h(new) g(library,) f
(and) h(you) g(want) f(it) h(to) h(be) f(of) g(the) g(greatest) 334
3894 y(possible) f(use) h(to) g(the) g(public,) f(we) h(recommend) e
(making) h(it) i(free) e(software) g(that) 334 3998 y(everyone) g(can) h
(redistribute) d(and) j(change.) 94 b(You) 47 b(can) g(do) g(so) g(by) g
(permitting) 334 4101 y(redistribution) d(under) j(these) f(terms) g
(\(or,) h(alternatively,) d(under) i(the) h(terms) g(of) g(the) 334
4205 y(ordinary) f(General) g(Public) g(License\).) 430
4413 y(To) h(apply) f(these) h(terms,) f(attach) g(the) h(following) e
(notices) h(to) h(the) g(library.) 93 b(It) 48 b(is) 334
4516 y(safest) f(to) g(attach) f(them) g(to) i(the) f(start) f(of) h
(each) g(source) f(file) g(to) i(most) e(effectively) 334
4620 y(convey) h(the) f(exclusion) g(of) h(warranty;) e(and) i(each) g
(file) f(should) g(have) h(at) g(least) g(the) 334 4724
y("copyright") e(line) i(and) g(a) g(pointer) f(to) h(where) g(the) f
(full) h(notice) f(is) h(found.) 525 4932 y(<one) g(line) g(to) g(give)
f(the) h(library's) f(name) g(and) h(a) h(brief) e(idea) h(of) g(what) f
(it) i(does.>) 525 5035 y(Copyright) e(\(C\)) h(<year>) 93
b(<name) 47 b(of) g(author>) 525 5243 y(This) g(library) f(is) h(free) g
(software;) e(you) i(can) g(redistribute) d(it) j(and/or) 525
5347 y(modify) f(it) i(under) e(the) h(terms) f(of) h(the) g(GNU) g
(Library) f(General) g(Public) 525 5450 y(License) g(as) h(published) f
(by) h(the) g(Free) f(Software) g(Foundation;) f(either) 525
5554 y(version) h(2) i(of) f(the) g(License,) e(or) i(\(at) g(your) g
(option\)) f(any) h(later) f(version.) p 90 rotate dyy
eop
%%Page: 246 252
246 251 bop Fo 94 -116 a(246) 3332 b(mpatrol) p Fl 525
469 a(This) 47 b(library) f(is) h(distributed) e(in) i(the) g(hope) f
(that) h(it) g(will) g(be) g(useful,) 525 573 y(but) g(WITHOUT) f(ANY) h
(WARRANTY;) e(without) h(even) h(the) g(implied) e(warranty) h(of) 525
677 y(MERCHANTABILITY) e(or) j(FITNESS) f(FOR) h(A) g(PARTICULAR) e
(PURPOSE.) 94 b(See) 47 b(the) f(GNU) 525 780 y(Library) g(General) g
(Public) g(License) g(for) h(more) f(details.) 525 988
y(You) h(should) f(have) h(received) f(a) h(copy) g(of) g(the) g(GNU) g
(Library) e(General) h(Public) 525 1092 y(License) g(along) h(with) f
(this) h(library;) e(if) j(not,) e(write) h(to) g(the) g(Free) f
(Software) 525 1196 y(Foundation,) f(Inc.,) h(59) i(Temple) e(Place,) g
(Suite) g(330,) h(Boston,) f(MA) h(02111-1307,) e(USA) 334
1403 y(Also) i(add) g(information) e(on) i(how) g(to) g(contact) f(you)
h(by) g(electronic) e(and) i(paper) f(mail.) 334 1611
y(You) h(should) f(also) h(get) g(your) g(employer) e(\(if) i(you) g
(work) g(as) g(a) g(programmer\)) e(or) i(your) 334 1714
y(school,) f(if) h(any,) g(to) g(sign) g(a) g("copyright) e
(disclaimer") g(for) i(the) g(library,) e(if) 334 1818
y(necessary.) 93 b(Here) 47 b(is) g(a) g(sample;) f(alter) h(the) g
(names:) 430 2026 y(Yoyodyne,) e(Inc.,) i(hereby) f(disclaims) f(all) i
(copyright) e(interest) h(in) h(the) 430 2130 y(library) f(`Frob') g
(\(a) h(library) f(for) h(tweaking) e(knobs\)) h(written) g(by) h
(James) g(Random) f(Hacker.) 430 2337 y(<signature) f(of) i(Ty) g
(Coon>,) f(1) i(April) e(1990) 430 2441 y(Ty) h(Coon,) f(President) g
(of) h(Vice) 334 2648 y(That's) g(all) f(there) h(is) g(to) g(it!) p
90 rotate dyy eop
%%Page: 247 253
247 252 bop Fo 94 -116 a(F) -8 b(unction) 32 b(index) 3048
b(247) p Fk 94 365 a(F) -13 b(unction) 52 b(index) p
103 681 41 6 v Ff 94 808 a(__mp_addallocentry) p Fd 16
w(.) 17 b(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 42 w(148) p Ff 94 902 a(__mp_addfreeentry) p Fd 17
w(.) k(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 44 w(148) p Ff 94 997 a(__mp_atexit) p Fd 8 w(.) j(.) e(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 34 w(146) p Ff 94 1091 a(__mp_check) p Fd 9
w(.) j(.) c(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 36 w(149) p Ff
94 1185 a(__mp_clearleaktable) p Fd 15 w(.) 17 b(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(148) p
Ff 94 1279 a(__mp_cmpcontents) p Fd 23 w(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(151) p
Ff 94 1373 a(__mp_edit) p Fd 11 w(.) i(.) d(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(151) p Ff 94 1467 a(__mp_epilogue) p Fd 27 w(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 50 w(150) p Ff 94 1561 a(__mp_function) p Fd 27 w(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 50 w(146) p Ff 94 1656 a(__mp_getoption) p Fd 25 w(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 48 w(146) p Ff 94 1750 a(__mp_info) p Fd 11 w(.) j(.) d(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 37 w(147) p Ff 94 1844 a(__mp_iterate) p
Fd 7 w(.) i(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(148) p Ff 94 1938
a(__mp_iterateall) p Fd 24 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(148) p Ff 94 2032
a(__mp_leaktable) p Fd 25 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(149) p Ff
94 2126 a(__mp_libversion) p Fd 24 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(146) p
Ff 94 2221 a(__mp_list) p Fd 11 w(.) j(.) d(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(151) p Ff 94 2315 a(__mp_locprintf) p Fd 25 w(.) g(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 48 w(150) p Ff 94 2409 a(__mp_logaddr) p Fd 7 w(.) j(.) d(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 33 w(151) p Ff 94 2503 a(__mp_logmemory) p Fd
25 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 48 w(150) p Ff 94 2597 a(__mp_logstack) p
Fd 27 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 50 w(150) p Ff 94 2691 a(__mp_memorymap) p
Fd 25 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 48 w(149) p Ff 94 2785 a(__mp_nomemory) p
Fd 27 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 50 w(150) p Ff 94 2880 a(__mp_printf) p
Fd 8 w(.) j(.) e(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(150) p Ff
94 2974 a(__mp_printinfo) p Fd 25 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(147) p
Ff 94 3068 a(__mp_prologue) p Fd 27 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
50 w(149) p Ff 94 3162 a(__mp_readcontents) p Fd 17 w(.) 17
b(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 44 w(151) p Ff 94 3256 a(__mp_remcontents) p Fd 23
w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 45 w(151) p Ff 94 3350 a(__mp_setmark) p Fd 7 w(.) i(.) d(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 33 w(146) p Ff 94 3445 a(__mp_setoption) p Fd
25 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 48 w(146) p Ff 94 3539 a(__mp_setuser) p
Fd 7 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(146) p Ff 94 3633
a(__mp_snapshot) p Fd 27 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 50 w(148) p
Ff 94 3727 a(__mp_startleaktable) p Fd 15 w(.) 17 b(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(148) p
Ff 94 3821 a(__mp_stats) p Fd 9 w(.) k(.) c(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 36 w(149) p Ff 94 3915 a(__mp_stopleaktable) p Fd
16 w(.) 17 b(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 42 w(149) p Ff 94 4010 a(__mp_strerror) p Fd 27 w(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 50 w(146) p Ff 94 4104 a(__mp_summary) p Fd 7 w(.) j(.) d(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 33 w(149) p Ff 94 4198 a(__mp_symbol) p Fd 8
w(.) j(.) e(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(147) p Ff 94 4292
a(__mp_syminfo) p Fd 7 w(.) i(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
33 w(147) p Ff 94 4386 a(__mp_view) p Fd 11 w(.) j(.) d(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 37 w(151) p Ff 94 4480 a(__mp_vlocprintf) p
Fd 24 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 47 w(150) p Ff 94 4574 a(__mp_vprintf) p
Fd 7 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(150) p Ff 94 4669
a(__mp_writecontents) p Fd 16 w(.) 17 b(.) 12 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 42 w(151) p Fn 94 4943 a(A) p
Ff 94 5070 a(alloca) p Fd 15 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 42 w(138) p Fn 94 5330 a(B) p Ff 94
5457 a(bcmp) p Fd 18 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 45 w(145) p Ff 94 5551 a(bcopy) p
Fd 17 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 43 w(145) p Ff 94 5645 a(bzero) p Fd 17 w(.) i(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(144) p Fn
2063 681 a(C) p Ff 2063 814 a(calloc) p Fd 15 w(.) i(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(137) p Ff 2063
911 a(cfree) p Fd 17 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 43 w(141) p Fn 2063 1185 a(D) p Ff 2063
1318 a(dealloca) p Fd 12 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(141) p Fn 2063 1592 a(E) p Ff 2063 1725 a(expand) p
Fd 15 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(140) p Fn 2063 2014 a(F) p Ff 2063 2147 a(free) p
Fd 18 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(141) p Fn 2063 2421 a(M) p Ff 2063 2554 a(malloc) p
Fd 15 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(137) p Ff 2063 2651 a(memalign) p Fd 12 w(.) h(.) f(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 38 w(137) p Ff 2063 2748
a(memccpy) p Fd 14 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(144) p Ff 2063 2845 a(memchr) p Fd 15 w(.) i(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(145) p Ff 2063
2942 a(memcmp) p Fd 15 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 41 w(145) p Ff 2063 3038 a(memcpy) p Fd
15 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(145) p Ff 2063 3135 a(memmem) p Fd 15 w(.) h(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(145) p Ff 2063
3232 a(memmove) p Fd 14 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 40 w(145) p Ff 2063 3329 a(memset) p Fd 15 w(.) i(.) e(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(144) p Ff
2063 3426 a(MP_CALLOC) p Fd 11 w(.) h(.) e(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 37 w(142) p Ff 2063 3523 a(MP_FAILURE) p Fd 9 w(.) j(.) d(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) p Fg 36 w(143) p Ff 2063 3619 a(MP_FREE) p
Fd 14 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(143) p Ff 2063 3716 a(MP_MALLOC) p Fd 11 w(.) i(.) e(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 37 w(142) p Ff 2063 3813 a(MP_REALLOC) p
Fd 9 w(.) j(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 36 w(143) p
Ff 2063 3910 a(MP_STRDUP) p Fd 11 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 37 w(142) p Fn 2063 4184 a(O) p Ff 2063 4317
a(operator) 27 b(delete) p Fd 9 w(.) 14 b(.) e(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 35 w(144) p
Ff 2063 4414 a(operator) 27 b(delete[]) p Fd 6 w(.) 14
b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 32 w(144) p Ff 2063 4511 a(operator) 27 b(new) p Fd
13 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(143) p Ff 2063
4608 a(operator) 27 b(new[]) p Fd 10 w(.) 14 b(.) e(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 37 w(143) p Fn 2063 4897 a(P) p Ff 2063 5030 a(pvalloc) p
Fd 14 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(138) p Fn 2063 5319 a(R) p Ff 2063 5452 a(realloc) p
Fd 14 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(140) p Ff 2063 5549 a(reallocf) p Fd 12 w(.) i(.) f(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 38 w(140) p Ff 2063 5645
a(recalloc) p Fd 12 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(140) p 90 rotate dyy eop
%%Page: 248 254
248 253 bop Fo 94 -116 a(248) 3332 b(mpatrol) p Fn 94
365 a(S) p Ff 94 535 a(set_new_handler) p Fd 24 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 47 w(144) p Ff 94 649 a(strdup) p Fd 15 w(.) i(.) f(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 42 w(138) p Ff 94 763
a(strdupa) p Fd 14 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(139) p Ff 94 877 a(strndup) p Fd 14 w(.) i(.) f(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 40 w(138) p Ff 94 991 a(strndupa) p
Fd 12 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
39 w(139) p Ff 94 1105 a(strnsave) p Fd 12 w(.) j(.) d(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 39 w(139) p Ff 94 1219 a(strsave) p
Fd 14 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(139) p Fn 2063 365 a(V) p Ff 2063 487 a(valloc) p
Fd 15 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(138) p Fn 2063 731 a(X) p Ff 2063 853 a(xcalloc) p
Fd 14 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(141) p Ff 2063 945 a(xfree) p Fd 17 w(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(142) p Ff
2063 1036 a(xmalloc) p Fd 14 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 40 w(141) p Ff 2063 1127 a(xrealloc) p
Fd 12 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
38 w(142) p Ff 2063 1219 a(xstrdup) p Fd 14 w(.) g(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 40 w(141) p 90 rotate dyy
eop
%%Page: 249 255
249 254 bop Fo 94 -116 a(Index) 3421 b(249) p Fk 94 365
a(Index) p Fn 94 681 a(-) p Fg 94 802 a({addresses) p
Fd 13 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 39 w(60) 94 894 y({allo) r(c) p Fd 21 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 45 w(74) 94 985
y({allo) r(c-b) n(yte) p Fd 24 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 50 w(161) 94 1076 y({allo) r(c-stop) p Fd 7 w(.) j(.) d(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 33 w(161) 94 1168 y({allo) n(w-o\015o) n(w) p
Fd 22 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(161) 94 1259
y({auto-sa) n(v) n(e) p Fd 11 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 38 w(161) 94 1351 y({base) p Fd 25 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 50 w(74) 94 1442
y({call-graph) p Fd 23 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(60) 94 1533 y({c) n(hec) n(k) p Fd 23 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(161) 94 1625 y({c) n(hec) n
(k-all) p Fd 6 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 32 w(161) 94 1716 y({c) n(hec) n(k-allo) r(cs) p Fd
8 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(161) 94 1808 y({c) n(hec) n
(k-fork) p Fd 17 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
43 w(162) 94 1899 y({c) n(hec) n(k-frees) p Fd 7 w(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) p Fg 33 w(162) 94 1990 y({c) n(hec) n(k-memory) p
Fd 20 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 46 w(162) 94 2082 y({c) n(hec) n(k-reallo) r
(cs) p Fd 12 w(.) i(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 39 w(162) 94 2173
y({coun) n(ts) p Fd 7 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 33 w(60) 94 2264 y({def-align) p Fd 6 w(.) i(.) f(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 32 w(162) 94 2356 y({dela) n(y) p
Fd 9 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 35 w(74) 94 2447 y({dynamic) p Fd 8 w(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 35 w(162) 94 2539 y({edit) p Fd 13
w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 40 w(162) 94 2630 y({editor) p Fd 17 w(.) h(.) g(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) p Fg 43 w(56) 94 2721 y({fail-freq) p
Fd 23 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
47 w(162) 94 2813 y({fail-seed) p Fd 14 w(.) i(.) d(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 41 w(162) 94 2904 y({free) p Fd 18
w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fg 44 w(74) 94 2995 y({free-b) n(yte) p Fd 22 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 48 w(162) 94 3087 y({free-stop) p
Fd 25 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 50 w(162) 94
3178 y({graph-\014le) p Fd 11 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 37 w(60) 94 3270 y({gui) p Fd 9 w(.) h(.) e(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 35 w(74) 94
3361 y({hatf-\014le) p Fd 23 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 48 w(73) 94 3452 y({heigh) n(t) p Fd 11
w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(74) 94 3544 y({help) p Fd 7 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(162) 94 3635 y({ignore) p
Fd 12 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(55) 94 3727 y({in) n(ternal) p Fd 23 w(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 48 w(74) 94 3818 y({large-b) r(ound) p
Fd 24 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) p Fg 50 w(162) 94 3909 y({leak-table) p
Fd 25 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 50 w(162) 94
4001 y({leaks) p Fd 14 w(.) i(.) f(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) p Fg 40 w(60) 94 4092 y({limit) p
Fd 17 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 43 w(162) 94 4183 y({list) p Fd 8 w(.) i(.) e(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(162) 94 4275
y({listing) p Fd 12 w(.) i(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 38 w(56) 94 4366 y({log-all) p Fd 11 w(.) j(.) e(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 38 w(162) 94 4458
y({log-allo) r(cs) p Fd 13 w(.) k(.) d(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 40 w(163) 94 4549 y({log-\014le) p Fd 23 w(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 47 w(163) 94 4640 y({log-frees) p
Fd 12 w(.) i(.) e(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg
39 w(163) 94 4732 y({log-memory) p Fd 7 w(.) i(.) f(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 33 w(163) 94 4823 y({log-reallo) r(cs) p Fd 18 w(.) j(.) c(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 44 w(163) 94 4914 y({matc) n(h) p Fd 11
w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(57) 94 5006 y({max-stac) n(k) p Fd 18 w(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 44 w(55) 94 5097 y({maxim) n(um) p
Fd 22 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(58) 94
5189 y({medium-b) r(ound) p Fd 6 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
33 w(163) 94 5280 y({minim) n(um) p Fd 10 w(.) h(.) g(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 36 w(58) 94 5371 y({no-free) p Fd
18 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 44 w(163) 94 5463 y({no-protect) p Fd 14 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) p Fg 40 w(163) 94 5554 y({o\015o) n(w-b) n(yte) p
Fd 15 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(163) 94
5645 y({o\015o) n(w-size) p Fd 9 w(.) j(.) d(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 35 w(163) 2063 681 y({o\015o) n(w-w) n(atc) n(h) p
Fd 7 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(163) 2063
774 y({page-allo) r(c-lo) n(w) n(er) p Fd 9 w(.) j(.) c(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(163) 2063 867 y({page-allo) r(c-upp) r(er) p
Fd 18 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 44 w(163) 2063 961 y({preserv) n(e) p Fd
13 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg
39 w(163) 2063 1054 y({prof) p Fd 10 w(.) g(.) g(.) f(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 36 w(163) 2063 1147
y({prof-\014le) p Fd 21 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(164) 2063 1240 y({prog-\014le) p Fd 13 w(.) h(.) f(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) p Fg 40 w(164) 2063 1334 y({read-en) n(v) p
Fd 7 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
33 w(164) 2063 1427 y({reallo) r(c-stop) p Fd 11 w(.) i(.) f(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 37 w(164) 2063 1520 y({safe-signals) p
Fd 17 w(.) i(.) e(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 43 w(164) 2063
1614 y({sho) n(w-all) p Fd 14 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) p Fg 41 w(164) 2063 1707 y({sho) n(w-en) n(v) p Fd
15 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 42 w(164) 2063
1800 y({sho) n(w-free) p Fd 12 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(164) 2063 1893 y({sho) n(w-freed) p Fd 9 w(.) g(.) g(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 35 w(164) 2063 1987 y({sho) n(w-map) p
Fd 19 w(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 45 w(164) 2063
2080 y({sho) n(w-sym) n(b) r(ols) p Fd 12 w(.) h(.) g(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 38 w(164) 2063 2173 y({sho) n(w-unfreed) p Fd 21 w(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(164) 2063 2266 y({sim-\014le) p Fd 13 w(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 39 w(73) 2063 2360
y({skip) p Fd 11 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 37 w(56) 2063 2453 y({small-b) r(ound) p
Fd 17 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(164) 2063 2546
y({source) p Fd 10 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 36 w(73) 2063 2640 y({source-dir) p Fd
23 w(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(56) 2063
2733 y({space) p Fd 7 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 33 w(74) 2063 2826 y({stac) n(k-depth) p
Fd 11 w(.) f(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 37 w(60) 2063
2919 y({threads) p Fd 8 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 34 w(164) 2063 3013 y({trace) p Fd 12 w(.) h(.) g(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 38 w(164) 2063
3106 y({trace-\014le) p Fd 24 w(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(165) 2063 3199 y({unallo) r(c) p Fd 12 w(.) i(.) e(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 38 w(74) 2063 3293
y({unfreed-ab) r(ort) p Fd 12 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg
39 w(165) 2063 3386 y({use-debug) p Fd 19 w(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) p Fg 46 w(165) 2063 3479 y({use-mmap) p Fd 16 w(.) g(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 42 w(165) 2063 3572 y({v) n(erb) r(ose) p
Fd 8 w(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 34 w(73) 2063 3666 y({v) n(ersion) p Fd 14 w(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 40 w(165) 2063 3759 y({view-heigh) n(t) p
Fd 14 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(75) 2063
3852 y({view-width) p Fd 21 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 47 w(75) 2063 3945 y({width) p Fd 19 w(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 44 w(75) p Fn 2063
4200 a(.) p Fg 2063 4326 a(.cshrc) p Fd 20 w(.) f(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(54) 2063
4419 y(.cvsignore) p Fd 23 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 48 w(211) 2063 4512 y(.gdbinit) p Fd 22 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 48 w(36) 2063 4605
y(.pro\014le) p Fd 19 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 44 w(54) p 2071 4860 41 6 v 2067 4986 24
4 v 2095 4986 V 2118 4986 a(mp) p 2230 4986 V 27 w(errno) p
Fd 6 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
32 w(40) p 2067 5079 V 2095 5079 V 2118 5079 a(mp) p
2230 5079 V 27 w(\014ni) p 2364 5079 V 53 w(functions) p
Fd 6 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 32 w(37) p 2067 5172 V 2095 5172 V 2118
5172 a(mp) p 2230 5172 V 27 w(init) p 2372 5172 V 54
w(functions) p Fd 20 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) p Fg 46 w(37) p 2067 5265 V 2090 5265
a(RLD) p 2259 5265 V 27 w(LIST) p Fd 10 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) p Fg 36 w(53) p Fn 2063 5520 a(3) p Fg 2063
5645 a(32-bit) p Fd 17 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 43 w(204) p 90 rotate dyy eop
%%Page: 250 256
250 255 bop Fo 94 -116 a(250) 3332 b(mpatrol) p Fn 94
365 a(6) p Fg 94 498 a(64-bit) p Fd 17 w(.) 13 b(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(204) p Fn 94 772
a(A) p Fg 94 905 a(a.out) p Fd 12 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 38 w(95) 94 1001
y(ABI) p Fd 10 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 36 w(22) 94 1098 y(ac) n(kno) n(wledgemen) n
(ts) p Fd 9 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 35 w(3) 94 1195 y(adding) 26
b(mpatrol) p Fd 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(15) 94
1292 y(address) 27 b(space) p Fd 16 w(.) 13 b(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 42 w(74) 94 1388 y(address,) 27 b(ph) n(ysical) p
Fd 15 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 41 w(21) 94 1485 y(address,) 27
b(virtual) p Fd 20 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(21) 94
1582 y(ADI) p Fd 6 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 33 w(235) 94 1679 y(AIX,) 25
b(IBM) h(RS/6000) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 48 w(179) 94 1775 y(alignmen) n(t) p
Fd 24 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
49 w(27) 94 1872 y(all) 27 b(\(mak) n(e) f(target\)) p
Fd 14 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 40 w(13) 94 1969 y(allo) r(ca) p
Fd 21 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(20) 94 2066 y(allo) r(cated) 28 b(blo) r(c) n(ks) p
Fd 11 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 38 w(103) 94 2162 y(allo) r(cation) 28
b(algorithm) p Fd 14 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 40 w(93) 94 2259 y(allo) r(cation) 28
b(bin) e(table) p Fd 8 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(63) 94 2356 y(allo) r(cation) 28
b(bins) p Fd 17 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(63) 94
2453 y(allo) r(cation) 28 b(b) r(oundaries) p Fd 11 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(59) 94 2549 y(allo) r(cation) 28 b(b) n(yte) p
Fd 13 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 39 w(30) 94 2646
y(allo) r(cation) 28 b(index) p Fd 13 w(.) 12 b(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 39 w(98) 94 2743 y(allo) r(cation) 28 b(information) p
Fd 16 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 42 w(147) 94 2840 y(allo) r(cation) 28 b(t) n(yp) r(e) p
Fd 12 w(.) 12 b(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(98) 94 2936
y(ALLOCBYTE) p Fd 16 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg 42 w(153) 94
3033 y(ALLOCSTOP) p Fd 21 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(153) 94
3130 y(ALLO) n(VF) p Fd 10 w(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 36 w(167) 94 3227 y(ALLO) n(W) n(OFLO) n(W) p Fd 22
w(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 50 w(153) 94 3323 y(ALLZER) p Fd 15 w(.) g(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 41 w(167) 94 3420 y(AM) p 227
3420 24 4 v 28 w(WITH) p 475 3420 V 27 w(MP) -6 b(A) g(TR) n(OL) p
Fd 12 w(.) 12 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(16) 94 3517 y(amallo) r(c) p Fd 26 w(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 49 w(89) 94 3614 y(Amiga) 27
b(4000/040) p Fd 24 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(13) 94
3710 y(Amiga) 27 b(notes) p Fd 13 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 40 w(199) 94 3807 y(AmigaOS,) 27 b(Motorola) g(680x0) p
Fd 13 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(183) 94
3904 y(Aminet) p Fd 9 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 35 w(14) 94 4001 y(Analog) 27 b(Devices) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 47 w(235) 94 4097 y(ANSI) p
Fd 22 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(90) 94 4194 y(application) 27 b(binary) e(in) n(terface) p
Fd 17 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(22) 94
4291 y(AProb) r(e) p Fd 23 w(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 49 w(214) 94 4388 y(APurify) p Fd 17 w(.) h(.) f(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) p Fg 44 w(214) 94 4484 y(AR) p
Fd 22 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 48 w(13) 94 4581 y(AR) n(CH) p Fd 20 w(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(204) 94 4678
y(arc) n(hiv) n(e) 26 b(library) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 44 w(7) 94 4775 y(arenas) p Fd 9 w(.) h(.) e(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(89) 94 4871
y(articles) p Fd 13 w(.) j(.) d(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) p Fg 40 w(233) 94 4968 y(assem) n(bler) p Fd 9 w(.) i(.) e(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(66) 94 5065 y(A) -6
b(TOM) p Fd 15 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 41 w(230) 94 5162 y(author,) 26 b(con) n(tacting) p
Fd 8 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) p Fg 34 w(3) 94 5258 y(author,) 26
b(details) p Fd 17 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(235) 94
5355 y(auto) r(conf) p Fd 7 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 33 w(13) 94 5452 y(automak) n(e) p
Fd 8 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(13) 94 5549 y(AutomatedQA) p Fd 13 w(.) f(.) i(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 39 w(224) 94 5645 y(A) n(UTOSA) -9 b(VE) p Fd 9 w(.) 11
b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) p Fg 35 w(153) p Fn 2063 365
a(B) p Fg 2063 488 a(bac) n(kw) n(ards) 26 b(compatibilit) n(y) p
Fd 15 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 41 w(207) 2063 580 y(BAD) n(ALN) p Fd 20 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 48 w(167) 2063 672 y(base) 26 b(address) p
Fd 15 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(74) 2063
763 y(bash) p Fd 20 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 46 w(54) 2063 855 y(BASIC) p
Fd 15 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 41 w(19) 2063 947 y(batc) n(h) 25 b(testing) p Fd
25 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 50 w(36) 2063
1039 y(b) r(est) 25 b(\014t) p Fd 15 w(.) 13 b(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(93) 2063 1131
y(BFD) p Fd 16 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 42 w(95) 2063 1223 y(bin) p Fd 8 w(.) g(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(63) 2063 1314 y(binary) p Fd 7 w(.) g(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(153) 2063 1406
y(binary) 25 b(\014le) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 44 w(62) 2063 1498 y(bit) 25 b(buc) n(k) n(et) p
Fd 18 w(.) 11 b(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
44 w(211) 2063 1590 y(blo) r(c) n(ks) p Fd 11 w(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(103) 2063
1682 y(BoundsChec) n(k) n(er) p Fd 19 w(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 45 w(214) 2063 1774 y(breakp) r(oin) n(t) p Fd 8 w(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 34 w(32) 2063 1865 y(bsdmallo) r(c\(3x\)) p
Fd 24 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) p Fg 49 w(232) 2063 1957 y(BSS) p
Fd 10 w(.) e(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 35 w(19) 2063 2049 y(bu\013ers,) 25 b(o) n(v) n(er\015o) n
(w) p Fd 7 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 33 w(31) 2063
2141 y(bug) 25 b(rep) r(orts) p Fd 14 w(.) 13 b(.) g(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 41 w(3) 2063 2233 y(bugs) p Fd 19
w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 46 w(193) 2063 2325 y(building) 25 b(questions) p
Fd 10 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) p Fg 36 w(204) 2063 2416 y(building) 25
b(the) h(library) p Fd 6 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 32 w(13) 2063
2508 y(bus) 25 b(errors) p Fd 22 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 47 w(27) 2063 2600 y(b) n(ytes) 25 b(compared) p
Fd 16 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 42 w(104) 2063 2692 y(b) n(ytes) 25
b(copied) p Fd 17 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
43 w(104) 2063 2784 y(b) n(ytes) 25 b(lo) r(cated) p
Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(104) 2063
2876 y(b) n(ytes) 25 b(set) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 48 w(104) p Fn 2063 3135 a(C) p Fg
2063 3258 a(C) p Fd 15 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(19) 2063
3350 y(C) p Ff(++) p Fd 13 w(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 38 w(19) 2063 3441
y(C) p Ff(++) p Fg 26 w(Debugging) 26 b(Supp) r(ort) f(Library) g
(\(lib) r(cwd\)) p Fd 17 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) p
Fg 43 w(214) 2063 3533 y(C) p Ff(++) p Fg 26 w(mangled) 26
b(names) p Fd 14 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) p Fg 40 w(99) 2063 3625 y(call) 27
b(sites) p Fd 9 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 34 w(63) 2063 3717 y(call) 27 b(stac) n(ks) p
Fd 17 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 43 w(22) 2063 3809 y(call-b) n(y-v) l(alue) p Fd 15
w(.) f(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 40 w(19) 2063
3901 y(callbac) n(k) 26 b(functions) p Fd 15 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 41 w(102) 2063 3992 y(calling) 27 b(con) n(v) n(en) n(tion) p
Fd 15 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) p Fg 41 w(22) 2063 4084 y(CC) p Fd
25 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 50 w(13) 2063 4176 y(Ccmallo) r(c) p Fd
15 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
41 w(214) 2063 4268 y(Cen) n(terLine) 26 b(Dev) n(elopmen) n(t) f
(Systems) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 48 w(228) 2063 4360 y(CFLA) n(GS) p
Fd 14 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(13) 2063 4452 y(ChangeLog) p Fd 17 w(.) i(.) e(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 43 w(212) 2063 4543 y(Chap) r(eron) p Fd
24 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 50 w(215) 2063
4635 y(CHECK) p Fd 11 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 37 w(153) 2063 4727 y(CHECKALL) p Fd 7 w(.) g(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(153) 2063 4819 y(CHECKALLOCS) p Fd 18 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
45 w(154) 2063 4911 y(Chec) n(k) n(er) p Fd 18 w(.) g(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 44 w(215) 2063 5003 y(CHECKF) n(ORK) p
Fd 8 w(.) f(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 34 w(154) 2063 5094 y(CHECKFREES) p
Fd 11 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) p Fg 37 w(154) 2063 5186 y(CHECKMEMOR) -6
b(Y) p Fd 12 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 38 w(154) 2063 5278 y(CHECKREALLOCS) p
Fd 18 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(154) 2063 5370 y(CHECKSUMS) p Fd 14 w(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(13) 2063 5462 y(c) n(hildren) p Fd 18 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 44 w(65) 2063 5554
y(CISC) p Fd 7 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 33 w(23) 2063 5645 y(clean) 26 b(\(mak) n(e) f
(target\)) p Fd 24 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 49 w(13) p 90 rotate dyy eop
%%Page: 251 257
251 256 bop Fo 94 -116 a(Index) 3421 b(251) p Fg 94 365
a(clean) n(up) p Fd 7 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 33 w(13) 94 458 y(clobb) r(er) 27
b(\(mak) n(e) e(target\)) p Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 48 w(13) 94 550 y(CMEM) p
Fd 9 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 35 w(215) 94 642 y(CMM) 27 b(\(Customisable) h(Memory) e(Manager\)) p
Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg
47 w(215) 94 735 y(COFF) p Fd 8 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 34 w(95) 94 827 y(command) 26
b(line) g(options) p Fd 18 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 44 w(161) 94 919 y(command) 26 b(pip) r(e) p
Fd 15 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(79) 94 1012
y(Commo) r(dore-Amiga,) 28 b(Inc.) p Fd 11 w(.) 12 b(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 37 w(228) 94 1104 y(common) 27
b(v) l(ariables) p Fd 16 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg 42 w(19) 94
1196 y(compiler) p Fd 9 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 35 w(13) 94 1289 y(compiling) p Fd 8 w(.) i(.) f(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 34 w(13) 94 1381 y(condenseleaklog) p
Fd 13 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 39 w(55) 94 1473 y(con\014gure) p
Fd 19 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(13) 94 1566 y(con) n(tacting) 27 b(the) e(author) p
Fd 7 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) p Fg 33 w(3) 94 1658 y(con) n(text) 26 b(listing) p
Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(56) 94 1750
y(con) n(tributors) p Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(3) 94 1843 y(core) 27 b(\014le) p Fd 21 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 47 w(210) 94
1935 y(corruption) p Fd 13 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 39 w(81) 94 2028 y(crash) p Fd 10 w(.) g(.) g(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) p Fg 36 w(96) 94 2120
y(csh) p Fd 8 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 34 w(54) 94 2212 y(CSRI) 25
b(mallo) r(c) p Fd 10 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 36 w(215) 94 2305 y(CVS) p Fd 19 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 45 w(211) 94 2397 y(cycles) p
Fd 20 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(59) p Fn 94 2659 a(D) p Fg 94 2783 a(data) 26
b(sections) p Fd 7 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(19) 94 2875 y(Dbmallo) r(c) p Fd 10 w(.) i(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 36 w(49) 94 2967 y(Debauc) n(h) p
Fd 23 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
50 w(216) 94 3060 y(Debian) 26 b(pac) n(k) l(age) p Fd
17 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 43 w(14) 94 3152 y(Debug) 26
b(Heap) p Fd 16 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
43 w(216) 94 3245 y(debugger) p Fd 19 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 45 w(32) 94 3337 y(debugging) p
Fd 18 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
44 w(32) 94 3429 y(debugging) 26 b(information) p Fd
10 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(24) 94 3522 y(DebugOb) t(ject) p Fd 20 w(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p
Fg 46 w(216) 94 3614 y(decimal) p Fd 25 w(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 49 w(153) 94 3706 y(declarations,) 28
b(ten) n(tativ) n(e) p Fd 16 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 42 w(19) 94 3799 y(DEF) -9 b(ALIGN) p
Fd 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(154) 94
3891 y(Dell) 27 b(Inspiron) e(7500) p Fd 8 w(.) 13 b(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 34 w(13) 94 3983 y(demangler) p Fd 16 w(.) h(.) g(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 42 w(99) 94 4076 y(DG/UX,) 26 b(In) n(tel) f(80x86) p
Fd 24 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(179) 94 4168 y(DG/UX,) 26 b(Motorola) i(88xx0) p
Fd 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
45 w(179) 94 4260 y(diagnostic) 28 b(messages) p Fd 21
w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 46 w(167) 94 4353 y(Digital) 27 b(Equipmen) n(t) e(Corp) r(oration) p
Fd 24 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) p Fg 49 w(230) 94 4445 y(direct) 26
b(allo) r(cation) i(table) p Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 46 w(63) 94 4537 y(direct) 26
b(allo) r(cations) p Fd 10 w(.) 15 b(.) e(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(63) 94
4630 y(distclean) 27 b(\(mak) n(e) e(target\)) p Fd 16
w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 42 w(13) 94 4722 y(DLLs) p Fd 24 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(24) 94 4814 y(Dmallo) r(c) p
Fd 13 w(.) h(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 39 w(50) 94 4907 y(Do) r(cBo) r(ok) p Fd 16 w(.) i(.) e(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 42 w(203) 94 4999 y(do) r(cumen) n(tation) p
Fd 12 w(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(14) 94 5091 y(do) r(cumen) n
(tation) 26 b(formats) p Fd 16 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 42 w(203) 94 5184 y(do) r(cumen) n(tation) 26
b(questions) p Fd 6 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 32 w(203) 94 5276 y(dot) p Fd 24 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 50 w(59) 94
5368 y(dott) n(y) p Fd 8 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 34 w(59) 94 5461 y(DPCR) -6
b(TLMM) p Fd 12 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 38 w(217) 94
5553 y(driv) n(er) p Fd 18 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 43 w(66) 94 5645 y(DRS/NX,) 25
b(SP) -6 b(AR) n(C) p Fd 7 w(.) 12 b(.) g(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(179) 2063
365 y(dumping) 25 b(memory) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 45 w(109) 2063
458 y(duplicate) 26 b(sym) n(b) r(ols) p Fd 14 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fg 41 w(207) 2063 550 y(D) n(VI) p Fd 8 w(.) e(.) j(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(203) 2063
643 y(D) n(W) -9 b(ARF) p Fd 7 w(.) 11 b(.) h(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 32 w(93) 2063 735 y(dynamic) 25
b(link) h(libraries) p Fd 24 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 49 w(24) 2063 828 y(dynamic) 25
b(link) n(er) p Fd 13 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg
38 w(24) 2063 920 y(dynamic) 25 b(linking) p Fd 11 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) p Fg 36 w(24) 2063 1013 y(dynamic) 25 b(memory) h(allo) r
(cations) p Fd 16 w(.) 15 b(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
42 w(20) 2063 1105 y(D) n(YNIX/ptx,) 23 b(In) n(tel) i(80x86) p
Fd 9 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(180) 2063 1198 y(D) n(YNLINK) p Fd 21 w(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 49 w(204) p Fn 2063 1448 a(E) p Fg 2063
1572 a(Edin) n(burgh) p Fd 11 w(.) e(.) h(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 37 w(235) 2063 1664 y(Edin) n(burgh) 25 b(P) n(ortable) h(Compilers)
p Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 45 w(235) 2063 1757 y(EDIT) p
Fd 18 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 44 w(154) 2063 1849 y(editor) p Fd 18 w(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 43 w(56) 2063
1942 y(EDITOR) p Fd 15 w(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 41 w(56) 2063 2034 y(Electric) 27 b(F) -6 b(ence) p
Fd 6 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg 32 w(217) 2063
2127 y(Electric) 27 b(Soft) n(w) n(are,) g(Inc.) p Fd
15 w(.) 12 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(218) 2063 2219 y(ELF32) p Fd 21 w(.) g(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 46 w(95) 2063 2312
y(ELF64) p Fd 21 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 46 w(95) 2063 2404 y(elvis) p Fd 24 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 50 w(56) 2063
2497 y(emacs) p Fd 15 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 41 w(56) 2063 2589 y(em) n(b) r(edded) 24
b(libraries) p Fd 18 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 43 w(54) 2063 2682
y(em) n(b) r(edded) 24 b(systems) p Fd 24 w(.) 12 b(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
48 w(21) 2063 2774 y(endianness) p Fd 9 w(.) f(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 35 w(59) 2063 2867 y(Enforcer) p Fd
9 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
35 w(217) 2063 2959 y(enhancemen) n(ts) p Fd 8 w(.) g(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 34 w(193) 2063 3052 y(en) n(try-p) r(oin) n(t) p Fd
17 w(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg 45 w(99) 2063
3144 y(ENVIR) n(ON) p Fd 20 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 48 w(204) 2063 3237 y(en) n(vironmen) n(t) p Fd 16
w(.) e(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 42 w(153) 2063 3329
y(EPC) p Fd 17 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 43 w(235) 2063 3422 y(epilogue) 26 b(function) p
Fd 9 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) p Fg 36 w(102) 2063 3514 y(error) 26
b(abbreviation) g(co) r(de) p Fd 12 w(.) 13 b(.) g(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 39 w(100) 2063 3607 y(error) 26
b(sev) n(erit) n(y) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 46 w(100) 2063 3699 y(errors) p Fd 18 w(.) h(.) g(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 44 w(167) 2063 3792
y(errors,) 27 b(run-time) p Fd 15 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fg 42 w(5) 2063 3884 y(ev) n(en) n(t) p Fd 9 w(.) f(.) i(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(77) 2063
3977 y(examples) p Fd 18 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 43 w(95) 2063 4069 y(exec) p Fd 8 w(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
34 w(27) 2063 4161 y(executable) 25 b(\014les) p Fd 8
w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(23) 2063 4254
y(extensions) p Fd 16 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 42 w(49) 2063 4346 y(extern) 25 b(inline) p Fd 14
w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 40 w(205) 2063
4439 y(extra) p Fd 11 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) p Fg 37 w(14) p Fn 2063 4689 a(F) p
Fg 2063 4813 a(F) -9 b(AILFREQ) p Fd 9 w(.) 11 b(.) i(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 35 w(154) 2063 4906 y(F) -9 b(AILSEED) p Fd
15 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(154) 2063
4998 y(failure) 27 b(frequency) p Fd 18 w(.) 11 b(.) h(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(36) 2063 5091 y(failure) 27 b(seed) p Fd 18 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg 43 w(36) 2063
5183 y(F) -9 b(A) n(Q) p Fd 18 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 44 w(203) 2063 5276
y(fatal) 27 b(errors) p Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 47 w(100) 2063 5368 y(fault,) 26 b(page) p Fd 10 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(21) 2063
5461 y(FD) n(A) 25 b(\(F) -6 b(ree) 25 b(Debug) g(Allo) r(cator\)) p
Fd 11 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 37 w(217) 2063
5553 y(features) p Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 48 w(7) 2063 5645 y(fence) 26 b(p) r(osts) p
Fd 23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
48 w(31) p 90 rotate dyy eop
%%Page: 252 258
252 257 bop Fo 94 -116 a(252) 3332 b(mpatrol) p Fg 94
365 a(\014le) 26 b(formats) p Fd 16 w(.) 15 b(.) d(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 43 w(177) 94 458 y(\014le) 26 b(scop) r(e) h(v) l(ariables) p
Fd 22 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 48 w(19) 94 550 y(\014les) 27 b(questions) p
Fd 10 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(211) 94 643
y(\014les,) 27 b(mapping) p Fd 10 w(.) 13 b(.) f(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 36 w(22) 94 736 y(\014rst) 26 b(\014t) p Fd 18 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(93) 94 828 y(\014tting) 26 b(allo) r(cations) p
Fd 24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 47 w(107) 94 921 y(forew) n(ord) p
Fd 8 w(.) h(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fg 34 w(3) 94 1013 y(fork) p Fd 13 w(.) i(.) e(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(27) 94
1106 y(fork) n(ed) 26 b(pro) r(cesses) p Fd 10 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 36 w(27) 94 1198 y(F) n(ORMA) -6 b(T) p
Fd 17 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
43 w(204) 94 1291 y(format) 27 b(string) p Fd 23 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 48 w(66) 94 1383 y(F) -6
b(ortify) p Fd 20 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 46 w(218) 94 1476 y(F) n(OR) -6 b(TRAN) p Fd
14 w(.) 11 b(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 40 w(19) 94
1569 y(frame) 27 b(p) r(oin) n(ter) p Fd 15 w(.) 12 b(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p
Fg 41 w(209) 94 1661 y(FRDCOR) p Fd 18 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 45 w(168) 94 1754 y(FRDOPN) p Fd 19 w(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 46 w(168) 94 1846 y(FRDO) n(VF) p
Fd 21 w(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(168) 94
1939 y(FRECOR) p Fd 22 w(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 48 w(169) 94 2031 y(free) 27 b(blo) r(c) n(ks) p Fd
10 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 36 w(103) 94
2124 y(free) 27 b(b) n(yte) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 50 w(30) 94 2216 y(free) 27 b(memory) p
Fd 16 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(30) 94
2309 y(F) -6 b(reeBSD,) 26 b(In) n(tel) f(80x86) p Fd
10 w(.) 14 b(.) e(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 36 w(180) 94 2402 y(FREEBYTE) p Fd 8 w(.) h(.) e(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 35 w(154) 94 2494 y(freed) 27 b(blo) r(c) n(ks) p
Fd 7 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(103) 94
2587 y(freed) 27 b(memory) p Fd 12 w(.) 12 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(30) 94 2679 y(freed) 27 b(queue) p Fd 13 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 40 w(103) 94 2772 y(FREESTOP) p
Fd 13 w(.) h(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(154) 94 2864
y(FREMRK) p Fd 15 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 41 w(169) 94 2957 y(FRENUL) p Fd 8 w(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 35 w(169) 94 3049 y(FREOPN) p Fd 23
w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 50 w(169) 94
3142 y(frequen) n(tly) 25 b(ask) n(ed) h(questions) p
Fd 19 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 45 w(203) 94
3235 y(F) -6 b(reshMeat) p Fd 13 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) p Fg 38 w(3) 94 3327 y(function) 26 b(call) h(stac) n(ks)
p Fd 12 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 38 w(22) 94 3420 y(functions) p Fd
17 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
43 w(137) 94 3512 y(functions,) 27 b(callbac) n(k) p
Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 48 w(102) 94 3605 y(functions,) 27 b(handler) p
Fd 12 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 39 w(102) 94 3697 y(future) 26 b(enhancemen) n(ts) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(193) p Fn 94 3948 a(G) p Fg 94 4072 a(g) p Ff(++) p
Fd 22 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 47 w(99) 94 4165 y(Gab) r(e's) 27 b(Debug) e(Library) p
Fd 13 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 40 w(218) 94 4257 y(garbage) 28 b(collector) p Fd
14 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 39 w(20) 94 4350 y(GC) 27 b(\(Garbage) g
(Collector\)) p Fd 17 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 44 w(218) 94 4442 y(GCAllo) r(c) p Fd 26 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 50 w(218) 94 4535 y(gcc) p Fd
8 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 34 w(99) 94 4627 y(gdb) p Fd 18 w(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
44 w(32) 94 4720 y(general) 27 b(errors) p Fd 14 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 40 w(30) 94 4812 y(Geo) r(desic) 28
b(Systems) p Fd 17 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 43 w(219) 94 4905 y(getting) 27
b(up) r(dates) p Fd 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
44 w(3) 94 4998 y(Glo) n(wCo) r(de) p Fd 14 w(.) i(.) e(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 41 w(218) 94 5090 y(GMemLogger) p
Fd 14 w(.) j(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) p Fg 40 w(219) 94 5183 y(GNU) 26
b(C) g(library) p Fd 7 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(232) 94
5275 y(gprof) p Fd 11 w(.) h(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 37 w(59) 94 5368 y(graph) p Fd
20 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 46 w(59) 94 5460 y(graph) 26 b(sp) r(eci\014cation) h(\014le) p
Fd 11 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(59) 94 5553 y(graphical) 27 b(user) f(in) n(terface) p
Fd 16 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(74) 94 5645 y(GraphViz) p Fd 7 w(.) g(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 33 w(59) 2063 365 y(Great) 26
b(Circle) p Fd 16 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
42 w(219) 2063 462 y(Green) 26 b(Hills) g(Soft) n(w) n(are,) h(Inc.) p
Fd 9 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
35 w(227) 2063 558 y(GUI) p Fd 7 w(.) f(.) i(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 32 w(74) 2063
654 y(GUISUP) p Fd 20 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(13) p Fn 2063 925 a(H) p Fg 2063 1057 a(halting) 26
b(the) f(library) p Fd 7 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p Fg 33 w(32) 2063
1154 y(handler) 25 b(functions) p Fd 24 w(.) 12 b(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
49 w(102) 2063 1250 y(hash) 25 b(table) p Fd 15 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(45) 2063
1346 y(HA) -6 b(TF) p Fd 9 w(.) 11 b(.) h(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 34 w(73) 2063 1443 y(HA) -9
b(VE) p 2285 1443 24 4 v 27 w(MP) j(ALLOC) p Fd 19 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 45 w(16) 2063 1539 y(HA) -9 b(VE) p 2285 1539 V 27
w(MP) j(A) g(TR) n(OL) p Fd 18 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 45 w(16) 2063
1635 y(heap) p Fd 18 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 44 w(20) 2063 1732 y(Heap) 25
b(Allo) r(cation) i(T) -6 b(race) 27 b(F) -6 b(ormat) p
Fd 21 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) p Fg 47 w(73) 2063 1828
y(heap) 25 b(corruption) p Fd 12 w(.) 13 b(.) g(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 38 w(81) 2063 1924 y(heap) 25 b(usage) p Fd 23 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(104) 2063 2020
y(HeapAgen) n(t) p Fd 18 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 45 w(219) 2063 2117 y(HeapChec) n(k) p Fd 17 w(.) f(.) i(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) p Fg 43 w(219) 2063 2213 y(heap) r(di\013) p
Fd 18 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(51) 2063 2309 y(HeapManager) p Fd 9 w(.) h(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(219) 2063 2406 y(HELP) p Fd 10 w(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 36 w(155) 2063 2502
y(hexadecimal) p Fd 18 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 44 w(153) 2063 2598 y(hexw) n(ords) p Fd 14 w(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 40 w(57) 2063 2695 y(hexw) n(ords) 25
b(command) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 47 w(57) 2063 2791 y(hidden) 24
b(memory) p Fd 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 44 w(93) 2063
2887 y(hin) n(ts) p Fd 15 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 41 w(90) 2063 2984 y(HP/UX,) 25
b(HP) h(P) -6 b(A/RISC) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 46 w(180) 2063 3080 y(Hyp) r(erlearning) 25
b(Cen) n(ter) p Fd 6 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) p Fg 32 w(234) p Fn 2063 3364 a(I) p Fg
2063 3496 a(IBM) 26 b(Corp) r(oration) p Fd 23 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 48 w(216) 2063 3592 y(IDH) p Fd 6 w(.) g(.) g(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 33 w(219) 2063
3689 y(illegal) 28 b(memory) d(accesses) p Fd 13 w(.) 15
b(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(108) 2063
3785 y(ILLMEM) p Fd 11 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 37 w(170) 2063 3881 y(implemen) n(tation) 26 b(details) p
Fd 24 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(93) 2063 3977 y(impro) n(ving) 26 b(p) r(erformance) p
Fd 18 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 44 w(89) 2063 4074 y(INCOMP) p Fd 8 w(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 34 w(170) 2063 4170 y(INF) n(OP) -6
b(A) g(TH) p Fd 20 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
48 w(203) 2063 4266 y(information) 27 b(ab) r(out) f(an) f(allo) r
(cation) p Fd 16 w(.) 15 b(.) e(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(147) 2063 4363
y(inline) 26 b(functions) p Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
47 w(205) 2063 4459 y(installation) p Fd 20 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 44 w(13) 2063 4555 y(instrumen) n(tation) p
Fd 10 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 36 w(213) 2063 4652 y(Insure) p
Ff(++) p Fd 8 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 34 w(220) 2063 4748 y(in) n(tegration) p Fd 25 w(.) f(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 50 w(15) 2063 4844 y(in) n(ternal) 26
b(blo) r(c) n(ks) p Fd 14 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg
41 w(103) 2063 4941 y(In) n(tuitiv) n(e) 24 b(Systems,) i(Inc.) p
Fd 9 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(228) 2063 5037 y(In) n(use) p Fd 10 w(.) e(.) i(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 36 w(13) 2063
5133 y(IRIX,) 24 b(MIPS) p Fd 19 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 45 w(180) p Fn 2063 5417 a(J) p Fg 2063 5549 a(JMallo) r(c) p
Fd 18 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(220) 2063 5645 y(JProb) r(e) p Fd 13 w(.) h(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 39 w(220) p 90 rotate
dyy eop
%%Page: 253 259
253 258 bop Fo 94 -116 a(Index) 3421 b(253) p Fn 94 365
a(K) p Fg 94 488 a(Kernel) 26 b(Group,) g(The) p Fd 12
w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 39 w(231) 94 580 y(KL) 26 b(Group) p Fd 14 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 40 w(220) 94 672
y(kno) n(wn) 26 b(bugs) p Fd 7 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 33 w(193) 94 764 y(ksh) p Fd 23 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 49 w(54) p
Fn 94 1012 a(L) p Fg 94 1135 a(LAR) n(GEBOUND) p Fd 16
w(.) f(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) p Fg 43 w(155) 94 1227 y(LaT) 222 1243 y(E) 266
1227 y(X) p Fd 19 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 45 w(14) 94 1319 y(LD) p Fd 8 w(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(13) 94 1411 y(LD) p 206 1411 24 4 v 28 w(LIBRAR) -6
b(Y) p 588 1411 V 25 w(P) g(A) g(TH) p Fd 7 w(.) 12 b(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(207) 94 1503
y(LD) p 206 1503 V 28 w(PRELO) n(AD) p Fd 19 w(.) g(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 47 w(53) 94 1595 y(LD) p 206 1595 V 28 w(R) n(UN) p
405 1595 V 26 w(P) -6 b(A) g(TH) p Fd 7 w(.) 12 b(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(207) 94 1687 y(ldcon\014g) p Fd 23 w(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(13) 94 1780 y(Leak) p
Fd 16 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 42 w(220) 94 1872 y(leak) 27 b(table) p Fd 7 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(45) 94
1964 y(LeakBug) p Fd 22 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(221) 94 2056 y(Leak) n(ers) p Fd 6 w(.) g(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 33 w(221) 94 2148 y(leaks) p
Fd 15 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 41 w(87) 94 2240 y(LEAKT) -6 b(ABLE) p Fd 21
w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 47 w(155) 94 2332 y(LeakT) -6
b(racer) p Fd 17 w(.) 14 b(.) e(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(221) 94 2424 y(Leaky) p Fd 14 w(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 40 w(221) 94 2516 y(LessTif) p
Fd 11 w(.) i(.) e(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 38 w(206) 94 2608 y(LhA) 25 b(arc) n(hiv) n(e) p Fd
20 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(14) 94
2700 y(LibKmallo) r(c) p Fd 10 w(.) h(.) e(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 36 w(221) 94 2792 y(library) 26 b(b) r(eha) n(viour) p
Fd 7 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 33 w(27) 94 2884 y(library) 26
b(functions) p Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 46 w(37) 94
2976 y(library) 26 b(settings) p Fd 8 w(.) 13 b(.) g(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(29) 94 3068 y(library) 26 b(statistics) p Fd
6 w(.) 15 b(.) d(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 32 w(29) 94 3160 y(library) -6
b(,) 26 b(arc) n(hiv) n(e) p Fd 11 w(.) 13 b(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 37 w(7) 94 3252 y(library) -6 b(,) 26 b(building) p
Fd 10 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 36 w(13) 94 3344 y(library) -6
b(,) 26 b(mpatrol) p Fd 16 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 41 w(5) 94 3436 y(library) -6 b(,) 26 b(shared) p
Fd 21 w(.) 13 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 46 w(7) 94
3528 y(library) -6 b(,) 26 b(thread-safe) p Fd 18 w(.) 13
b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 43 w(7) 94 3620 y(LibSafe) p Fd 8 w(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 34 w(222) 94 3713 y(libto) r(ol) p
Fd 8 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(13) 94 3805 y(lifetime) p Fd 9 w(.) j(.) d(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 35 w(77) 94 3897 y(LIMIT) p
Fd 18 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(155) 94 3989 y(limitations) p Fd 8 w(.) j(.) d(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 34 w(193) 94 4081 y(limiting) 27 b(a) n(v) l
(ailable) g(memory) p Fd 6 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 32 w(36) 94 4173 y(line) 27 b(n) n(um) n(b) r(er) d(table) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 46 w(24) 94 4265 y(link) n(er) p
Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 48 w(13) 94 4357 y(linking) p Fd 21 w(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 46 w(13) 94 4449 y(linking) 26
b(questions) p Fd 14 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(206) 94 4541
y(links,) 27 b(sym) n(b) r(olic) p Fd 13 w(.) 13 b(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 39 w(13) 94 4633 y(lin) n(t) p Fd 24 w(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 49 w(13) 94
4725 y(lin) n(t) 26 b(\(mak) n(e) g(target\)) p Fd 16
w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 42 w(13) 94 4817 y(Lin) n(ux) 25 b(Soft) n(w) n(are)
i(Map) p Fd 10 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 36 w(14) 94 4909 y(Lin) n(ux,) 25
b(In) n(tel) h(80x86) p Fd 8 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(180) 94 5001
y(Lin) n(ux,) 25 b(Motorola) j(680x0) p Fd 24 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(181) 94
5093 y(list) p Fd 10 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(56) 94 5185 y(LIST) p
Fd 10 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 36 w(155) 94 5277 y(lo) r(cal) 28 b(static) e(v) l(ariables) p
Fd 10 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 36 w(19) 94 5369 y(log) 27 b(\014le) p
Fd 23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(96) 94 5461 y(LOGALL) p Fd 9 w(.) g(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 35 w(155) 94 5553 y(LOGALLOCS) p Fd 20
w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 47 w(155) 94 5645 y(LOGDIR) p
Fd 14 w(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg
40 w(155) 2063 365 y(LOGFILE) p Fd 14 w(.) g(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 40 w(155) 2063 458 y(LOGFREES) p Fd 13
w(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 39 w(155) 2063 550
y(logging) p Fd 15 w(.) i(.) e(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) p Fg 40 w(28) 2063 642 y(LOGMEMOR) -6 b(Y) p
Fd 14 w(.) 12 b(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 40 w(155) 2063 735 y(LOGREALLOCS) p
Fd 19 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 47 w(156) 2063 827 y(lo) n(w) 26 b(memory) g(handler) g
(function) p Fd 20 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 46 w(102) 2063
919 y(LSM) p Fd 17 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 43 w(14) 2063 1012 y(LynxOS,) 24
b(In) n(tel) h(80x86) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 48 w(181) 2063 1104 y(LynxOS,) 24
b(P) n(o) n(w) n(erPC) p Fd 16 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(182) p Fn
2063 1366 a(M) p Fg 2063 1490 a(magic) p Fd 17 w(.) g(.) f(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(177) 2063
1582 y(mak) n(e) p Fd 10 w(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 36 w(13) 2063 1675 y(Mak) n(e\014le) p
Fd 12 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 38 w(13) 2063 1767 y(Mallo) r(c) 27 b(Debug) p Fd
8 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 34 w(222) 2063 1859
y(Mallo) r(c) 27 b(Debug) f(Library) p Fd 15 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
41 w(222) 2063 1952 y(mallo) r(c) 27 b(libraries) g(for) g(Solaris) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 46 w(231) 2063
2044 y(mallo) r(c\(3c\)) p Fd 11 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) p Fg 38 w(231) 2063 2136 y(mallo) r(c\(3x\)) p Fd
8 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(231) 2063
2229 y(Mallo) r(c) p 2292 2229 V 29 w(Dbg) p Fd 9 w(.) f(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 35 w(217) 2063 2321 y(Mallo) r(cT) -6
b(race) p Fd 18 w(.) 15 b(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
44 w(222) 2063 2413 y(mallopt) p Fd 6 w(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 32 w(54) 2063 2506
y(MalT) -6 b(race) p Fd 11 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 37 w(222) 2063 2598 y(mangled) 26 b(names) p
Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(99) 2063 2690
y(MANP) -6 b(A) g(TH) p Fd 8 w(.) 10 b(.) j(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p
Fg 34 w(203) 2063 2783 y(MANR) n(OFFSEQ) p Fd 17 w(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 45 w(203) 2063 2875 y(man) n(ual) 26 b(la) n(y) n(out) p
Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 50 w(3) 2063
2967 y(man) n(ual) 26 b(pages) p Fd 16 w(.) 12 b(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(14) 2063 3060 y(map) 25 b(of) i(memory) p Fd
15 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 40 w(29) 2063 3152 y(mapmallo) r(c\(3x\)) p
Fd 8 w(.) h(.) e(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 34 w(232) 2063 3245 y(mapping) 25
b(\014les) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
47 w(22) 2063 3337 y(Mark) p 2247 3337 V 28 w(Mallo) r(c) p
Fd 7 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 33 w(222) 2063
3429 y(mark) n(ed) 25 b(blo) r(c) n(ks) p Fd 20 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) p Fg 46 w(103) 2063 3522 y(MAXALN) p Fd
13 w(.) f(.) h(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg 39 w(170) 2063
3614 y(MChec) n(k) p Fd 14 w(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 40 w(223) 2063 3706 y(md5sum) p Fd 11 w(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 37 w(13) 2063 3799
y(MEDIUMBOUND) p Fd 19 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 46 w(156) 2063 3891 y(MEM) p
Fd 18 w(.) g(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(223) 2063 3983 y(MemChec) n(k) p Fd 19 w(.) f(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 45 w(223) 2063 4076 y(MemDebug) p Fd 13
w(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 39 w(223) 2063
4168 y(MemLeak) p Fd 23 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 49 w(223) 2063 4260 y(Memory) 26 b(Advisor) p Fd 14
w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 41 w(224) 2063 4353 y(memory) 25 b(allo) r(cation) j
(pro\014ling) p Fd 16 w(.) 13 b(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 42 w(59) 2063 4445 y(memory) 25 b(allo) r(cation) j(tracing) p
Fd 20 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
45 w(73) 2063 4537 y(memory) 25 b(allo) r(cations) p
Fd 7 w(.) 16 b(.) c(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 33 w(19) 2063 4630 y(memory) 25 b(allo) r(cations,) k
(dynamic) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 49 w(20) 2063
4722 y(memory) 25 b(allo) r(cations,) k(stac) n(k) p
Fd 7 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(19) 2063 4814 y(memory) 25 b(allo) r(cations,) k(static) p
Fd 20 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
44 w(19) 2063 4907 y(memory) 25 b(blo) r(c) n(ks) p Fd
8 w(.) 13 b(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 34 w(103) 2063 4999 y(memory) 25
b(debugger) p Fd 15 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(213) 2063 5091
y(memory) 25 b(dump) p Fd 16 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
42 w(109) 2063 5184 y(memory) 25 b(leak) h(table) p Fd
23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 48 w(65) 2063 5276 y(memory) 25 b(leaks) p
Fd 12 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 38 w(87) 2063
5368 y(memory) 25 b(managemen) n(t) i(in) n(terface) p
Fd 17 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(21) 2063 5461
y(Memory) 26 b(Managemen) n(t) g(Reference) p Fd 9 w(.) 13
b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) p Fg 35 w(233) 2063 5553 y(memory) 25 b(managemen) n(t) i(unit) p
Fd 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
45 w(21) 2063 5645 y(memory) 25 b(map) p Fd 23 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 48 w(29) p 90 rotate dyy
eop
%%Page: 254 260
254 259 bop Fo 94 -116 a(254) 3332 b(mpatrol) p Fg 94
365 a(memory) 26 b(mapp) r(ed) f(\014les) p Fd 11 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(22) 94 458 y(memory) 26 b(protection) p Fd 15
w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 41 w(22) 94 551 y(Memory) 27 b(Sleuth) p
Fd 19 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 46 w(224) 94 643 y(memory) 26
b(usage) p Fd 21 w(.) 12 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 46 w(103) 94
736 y(memory) -6 b(,) 26 b(ph) n(ysical) p Fd 7 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 33 w(21) 94 828 y(memory) -6 b(,) 26 b(virtual) p
Fd 11 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(21) 94 921 y(Memprof) p
Fd 18 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
44 w(224) 94 1014 y(Mempro) r(of) p Fd 16 w(.) i(.) e(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 42 w(224) 94 1106 y(MemT) -6 b(est) p Fd
13 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
40 w(224) 94 1199 y(MemT) -6 b(race) p Fd 10 w(.) 14
b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 37 w(225) 94 1292
y(MemW) -6 b(atc) n(h) p Fd 14 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 40 w(225) 94 1384 y(message) 28 b(passing) p Fd 10
w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 36 w(24) 94 1477 y(mgauge) p
Fd 26 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 50 w(51) 94 1570 y(MicroQuill) p Fd 7 w(.) j(.) d(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 33 w(219) 94 1662 y(Microsoft) p Fd 11
w(.) i(.) e(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(184) 94
1755 y(misaligned) 28 b(data) p Fd 15 w(.) 12 b(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 40 w(27) 94 1847 y(misaligned) 28 b(memory) d(accesses) p
Fd 8 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(22) 94
1940 y(MISMA) -6 b(T) p Fd 10 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 37 w(170) 94 2033 y(mk\014fo) p Fd 11 w(.) h(.) f(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(79) 94
2125 y(mkno) r(d) p Fd 19 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 45 w(79) 94 2218 y(ML) p Fd 21 w(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 46 w(20) 94 2311 y(mleak) p Fd 17 w(.) g(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(55) 94 2403 y(mleak) 27
b(command) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(55) 94 2496
y(MM) 27 b(\(Shared) e(Memory) h(Library\)) p Fd 14 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 41 w(226) 94 2589 y(Mmallo) r(c) p Fd 6
w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
32 w(226) 94 2681 y(mmap) p Fd 11 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(27) 94 2774 y(MMU) p
Fd 17 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 43 w(21) 94 2866 y(mo) r(dules) p Fd 14 w(.) i(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 40 w(94) 94 2959 y(Motif) p
Fd 25 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 49 w(206) 94 3052 y(Mozilla) p Fd 10 w(.) i(.) e(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 37 w(233) 94 3144 y(MP) p
221 3144 24 4 v 29 w(ALIGN) p Fd 22 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 49 w(205) 94 3237 y(MP) p 221 3237 V 29 w(BUIL) -6
b(TINST) g(A) n(CK) p 836 3237 V 26 w(SUPPOR) g(T) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 48 w(23) 94 3330 y(MP) p 221 3330
V 29 w(DELETE) p Fd 7 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(143) 94
3422 y(MP) p 221 3422 V 29 w(GUI) p 396 3422 V 27 w(SUPPOR) -6
b(T) p Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 49 w(206) 94 3515 y(MP) p 221 3515 V 29 w(INLINE) p
Fd 13 w(.) f(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg 40 w(205) 94 3608
y(MP) p 221 3608 V 29 w(LIBRAR) -6 b(YST) g(A) n(CK) p
867 3608 V 25 w(SUPPOR) g(T) p Fd 7 w(.) 11 b(.) h(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 33 w(23) 94
3700 y(MP) p 221 3700 V 29 w(NEW) p Fd 18 w(.) g(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 44 w(143) 94 3793 y(MP) p 221 3793 V 29
w(NEW) p 439 3793 V 27 w(NOTHR) n(O) n(W) p Fd 11 w(.) e(.) h(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 38 w(143) 94 3885 y(MP) p
221 3885 V 29 w(NOCPLUSPLUS) p Fd 7 w(.) f(.) h(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 33 w(143) 94 3978 y(MP) p
221 3978 V 29 w(NONEWDELETE) p Fd 18 w(.) f(.) g(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 44 w(143) 94 4071 y(MP) p 221 4071
V 29 w(USE) p 403 4071 V 27 w(A) -6 b(TEXIT) p Fd 18
w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 44 w(208) 94 4163 y(mpatrol) p Fd 22 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 46 w(5) 94 4256
y(mpatrol) 27 b(command) p Fd 8 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 34 w(53) 94
4349 y(mpatrol) 27 b(features) p Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(7) 94 4441 y(mpatrol) 27 b(library) p Fd 23 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 49 w(5) 94 4534 y(mpatrol.h) p
Fd 24 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(137) 94
4627 y(mpatrol.log) p Fd 15 w(.) i(.) d(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fg 41 w(96) 94 4719 y(mpatrol.out) p Fd 8 w(.) i(.) e(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 34 w(59) 94 4812 y(mpatrol.trace) p Fd
17 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 43 w(73) 94 4904
y(MP) -6 b(A) g(TR) n(OL) p 485 4904 V 27 w(OPTIONS) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 48 w(153) 94 4997 y(MP) -6 b(A) g(TR) n(OL) p 485
4997 V 27 w(SOUR) n(CEP) g(A) g(TH) p Fd 7 w(.) 10 b(.) j(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 33 w(56) 94 5090 y(MP) -6 b(A) g(TR) n(OL) p
485 5090 V 27 w(VERSION) p Fd 20 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 48 w(137) 94 5182 y(mp) r(debug.h) p
Fd 20 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 46 w(16) 94
5275 y(mp) r(edit) p Fd 16 w(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) p Fg 42 w(56) 94 5368 y(mp) r(edit) 26
b(command) p Fd 22 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(56) 94 5460 y(MPR) p
Fd 7 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 33 w(226) 94 5553 y(mprof) p Fd 17 w(.) g(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fg 43 w(59) 94 5645
y(Mprof) p Fd 12 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 39 w(226) 2063 365 y(mprof) 26 b(command) p
Fd 23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 49 w(59) 2063 458 y(mpsym) p
Fd 13 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 39 w(55) 2063 550 y(mpsym) 25 b(command) p Fd 20 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 46 w(55) 2063 642 y(mptrace) p Fd 16 w(.) g(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(73) 2063 734 y(mptrace) 26
b(command) p Fd 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 48 w(73) 2063 827 y(MSS) 25
b(\(Memory) h(Sup) r(ervision) f(System\)) p Fd 23 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 49 w(227) 2063 919 y(m) n(tmallo) r(c\(3t\)) p Fd
23 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(232) 2063 1011
y(m) n(trace) p Fd 20 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 45 w(51) 2063 1104 y(MuF) -6 b(orce) p
Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 49 w(227) 2063 1196 y(MuGuardianAngel) p Fd 21 w(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
47 w(227) 2063 1288 y(MuLib) p Fd 20 w(.) h(.) f(.) g(.) h(.) f(.) g(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) p Fg 47 w(227) 2063 1380 y(MUL) -6
b(TI) p Fd 7 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(227) 2063 1473 y(m) n(ulti-pro) r(cessor) 27
b(systems) p Fd 7 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 33 w(24) 2063 1565 y(Mungw) n(all) p Fd 24 w(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 49 w(228) 2063 1657 y(m) n(up) r(date) p
Fd 21 w(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
48 w(212) 2063 1750 y(m) n(utexes) p Fd 15 w(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(24) p Fn 2063
1999 a(N) p Fg 2063 2122 a(nano) p Fd 17 w(.) g(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(56) 2063
2215 y(NDEBUG) p Fd 17 w(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 43 w(137) 2063 2307 y(Net) n(w) n(are) 26 b(notes) p
Fd 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(200) 2063 2399
y(NEWS) p Fd 17 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(212) 2063 2491 y(NJAMD) 25 b(\(Not) g(Just) h(Another) f(Mallo)
r(c) j(Debugger\)) p Fd 7 w(.) 12 b(.) g(.) p Fg 33 w(228) 2063
2584 y(NOFREE) p Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 49 w(156) 2063 2676 y(non-static) 26 b(lo) r(cal) h(v) l(ariables) p
Fd 8 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(19) 2063 2768 y(NOPR) n(OTECT) p Fd 9 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 35 w(156) 2063 2861 y(NOT) -6 b(ALL) p Fd 9 w(.) 11
b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 35 w(171) 2063
2953 y(notes) p Fd 9 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 35 w(193) 2063 3045 y(notes) 26 b(for) g(all) h
(platforms) p Fd 15 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) p Fg 42 w(193) 2063 3137 y(notes) 26 b(for) g(Amiga) h
(platforms) p Fd 20 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(199) 2063 3230 y(notes) 26 b(for) g(Net) n(w) n(are) g
(platforms) p Fd 9 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
35 w(200) 2063 3322 y(notes) 26 b(for) g(UNIX) e(platforms) p
Fd 10 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
36 w(198) 2063 3414 y(notes) 26 b(for) g(Windo) n(ws) g(platforms) p
Fd 11 w(.) 14 b(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(200) 2063
3507 y(NULOPN) p Fd 20 w(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(171) 2063 3599 y(NuMega) 26 b(Corp) r(oration) p
Fd 12 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 38 w(214) p Fn 2063 3861 a(O) p Fg 2063 3984 a(ob) t(ject) 26
b(\014les) p Fd 8 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(23) 2063 4077 y(Ob) t(jectCen) n(ter) p Fd 16
w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 42 w(228) 2063 4169 y(OC) 26
b(Systems) p Fd 17 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p Fg
44 w(214) 2063 4261 y(o) r(ctal) p Fd 15 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(153) 2063
4353 y(OFLA) n(GS) p Fd 12 w(.) f(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 38 w(13) 2063 4446 y(OFLO) n(WBYTE) p Fd 21
w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 47 w(156) 2063 4538 y(OFLO) n(WSIZE) p
Fd 10 w(.) e(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(156) 2063 4630
y(OFLO) n(WW) -9 b(A) j(TCH) p Fd 22 w(.) 12 b(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(156) 2063
4723 y(On) n(yx) 24 b(T) -6 b(ec) n(hnology) p Fd 23
w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 48 w(229) 2063 4815 y(op) r(erating) 26
b(systems) p Fd 14 w(.) 13 b(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 40 w(21) 2063 4907
y(optimisation) p Fd 16 w(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(13) 2063 4999 y(Optimizeit) p Fd 8 w(.) g(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 34 w(228) 2063 5092 y(option) 26 b(summary) p
Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 48 w(155) 2063 5184 y(options) p
Fd 11 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 37 w(161) 2063 5276 y(original) 27 b(implemen) n(tation) p
Fd 6 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 32 w(93) 2063 5369 y(other) 25 b(programs) p Fd 23
w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) p Fg 48 w(213) 2063 5461 y(OUTMEM) p
Fd 23 w(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 49 w(171) 2063
5553 y(o) n(v) n(er\015o) n(w) 26 b(bu\013ers) p Fd 18
w(.) 11 b(.) h(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 43 w(31) 2063 5645 y(o) n(v) n(er\015o) n
(w) 26 b(b) n(yte) p Fd 20 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 47 w(31) p 90 rotate dyy eop
%%Page: 255 261
255 260 bop Fo 94 -116 a(Index) 3421 b(255) p Fg 94 365
a(o) n(v) n(er\015o) n(w) 26 b(size) p Fd 15 w(.) 14
b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 41 w(31) 94 463 y(o) n(v) n(erview) p
Fd 8 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(5) 94 560 y(o) n(v) n(erwrites) p Fd 20 w(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 44 w(30) p Fn 94 837 a(P) p
Fg 94 971 a(page) p Fd 22 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 47 w(21) 94 1069 y(page) 27
b(fault) p Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(21) 94 1166 y(page) 27 b(size) p Fd 21 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(21) 94
1263 y(P) -6 b(A) n(GEALLOC) p Fd 19 w(.) 12 b(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 45 w(156) 94 1361 y(pageheap) p Fd 14 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) p Fg 40 w(232) 94 1458 y(pap) r(ers) p
Fd 24 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 49 w(233) 94 1556 y(parallel) 28 b(programming) p
Fd 9 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 35 w(24) 94 1653 y(parameter) 27 b(v) l(ariables) p
Fd 23 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 48 w(19) 94 1750 y(P) n(arasoft) p Fd 12
w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
38 w(220) 94 1848 y(paren) n(ts) p Fd 11 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 37 w(65) 94 1945 y(P) n(ascal) p
Fd 9 w(.) j(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(19) 94 2043 y(P) -6 b(A) g(TH) p Fd 10 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 36 w(207) 94 2140 y(PE) p Fd 9 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 35 w(95) 94
2237 y(p) r(eak) 26 b(memory) g(usage) p Fd 19 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 45 w(103) 94 2335 y(p) r(erformance) 27 b(b) r(ottlenec) n(k) p
Fd 13 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 39 w(90) 94 2432 y(p) r(erformance) 27 b(impro) n(v) n(emen) n(ts) p
Fd 8 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
34 w(89) 94 2529 y(p) r(erformance) 27 b(times) p Fd
24 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 49 w(175) 94 2627 y(ph) n(ysical) 26 b(address) p
Fd 8 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 34 w(21) 94 2724 y(ph) n(ysical) 26
b(memory) p Fd 14 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 40 w(21) 94 2822
y(pico) p Fd 11 w(.) h(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) p Fg 37 w(56) 94 2919 y(pip) r(e) p
Fd 8 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 34 w(79) 94 3016 y(PK) n(G) 26 b(pac) n(k) l(age) p
Fd 15 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(14) 94
3114 y(platform-indep) r(enden) n(t) 25 b(notes) p Fd
16 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 42 w(193) 94 3211
y(platforms) p Fd 10 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 36 w(179) 94 3308 y(PLA) -6 b(TINUM) 25 b(T) -6 b(ec) n(hnology) p
Fd 12 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 38 w(224) 94 3406 y(Plum) n(b) r(er) p Fd 8 w(.) f(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 34 w(228) 94 3503 y(p) r(ortabilit) n(y) p
Fd 10 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg
36 w(90) 94 3601 y(p) r(orting) p Fd 10 w(.) h(.) e(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) p Fg 37 w(185) 94 3698 y(POSIX) 25
b(threads) p Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(24) 94
3795 y(p) r(ostscript) p Fd 23 w(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 48 w(203) 94 3893 y(prelink) n(er) p Fd 23 w(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) p Fg 49 w(66) 94 3990 y(prepro) r(cessor) p
Fd 16 w(.) i(.) f(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 42 w(66) 94
4087 y(PRESER) -9 b(VE) p Fd 17 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(157) 94 4185 y(preserv) n(e) 26 b(freed) g(con) n(ten) n(ts) p
Fd 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 49 w(30) 94 4282 y(prev) n(en) n(t) 25 b(freeing) i(memory) p
Fd 8 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 34 w(30) 94 4380 y(prin) n(ting) p Fd 19 w(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 45 w(14) 94 4477 y(pro) r(cess) 27
b(id) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 48 w(161) 94 4574 y(PR) n(OF) p Fd 7 w(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(157) 94 4672 y(profdi\013) p
Fd 12 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(71) 94 4769 y(PR) n(OFDIR) p Fd 8 w(.) e(.) h(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 34 w(157) 94 4866 y(PR) n(OFFILE) p Fd
8 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(157) 94 4964
y(pro\014ling) p Fd 13 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 39 w(59) 94 5061 y(pro\014ling) 27 b(\014le) e(format) p
Fd 7 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 34 w(177) 94 5159 y(PR) n(OGFILE) p Fd
22 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 48 w(157) 94 5256
y(program) 27 b(coun) n(ter) p Fd 19 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(23) 94 5353 y(programs) p Fd 13 w(.) i(.) f(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 40 w(213) 94 5451 y(prologue) 27 b(function) p
Fd 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 48 w(102) 94 5548 y(PR) -9 b(VFRD) p
Fd 8 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(172) 94 5645 y(Purify) p Fd 10 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(229) p Fn 2063
365 a(Q) p Fg 2063 487 a(QC) p Fd 21 w(.) g(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 47 w(229) 2063
579 y(questions) p Fd 14 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 40 w(203) 2063 671 y(quic) n(k) 24 b(reference) j(card) p
Fd 17 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 42 w(14) p Fn 2063 929 a(R) p Fg 2063 1051
a(random) 25 b(failures) p Fd 18 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(36) 2063 1143 y(Rational) 26 b(Soft) n(w) n(are) p
Fd 14 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 40 w(229) 2063 1234 y(re-en) n(trancy) p
Fd 17 w(.) e(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(24) 2063
1326 y(read) 26 b(protection) p Fd 23 w(.) 13 b(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 49 w(22) 2063 1417 y(REALLOCSTOP) p Fd 20 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
47 w(157) 2063 1509 y(recompilation) p Fd 15 w(.) h(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 40 w(15) 2063 1601 y(reco) n(v) n(erable) 26
b(errors) p Fd 18 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) p Fg 45 w(100) 2063 1692 y(Red) 25
b(Hat) p Fd 9 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 35 w(180) 2063 1784 y(reference) 26 b(card) p Fd 9
w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(14) 2063
1875 y(references) p Fd 25 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 50 w(233) 2063 1967 y(registers) p Fd 13 w(.) i(.) e(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 39 w(19) 2063 2059
y(related) 26 b(soft) n(w) n(are) p Fd 12 w(.) 14 b(.) f(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 38 w(213) 2063 2150 y(release) 27 b(builds) p Fd 19
w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 46 w(4) 2063
2242 y(remo) n(ving) 26 b(mpatrol) p Fd 17 w(.) 13 b(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 42 w(17) 2063 2334 y(rep) r(orting) 26 b(bugs) p Fd
18 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 44 w(3) 2063 2425
y(resources) p Fd 17 w(.) h(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(233) 2063 2517 y(return) 25 b(address) p Fd 20
w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fg 45 w(23) 2063 2608
y(RISC) p Fd 6 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) p Fg 32 w(23) 2063 2700 y(RNGO) n(VF) p
Fd 18 w(.) d(.) j(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 44 w(172) 2063
2792 y(RNGO) n(VL) p Fd 17 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 45 w(172) 2063 2883 y(RPM) 26 b(pac) n(k) l(age) p
Fd 10 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(14) 2063
2975 y(RSZNUL) p Fd 15 w(.) e(.) i(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 41 w(172) 2063 3066 y(RSZZER) p Fd 18 w(.) f(.) i(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fg 44 w(173) 2063 3158 y(run-time) 25
b(errors) p Fd 8 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
34 w(5) 2063 3250 y(running) 25 b(questions) p Fd 16
w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) p Fg 43 w(207) p Fn 2063 3508 a(S) p Fg 2063
3630 a(SAFESIGNALS) p Fd 9 w(.) e(.) i(.) h(.) f(.) g(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(157) 2063
3722 y(SBase) p Fd 15 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 41 w(229) 2063 3813 y(sbrk) p Fd 8 w(.) f(.) i(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 33 w(27) 2063 3905 y(SCID) p Fd 22 w(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 49 w(229) 2063 3996
y(Scotland) p Fd 6 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 32 w(235) 2063 4088 y(SD/UX) 24 b(pac) n(k) l(age) p
Fd 9 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(14) 2063 4180
y(sections) p Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 47 w(19) 2063 4271 y(semaphores) p Fd 14 w(.) g(.) g(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 40 w(24) 2063 4363 y(Sen) n(tinel) p
Fd 18 w(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p
Fg 44 w(224) 2063 4455 y(settings) p Fd 24 w(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(29) 2063 4546
y(setup) p Fd 8 w(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) p Fg 34 w(13) 2063 4638 y(sev) n(erit) n(y) 25
b(of) h(errors) p Fd 15 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 41 w(100) 2063
4729 y(SFLA) n(GS) p Fd 20 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 46 w(13) 2063 4821 y(shared) 26 b(libraries) p
Fd 24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 48 w(24) 2063 4913
y(shared) 26 b(library) p Fd 10 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fg 36 w(7) 2063 5004 y(shared) 26 b(memory) p Fd 21 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 48 w(24) 2063 5096 y(SHO) n(W) -9
b(ALL) p Fd 15 w(.) 11 b(.) h(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 41 w(157) 2063 5187 y(SHO) n(WFREE) p Fd 18 w(.) f(.) h(.) h(.) f(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 44 w(157) 2063 5279 y(SHO) n(WFREED) p Fd 7 w(.) e(.) j(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 33 w(157) 2063 5371 y(SHO) n(WMAP) p Fd 15 w(.) f(.) i(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 41 w(157) 2063 5462 y(SHO) n(WSYMBOLS) p Fd
8 w(.) e(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fg 35 w(158) 2063 5554 y(SHO) n(WUNFREED) p Fd
19 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 48 w(158) 2063 5645 y(signal) 27 b(handler) p
Fd 7 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(108) p 90 rotate
dyy eop
%%Page: 256 262
256 261 bop Fo 94 -116 a(256) 3332 b(mpatrol) p Fg 94
365 a(signals) p Fd 25 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fg 49 w(10) 94 458 y(similar) 28 b(programs) p
Fd 14 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 40 w(213) 94 550 y(sim) n(ulation,) 28
b(trace-driv) n(en) p Fd 9 w(.) 12 b(.) g(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 35 w(9) 94 642 y(single-step) p
Fd 13 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
39 w(33) 94 735 y(SINIX,) 25 b(MIPS) p Fd 15 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 42 w(182) 94 827 y(slot) 27 b(tables) p
Fd 17 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(89) 94 919 y(SMALLBOUND) p Fd 18 w(.) f(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
45 w(158) 94 1012 y(SmartAllo) r(c) p Fd 16 w(.) g(.) g(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 42 w(229) 94 1104 y(SmartHeap) p Fd 17
w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(229) 94 1196
y(soft) n(w) n(are) p Fd 13 w(.) j(.) d(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) p Fg 40 w(213) 94 1289 y(Solaris) 28 b(mallo) r(c) f
(libraries) p Fd 25 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 50 w(231) 94 1381 y(Solaris,) 28 b(In) n(tel) d(80x86) p
Fd 11 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 38 w(182) 94 1473 y(Solaris,) 28 b(SP) -6
b(AR) n(C) p Fd 16 w(.) 11 b(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 42 w(182) 94 1566
y(source) 27 b(co) r(de) f(do) r(cumen) n(tation) p Fd
23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 49 w(14) 94
1658 y(SourceF) -6 b(orge) p Fd 24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 48 w(3) 94 1750 y(Sp) r(otligh) n(t) p
Fd 16 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
42 w(230) 94 1843 y(stac) n(k) p Fd 12 w(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 38 w(19) 94
1935 y(stac) n(k) 26 b(memory) g(allo) r(cations) p Fd
18 w(.) 15 b(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
44 w(19) 94 2028 y(stac) n(k) 26 b(tracebac) n(ks) p
Fd 25 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 50 w(23) 94 2120 y(stac) n(k) 26
b(un) n(winding) p Fd 7 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 33 w(23) 94
2212 y(Stac) n(kT) -6 b(race) p Fd 22 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 47 w(230) 94 2305 y(static) 27 b(inline) p Fd
9 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 35 w(205) 94
2397 y(static) 27 b(memory) f(allo) r(cations) p Fd 11
w(.) 15 b(.) d(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
37 w(19) 94 2489 y(statistics) p Fd 25 w(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 48 w(29) 94 2582 y(strace) p
Fd 16 w(.) h(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 43 w(232) 94 2674 y(Stratosw) n(are) 28 b(Corp) r(oration) p
Fd 9 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 35 w(223) 94 2766 y(stress) 27 b(testing) p Fd 6 w(.) 13
b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) p Fg 32 w(90) 94 2859 y(stripp) r(ed) 26
b(executable) g(\014le) p Fd 18 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 44 w(28) 94 2951 y(STR) n(O) n(VF) p
Fd 10 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
37 w(173) 94 3043 y(summary) 26 b(of) g(options) p Fd
18 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 44 w(155) 94 3136 y(supp) r(orted) 26 b(systems) p
Fd 22 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fg 49 w(179) 94 3228 y(SuSE) p Fd 7 w(.) g(.) g(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) p Fg 33 w(181) 94
3320 y(SVR4) p Fd 18 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) p Fg 44 w(95) 94 3413 y(sw) n(ap) 27 b(\014le) p
Fd 8 w(.) 12 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(21) 94 3505 y(sw) n(ap) 27 b(in) p Fd 7 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(21) 94 3597 y(sw) n(ap) 27 b(out) p Fd 19 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 46 w(21) 94
3690 y(sw) n(apping) p Fd 15 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) p Fg 41 w(21) 94 3782 y(sym) n(b) r(ol) 26 b(summary) p
Fd 11 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 37 w(29) 94 3874 y(sym) n(b) r(ol) 26
b(tables) p Fd 13 w(.) 14 b(.) e(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg
39 w(22) 94 3967 y(sym) n(b) r(olic) 27 b(links) p Fd
24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) p Fg 50 w(13) 94 4059 y(sym) n(b) r(ols) p
Fd 18 w(.) i(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 44 w(22) 94 4151 y(SYSTEM) p Fd 9 w(.) g(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 35 w(204) 94 4244 y(system) 26 b(page) g(size) p
Fd 22 w(.) 12 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 46 w(21) 94 4336 y(systems) p
Fd 22 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 48 w(179) 94 4428 y(systems,) 27 b(em) n(b) r(edded) p
Fd 12 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 38 w(21) p Fn 94 4691 a(T) p Fg 94
4814 a(T) -6 b(AR) 25 b(arc) n(hiv) n(e) p Fd 12 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) p Fg 38 w(14) 94 4907 y(T) -6
b(AR) n(GET) p Fd 23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 49 w(204) 94 4999 y(tcsh) p Fd 11 w(.) g(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 37 w(54) 94
5091 y(ten) n(tativ) n(e) 26 b(declarations) p Fd 8 w(.) 14
b(.) e(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 34 w(19) 94 5184 y(test) 26 b(suite) p Fd 16 w(.) 13
b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(12) 94
5276 y(T) -6 b(estCen) n(ter) p Fd 23 w(.) 12 b(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) p Fg 48 w(230) 94 5368 y(testing) p Fd 22 w(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 47 w(36) 94 5461
y(T) 136 5477 y(E) 180 5461 y(Xinfo) p Fd 18 w(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 44 w(14) 94 5553 y(text) 26
b(editor) p Fd 10 w(.) 13 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fg 36 w(56) 94 5645 y(TFLA) n(GS) p Fd 14 w(.) g(.) f(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 40 w(13) 2063 365 y(Third) 26
b(Degree) p Fd 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 44 w(230) 2063
467 y(thrashing) p Fd 12 w(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) p Fg 38 w(21) 2063 569 y(thread-safe) 26 b(library) p
Fd 7 w(.) 13 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 33 w(7) 2063 671 y(threads) p
Fd 10 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 36 w(24) 2063 773 y(threads) 25 b(library) p Fd 12
w(.) 13 b(.) g(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 38 w(24) 2063 874 y(times) p
Fd 7 w(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 33 w(175) 2063 976 y(tips) p Fd 17 w(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 43 w(90) 2063
1078 y(to) r(ols) p Fd 17 w(.) i(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 43 w(49) 2063 1180 y(TRA) n(CE) p
Fd 14 w(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 40 w(158) 2063 1282 y(trace-driv) n(en) 25 b(sim) n(ulation) p
Fd 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 46 w(9) 2063 1383 y(tracebac) n(ks) p Fd 13 w(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 39 w(23) 2063 1485 y(TRA) n(CEDIR) p
Fd 15 w(.) f(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 41 w(158) 2063
1587 y(TRA) n(CEFILE) p Fd 15 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(158) 2063 1689 y(tracing) p Fd 17 w(.) f(.) h(.) f(.) g(.) h(.)
f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(73) 2063 1791
y(tracing) 26 b(\014le) g(format) p Fd 10 w(.) 14 b(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
36 w(178) 2063 1892 y(tree) 26 b(structure) p Fd 13 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 39 w(105) 2063 1994 y(T) -6 b(ru64,) 26
b(Alpha) p Fd 18 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 44 w(183) 2063
2096 y(truss) p Fd 15 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 41 w(232) 2063 2198 y(T) -6 b(urb) r(oP) n(o) n(w) n
(er) p Fd 20 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 45 w(224) 2063
2300 y(tutorial) p Fd 7 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 33 w(129) 2063 2401 y(t) n(yp) r(e) 25
b(of) h(allo) r(cation) p Fd 25 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 48 w(98) p
Fn 2063 2716 a(U) p Fg 2063 2859 a(unde\014ned) 24 b(sym) n(b) r(ols) p
Fd 24 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fg 50 w(206) 2063 2961 y(underwrites) p Fd
10 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 36 w(30) 2063
3063 y(unfreed) 25 b(allo) r(cations) p Fd 17 w(.) 15
b(.) d(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 43 w(102) 2063 3165 y(UNFREED) n(ABOR) -6 b(T) p Fd
19 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 47 w(158) 2063 3266 y(UNIX) 24 b(notes) p Fd 23 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 49 w(198) 2063 3368 y(UnixW) -6
b(are,) 25 b(In) n(tel) g(80x86) p Fd 8 w(.) 14 b(.) e(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) p Fg 35 w(183) 2063 3470
y(up) r(dates) p Fd 21 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 48 w(3) 2063 3572 y(USEDEBUG) p Fd
23 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) p Fg 50 w(158) 2063 3674
y(USEMMAP) p Fd 22 w(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg
48 w(158) 2063 3775 y(using) 26 b(mpatrol) p Fd 10 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 36 w(27) 2063 3877 y(using) 26
b(with) g(a) g(debugger) p Fd 17 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) p Fg 42 w(32) 2063 3979 y(utilities) p
Fd 8 w(.) g(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 34 w(53) p Fn 2063 4280 a(V) p Fg 2063 4424 a(v) l(ariable) 26
b(length) g(arra) n(ys) p Fd 24 w(.) 13 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fg 50 w(20) 2063 4526 y(v) l(ariables,) 27
b(\014le) e(scop) r(e) p Fd 11 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 37 w(19) 2063
4627 y(v) l(ariables,) 27 b(lo) r(cal) g(static) p Fd
18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 43 w(19) 2063 4729 y(v) l(ariables,) 27 b(non-static) e(lo) r(cal) p
Fd 16 w(.) 14 b(.) e(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 41 w(19) 2063 4831 y(v) l(ariables,) 27 b(parameter) p
Fd 11 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) p Fg 37 w(19) 2063 4933 y(V) -9 b(AX) p Fd 16
w(.) 11 b(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 41 w(71) 2063 5035 y(VERSION) p Fd 10 w(.) e(.) h(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) p Fg 37 w(212) 2063 5136 y(vi) p Fd 12
w(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 38 w(56) 2063 5238 y(vim) p Fd 17
w(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fg 42 w(56) 2063 5340 y(virtual) 25 b(address) p
Fd 12 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg 38 w(21) 2063
5442 y(virtual) 25 b(memory) p Fd 19 w(.) 13 b(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) p
Fg 45 w(21) 2063 5544 y(Virtual) 26 b(Memory) g(T) -6
b(utorial) p Fd 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(234) 2063 5645 y(Vmallo) r(c) p Fd 12 w(.) h(.) e(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) p Fg 39 w(230) p 90 rotate dyy
eop
%%Page: 257 263
257 262 bop Fo 94 -116 a(Index) 3421 b(257) p Fn 94 365
a(W) p Fg 94 487 a(w) n(arnings) p Fd 22 w(.) 13 b(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fg 47 w(167) 94 579 y(w) n(arran) n(t) n(y) p
Fd 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 47 w(3) 94 670 y(w) n(atc) n(h) 26 b(p) r(oin) n(ts) p
Fd 11 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p Fg 37 w(22) 94
762 y(w) n(atc) n(hmallo) r(c\(3x\)) p Fd 21 w(.) g(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 45 w(232) 94 853 y(Windo) n(ws) 27 b(notes) p Fd 24
w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 50 w(200) 94 945 y(Windo) n(ws) 27
b(sym) n(b) r(ols) f(setup) p Fd 20 w(.) 12 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) p Fg 47 w(206) 94 1036 y(Windo) n(ws,) 27
b(In) n(tel) e(80x86) p Fd 25 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fg 50 w(184) 94 1128 y(WinSite) p
Fd 17 w(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 43 w(14) 94 1219 y(Wip) r(eout) p Fd 6 w(.) h(.) f(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) p Fg 32 w(231) 94 1311 y(write) 27
b(protection) p Fd 10 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fg 36 w(22) p
Fn 94 1569 a(X) p Fg 94 1690 a(X) 26 b(Windo) n(ws) p
Fd 11 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fg
37 w(74) 2063 365 y(XANAL) -6 b(YS) 23 b(Soft) n(w) n(are) j(T) -6
b(o) r(ols) p Fd 14 w(.) 15 b(.) d(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fg 40 w(233) 2063 458 y(X) n(COFF) p Fd 17 w(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fg 42 w(95) 2063 551 y(xemacs) p
Fd 13 w(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fg 39 w(56) 2063 643 y(xmem) p Fd 14 w(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) p Fg 40 w(79) p Fn 2063
895 a(Y) p Fg 2063 1019 a(Y) -6 b(aMa) p Fd 16 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 42 w(231) 2063 1112 y(Y) -6 b(AMD) 24 b(\(Y) -6 b(et) 25
b(Another) g(Mallo) r(c) i(Debugger\)) p Fd 10 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fg 36 w(231) p
Fn 2063 1381 a(Z) p Fg 2063 1505 a(ZERALN) p Fd 10 w(.) f(.) h(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) p Fg 36 w(173) 2063 1598 y(ZeroF) -6
b(ault) p Fd 7 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fg 33 w(231) 2063 1690 y(ZIP) 25 b(arc) n(hiv) n(e) p
Fd 12 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fg
38 w(14) p 90 rotate dyy eop
%%Page: 258 264
258 263 bop Fo 94 -116 a(258) 3332 b(mpatrol) p 90 rotate
dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
