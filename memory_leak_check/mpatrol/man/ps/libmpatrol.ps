%!PS-Adobe-3.0
%%Creator: groff version 1.16.1
%%CreationDate: Tue Jan  8 23:42:12 2002
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.16 1
%%Pages: 21
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.16 1
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME)
.219 E F0(libmpatrol \255 dynamic memory allocation and tracing library)
108 96 Q F1(SYNOPSIS)72 112.8 Q F0(#include <mpatrol.h>)108 124.8 Q -.2
(vo)108 148.8 S(id *malloc\(size_t size\);).2 E -.2(vo)108 160.8 S
(id *calloc\(size_t nelem, size_t size\);).2 E -.2(vo)108 172.8 S
(id *memalign\(size_t align, size_t size\);).2 E -.2(vo)108 184.8 S
(id *v).2 E(alloc\(size_t size\);)-.25 E -.2(vo)108 196.8 S(id *pv).2 E
(alloc\(size_t size\);)-.25 E -.2(vo)108 208.8 S
(id *alloca\(size_t size\);).2 E(char *strdup\(const char *str\);)108
220.8 Q(char *strndup\(const char *str)108 232.8 Q 2.5(,s)-.4 G
(ize_t size\);)-2.5 E(char *strsa)108 244.8 Q -.15(ve)-.2 G
(\(const char *str\);).15 E(char *strnsa)108 256.8 Q -.15(ve)-.2 G
(\(const char *str).15 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E
(char *strdupa\(const char *str\);)108 268.8 Q
(char *strndupa\(const char *str)108 280.8 Q 2.5(,s)-.4 G(ize_t size\);)
-2.5 E -.2(vo)108 292.8 S(id *realloc\(v).2 E(oid *ptr)-.2 E 2.5(,s)-.4
G(ize_t size\);)-2.5 E -.2(vo)108 304.8 S(id *reallocf\(v).2 E(oid *ptr)
-.2 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E -.2(vo)108 316.8 S
(id *recalloc\(v).2 E(oid *ptr)-.2 E 2.5(,s)-.4 G
(ize_t nelem, size_t size\);)-2.5 E -.2(vo)108 328.8 S(id *e).2 E
(xpand\(v)-.15 E(oid *ptr)-.2 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E -.2
(vo)108 340.8 S(id free\(v).2 E(oid *ptr\);)-.2 E -.2(vo)108 352.8 S
(id cfree\(v).2 E(oid *ptr)-.2 E 2.5(,s)-.4 G
(ize_t nelem, size_t size\);)-2.5 E -.2(vo)108 364.8 S(id dealloca\(v).2
E(oid *ptr\);)-.2 E -.2(vo)108 388.8 S(id *xmalloc\(size_t size\);).2 E
-.2(vo)108 400.8 S(id *xcalloc\(size_t nelem, size_t size\);).2 E
(char *xstrdup\(const char *str\);)108 412.8 Q -.2(vo)108 424.8 S
(id *xrealloc\(v).2 E(oid *ptr)-.2 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E
-.2(vo)108 436.8 S(id xfree\(v).2 E(oid *ptr\);)-.2 E -.2(vo)108 460.8 S
(id *operator ne).2 E(w\(size_t size\) thro)-.25 E(w\(std::bad_alloc\);)
-.25 E -.2(vo)108 472.8 S(id *operator ne).2 E
(w\(size_t size, const std::nothro)-.25 E(w_t&\) thro)-.25 E(w\(\);)-.25
E -.2(vo)108 484.8 S(id *operator ne).2 E(w[]\(size_t size\) thro)-.25 E
(w\(std::bad_alloc\);)-.25 E -.2(vo)108 496.8 S(id *operator ne).2 E
(w[]\(size_t size, const std::nothro)-.25 E(w_t&\) thro)-.25 E(w\(\);)
-.25 E -.2(vo)108 508.8 S(id operator delete\(v).2 E(oid *ptr\) thro)-.2
E(w\(\);)-.25 E -.2(vo)108 520.8 S(id operator delete\(v).2 E(oid *ptr)
-.2 E 2.5(,c)-.4 G(onst std::nothro)-2.5 E(w_t&\) thro)-.25 E(w\(\);)
-.25 E -.2(vo)108 532.8 S(id operator delete[]\(v).2 E(oid *ptr\) thro)
-.2 E(w\(\);)-.25 E -.2(vo)108 544.8 S(id operator delete[]\(v).2 E
(oid *ptr)-.2 E 2.5(,c)-.4 G(onst std::nothro)-2.5 E(w_t&\) thro)-.25 E
(w\(\);)-.25 E(std::ne)108 556.8 Q(w_handler std::set_ne)-.25 E
(w_handler\(std::ne)-.25 E(w_handler func\) thro)-.25 E(w\(\);)-.25 E
-.2(vo)108 580.8 S(id *memset\(v).2 E(oid *ptr)-.2 E 2.5(,i)-.4 G
(nt byte, size_t size\);)-2.5 E -.2(vo)108 592.8 S(id bzero\(v).2 E
(oid *ptr)-.2 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E -.2(vo)108 604.8 S
(id *memccp).2 E(y\(v)-.1 E(oid *dest, const v)-.2 E
(oid *src, int byte, size_t size\);)-.2 E -.2(vo)108 616.8 S(id *memcp)
.2 E(y\(v)-.1 E(oid *dest, const v)-.2 E(oid *src, size_t size\);)-.2 E
-.2(vo)108 628.8 S(id *memmo).2 E -.15(ve)-.15 G(\(v).15 E
(oid *dest, const v)-.2 E(oid *src, size_t size\);)-.2 E -.2(vo)108
640.8 S(id bcop).2 E(y\(const v)-.1 E(oid *src, v)-.2 E
(oid *dest, size_t size\);)-.2 E(int memcmp\(const v)108 652.8 Q
(oid *ptr1, const v)-.2 E(oid *ptr2, size_t size\);)-.2 E
(int bcmp\(const v)108 664.8 Q(oid *ptr1, const v)-.2 E
(oid *ptr2, size_t size\);)-.2 E -.2(vo)108 676.8 S(id *memchr\(const v)
.2 E(oid *ptr)-.2 E 2.5(,i)-.4 G(nt byte, size_t size\);)-2.5 E -.2(vo)
108 688.8 S(id *memmem\(const v).2 E(oid *ptr1, size_t size1, const v)
-.2 E(oid *ptr2, size_t size2\);)-.2 E(int __mp_ate)108 712.8 Q(xit\(v)
-.15 E(oid \(*func\)\(v)-.2 E(oid\)\);)-.2 E
(unsigned long __mp_setoption\(long opt, unsigned long v)108 724.8 Q
(al\);)-.25 E(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(1)
198.45 E EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E
(int __mp_getoption\(long opt, unsigned long *v)108 84 Q(al\);)-.25 E
(unsigned long __mp_lib)108 96 Q -.15(ve)-.15 G(rsion\(v).15 E(oid\);)
-.2 E(const char *__mp_strerror\(__mp_errortype err\);)108 108 Q
(const char *__mp_function\(__mp_alloctype func\);)108 120 Q
(int __mp_setuser\(const v)108 132 Q(oid *ptr)-.2 E 2.5(,c)-.4 G(onst v)
-2.5 E(oid *data\);)-.2 E(int __mp_setmark\(const v)108 144 Q
(oid *ptr\);)-.2 E(int __mp_info\(const v)108 156 Q(oid *ptr)-.2 E 2.5
(,_)-.4 G(_mp_allocinfo *info\);)-2.5 E(int __mp_syminfo\(const v)108
168 Q(oid *ptr)-.2 E 2.5(,_)-.4 G(_mp_symbolinfo *info\);)-2.5 E
(const char *__mp_symbol\(const v)108 180 Q(oid *ptr\);)-.2 E
(int __mp_printinfo\(const v)108 192 Q(oid *ptr\);)-.2 E
(unsigned long __mp_snapshot\(v)108 204 Q(oid\);)-.2 E
(size_t __mp_iterate\(int \(*func\)\(const v)108 216 Q(oid *, v)-.2 E
(oid *\), v)-.2 E(oid *data, unsigned long e)-.2 E -.15(ve)-.25 G(nt\);)
.15 E(size_t __mp_iterateall\(int \(*func\)\(const v)108 228 Q(oid *, v)
-.2 E(oid *\), v)-.2 E(oid *data\);)-.2 E(int __mp_addallocentry\(const\
 char *\214le, unsigned long line, size_t size\);)108 240 Q(int __mp_ad\
dfreeentry\(const char *\214le, unsigned long line, size_t size\);)108
252 Q -.2(vo)108 264 S(id __mp_clearleaktable\(v).2 E(oid\);)-.2 E
(int __mp_startleaktable\(v)108 276 Q(oid\);)-.2 E
(int __mp_stopleaktable\(v)108 288 Q(oid\);)-.2 E -.2(vo)108 300 S
(id __mp_leaktable\(size_t size, int opt, unsigned char \215ags\);).2 E
-.2(vo)108 312 S(id __mp_memorymap\(int stats\);).2 E -.2(vo)108 324 S
(id __mp_summary\(v).2 E(oid\);)-.2 E
(int __mp_stats\(__mp_heapinfo *info\);)108 336 Q -.2(vo)108 348 S
(id __mp_check\(v).2 E(oid\);)-.2 E
(__mp_prologuehandler __mp_prologue\(const __mp_prologuehandler\);)108
360 Q(__mp_epiloguehandler __mp_epilogue\(const __mp_epiloguehandler\);)
108 372 Q
(__mp_nomemoryhandler __mp_nomemory\(const __mp_nomemoryhandler\);)108
384 Q(int __mp_printf\(const char *fmt, ...\);)108 396 Q
(int __mp_vprintf\(const char *fmt, v)108 408 Q(a_list ar)-.25 E(gs\);)
-.18 E -.2(vo)108 420 S(id __mp_locprintf\(const char *fmt, ...\);).2 E
-.2(vo)108 432 S(id __mp_vlocprintf\(const char *fmt, v).2 E(a_list ar)
-.25 E(gs\);)-.18 E -.2(vo)108 444 S(id __mp_logmemory\(const v).2 E
(oid *ptr)-.2 E 2.5(,s)-.4 G(ize_t size\);)-2.5 E
(int __mp_logstack\(size_t frames\);)108 456 Q(int __mp_log)108 468 Q
(addr\(const v)-.05 E(oid *ptr\);)-.2 E
(int __mp_edit\(const char *\214le, unsigned long line\);)108 480 Q
(int __mp_list\(const char *\214le, unsigned long line\);)108 492 Q
(int __mp_vie)108 504 Q(w\(const char *\214le, unsigned long line\);)
-.25 E(int __mp_readcontents\(const char *\214le, v)108 516 Q
(oid *ptr\);)-.2 E(int __mp_writecontents\(const char *\214le, const v)
108 528 Q(oid *ptr\);)-.2 E
(long __mp_cmpcontents\(const char *\214le, const v)108 540 Q
(oid *ptr\);)-.2 E(int __mp_remcontents\(const char *\214le, const v)108
552 Q(oid *ptr\);)-.2 E(__mp_errortype __mp_errno;)108 576 Q/F1 10.95
/Times-Bold@0 SF(DESCRIPTION)72 592.8 Q F0(The)108 604.8 Q/F2 10
/Times-Italic@0 SF(mpatr)2.596 E .096(ol libr)-.45 F(ary)-.15 E F0 .096
(contains implementations of dynamic memory allocation functions for C \
and C++ suit-)2.596 F 1.323(able for tracing and deb)108 616.8 R 1.323
(ugging, and is a)-.2 F -.25(va)-.2 G 1.324(ilable on UNIX, Amig).25 F
1.324(aOS, W)-.05 F(indo)-.4 E 1.324(ws and Netw)-.25 F 1.324
(are platforms.)-.1 F 1.047
(The library is intended to be used without requiring an)108 628.8 R
3.547(yc)-.15 G 1.047(hanges to e)-3.547 F 1.047
(xisting user source code e)-.15 F 1.047(xcept the)-.15 F .455
(inclusion of the)108 640.8 R F2(mpatr)2.955 E(ol.h)-.45 E F0 .455
(header \214le, although additional functions are supplied for e)2.955 F
.456(xtra tracing and con-)-.15 F 3.28(trol. Note)108 652.8 R .78
(that the current v)3.28 F .779
(ersion of the mpatrol library is contained in the)-.15 F/F3 10
/Times-Bold@0 SF(MP)3.279 E -.95(AT)-.74 G -.3(RO).95 G(L_VERSION).3 E
F0(pre-)3.279 E(processor macro.)108 664.8 Q .413
(All of the function de\214nitions in)108 681.6 R F2(mpatr)2.913 E(ol.h)
-.45 E F0 .413(can be disabled by de\214ning the)2.913 F F3(NDEB)2.914 E
(UG)-.1 E F0 .414(preprocessor macro,)2.914 F .286
(which is the same macro used to control the beha)108 693.6 R .286
(viour of the)-.2 F F3(assert)2.785 E F0 2.785(function. If)2.785 F F3
(NDEB)2.785 E(UG)-.1 E F0 .285(is de\214ned then)2.785 F .548
(no macro rede\214nition of functions will tak)108 705.6 R 3.048(ep)-.1
G .548(lace and all special mpatrol library functions will e)-3.048 F
-.25(va)-.25 G .549(luate to).25 F .068(empty statements.)108 717.6 R
(The)5.068 E F2(mpalloc.h)2.568 E F0 .067
(header \214le will also be included in this case.)2.568 F .067
(It is intended that the)5.067 F F3(NDE-)2.567 E -.1(BU)108 729.6 S(G).1
E F0(preprocessor macro be de\214ned in release b)2.5 E(uilds.)-.2 E
(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(2)198.45 E EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E(The)108 84 Q/F1 10/Times-Bold@0 SF(MP_MALLOC)
3.284 E F0 -.1(fa)3.284 G .784(mily of functions that are de\214ned in)
.1 F/F2 10/Times-Italic@0 SF(mpalloc.h)3.285 E F0 .785
(are also de\214ned in)3.285 F F2(mpatr)3.285 E(ol.h)-.45 E F0(when)
3.285 E F1(NDEB)108 96 Q(UG)-.1 E F0 1.367(is not de\214ned.)3.867 F
1.366(The mpatrol v)6.366 F 1.366
(ersions of these functions contain more deb)-.15 F 1.366
(ugging information)-.2 F .718(than the mpalloc v)108 108 R .718
(ersions do, b)-.15 F .718(ut the)-.2 F 3.218(yd)-.15 G 3.218(on)-3.218
G .718(ot call the allocation f)-3.218 F .719
(ailure handler when no more memory is)-.1 F -.2(av)108 120 S .003
(ailable \(the)-.05 F 2.503(yc)-.15 G .003(ause the)-2.503 F F2(OUTMEM)
2.503 E F0 .003(error message to be gi)2.503 F -.15(ve)-.25 G 2.503(ni)
.15 G 2.502(nstead\). See)-2.503 F F1(mpalloc)2.502 E F0 .002
(\(3\) for the descriptions)B(of the)108 132 Q F1(MP_MALLOC)2.5 E F0 -.1
(fa)2.5 G(mily of functions.).1 E .328
(All diagnostics are sent to the \214le)108 148.8 R F2(mpatr)2.828 E
(ol.lo)-.45 E(g)-.1 E F0 .328(in the current directory by def)2.828 F
.329(ault b)-.1 F .329(ut this can be changed at)-.2 F 4.194
(run-time. Additional)108 160.8 R 1.694(con\214guration options can als\
o be changed at run-time by setting and altering the)4.194 F F1(MP)108
172.8 Q -.95(AT)-.74 G -.3(RO).95 G(L_OPTIONS).3 E F0(en)4.375 E 1.875
(vironment v)-.4 F 4.375(ariable. In)-.25 F 1.876(addition, the)4.375 F
F1(LOGFILE)4.376 E F0(,)A F1(PR)4.376 E(OFFILE)-.3 E F0(and)4.376 E F1
(TRA)4.376 E(CE-)-.55 E(FILE)108 184.8 Q F0 1.036(options are af)3.536 F
1.036(fected by the)-.25 F F1(LOGDIR)3.536 E F0(,)A F1(PR)3.536 E(OFDIR)
-.3 E F0(and)3.536 E F1(TRA)3.536 E(CEDIR)-.55 E F0(en)3.536 E 1.035
(vironment v)-.4 F 1.035(ariables respec-)-.25 F(ti)108 196.8 Q -.15(ve)
-.25 G(ly).15 E 5(.S)-.65 G(ee)-5 E F1(ENVIR)2.5 E(ONMENT)-.3 E F0(belo)
2.5 E 2.5(wf)-.25 G(or more details.)-2.5 E .598(Details of memory allo\
cations and free memory are stored internally as a tree structure for s\
peed and also)108 213.6 R 1.229(to allo)108 225.6 R 3.729(wt)-.25 G
1.229(he best \214t allocation algorithm to be used.)-3.729 F 1.229
(This also enables the library to perform intelligent)6.229 F .023(resi\
zing of memory allocations and can be used to quickly determine if an a\
ddress has been allocated on the)108 237.6 R(heap.)108 249.6 Q .271(On \
systems that support memory protection, the library attempts to detect \
an)108 266.4 R 2.771(yi)-.15 G(lle)-2.771 E -.05(ga)-.15 G 2.771(lm).05
G .271(emory accesses and)-2.771 F .868(display as much information as \
it can obtain about the address in question and where the ille)108 278.4
R -.05(ga)-.15 G 3.368(lm).05 G(emory)-3.368 E(access occurred.)108
290.4 Q .567(Stack traceback information for e)108 307.2 R -.15(ve)-.25
G .567(ry memory allocation is a).15 F -.25(va)-.2 G .567
(ilable on some supported platforms, which).25 F .355
(is useful for determining e)108 319.2 R .355
(xactly where a memory allocation w)-.15 F .355
(as performed or for adding meaning to trac-)-.1 F 3.058(ing. Symbol)108
331.2 R .558(names are read from the e)3.058 F -.15(xe)-.15 G .557
(cutable \214le and also possibly from an).15 F 3.057(yr)-.15 G .557
(equired shared libraries,)-3.057 F .078(and if the)108 343.2 R F1
(USEDEB)2.578 E(UG)-.1 E F0 .078(option is used and is a)2.578 F -.25
(va)-.2 G .078(ilable then the deb).25 F .079(ugging section in the e)
-.2 F -.15(xe)-.15 G .079(cutable \214le will).15 F
(be read to determine additional source-le)108 355.2 Q -.15(ve)-.25 G
2.5(li).15 G(nformation.)-2.5 E .628(On systems that support it, global\
 functions \(with C linkage\) in an e)108 372 R -.15(xe)-.15 G .628
(cutable \214le or shared library whose).15 F .244(names be)108 384 R
.244(gin with)-.15 F F1(__mp_init_)2.744 E F0 .245(will be noted when t\
he mpatrol library \214rst starts up and is reading the sym-)2.744 F
2.871(bols. Such)108 396 R .37(functions will then be called as soon as\
 the mpatrol library is initialised, which can be useful if)2.871 F .538
(the initialisation occurs before)108 408 R F1(main)3.038 E F0 .538
(is called.)3.038 F .538(These functions must accept no ar)5.538 F .538
(guments and must return)-.18 F .904(no v)108 420 R 3.404(alue. Similar)
-.25 F(beha)3.404 E .904(viour e)-.2 F .904
(xists for global functions whose names be)-.15 F .903(gin with)-.15 F
F1(__mp_\214ni_)3.403 E F0 3.403(,e)C .903(xcept that)-3.553 F 1.072
(such functions will be e)108 432 R -.15(xe)-.15 G 1.072
(cuted when the mpatrol library terminates.).15 F 1.073
(Note that this feature will ha)6.073 F 1.373 -.15(ve n)-.2 H(o).15 E
(ef)108 444 Q .903(fect if the symbol table is stripped from the e)-.25
F -.15(xe)-.15 G .903
(cutable \214le or shared library before the program is run,).15 F(and \
the order in which such functions will be called if there are more than\
 one is unspeci\214ed.)108 456 Q .085(On UNIX platforms, the)108 472.8 R
F1 -.25(fo)2.585 G(rk).25 E F0 .085
(function can cause problems if it is used to mak)2.585 F 2.585(eac)-.1
G(op)-2.585 E 2.585(yo)-.1 G 2.585(ft)-2.585 G .085(he parent process)
-2.585 F .378(without immediately calling one of the)108 484.8 R F1
(exec)2.878 E F0 -.1(fa)2.878 G .378(mily of functions.).1 F .377
(This is because the child process inherits)5.377 F .44
(all of the memory allocations of the parent process, b)108 496.8 R .441
(ut also inherits the log, pro\214le and trace \214les as well.)-.2 F
.83(If both the parent and child processes mak)108 508.8 R 3.329(es)-.1
G .829(ubsequent memory allocations there will be multiple entries)
-3.329 F .438(with the same allocation indices written to the log, pro\
\214le or trace \214les.)108 520.8 R .438
(This can be most confusing when)5.438 F .445
(processing these \214les afterw)108 532.8 R 2.945(ards! As)-.1 F 2.945
(aw)2.945 G .445(orkaround, the mpatrol library will al)-3.045 F -.1(wa)
-.1 G .444(ys check the current pro-).1 F .597(cess identi\214er e)108
544.8 R -.15(ve)-.25 G .598
(ry time one of its functions is called if the).15 F F1(CHECKFORK)3.098
E F0 .598(option is used and will open)3.098 F(ne)108 556.8 Q 3.052(wl)
-.25 G .551(og, pro\214le or trace \214les if it has determined that th\
e process has been fork)-3.052 F 3.051(ed. If)-.1 F(the)3.051 E F1
(CHECKFORK)3.051 E F0 .444(option is not used then a call to)108 568.8 R
F1(__mp_r)2.944 E(einit)-.18 E F0 .444
(should be added as the \214rst function call in the child process)2.944
F(in order to duplicate the beha)108 580.8 Q(viour of the)-.2 E F1
(CHECKFORK)2.5 E F0(option.)2.5 E 1.059
(Memory allocation pro\214ling is supported, with statistics about e)108
597.6 R -.15(ve)-.25 G 1.059(ry memory allocation and deallocation).15 F
.043(that w)108 609.6 R .043(as made during the e)-.1 F -.15(xe)-.15 G
.043(cution of a program being written to a \214le at program terminati\
on if the).15 F F1(PR)2.544 E(OF)-.3 E F0 .233(option is used.)108 621.6
R .232(The information stored in this \214le can then be used by the)
5.232 F F1(mpr)2.732 E(of)-.18 E F0 .232(command to display v)2.732 F
(ari-)-.25 E .32(ous tables summarising the memory allocation beha)108
633.6 R .32(viour of the program that produced it.)-.2 F .32
(Memory alloca-)5.32 F .565(tion tracing is also supported, where a tra\
ce of all memory allocations, reallocations and deallocations can)108
645.6 R 1.011(be written to a tracing output \214le in a concise encode\
d format for later processing by the)108 657.6 R F1(mptrace)3.512 E F0
(com-)3.512 E 2.5(mand. This)108 669.6 R(is controlled with the)2.5 E F1
(TRA)2.5 E(CE)-.55 E F0(option.)2.5 E/F3 10.95/Times-Bold@0 SF
(FUNCTIONS)72 686.4 Q F0 .233(The follo)108 698.4 R .233
(wing 19 functions are a)-.25 F -.25(va)-.2 G .233
(ilable as replacements for e).25 F .232(xisting C library functions.)
-.15 F 1.832 -.8(To u)5.232 H .232(se these you).8 F .377(must include)
108 710.4 R F2(mpatr)2.877 E(ol.h)-.45 E F0 .377
(before all other header \214les, although on UNIX and W)2.877 F(indo)
-.4 E .378(ws platforms \(and Ami-)-.25 F -.05(ga)108 722.4 S .61
(OS when using).05 F F1(gcc)3.11 E F0 3.11(\)t)C(he)-3.11 E 3.11(yw)-.15
G .61(ill be used an)-3.11 F(yw)-.15 E(ay)-.1 E 3.109(,a)-.65 G .609
(lbeit with slightly less tracing information.)-3.109 F(If)5.609 E F1
(alloca)3.109 E F0(is)3.109 E(Release 1.4)72 768 Q 2.5(8J)157.35 G
(anuary 2002)-2.5 E(3)198.45 E EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E .278(being used and)108 84 R/F1 10
/Times-Italic@0 SF(alloca.h)2.778 E F0 .278(is included then)2.778 F F1
(mpatr)2.778 E(ol.h)-.45 E F0 .278(must appear after)2.778 F F1
(alloca.h)2.778 E F0 .278(otherwise the deb)2.778 F .278(ugging v)-.2 F
(er)-.15 E(-)-.2 E(sion of)108 96 Q/F2 10/Times-Bold@0 SF(alloca)2.5 E
F0(will not be used:)2.5 E F2(malloc)108 112.8 Q F0(Allocates)7.67 E F1
(size)2.742 E F0 .242(uninitialised bytes from the heap and returns a p\
ointer to the \214rst byte of the alloca-)2.742 F 2.752(tion. The)144
124.8 R .252
(pointer returned will be suitably aligned for casting to an)2.752 F
2.752(yt)-.15 G .253(ype and can be used to store)-2.752 F .157
(data of up to)144 136.8 R F1(size)2.657 E F0 .157(bytes in length.)
2.657 F(If)5.156 E F1(size)2.656 E F0(is)2.656 E F1(0)2.656 E F0 .156
(then the memory allocated will be implicitly rounded)2.656 F .914
(up to)144 148.8 R F1(1)3.414 E F0 3.414(byte. If)3.414 F .914(there is\
 not enough space in the heap then the null pointer will be returned an\
d)3.414 F F2(err)144 160.8 Q(no)-.15 E F0 .705(will be set to)3.205 F F2
(ENOMEM)3.205 E F0 5.705(.T)C .705
(he allocated memory must be deallocated with)-5.705 F F2(fr)3.204 E(ee)
-.18 E F0 .704(or reallo-)3.204 F(cated with)144 172.8 Q F2 -.18(re)2.5
G(alloc).18 E F0(.)A F2(calloc)108 189.6 Q F0(Allocates)11.56 E F1
(nelem)3.256 E F0 .756(elements of)3.256 F F1(size)3.256 E F0 .757
(zero-initialised bytes from the heap and returns a pointer to the)3.256
F .978(\214rst byte of the allocation.)144 201.6 R .977
(The pointer returned will be suitably aligned for casting to an)5.978 F
3.477(yt)-.15 G(ype)-3.477 E .782
(and can be used to store data of up to)144 213.6 R F1 .783
(nelem * size)3.283 F F0 .783(bytes in length.)3.283 F(If)5.783 E F1
.783(nelem * size)3.283 F F0(is)3.283 E F1(0)3.283 E F0 .783(then the)
3.283 F .372
(amount of memory allocated will be implicitly rounded up to)144 225.6 R
F1(1)2.872 E F0 2.872(byte. If)2.872 F .371(there is not enough space)
2.872 F .684(in the heap then the null pointer will be returned and)144
237.6 R F2(err)3.184 E(no)-.15 E F0 .684(will be set to)3.184 F F2
(ENOMEM)3.184 E F0 5.684(.T)C .684(he allo-)-5.684 F
(cated memory must be deallocated with)144 249.6 Q F2(fr)2.5 E(ee)-.18 E
F0(or reallocated with)2.5 E F2 -.18(re)2.5 G(alloc).18 E F0(.)A F2
(memalign)108 266.4 Q F0(Allocates)144 278.4 Q F1(size)2.742 E F0 .242(\
uninitialised bytes from the heap and returns a pointer to the \214rst \
byte of the alloca-)2.742 F 2.663(tion. The)144 290.4 R .163
(pointer returned will be aligned to)2.663 F F1(align)2.663 E F0 .164
(bytes and can be used to store data of up to)2.663 F F1(size)2.664 E F0
.747(bytes in length.)144 302.4 R(If)5.747 E F1(align)3.247 E F0 .746
(is zero then the def)3.247 F .746(ault system alignment will be used.)
-.1 F(If)5.746 E F1(align)3.246 E F0 .746(is not a)3.246 F(po)144 314.4
Q .755(wer of tw)-.25 F 3.255(ot)-.1 G .755
(hen it will be rounded up to the nearest po)-3.255 F .755(wer of tw)
-.25 F 3.255(o. If)-.1 F F1(align)3.255 E F0 .755(is greater than the)
3.255 F .229(system page size then it will be truncated to that v)144
326.4 R 2.729(alue. If)-.25 F F1(size)2.729 E F0(is)2.729 E F1(0)2.729 E
F0 .229(then the memory allocated will)2.729 F .654
(be implicitly rounded up to)144 338.4 R F1(1)3.154 E F0 3.154(byte. If)
3.154 F .654
(there is not enough space in the heap then the null pointer)3.154 F
.433(will be returned and)144 350.4 R F2(err)2.933 E(no)-.15 E F0 .433
(will be set to)2.933 F F2(ENOMEM)2.933 E F0 5.433(.T)C .432
(he allocated memory must be deallocated)-5.433 F(with)144 362.4 Q F2
(fr)3.99 E(ee)-.18 E F0 1.49(or reallocated with)3.99 F F2 -.18(re)3.99
G(alloc).18 E F0 3.99(,a)C 1.49
(lthough the latter will not guarantee the preserv)-3.99 F 1.49
(ation of)-.25 F(alignment.)144 374.4 Q F2 -.1(va)108 391.2 S(lloc).1 E
F0(Allocates)11.1 E F1(size)2.742 E F0 .242(uninitialised bytes from th\
e heap and returns a pointer to the \214rst byte of the alloca-)2.742 F
2.804(tion. The)144 403.2 R .305(pointer returned will be aligned to th\
e system page size and can be used to store data of)2.804 F .134(up to)
144 415.2 R F1(size)2.634 E F0 .134(bytes in length.)2.634 F(If)5.134 E
F1(size)2.634 E F0(is)2.634 E F1(0)2.634 E F0 .134
(then the memory allocated will be implicitly rounded up to)2.634 F F1
(1)2.634 E F0 2.724(byte. If)144 427.2 R .225(there is not enough space\
 in the heap then the null pointer will be returned and)2.724 F F2(err)
2.725 E(no)-.15 E F0(will)2.725 E 1.201(be set to)144 439.2 R F2(ENOMEM)
3.701 E F0 6.201(.T)C 1.201
(he allocated memory must be deallocated with)-6.201 F F2(fr)3.7 E(ee)
-.18 E F0 1.2(or reallocated with)3.7 F F2 -.18(re)144 451.2 S(alloc).18
E F0 2.5(,a)C(lthough the latter will not guarantee the preserv)-2.5 E
(ation of alignment.)-.25 E F2(pv)108 468 Q(alloc)-.1 E F0(Allocates)
5.54 E F1(size)2.741 E F0 .242(uninitialised bytes from the heap and re\
turns a pointer to the \214rst byte of the alloca-)2.741 F 2.805
(tion. The)144 480 R .305(pointer returned will be aligned to the syste\
m page size and can be used to store data of)2.805 F .134(up to)144 492
R F1(size)2.634 E F0 .134(bytes in length.)2.634 F(If)5.134 E F1(size)
2.634 E F0(is)2.634 E F1(0)2.634 E F0 .134
(then the memory allocated will be implicitly rounded up to)2.634 F F1
(1)2.634 E F0 .135(page, otherwise)144 504 R F1(size)2.635 E F0 .135
(will be implicitly rounded up to a multiple of the system page size.)
2.635 F .135(If there is)5.135 F 1.888(not enough space in the heap the\
n the null pointer will be returned and)144 516 R F2(err)4.388 E(no)-.15
E F0 1.888(will be set to)4.388 F F2(ENOMEM)144 528 Q F0 6.579(.T)C
1.579(he allocated memory must be deallocated with)-6.579 F F2(fr)4.078
E(ee)-.18 E F0 1.578(or reallocated with)4.078 F F2 -.18(re)4.078 G
(alloc).18 E F0(,)A(although the latter will not guarantee the preserv)
144 540 Q(ation of alignment.)-.25 E F2(alloca)108 556.8 Q F0(Allocates)
11 E F1(size)2.808 E F0 .309(temporary uninitialised bytes from the hea\
p and returns a pointer to the \214rst byte of)2.808 F 1.187
(the allocation.)144 568.8 R 1.187
(The pointer returned will be suitably aligned for casting to an)6.187 F
3.687(yt)-.15 G 1.186(ype and can be)-3.687 F 1.329
(used to store data of up to)144 580.8 R F1(size)3.829 E F0 1.329
(bytes in length.)3.829 F(If)6.33 E F1(size)3.83 E F0(is)3.83 E F1(0)
3.83 E F0 1.33(then the memory allocated will be)3.83 F .363
(implicitly rounded up to)144 592.8 R F1(1)2.862 E F0 2.862(byte. If)
2.862 F .362
(there is not enough space in the heap then the program will be)2.862 F
1.97(terminated and the)144 604.8 R F1(OUTMEM)4.47 E F0 1.971
(error will be gi)4.471 F -.15(ve)-.25 G 4.471(n. The).15 F F2(alloca)
4.471 E F0 1.971(function normally allocates its)4.471 F 1.021(memory f\
rom the stack, with the result that all such allocations will be freed \
when the function)144 616.8 R 4.312(returns. This)144 628.8 R -.15(ve)
4.312 G 1.812(rsion of).15 F F2(alloca)4.312 E F0 1.813
(allocates its memory from the heap in order to pro)4.312 F 1.813
(vide better)-.15 F(deb)144 640.8 Q 2.645(ugging, b)-.2 F 2.644(ut the \
allocations may not necessarily be freed immediately when the function)
-.2 F 2.74(returns. The)144 652.8 R .24
(allocated memory can be deallocated e)2.74 F .24(xplicitly with)-.15 F
F2(dealloca)2.74 E F0 2.74(,b)C .24(ut may not be reallo-)-2.94 F .26
(cated or deallocated in an)144 664.8 R 2.759(yo)-.15 G .259(ther w)
-2.759 F(ay)-.1 E 5.259(.T)-.65 G .259(his function is a)-5.259 F -.25
(va)-.2 G .259(ilable for backw).25 F .259(ards compatibility with)-.1 F
(older C source code and should not be used in ne)144 676.8 Q 2.5(wc)
-.25 G(ode.)-2.5 E F2(strdup)108 693.6 Q F0 1.266(Allocates e)7.66 F
1.267(xactly enough memory from the heap to duplicate)-.15 F F1(str)
3.767 E F0 1.267(\(including the terminating nul)3.767 F 1.015(characte\
r\) and returns a pointer to the \214rst byte of the allocation after c\
op)144 705.6 R(ying)-.1 E F1(str)3.515 E F0 1.015(to the ne)3.515 F
(wly-)-.25 E 1.337(allocated memory)144 717.6 R 6.337(.T)-.65 G 1.338
(he pointer returned will ha)-6.337 F 1.638 -.15(ve n)-.2 H 3.838(oa).15
G 1.338(lignment constraints and can be used to)-3.838 F .242
(store character data up to the length of)144 729.6 R F1(str)2.742 E F0
5.242(.I)C(f)-5.242 E F1(str)2.741 E F0(is)2.741 E F2(NULL)2.741 E F0
.241(then an error will be gi)2.741 F -.15(ve)-.25 G 2.741(na).15 G .241
(nd the null)-2.741 F(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)
-2.5 E(4)198.45 E EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E 1.355(pointer will be returned.)144 84 R 1.355
(If there is not enough space in the heap then the null pointer will be)
6.355 F 1.158(returned and)144 96 R/F1 10/Times-Bold@0 SF(err)3.658 E
(no)-.15 E F0 1.158(will be set to)3.658 F F1(ENOMEM)3.658 E F0 6.158
(.T)C 1.158(he allocated memory must be deallocated with)-6.158 F F1(fr)
144 108 Q(ee)-.18 E F0(or reallocated with)2.5 E F1 -.18(re)2.5 G(alloc)
.18 E F0(.)A F1(str)108 124.8 Q(ndup)-.15 E F0 1.266(Allocates e)144
136.8 R 1.267(xactly enough memory from the heap to duplicate)-.15 F/F2
10/Times-Italic@0 SF(str)3.767 E F0 1.267
(\(including the terminating nul)3.767 F 1.015(character\) and returns \
a pointer to the \214rst byte of the allocation after cop)144 148.8 R
(ying)-.1 E F2(str)3.515 E F0 1.015(to the ne)3.515 F(wly-)-.25 E 1.337
(allocated memory)144 160.8 R 6.337(.T)-.65 G 1.338
(he pointer returned will ha)-6.337 F 1.638 -.15(ve n)-.2 H 3.838(oa).15
G 1.338(lignment constraints and can be used to)-3.838 F .47
(store character data up to the length of)144 172.8 R F2(str)2.97 E F0
5.47(.I)C(f)-5.47 E F2(str)2.97 E F0(is)2.97 E F1(NULL)2.97 E F0(and)
2.97 E F2(size)2.97 E F0 .47(is non-zero then an error will)2.97 F .072
(be gi)144 184.8 R -.15(ve)-.25 G 2.572(na).15 G .072
(nd the null pointer will be returned.)-2.572 F .073(If the length of)
5.072 F F2(str)2.573 E F0 .073(is greater than)2.573 F F2(size)2.573 E
F0 .073(then only)2.573 F F2(size)2.573 E F0 .641(characters will be al\
located and copied, with one additional byte for the nul character)144
196.8 R 5.641(.I)-.55 G 3.141(ft)-5.641 G .641(here is)-3.141 F 1.888(n\
ot enough space in the heap then the null pointer will be returned and)
144 208.8 R F1(err)4.388 E(no)-.15 E F0 1.888(will be set to)4.388 F F1
(ENOMEM)144 220.8 Q F0 6.579(.T)C 1.579
(he allocated memory must be deallocated with)-6.579 F F1(fr)4.078 E(ee)
-.18 E F0 1.578(or reallocated with)4.078 F F1 -.18(re)4.078 G(alloc).18
E F0(.)A 1.343(This function is a)144 232.8 R -.25(va)-.2 G 1.343
(ilable for backw).25 F 1.344
(ards compatibility with older C libraries and should not be)-.1 F
(used in ne)144 244.8 Q 2.5(wc)-.25 G(ode.)-2.5 E F1(strsa)108 261.6 Q
-.1(ve)-.25 G F0 1.267(Allocates e)6.46 F 1.267
(xactly enough memory from the heap to duplicate)-.15 F F2(str)3.767 E
F0 1.267(\(including the terminating nul)3.767 F 1.015(character\) and \
returns a pointer to the \214rst byte of the allocation after cop)144
273.6 R(ying)-.1 E F2(str)3.516 E F0 1.016(to the ne)3.516 F(wly-)-.25 E
1.338(allocated memory)144 285.6 R 6.338(.T)-.65 G 1.338
(he pointer returned will ha)-6.338 F 1.638 -.15(ve n)-.2 H 3.838(oa).15
G 1.338(lignment constraints and can be used to)-3.838 F .241
(store character data up to the length of)144 297.6 R F2(str)2.741 E F0
5.241(.I)C(f)-5.241 E F2(str)2.741 E F0(is)2.741 E F1(NULL)2.741 E F0
.242(then an error will be gi)2.742 F -.15(ve)-.25 G 2.742(na).15 G .242
(nd the null)-2.742 F 1.355(pointer will be returned.)144 309.6 R 1.355
(If there is not enough space in the heap then the null pointer will be)
6.355 F 1.157(returned and)144 321.6 R F1(err)3.657 E(no)-.15 E F0 1.158
(will be set to)3.658 F F1(ENOMEM)3.658 E F0 6.158(.T)C 1.158
(he allocated memory must be deallocated with)-6.158 F F1(fr)144 333.6 Q
(ee)-.18 E F0 .303(or reallocated with)2.803 F F1 -.18(re)2.803 G(alloc)
.18 E F0 5.302(.T)C .302(his function is a)-5.302 F -.25(va)-.2 G .302
(ilable for backw).25 F .302(ards compatibility with older)-.1 F 2.5(Cl)
144 345.6 S(ibraries and should not be used in ne)-2.5 E 2.5(wc)-.25 G
(ode.)-2.5 E F1(str)108 362.4 Q(nsa)-.15 E -.1(ve)-.25 G F0 1.266
(Allocates e)144 374.4 R 1.267
(xactly enough memory from the heap to duplicate)-.15 F F2(str)3.767 E
F0 1.267(\(including the terminating nul)3.767 F 1.015(character\) and \
returns a pointer to the \214rst byte of the allocation after cop)144
386.4 R(ying)-.1 E F2(str)3.515 E F0 1.015(to the ne)3.515 F(wly-)-.25 E
1.337(allocated memory)144 398.4 R 6.337(.T)-.65 G 1.338
(he pointer returned will ha)-6.337 F 1.638 -.15(ve n)-.2 H 3.838(oa).15
G 1.338(lignment constraints and can be used to)-3.838 F .47
(store character data up to the length of)144 410.4 R F2(str)2.97 E F0
5.47(.I)C(f)-5.47 E F2(str)2.97 E F0(is)2.97 E F1(NULL)2.97 E F0(and)
2.97 E F2(size)2.97 E F0 .47(is non-zero then an error will)2.97 F .072
(be gi)144 422.4 R -.15(ve)-.25 G 2.572(na).15 G .072
(nd the null pointer will be returned.)-2.572 F .073(If the length of)
5.072 F F2(str)2.573 E F0 .073(is greater than)2.573 F F2(size)2.573 E
F0 .073(then only)2.573 F F2(size)2.573 E F0 .641(characters will be al\
located and copied, with one additional byte for the nul character)144
434.4 R 5.641(.I)-.55 G 3.141(ft)-5.641 G .641(here is)-3.141 F 1.888(n\
ot enough space in the heap then the null pointer will be returned and)
144 446.4 R F1(err)4.388 E(no)-.15 E F0 1.888(will be set to)4.388 F F1
(ENOMEM)144 458.4 Q F0 6.579(.T)C 1.579
(he allocated memory must be deallocated with)-6.579 F F1(fr)4.078 E(ee)
-.18 E F0 1.578(or reallocated with)4.078 F F1 -.18(re)4.078 G(alloc).18
E F0(.)A 1.343(This function is a)144 470.4 R -.25(va)-.2 G 1.343
(ilable for backw).25 F 1.344
(ards compatibility with older C libraries and should not be)-.1 F
(used in ne)144 482.4 Q 2.5(wc)-.25 G(ode.)-2.5 E F1(strdupa)108 499.2 Q
F0 .756(Allocates e)144 511.2 R .756
(xactly enough temporary memory from the heap to duplicate)-.15 F F2
(str)3.255 E F0 .755(\(including the termi-)3.255 F .25(nating nul char\
acter\) and returns a pointer to the \214rst byte of the allocation aft\
er cop)144 523.2 R(ying)-.1 E F2(str)2.75 E F0 .25(to the)2.75 F(ne)144
535.2 Q .115(wly-allocated memory)-.25 F 5.115(.T)-.65 G .115
(he pointer returned will ha)-5.115 F .415 -.15(ve n)-.2 H 2.615(oa).15
G .114(lignment constraints and can be used)-2.615 F .612
(to store character data up to the length of)144 547.2 R F2(str)3.112 E
F0 5.612(.I)C(f)-5.612 E F2(str)3.112 E F0(is)3.112 E F1(NULL)3.112 E F0
.612(then an error will be gi)3.112 F -.15(ve)-.25 G 3.112(na).15 G .612
(nd the)-3.112 F .14(null pointer will be returned.)144 559.2 R .14
(If there is not enough space in the heap then the program will be ter)
5.14 F(-)-.2 E .142(minated and the)144 571.2 R F2(OUTMEM)2.643 E F0
.143(error will be gi)2.643 F -.15(ve)-.25 G 2.643(n. The).15 F F1
(strdupa)2.643 E F0 .143(function normally allocates its mem-)2.643 F
.209(ory from the stack, with the result that all such allocations will\
 be freed when the function returns.)144 583.2 R .473(This v)144 595.2 R
.473(ersion of)-.15 F F1(strdupa)2.973 E F0 .473
(allocates its memory from the heap in order to pro)2.973 F .474
(vide better deb)-.15 F(ugging,)-.2 E -.2(bu)144 607.2 S 2.829(tt).2 G
.329(he allocations may not necessarily be freed immediately when the f\
unction returns.)-2.829 F .328(The allo-)5.328 F .915
(cated memory can be deallocated e)144 619.2 R .915(xplicitly with)-.15
F F1(dealloca)3.415 E F0 3.415(,b)C .915
(ut may not be reallocated or deallo-)-3.615 F .112(cated in an)144
631.2 R 2.612(yo)-.15 G .112(ther w)-2.612 F(ay)-.1 E 5.112(.T)-.65 G
.112(his function is a)-5.112 F -.25(va)-.2 G .112(ilable for backw).25
F .112(ards compatibility with older C source)-.1 F
(code and should not be used in ne)144 643.2 Q 2.5(wc)-.25 G(ode.)-2.5 E
F1(str)108 660 Q(ndupa)-.15 E F0 .755(Allocates e)144 672 R .755
(xactly enough temporary memory from the heap to duplicate)-.15 F F2
(str)3.256 E F0 .756(\(including the termi-)3.256 F .25(nating nul char\
acter\) and returns a pointer to the \214rst byte of the allocation aft\
er cop)144 684 R(ying)-.1 E F2(str)2.75 E F0 .25(to the)2.75 F(ne)144
696 Q .114(wly-allocated memory)-.25 F 5.114(.T)-.65 G .114
(he pointer returned will ha)-5.114 F .415 -.15(ve n)-.2 H 2.615(oa).15
G .115(lignment constraints and can be used)-2.615 F .859
(to store character data up to the length of)144 708 R F2(str)3.359 E F0
5.859(.I)C(f)-5.859 E F2(str)3.359 E F0(is)3.359 E F1(NULL)3.359 E F0
(and)3.359 E F2(size)3.359 E F0 .859(is non-zero then an error)3.359 F
.044(will be gi)144 720 R -.15(ve)-.25 G 2.544(na).15 G .044
(nd the null pointer will be returned.)-2.544 F .045(If the length of)
5.044 F F2(str)2.545 E F0 .045(is greater than)2.545 F F2(size)2.545 E
F0 .045(then only)2.545 F(Release 1.4)72 768 Q 2.5(8J)157.35 G
(anuary 2002)-2.5 E(5)198.45 E EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Italic@0 SF(size)144 84 Q F0 .121
(characters will be allocated and copied, with one additional byte for \
the nul character)2.621 F 5.12(.I)-.55 G 2.62(ft)-5.12 G(here)-2.62 E
.471(is not enough space in the heap then the program will be terminate\
d and the)144 96 R F1(OUTMEM)2.972 E F0 .472(error will)2.972 F 1.165
(be gi)144 108 R -.15(ve)-.25 G 3.665(n. The).15 F/F2 10/Times-Bold@0 SF
(str)3.665 E(ndupa)-.15 E F0 1.164
(function normally allocates its memory from the stack, with the result)
3.665 F .922
(that all such allocations will be freed when the function returns.)144
120 R .923(This v)5.923 F .923(ersion of)-.15 F F2(str)3.423 E(ndupa)
-.15 E F0(allo-)3.423 E .638
(cates its memory from the heap in order to pro)144 132 R .638
(vide better deb)-.15 F .638(ugging, b)-.2 F .638
(ut the allocations may not)-.2 F .234
(necessarily be freed immediately when the function returns.)144 144 R
.234(The allocated memory can be deallo-)5.234 F .895(cated e)144 156 R
.895(xplicitly with)-.15 F F2(dealloca)3.395 E F0 3.395(,b)C .895
(ut may not be reallocated or deallocated in an)-3.595 F 3.394(yo)-.15 G
.894(ther w)-3.394 F(ay)-.1 E 5.894(.T)-.65 G(his)-5.894 E .236
(function is a)144 168 R -.25(va)-.2 G .236(ilable for backw).25 F .237
(ards compatibility with older C source code and should not be used)-.1
F(in ne)144 180 Q 2.5(wc)-.25 G(ode.)-2.5 E F2 -.18(re)108 196.8 S
(alloc).18 E F0 .446(Resizes the memory allocation be)7.3 F .446
(ginning at)-.15 F F1(ptr)2.945 E F0(to)2.945 E F1(size)2.945 E F0 .445
(bytes and returns a pointer to the \214rst byte)2.945 F .562(of the ne)
144 208.8 R 3.062(wa)-.25 G .562(llocation after cop)-3.062 F(ying)-.1 E
F1(ptr)3.062 E F0 .562(to the ne)3.062 F .562(wly-allocated memory)-.25
F 3.062(,w)-.65 G .562(hich will be truncated if)-3.062 F F1(size)144
220.8 Q F0 .57(is smaller than the original allocation.)3.07 F .57
(The pointer returned will be suitably aligned for cast-)5.57 F .184
(ing to an)144 232.8 R 2.684(yt)-.15 G .184
(ype and can be used to store data of up to)-2.684 F F1(size)2.684 E F0
.185(bytes in length.)2.684 F(If)5.185 E F1(ptr)2.685 E F0(is)2.685 E F2
(NULL)2.685 E F0 .185(then the)2.685 F .125(call will be equi)144 244.8
R -.25(va)-.25 G .125(lent to).25 F F2(malloc)2.625 E F0 5.125(.I)C(f)
-5.125 E F1(size)2.625 E F0(is)2.625 E F1(0)2.625 E F0 .125(then the e)
2.625 F .125(xisting memory allocation will be freed and)-.15 F .382
(the null pointer will be returned.)144 256.8 R(If)5.382 E F1(size)2.882
E F0 .383(is greater than the original allocation then the e)2.882 F
.383(xtra space)-.15 F .119(will be \214lled with uninitialised bytes.)
144 268.8 R .119
(If there is not enough space in the heap then the null pointer)5.119 F
.432(will be returned and)144 280.8 R F2(err)2.932 E(no)-.15 E F0 .433
(will be set to)2.932 F F2(ENOMEM)2.933 E F0 5.433(.T)C .433
(he allocated memory must be deallocated)-5.433 F(with)144 292.8 Q F2
(fr)2.5 E(ee)-.18 E F0(and can be reallocated ag)2.5 E(ain with)-.05 E
F2 -.18(re)2.5 G(alloc).18 E F0(.)A F2 -.18(re)108 309.6 S(allocf).18 E
F0 .446(Resizes the memory allocation be)144 321.6 R .446(ginning at)
-.15 F F1(ptr)2.945 E F0(to)2.945 E F1(size)2.945 E F0 .445
(bytes and returns a pointer to the \214rst byte)2.945 F .562(of the ne)
144 333.6 R 3.062(wa)-.25 G .562(llocation after cop)-3.062 F(ying)-.1 E
F1(ptr)3.062 E F0 .562(to the ne)3.062 F .562(wly-allocated memory)-.25
F 3.062(,w)-.65 G .562(hich will be truncated if)-3.062 F F1(size)144
345.6 Q F0 .57(is smaller than the original allocation.)3.07 F .57
(The pointer returned will be suitably aligned for cast-)5.57 F .184
(ing to an)144 357.6 R 2.684(yt)-.15 G .184
(ype and can be used to store data of up to)-2.684 F F1(size)2.684 E F0
.185(bytes in length.)2.684 F(If)5.185 E F1(ptr)2.685 E F0(is)2.685 E F2
(NULL)2.685 E F0 .185(then the)2.685 F .125(call will be equi)144 369.6
R -.25(va)-.25 G .125(lent to).25 F F2(malloc)2.625 E F0 5.125(.I)C(f)
-5.125 E F1(size)2.625 E F0(is)2.625 E F1(0)2.625 E F0 .125(then the e)
2.625 F .125(xisting memory allocation will be freed and)-.15 F .382
(the null pointer will be returned.)144 381.6 R(If)5.382 E F1(size)2.882
E F0 .383(is greater than the original allocation then the e)2.882 F
.383(xtra space)-.15 F .119(will be \214lled with uninitialised bytes.)
144 393.6 R .119
(If there is not enough space in the heap then the null pointer)5.119 F
1.065(will be returned, the original allocation will be freed and)144
405.6 R F2(err)3.565 E(no)-.15 E F0 1.065(will be set to)3.565 F F2
(ENOMEM)3.565 E F0 6.065(.T)C(he)-6.065 E .742
(allocated memory must be deallocated with)144 417.6 R F2(fr)3.242 E(ee)
-.18 E F0 .742(and can be reallocated ag)3.242 F .742(ain with)-.05 F F2
-.18(re)3.242 G(alloc).18 E F0 5.742(.T)C(his)-5.742 E .532
(function is a)144 429.6 R -.25(va)-.2 G .532(ilable for backw).25 F
.532
(ards compatibility with older C libraries and should not be used in)-.1
F(ne)144 441.6 Q 2.5(wc)-.25 G(ode.)-2.5 E F2 -.18(re)108 458.4 S
(calloc).18 E F0 1.728(Resizes the memory allocation be)144 470.4 R
1.728(ginning at)-.15 F F1(ptr)4.228 E F0(to)4.228 E F1(nelem)4.228 E F0
1.728(elements of)4.228 F F1(size)4.228 E F0 1.728(bytes and returns a)
4.228 F 1.338(pointer to the \214rst byte of the ne)144 482.4 R 3.839
(wa)-.25 G 1.339(llocation after cop)-3.839 F(ying)-.1 E F1(ptr)3.839 E
F0 1.339(to the ne)3.839 F 1.339(wly-allocated memory)-.25 F(,)-.65 E
.067(which will be truncated if)144 494.4 R F1(nelem)2.566 E F0(*)2.566
E F1(size)2.566 E F0 .066(is smaller than the original allocation.)2.566
F .066(The pointer returned)5.066 F .388
(will be suitably aligned for casting to an)144 506.4 R 2.888(yt)-.15 G
.388(ype and can be used to store data of up to)-2.888 F F1(nelem)2.888
E F0(*)2.889 E F1(size)2.889 E F0 .245(bytes in length.)144 518.4 R(If)
5.245 E F1(ptr)2.745 E F0(is)2.745 E F2(NULL)2.745 E F0 .245
(then the call will be equi)2.745 F -.25(va)-.25 G .245(lent to).25 F F2
(calloc)2.745 E F0 5.245(.I)C(f)-5.245 E F1(nelem)2.745 E F0(*)2.744 E
F1(size)2.744 E F0(is)2.744 E F1(0)2.744 E F0(then)2.744 E .414(the e)
144 530.4 R .414(xisting memory allocation will be freed and the null p\
ointer will be returned.)-.15 F(If)5.414 E F1(nelem)2.914 E F0(*)2.915 E
F1(size)2.915 E F0 .377
(is greater than the original allocation then the e)144 542.4 R .376
(xtra space will be \214lled with zero-initialised bytes.)-.15 F .172(I\
f there is not enough space in the heap then the null pointer will be r\
eturned and)144 554.4 R F2(err)2.672 E(no)-.15 E F0 .172(will be set)
2.672 F(to)144 566.4 Q F2(ENOMEM)2.793 E F0 5.293(.T)C .293
(he allocated memory must be deallocated with)-5.293 F F2(fr)2.793 E(ee)
-.18 E F0 .293(and can be reallocated ag)2.793 F(ain)-.05 E(with)144
578.4 Q F2 -.18(re)2.547 G(alloc).18 E F0 5.047(.T)C .048
(his function is a)-5.047 F -.25(va)-.2 G .048(ilable for backw).25 F
.048(ards compatibility with older C libraries and)-.1 F F2(cal-)2.548 E
(loc)144 590.4 Q F0(and should not be used in ne)2.5 E 2.5(wc)-.25 G
(ode.)-2.5 E F2(expand)108 607.2 Q F0 1.116
(Attempts to resize the memory allocation be)144 619.2 R 1.116
(ginning at)-.15 F F1(ptr)3.616 E F0(to)3.616 E F1(size)3.616 E F0 1.115
(bytes and either returns)3.615 F F1(ptr)3.615 E F0(if)3.615 E .151
(there w)144 631.2 R .151(as enough space to resize it, or)-.1 F F2
(NULL)2.651 E F0 .151
(if the block could not be resized for a particular rea-)2.651 F 2.778
(son. If)144 643.2 R F1(ptr)2.778 E F0(is)2.778 E F2(NULL)2.778 E F0
.278(then the call will be equi)2.778 F -.25(va)-.25 G .278(lent to).25
F F2(malloc)2.778 E F0 5.278(.I)C(f)-5.278 E F1(size)2.778 E F0(is)2.778
E F2(0)2.778 E F0 .278(then the e)2.778 F .278(xisting mem-)-.15 F .09
(ory allocation will be freed and the)144 655.2 R F2(NULL)2.59 E F0 .091
(pointer will be returned.)2.59 F(If)5.091 E F1(size)2.591 E F0 .091
(is greater than the orig-)2.591 F .251(inal allocation then the e)144
667.2 R .251
(xtra space will be \214lled with uninitialised bytes and if)-.15 F F1
(size)2.75 E F0 .25(is less than the)2.75 F .968
(original allocation then the memory block will be truncated.)144 679.2
R .969(If there is not enough space in the)5.969 F .458(heap then the)
144 691.2 R F2(NULL)2.958 E F0 .458(pointer will be returned and)2.958 F
F2(err)2.957 E(no)-.15 E F0 .457(will be set to)2.957 F F2(ENOMEM)2.957
E F0 5.457(.T)C .457(he allocated)-5.457 F .266
(memory must be deallocated with)144 703.2 R F2(fr)2.766 E(ee)-.18 E F0
.266(and can be reallocated ag)2.766 F .266(ain with)-.05 F F2 -.18(re)
2.766 G(alloc).18 E F0 5.266(.T)C .266(his function is)-5.266 F -.2(av)
144 715.2 S(ailable for backw)-.05 E
(ards compatibility with older C libraries and should not be used in ne)
-.1 E 2.5(wc)-.25 G(ode.)-2.5 E(Release 1.4)72 768 Q 2.5(8J)157.35 G
(anuary 2002)-2.5 E(6)198.45 E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(fr)108 84 Q(ee)-.18 E F0
.219(Frees the memory allocation be)19.53 F .218(ginning at)-.15 F/F2 10
/Times-Italic@0 SF(ptr)2.718 E F0 .218
(so the memory can be reused by another call to allo-)2.718 F .416
(cate memory)144 96 R 5.416(.I)-.65 G(f)-5.416 E F2(ptr)2.916 E F0(is)
2.916 E F1(NULL)2.916 E F0 .417(then no memory will be freed.)2.916 F
.417(All of the pre)5.417 F .417(vious contents will be)-.25 F(destro)
144 108 Q(yed.)-.1 E F1(cfr)108 124.8 Q(ee)-.18 E F0 .219
(Frees the memory allocation be)15.09 F .218(ginning at)-.15 F F2(ptr)
2.718 E F0 .218(so the memory can be reused by another call to allo-)
2.718 F .416(cate memory)144 136.8 R 5.416(.I)-.65 G(f)-5.416 E F2(ptr)
2.916 E F0(is)2.916 E F1(NULL)2.916 E F0 .417
(then no memory will be freed.)2.916 F .417(All of the pre)5.417 F .417
(vious contents will be)-.25 F(destro)144 148.8 Q 3.764(yed. The)-.1 F
F2(nelem)3.764 E F0(and)3.764 E F2(size)3.764 E F0 1.264
(parameters are ignored in this implementation.)3.764 F 1.263
(This function is)6.264 F -.2(av)144 160.8 S .606(ailable for backw)-.05
F .606(ards compatibility with older C libraries and)-.1 F F1(calloc)
3.107 E F0 .607(and should not be used in)3.107 F(ne)144 172.8 Q 2.5(wc)
-.25 G(ode.)-2.5 E F1(dealloca)108 189.6 Q F0 .062
(Explicitly frees the temporary memory allocation be)144 201.6 R .062
(ginning at)-.15 F F2(ptr)2.562 E F0 .062
(so the memory can be reused by)2.562 F .582
(another call to allocate memory)144 213.6 R 5.582(.I)-.65 G(f)-5.582 E
F2(ptr)3.082 E F0(is)3.082 E F1(NULL)3.082 E F0 .583
(then no memory will be e)3.082 F .583(xplicitly freed.)-.15 F .583
(All of)5.583 F .615(the pre)144 225.6 R .615
(vious contents will be destro)-.25 F 3.115(yed. This)-.1 F .615
(function can only be used to free memory that w)3.115 F(as)-.1 E .443
(allocated with the)144 237.6 R F1(alloca)2.943 E F0(,)A F1(strdupa)
2.943 E F0(and)2.943 E F1(str)2.943 E(ndupa)-.15 E F0 .443(functions, b)
2.943 F .444(ut is only really required if the mpa-)-.2 F 1.893(trol li\
brary does not automatically free such memory allocations when the allo\
cating function)144 249.6 R 2.5(returns. This)144 261.6 R
(function is mpatrol-speci\214c and should not be used in release code.)
2.5 E 1.766(The follo)108 278.4 R 1.766(wing 5 functions are a)-.25 F
-.25(va)-.2 G 1.766(ilable as replacements for e).25 F 1.767
(xisting C library e)-.15 F 1.767(xtension functions that)-.15 F(al)108
290.4 Q -.1(wa)-.1 G .855(ys abort and ne).1 F -.15(ve)-.25 G 3.355(rr)
.15 G(eturn)-3.355 E F1(NULL)3.355 E F0 .855(if there is insuf)3.355 F
.854(\214cient memory to ful\214l a request.)-.25 F 2.454 -.8(To u)5.854
H .854(se these you).8 F .377(must include)108 302.4 R F2(mpatr)2.877 E
(ol.h)-.45 E F0 .377
(before all other header \214les, although on UNIX and W)2.877 F(indo)
-.4 E .378(ws platforms \(and Ami-)-.25 F -.05(ga)108 314.4 S
(OS when using).05 E F1(gcc)2.5 E F0 2.5(\)t)C(he)-2.5 E 2.5(yw)-.15 G
(ill be used an)-2.5 E(yw)-.15 E(ay)-.1 E 2.5(,a)-.65 G
(lbeit with slightly less tracing information:)-2.5 E F1(xmalloc)108
331.2 Q F0(Allocates)144 343.2 Q F2(size)2.742 E F0 .242(uninitialised \
bytes from the heap and returns a pointer to the \214rst byte of the al\
loca-)2.742 F 2.752(tion. The)144 355.2 R .252
(pointer returned will be suitably aligned for casting to an)2.752 F
2.752(yt)-.15 G .253(ype and can be used to store)-2.752 F .157
(data of up to)144 367.2 R F2(size)2.657 E F0 .157(bytes in length.)
2.657 F(If)5.156 E F2(size)2.656 E F0(is)2.656 E F2(0)2.656 E F0 .156
(then the memory allocated will be implicitly rounded)2.656 F .331
(up to)144 379.2 R F2(1)2.831 E F0 2.831(byte. If)2.831 F .331(there is\
 not enough space in the heap then the program will be terminated and t\
he)2.831 F F2(OUTMEM)144 391.2 Q F0 .992(error will be gi)3.493 F -.15
(ve)-.25 G 3.492(n. The).15 F .992
(allocated memory must be deallocated with)3.492 F F1(xfr)3.492 E(ee)
-.18 E F0 .992(or reallo-)3.492 F(cated with)144 403.2 Q F1(xr)2.5 E
(ealloc)-.18 E F0(.)A F1(xcalloc)108 420 Q F0(Allocates)6.56 E F2(nelem)
3.256 E F0 .756(elements of)3.256 F F2(size)3.256 E F0 .757
(zero-initialised bytes from the heap and returns a pointer to the)3.256
F .978(\214rst byte of the allocation.)144 432 R .977
(The pointer returned will be suitably aligned for casting to an)5.978 F
3.477(yt)-.15 G(ype)-3.477 E .782
(and can be used to store data of up to)144 444 R F2 .783(nelem * size)
3.283 F F0 .783(bytes in length.)3.283 F(If)5.783 E F2 .783
(nelem * size)3.283 F F0(is)3.283 E F2(0)3.283 E F0 .783(then the)3.283
F .372(amount of memory allocated will be implicitly rounded up to)144
456 R F2(1)2.872 E F0 2.872(byte. If)2.872 F .371
(there is not enough space)2.872 F .527
(in the heap then the program will be terminated and the)144 468 R F2
(OUTMEM)3.028 E F0 .528(error will be gi)3.028 F -.15(ve)-.25 G 3.028
(n. The).15 F(allo-)3.028 E(cated memory must be deallocated with)144
480 Q F1(xfr)2.5 E(ee)-.18 E F0(or reallocated with)2.5 E F1(xr)2.5 E
(ealloc)-.18 E F0(.)A F1(xstrdup)108 496.8 Q F0 1.267(Allocates e)144
508.8 R 1.267(xactly enough memory from the heap to duplicate)-.15 F F2
(str)3.767 E F0 1.267(\(including the terminating nul)3.767 F 1.015(cha\
racter\) and returns a pointer to the \214rst byte of the allocation af\
ter cop)144 520.8 R(ying)-.1 E F2(str)3.516 E F0 1.016(to the ne)3.516 F
(wly-)-.25 E 1.338(allocated memory)144 532.8 R 6.338(.T)-.65 G 1.338
(he pointer returned will ha)-6.338 F 1.638 -.15(ve n)-.2 H 3.838(oa).15
G 1.338(lignment constraints and can be used to)-3.838 F .241
(store character data up to the length of)144 544.8 R F2(str)2.741 E F0
5.241(.I)C(f)-5.241 E F2(str)2.741 E F0(is)2.741 E F1(NULL)2.741 E F0
.242(then an error will be gi)2.742 F -.15(ve)-.25 G 2.742(na).15 G .242
(nd the null)-2.742 F .554(pointer will be returned.)144 556.8 R .553(I\
f there is not enough space in the heap then the program will be termi-)
5.554 F 1.533(nated and the)144 568.8 R F2(OUTMEM)4.033 E F0 1.533
(error will be gi)4.033 F -.15(ve)-.25 G 4.034(n. The).15 F 1.534
(allocated memory must be deallocated with)4.034 F F1(xfr)144 580.8 Q
(ee)-.18 E F0(or reallocated with)2.5 E F1(xr)2.5 E(ealloc)-.18 E F0(.)A
F1(xr)108 597.6 Q(ealloc)-.18 E F0 .446
(Resizes the memory allocation be)144 609.6 R .446(ginning at)-.15 F F2
(ptr)2.945 E F0(to)2.945 E F2(size)2.945 E F0 .445
(bytes and returns a pointer to the \214rst byte)2.945 F .562(of the ne)
144 621.6 R 3.062(wa)-.25 G .562(llocation after cop)-3.062 F(ying)-.1 E
F2(ptr)3.062 E F0 .562(to the ne)3.062 F .562(wly-allocated memory)-.25
F 3.062(,w)-.65 G .562(hich will be truncated if)-3.062 F F2(size)144
633.6 Q F0 .57(is smaller than the original allocation.)3.07 F .57
(The pointer returned will be suitably aligned for cast-)5.57 F .184
(ing to an)144 645.6 R 2.684(yt)-.15 G .184
(ype and can be used to store data of up to)-2.684 F F2(size)2.684 E F0
.185(bytes in length.)2.684 F(If)5.185 E F2(ptr)2.685 E F0(is)2.685 E F1
(NULL)2.685 E F0 .185(then the)2.685 F .509(call will be equi)144 657.6
R -.25(va)-.25 G .509(lent to).25 F F1(xmalloc)3.009 E F0 5.509(.I)C(f)
-5.509 E F2(size)3.009 E F0(is)3.009 E F2(0)3.009 E F0 .508
(then it will be implictly rounded up to)3.009 F F2(1)3.008 E F0 5.508
(.I)C(f)-5.508 E F2(size)3.008 E F0(is)3.008 E .913
(greater than the original allocation then the e)144 669.6 R .914
(xtra space will be \214lled with uninitialised bytes.)-.15 F(If)5.914 E
.211(there is not enough space in the heap then the program will be ter\
minated and the)144 681.6 R F2(OUTMEM)2.71 E F0(error)2.71 E .318
(will be gi)144 693.6 R -.15(ve)-.25 G 2.818(n. The).15 F .319
(allocated memory must be deallocated with)2.818 F F1(xfr)2.819 E(ee)
-.18 E F0 .319(and can be reallocated ag)2.819 F(ain)-.05 E(with)144
705.6 Q F1(xr)2.5 E(ealloc)-.18 E F0(.)A(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(7)198.45 E EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(xfr)108 84 Q(ee)-.18 E
F0 .219(Frees the memory allocation be)14.53 F .218(ginning at)-.15 F/F2
10/Times-Italic@0 SF(ptr)2.718 E F0 .218
(so the memory can be reused by another call to allo-)2.718 F .416
(cate memory)144 96 R 5.416(.I)-.65 G(f)-5.416 E F2(ptr)2.916 E F0(is)
2.916 E F1(NULL)2.916 E F0 .417(then no memory will be freed.)2.916 F
.417(All of the pre)5.417 F .417(vious contents will be)-.25 F(destro)
144 108 Q(yed.)-.1 E .309(The follo)108 124.8 R .309
(wing 5 functions are a)-.25 F -.25(va)-.2 G .309
(ilable as replacements for e).25 F .308
(xisting C++ library functions, b)-.15 F .308(ut the replace-)-.2 F .35
(ments in)108 136.8 R F2(mpatr)2.85 E(ol.h)-.45 E F0 .351
(will only be used if the)2.85 F F1(MP_NOCPLUSPLUS)2.851 E F0 .351
(preprocessor macro is not de\214ned.)2.851 F(The)5.351 E 1.495
(replacement operators mak)108 148.8 R 3.995(eu)-.1 G 1.495
(se of the preprocessor in order to obtain source-le)-3.995 F -.15(ve)
-.25 G 3.995(li).15 G 3.995(nformation. If)-3.995 F(this)3.995 E 2.254
(causes problems then you should de\214ne the)108 160.8 R F1
(MP_NONEWDELETE)4.754 E F0 2.254(preprocessor macro and use the)4.754 F
F1(MP_NEW)108 172.8 Q F0(,)A F1(MP_NEW_NO)3.583 E(THR)-.4 E -.5(OW)-.3 G
F0(and)4.083 E F1(MP_DELETE)3.583 E F0 1.083(macros instead of)3.583 F
F1(new)3.583 E F0(and)3.583 E F1(delete)3.582 E F0(directly)3.582 E
6.082(.T)-.65 G(o)-6.882 E 1.223
(use these C++ features you must include)108 184.8 R F2(mpatr)3.723 E
(ol.h)-.45 E F0 1.223
(before all other header \214les, although on UNIX and)3.723 F -.4(Wi)
108 196.8 S(ndo).4 E .082(ws platforms \(and Amig)-.25 F .082
(aOS when using)-.05 F F1(gcc)2.581 E F0 2.581(\)t)C(he)-2.581 E 2.581
(yw)-.15 G .081(ill be used an)-2.581 F(yw)-.15 E(ay)-.1 E 2.581(,a)-.65
G .081(lbeit with slightly less trac-)-2.581 F(ing information:)108
208.8 Q F1(operator new)108 225.6 Q F0(Allocates)144 237.6 Q F2(size)
2.741 E F0 .242(uninitialised bytes from the heap and returns a pointer\
 to the \214rst byte of the alloca-)2.741 F 2.753(tion. The)144 249.6 R
.252(pointer returned will be suitably aligned for casting to an)2.753 F
2.752(yt)-.15 G .252(ype and can be used to store)-2.752 F .156
(data of up to)144 261.6 R F2(size)2.656 E F0 .156(bytes in length.)
2.656 F(If)5.156 E F2(size)2.656 E F0(is)2.656 E F2(0)2.656 E F0 .157
(then the memory allocated will be implicitly rounded)2.656 F .253
(up to)144 273.6 R F2(1)2.753 E F0 2.753(byte. If)2.753 F .252
(there is not enough space in the heap then either the)2.752 F F2
(std::bad_alloc)2.752 E F0 -.15(ex)2.752 G .252(ception will).15 F .338
(be thro)144 285.6 R .339(wn or the null pointer will be returned and)
-.25 F F1(err)2.839 E(no)-.15 E F0 .339(will be set to)2.839 F F1
(ENOMEM)2.839 E F0 2.839(-t)2.839 G .339(he beha)-2.839 F(viour)-.2 E
.746(depends on whether the nothro)144 297.6 R 3.246(wv)-.25 G .746
(ersion of the operator is used.)-3.396 F .746
(The allocated memory must be)5.746 F(deallocated with)144 309.6 Q F1
(operator delete)2.5 E F0(.)A F1(operator new[])108 326.4 Q F0
(Allocates)144 338.4 Q F2(size)2.741 E F0 .242(uninitialised bytes from\
 the heap and returns a pointer to the \214rst byte of the alloca-)2.741
F 2.753(tion. The)144 350.4 R .252
(pointer returned will be suitably aligned for casting to an)2.753 F
2.752(yt)-.15 G .252(ype and can be used to store)-2.752 F .156
(data of up to)144 362.4 R F2(size)2.656 E F0 .156(bytes in length.)
2.656 F(If)5.156 E F2(size)2.656 E F0(is)2.656 E F2(0)2.656 E F0 .157
(then the memory allocated will be implicitly rounded)2.656 F .253
(up to)144 374.4 R F2(1)2.753 E F0 2.753(byte. If)2.753 F .252
(there is not enough space in the heap then either the)2.752 F F2
(std::bad_alloc)2.752 E F0 -.15(ex)2.752 G .252(ception will).15 F .338
(be thro)144 386.4 R .339(wn or the null pointer will be returned and)
-.25 F F1(err)2.839 E(no)-.15 E F0 .339(will be set to)2.839 F F1
(ENOMEM)2.839 E F0 2.839(-t)2.839 G .339(he beha)-2.839 F(viour)-.2 E
.746(depends on whether the nothro)144 398.4 R 3.246(wv)-.25 G .746
(ersion of the operator is used.)-3.396 F .746
(The allocated memory must be)5.746 F(deallocated with)144 410.4 Q F1
(operator delete[])2.5 E F0(.)A F1(operator delete)108 427.2 Q F0 .218
(Frees the memory allocation be)144 439.2 R .218(ginning at)-.15 F F2
(ptr)2.718 E F0 .218
(so the memory can be reused by another call to allo-)2.718 F .417
(cate memory)144 451.2 R 5.417(.I)-.65 G(f)-5.417 E F2(ptr)2.917 E F0
(is)2.917 E F1(NULL)2.917 E F0 .417(then no memory will be freed.)2.917
F .416(All of the pre)5.417 F .416(vious contents will be)-.25 F(destro)
144 463.2 Q 2.5(yed. This)-.1 F
(function must only be used with memory allocated by)2.5 E F1
(operator new)2.5 E F0(.)A F1(operator delete[])108 480 Q F0 .218
(Frees the memory allocation be)144 492 R .218(ginning at)-.15 F F2(ptr)
2.718 E F0 .218(so the memory can be reused by another call to allo-)
2.718 F .417(cate memory)144 504 R 5.417(.I)-.65 G(f)-5.417 E F2(ptr)
2.917 E F0(is)2.917 E F1(NULL)2.917 E F0 .417
(then no memory will be freed.)2.917 F .416(All of the pre)5.417 F .416
(vious contents will be)-.25 F(destro)144 516 Q 2.5(yed. This)-.1 F
(function must only be used with memory allocated by)2.5 E F1
(operator new[])2.5 E F0(.)A F1(set_new_handler)108 532.8 Q F0 1.234
(Installs a lo)144 544.8 R 1.234
(w-memory handler speci\214cally for use with)-.25 F F1 1.235
(operator new)3.735 F F0(and)3.735 E F1 1.235(operator new[])3.735 F F0
(and)3.735 E .297(returns a pointer to the pre)144 556.8 R .297
(viously installed handler)-.25 F 2.797(,o)-.4 G 2.797(rt)-2.797 G .297
(he null pointer if no handler had been pre-)-2.797 F 1.7
(viously installed.)144 568.8 R 1.701
(This will be called repeatedly by both functions when the)6.7 F 4.201
(yw)-.15 G 1.701(ould normally)-4.301 F(return)144 580.8 Q F1(NULL)2.84
E F0 2.84(,a)C .34(nd this loop will continue until the)-2.84 F 2.839
(ym)-.15 G .339(anage to allocate the requested space.)-2.839 F(Note)
5.339 E .546(that this function is equi)144 592.8 R -.25(va)-.25 G .546
(lent to).25 F F1(__mp_nomemory)3.046 E F0 .547
(and will replace the handler installed by that)3.046 F(function.)144
604.8 Q 1.281(The follo)108 621.6 R 1.281(wing 10 functions are a)-.25 F
-.25(va)-.2 G 1.281(ilable as replacements for e).25 F 1.28
(xisting C library memory operation func-)-.15 F 3.191(tions. T)108
633.6 R 3.191(ou)-.8 G .691(se these you must include)-3.191 F F2(mpatr)
3.192 E(ol.h)-.45 E F0 .692
(before all other header \214les, although on UNIX and W)3.192 F(in-)-.4
E(do)108 645.6 Q .542(ws platforms \(and Amig)-.25 F .542
(aOS when using)-.05 F F1(gcc)3.042 E F0 3.042(\)t)C(he)-3.042 E 3.042
(yw)-.15 G .542(ill be used an)-3.042 F(yw)-.15 E(ay)-.1 E 3.042(,a)-.65
G .542(lbeit with slightly less tracing)-3.042 F(information:)108 657.6
Q F1(memset)108 674.4 Q F0(Writes)144 686.4 Q F2(size)2.648 E F0 .149
(bytes of v)2.649 F(alue)-.25 E F2(byte)2.649 E F0 .149
(to the memory location be)2.649 F .149(ginning at)-.15 F F2(ptr)2.649 E
F0 .149(and returns)2.649 F F2(ptr)2.649 E F0 5.149(.I)C(f)-5.149 E F2
(size)2.649 E F0(is)2.649 E F1(0)2.649 E F0 .722
(then no bytes will be written.)144 698.4 R .722(If the operation w)
5.722 F .722(ould af)-.1 F .722(fect an e)-.25 F .722
(xisting memory allocation in the)-.15 F .11(heap b)144 710.4 R .11
(ut w)-.2 F .11(ould straddle that allocation')-.1 F 2.61(sb)-.55 G .11
(oundaries then an error message will be generated in the)-2.61 F
(log \214le and no bytes will be written.)144 722.4 Q(Release 1.4)72 768
Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(8)198.45 E EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(bzer)108 84 Q(o)-.18 E
F0(Writes)12.3 E/F2 10/Times-Italic@0 SF(size)3.162 E F0 .662
(zero bytes to the memory location be)3.162 F .662(ginning at)-.15 F F2
(ptr)3.162 E F0 5.662(.I)C(f)-5.662 E F2(size)3.161 E F0(is)3.161 E F1
(0)3.161 E F0 .661(then no bytes will be)3.161 F 3.05(written. If)144 96
R .55(the operation w)3.05 F .55(ould af)-.1 F .55(fect an e)-.25 F .55
(xisting memory allocation in the heap b)-.15 F .55(ut w)-.2 F .55
(ould strad-)-.1 F .079(dle that allocation')144 108 R 2.579(sb)-.55 G
.079(oundaries then an error message will be generated in the log \214l\
e and no bytes)-2.579 F .669(will be written.)144 120 R .669
(This function is a)5.669 F -.25(va)-.2 G .669(ilable for backw).25 F
.67(ards compatibility with older C libraries and)-.1 F
(should not be used in ne)144 132 Q 2.5(wc)-.25 G(ode.)-2.5 E F1
(memccpy)108 148.8 Q F0(Copies)144 160.8 Q F2(size)3.674 E F0 1.174
(bytes from)3.674 F F2(sr)3.674 E(c)-.37 E F0(to)3.674 E F2(dest)3.674 E
F0 1.174(and returns)3.674 F F1(NULL)3.674 E F0 3.674(,o)C 3.674(rc)
-3.674 G 1.174(opies the number of bytes up to and)-3.674 F .354
(including the \214rst occurrence of)144 172.8 R F2(byte)2.854 E F0(if)
2.854 E F2(byte)2.854 E F0 -.15(ex)2.854 G .355
(ists within the speci\214ed range and returns a pointer).15 F .34
(to the \214rst byte after)144 184.8 R F2(byte)2.84 E F0 5.34(.I)C(f)
-5.34 E F2(size)2.84 E F0(is)2.84 E F1(0)2.84 E F0(or)2.84 E F2(sr)2.84
E(c)-.37 E F0 .339(is the same as)2.84 F F2(dest)2.839 E F0 .339
(then no bytes will be copied.)2.839 F(The)5.339 E .948
(source and destination ranges should not o)144 196.8 R -.15(ve)-.15 G
.949(rlap, otherwise a w).15 F .949(arning will be written to the log)
-.1 F 3.494(\214le. If)144 208.8 R .994(the operation w)3.494 F .994
(ould af)-.1 F .994(fect an e)-.25 F .994
(xisting memory allocation in the heap b)-.15 F .994(ut w)-.2 F .994
(ould straddle)-.1 F 1.003(that allocation')144 220.8 R 3.503(sb)-.55 G
1.004(oundaries then an error message will be generated in the log \214\
le and no bytes)-3.503 F(will be copied.)144 232.8 Q F1(memcpy)108 249.6
Q F0(Copies)144 261.6 Q F2(size)3.137 E F0 .637(bytes from)3.137 F F2
(sr)3.137 E(c)-.37 E F0(to)3.137 E F2(dest)3.137 E F0 .637(and returns)
3.137 F F2(dest)3.136 E F0 5.636(.I)C(f)-5.636 E F2(size)3.136 E F0(is)
3.136 E F1(0)3.136 E F0(or)3.136 E F2(sr)3.136 E(c)-.37 E F0 .636
(is the same as)3.136 F F2(dest)3.136 E F0 .636(then no)3.136 F .68
(bytes will be copied.)144 273.6 R .68
(The source and destination ranges should not o)5.68 F -.15(ve)-.15 G
.68(rlap, otherwise a w).15 F(arning)-.1 E .696
(will be written to the log \214le.)144 285.6 R .695(If the operation w)
5.695 F .695(ould af)-.1 F .695(fect an e)-.25 F .695
(xisting memory allocation in the)-.15 F .11(heap b)144 297.6 R .11
(ut w)-.2 F .11(ould straddle that allocation')-.1 F 2.61(sb)-.55 G .11
(oundaries then an error message will be generated in the)-2.61 F
(log \214le and no bytes will be copied.)144 309.6 Q F1(memmo)108 326.4
Q -.1(ve)-.1 G F0(Copies)144 338.4 Q F2(size)3.137 E F0 .637(bytes from)
3.137 F F2(sr)3.137 E(c)-.37 E F0(to)3.137 E F2(dest)3.137 E F0 .637
(and returns)3.137 F F2(dest)3.136 E F0 5.636(.I)C(f)-5.636 E F2(size)
3.136 E F0(is)3.136 E F1(0)3.136 E F0(or)3.136 E F2(sr)3.136 E(c)-.37 E
F0 .636(is the same as)3.136 F F2(dest)3.136 E F0 .636(then no)3.136 F
.561(bytes will be copied.)144 350.4 R .561(If the operation w)5.561 F
.561(ould af)-.1 F .561(fect an e)-.25 F .562
(xisting memory allocation in the heap b)-.15 F(ut)-.2 E -.1(wo)144
362.4 S .504(uld straddle that allocation').1 F 3.004(sb)-.55 G .503
(oundaries then an error message will be generated in the log \214le)
-3.004 F(and no bytes will be copied.)144 374.4 Q F1(bcopy)108 391.2 Q
F0(Copies)10.44 E F2(size)3.691 E F0 1.191(bytes from)3.691 F F2(sr)
3.691 E(c)-.37 E F0(to)3.691 E F2(dest)3.691 E F0 6.191(.I)C(f)-6.191 E
F2(size)3.691 E F0(is)3.691 E F1(0)3.691 E F0(or)3.691 E F2(sr)3.691 E
(c)-.37 E F0 1.192(is the same as)3.691 F F2(dest)3.692 E F0 1.192
(then no bytes will be)3.692 F 2.569(copied. If)144 403.2 R .069
(the operation w)2.569 F .069(ould af)-.1 F .069(fect an e)-.25 F .069
(xisting memory allocation in the heap b)-.15 F .068(ut w)-.2 F .068
(ould straddle)-.1 F 1.003(that allocation')144 415.2 R 3.503(sb)-.55 G
1.004(oundaries then an error message will be generated in the log \214\
le and no bytes)-3.503 F .789(will be copied.)144 427.2 R .789
(This function is a)5.789 F -.25(va)-.2 G .789(ilable for backw).25 F
.788(ards compatibility with older C libraries and)-.1 F
(should not be used in ne)144 439.2 Q 2.5(wc)-.25 G(ode.)-2.5 E F1
(memcmp)108 456 Q F0(Compares)144 468 Q F2(size)2.614 E F0 .114
(bytes from)2.614 F F2(ptr1)2.614 E F0(and)2.614 E F2(ptr2)2.614 E F0
.114(and returns)2.614 F F1(0)2.614 E F0 .114
(if all of the bytes are identical, or returns the)2.614 F .114
(byte dif)144 480 R .114(ference of the \214rst dif)-.25 F .114
(fering bytes.)-.25 F(If)5.114 E F2(size)2.613 E F0(is)2.613 E F1(0)
2.613 E F0(or)2.613 E F2(ptr1)2.613 E F0 .113(is the same as)2.613 F F2
(ptr2)2.613 E F0 .113(then no bytes will)2.613 F 1.416(be compared.)144
492 R 1.416(If the operation w)6.416 F 1.416(ould read from an e)-.1 F
1.416(xisting memory allocation in the heap b)-.15 F(ut)-.2 E -.1(wo)144
504 S .504(uld straddle that allocation').1 F 3.004(sb)-.55 G .503
(oundaries then an error message will be generated in the log \214le)
-3.004 F(and no bytes will be compared.)144 516 Q F1(bcmp)108 532.8 Q F0
(Compares)12.11 E F2(size)2.614 E F0 .114(bytes from)2.614 F F2(ptr1)
2.614 E F0(and)2.614 E F2(ptr2)2.614 E F0 .114(and returns)2.614 F F1(0)
2.614 E F0 .114(if all of the bytes are identical, or returns the)2.614
F .114(byte dif)144 544.8 R .114(ference of the \214rst dif)-.25 F .114
(fering bytes.)-.25 F(If)5.114 E F2(size)2.613 E F0(is)2.613 E F1(0)
2.613 E F0(or)2.613 E F2(ptr1)2.613 E F0 .113(is the same as)2.613 F F2
(ptr2)2.613 E F0 .113(then no bytes will)2.613 F 1.416(be compared.)144
556.8 R 1.416(If the operation w)6.416 F 1.416(ould read from an e)-.1 F
1.416(xisting memory allocation in the heap b)-.15 F(ut)-.2 E -.1(wo)144
568.8 S .504(uld straddle that allocation').1 F 3.004(sb)-.55 G .503
(oundaries then an error message will be generated in the log \214le)
-3.004 F .471(and no bytes will be compared.)144 580.8 R .471
(This function is a)5.471 F -.25(va)-.2 G .472(ilable for backw).25 F
.472(ards compatibility with older)-.1 F 2.5(Cl)144 592.8 S
(ibraries and should not be used in ne)-2.5 E 2.5(wc)-.25 G(ode.)-2.5 E
F1(memchr)108 609.6 Q F0 .22(Searches up to)144 621.6 R F2(size)2.72 E
F0 .22(bytes in)2.72 F F2(ptr)2.72 E F0 .22
(for the \214rst occurrence of)2.72 F F2(byte)2.72 E F0 .22
(and returns a pointer to it or)2.72 F F1(NULL)2.72 E F0 .155
(if no such byte occurs.)144 633.6 R(If)5.155 E F2(size)2.655 E F0(is)
2.655 E F1(0)2.655 E F0 .155(then no bytes will be searched.)2.655 F
.155(If the operation w)5.155 F .155(ould af)-.1 F .155(fect an)-.25 F
-.15(ex)144 645.6 S 1.503(isting memory allocation in the heap b).15 F
1.503(ut w)-.2 F 1.503(ould straddle that allocation')-.1 F 4.003(sb)
-.55 G 1.503(oundaries then an)-4.003 F(error message will be generated\
 in the log \214le and no bytes will be searched.)144 657.6 Q F1(memmem)
108 674.4 Q F0 .653(Searches up to)144 686.4 R F2(size1)3.153 E F0 .653
(bytes in)3.153 F F2(ptr1)3.153 E F0 .653(for the \214rst occurrence of)
3.153 F F2(ptr2)3.153 E F0 .654(\(which is e)3.154 F(xactly)-.15 E F2
(size2)3.154 E F0 .654(bytes in)3.154 F .22
(length\) and returns a pointer to it or)144 698.4 R F1(NULL)2.72 E F0
.219(if no such sequence of bytes occur)2.72 F 5.219(.I)-.55 G(f)-5.219
E F2(size1)2.719 E F0(or)2.719 E F2(size2)2.719 E F0(is)2.719 E F1(0)144
710.4 Q F0 .757(then no bytes will be searched.)3.257 F .758
(If the operation w)5.757 F .758(ould af)-.1 F .758(fect an e)-.25 F
.758(xisting memory allocation in)-.15 F .11(the heap b)144 722.4 R .11
(ut w)-.2 F .11(ould straddle that allocation')-.1 F 2.61(sb)-.55 G .11
(oundaries then an error message will be generated in)-2.61 F
(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(9)198.45 E EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E(the log \214le and no bytes will be searched.)
144 84 Q .589(The follo)108 100.8 R .589(wing 42 functions are a)-.25 F
-.25(va)-.2 G .59(ilable as support routines for additional control and\
 tracing in the mpa-).25 F .012(trol library)108 112.8 R 5.012(.A)-.65 G
.012(lthough the)-5.012 F 2.512(ya)-.15 G .012
(re documented here as being pre\214x)-2.512 F .012(ed by)-.15 F/F1 10
/Times-Bold@0 SF(__mp_)2.512 E F0 2.512(,t)C .012(heir equi)-2.512 F
-.25(va)-.25 G .012(lent functions that).25 F .619(are pre\214x)108
124.8 R .619(ed by)-.15 F F1(mpatr)3.119 E(ol_)-.18 E F0 .619
(are also de\214ned as aliases in the)3.119 F/F2 10/Times-Italic@0 SF
(mpatr)3.12 E(ol.h)-.45 E F0 .62(header \214le.)3.12 F 2.22 -.8(To u)
5.62 H .62(se these you should).8 F(include the)108 136.8 Q F2(mpatr)2.5
E(ol.h)-.45 E F0(header \214le:)2.5 E F1(__mp_atexit)108 153.6 Q F0 .656
(Installs a function to be called when the mpatrol library terminates.)
144 165.6 R .656(Up to 32 such functions can)5.656 F .562(be re)144
177.6 R .562(gistered and will be called in re)-.15 F -.15(ve)-.25 G
.562(rse order of re).15 F 3.062(gistration. Returns)-.15 F F2(1)3.062 E
F0 .562(on success or)3.062 F F2(0)3.063 E F0(if)3.063 E F2(func)3.063 E
F0(could not be re)144 189.6 Q(gistered.)-.15 E F1(__mp_setoption)108
206.4 Q F0 .445(Sets the v)144 218.4 R .444
(alue of an mpatrol option after the library has been initialised.)-.25
F .444(Options that require v)5.444 F(al-)-.25 E .929(ues are listed in)
144 230.4 R F2(mpatr)3.429 E(ol.h)-.45 E F0(pre\214x)3.429 E .929
(ed with)-.15 F F2(MP_OPT_*)3.429 E F0 5.929(.T)C(he)-5.929 E F2(opt)
3.429 E F0(ar)3.429 E .93(gument should be set to one of)-.18 F .586
(these macros, and the)144 242.4 R F2(val)3.086 E F0(ar)3.086 E .586
(gument should be set to the option v)-.18 F .586
(alue, cast to an unsigned inte)-.25 F(ger)-.15 E(.)-.55 E .907
(The return v)144 254.4 R .908(alue will be)-.25 F F2(0)3.408 E F0 .908
(on success and)3.408 F F2(1)3.408 E F0 .908(on f)3.408 F 3.408
(ailure. Options)-.1 F .908(that are \215ags are listed in)3.408 F F2
(mpa-)3.408 E(tr)144 266.4 Q(ol.h)-.45 E F0(pre\214x)6.684 E 4.184
(ed with)-.15 F F2(MP_FLG_*)6.684 E F0 9.184(.M)C 4.183
(ultiple \215ags can be set or unset at once using the)-9.184 F F2
(MP_OPT_SETFLA)144 278.4 Q(GS)-.35 E F0(and)2.673 E F2(MP_OPT_UNSETFLA)
2.673 E(GS)-.35 E F0 .174(options respecti)2.674 F -.15(ve)-.25 G(ly).15
E 2.674(,w)-.65 G .174(ith the necessary \215ags)-2.674 F .815
(speci\214ed in)144 290.4 R F2(val)3.315 E F0 5.815(.T)C .815
(he return v)-5.815 F .814(alue will be)-.25 F F2(0)3.314 E F0 .814
(on success and a combination of all of the \215ags that)3.314 F
(could not be set or unset on f)144 302.4 Q(ailure.)-.1 E F1
(__mp_getoption)108 319.2 Q F0 .826(Gets the v)144 331.2 R .827
(alue of an mpatrol option after the library has been initialised.)-.25
F(If)5.827 E F2(opt)3.327 E F0 .827(is a v)3.327 F .827(alid option)-.25
F .268(listed in)144 343.2 R F2(mpatr)2.768 E(ol.h)-.45 E F0(then)2.768
E F2(1)2.768 E F0 .267(will be returned and the associated v)2.767 F
.267(alue will be returned in)-.25 F F2(val)2.767 E F0 .267(and cast)
2.767 F .138(to an unsigned inte)144 355.2 R(ger)-.15 E 2.638(,o)-.4 G
(therwise)-2.638 E F2(0)2.639 E F0 .139(will be returned.)2.639 F(If)
5.139 E F2(opt)2.639 E F0(is)2.639 E F2(MP_OPT_SETFLA)2.639 E(GS)-.35 E
F0 .139(then all of the)2.639 F .052
(mpatrol library \215ags that are set will be returned in)144 367.2 R F2
(val)2.552 E F0 5.052(.I)C(f)-5.052 E F2(opt)2.552 E F0(is)2.552 E F2
(MP_OPT_UNSETFLA)2.552 E(GS)-.35 E F0 .051(then all)2.551 F
(of the mpatrol library \215ags that are not set will be returned in)144
379.2 Q F2(val)2.5 E F0(.)A F1(__mp_lib)108 396 Q -.1(ve)-.15 G(rsion).1
E F0 .842(Returns the v)144 408 R .842
(ersion number of the mpatrol library)-.15 F 5.842(.T)-.65 G .843
(his can be useful for v)-5.842 F .843(erifying that the v)-.15 F(er)
-.15 E(-)-.2 E(sion of the mpatrol library that a program is link)144
420 Q(ed with is the one e)-.1 E(xpected at compile-time.)-.15 E F1
(__mp_str)108 436.8 Q(err)-.18 E(or)-.18 E F0 1.423
(Returns the error message corresponding to the error code)144 448.8 R
F2(err)3.922 E F0(or)3.922 E F1(NULL)3.922 E F0 1.422
(if no such error code)3.922 F -.15(ex)144 460.8 S 3.055(ists. The).15 F
.555(most recent error code recorded by the mpatrol library can be obta\
ined by e)3.055 F(xamining)-.15 E F1(__mp_err)144 472.8 Q(no)-.15 E F0
(.)A F1(__mp_function)108 489.6 Q F0 .968
(Returns the name of the function corresponding to the allocation type)
144 501.6 R F2(func)3.468 E F0(or)3.468 E F1(NULL)3.468 E F0 .968
(if no such)3.468 F(allocation type e)144 513.6 Q(xists.)-.15 E F1
(__mp_setuser)108 530.4 Q F0 1.533
(Sets the user data for the memory allocation containing)144 542.4 R F2
(ptr)4.033 E F0 6.533(.T)C 1.534(he contents of)-6.533 F F2(data)4.034 E
F0 1.534(are entirely)4.034 F .318
(application-speci\214c as user data will ne)144 554.4 R -.15(ve)-.25 G
2.818(rb).15 G 2.818(ee)-2.818 G .318(xamined by the mpatrol library)
-2.968 F 5.318(.S)-.65 G .318(uch data is asso-)-5.318 F 1.034
(ciated with a memory allocation for its entire lifetime unless o)144
566.4 R -.15(ve)-.15 G 1.035(rridden by a subsequent call to).15 F F1
(__mp_setuser)144 578.4 Q F0 5.447(.A)C 2.947(ss)-5.447 G .447
(uch, the user data must be v)-2.947 F .447
(alid for the entire lifetime of the memory alloca-)-.25 F .629
(tion, perhaps e)144 590.4 R -.15(ve)-.25 G 3.129(na).15 G .629
(fter the allocation has been freed if the)-3.129 F F1(NOFREE)3.13 E F0
.63(option is being used.)3.13 F(This)5.63 E(function returns)144 602.4
Q F2(1)2.5 E F0(if there is an allocated memory block containing)2.5 E
F2(ptr)2.5 E F0 2.5(,a)C(nd)-2.5 E F2(0)2.5 E F0(otherwise.)2.5 E F1
(__mp_setmark)108 619.2 Q F0 .459(Sets the mark)144 631.2 R .459
(ed \215ag for the memory allocation containing)-.1 F F2(ptr)2.958 E F0
2.958(,i)C .458(ndicating that the memory alloca-)-2.958 F .903
(tion cannot be freed \(b)144 643.2 R .904
(ut can be reallocated\) and thus will not be listed as a memory leak.)
-.2 F(This)5.904 E .119(function returns)144 655.2 R F2(1)2.619 E F0
.118(if there is an allocated memory block containing)2.618 F F2(ptr)
2.618 E F0 2.618(,a)C(nd)-2.618 E F2(0)2.618 E F0 2.618(otherwise. Note)
2.618 F(that)2.618 E 2.5(am)144 667.2 S(emory allocation made by)-2.5 E
F1(alloca)2.5 E F0(,)A F1(strdupa)2.5 E F0(or)2.5 E F1(str)2.5 E(ndupa)
-.15 E F0(may not be mark)2.5 E(ed.)-.1 E F1(__mp_inf)108 684 Q(o)-.25 E
F0 .708(Obtains information about a speci\214c memory allocation by pla\
cing statistics about)144 696 R F2(ptr)3.208 E F0(in)3.208 E F2(info)
3.208 E F0 5.708(.I)C(f)-5.708 E F2(ptr)144 708 Q F0 .359
(does not belong to a pre)2.859 F .359
(viously allocated memory allocation or free memory block then)-.25 F F2
(0)2.858 E F0(will)2.858 E .16(be returned, otherwise)144 720 R F2(1)
2.66 E F0 .161(will be returned and)2.66 F F2(info)2.661 E F0 .161
(will contain the follo)2.661 F .161(wing information \(note that)-.25 F
(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(10)193.45 E EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E 2.643(af)144 84 S .143
(ree memory block will only contain the)-2.643 F/F1 10/Times-Italic@0 SF
(bloc)2.642 E(k)-.2 E F0(and)2.642 E F1(size)2.642 E F0 .142
(\214elds and can be identi\214ed by not ha)2.642 F(ving)-.2 E(the)144
96 Q F1(allocated)2.5 E F0(\215ag set\):)2.5 E/F2 10/Times-Bold@0 SF
29.16(Field Description)144 120 R(block)144 144 Q F0
(Pointer to \214rst byte of alloc.)29.99 E F2(size)144 156 Q F0
(Size of alloc in bytes.)37.78 E F2(type)144 168 Q F0 -.8(Ty)35 G
(pe of function which allocated memory).8 E(.)-.65 E F2(alloc)144 180 Q
F0(Allocation inde)33.33 E(x.)-.15 E F2 -.18(re)144 192 S(alloc).18 E F0
(Number of times reallocated.)24.63 E F2(thr)144 204 Q(ead)-.18 E F0
(Thread identi\214er)25.18 E(.)-.55 E F2 -2.3 -.15(ev e)144 216 T(nt).15
E F0(Ev)30.81 E(ent of last modi\214cation.)-.15 E F2(func)144 228 Q F0
(Function in which alloc took place.)34.44 E F2(\214le)144 240 Q F0
(File in which alloc took place.)40.55 E F2(line)144 252 Q F0
(Line number at which alloc took place.)37.77 E F2(stack)144 264 Q F0
(Pointer to function call stack.)31.11 E F2(typestr)144 276 Q F0 -.8(Ty)
23.34 G(pe stored in allocation.).8 E F2(typesize)144 288 Q F0
(Size of type stored in allocation.)19.45 E F2(userdata)144 300 Q F0
(User data associated with allocation.)16.11 E F2(allocated)144 312 Q F0
(Indicates if alloc w)15 E(as allocated.)-.1 E F2(fr)144 324 Q(eed)-.18
E F0(Indicates if alloc has been freed.)31.3 E F2(mark)144 336 Q(ed)-.1
E F0(Indicates if alloc has been mark)20.1 E(ed.)-.1 E F2(pr)144 348 Q
(o\214led)-.18 E F0(Indicates if alloc has been pro\214led.)20.17 E F2
(traced)144 360 Q F0(Indicates if alloc has been traced.)26.12 E F2
(inter)144 372 Q(nal)-.15 E F0(Indicates if alloc is internal.)19.59 E
F2(__mp_syminf)108 388.8 Q(o)-.25 E F0 .45(Obtains symbolic information\
 about a speci\214c code address by placing statistics about)144 400.8 R
F1(ptr)2.95 E F0(in)2.95 E F1(info)2.95 E F0(.)A(If)144 412.8 Q F1(ptr)
3.284 E F0 .784(does not belong to a function symbol then)3.284 F F1(0)
3.283 E F0 .783(will be returned, otherwise)3.283 F F1(1)3.283 E F0 .783
(will be returned)3.283 F(and)144 424.8 Q F1(info)2.5 E F0
(will contain the follo)2.5 E(wing information:)-.25 E F2 16.93
(Field Description)144 448.8 R(name)144 472.8 Q F0(Name of symbol.)17.77
E F2(object)144 484.8 Q F0(File containing symbol.)15 E F2(addr)144
496.8 Q F0(Start address of symbol.)20.54 E F2(size)144 508.8 Q F0
(Size of symbol.)25.55 E F2(\214le)144 520.8 Q F0
(Filename corresponding to address.)28.32 E F2(line)144 532.8 Q F0
(Line number corresponding to address.)25.54 E F2(__mp_symbol)108 549.6
Q F0 .012(Obtains the name of a function symbol containing the code add\
ress speci\214ed in)144 561.6 R F1(ptr)2.513 E F0 5.013(.I)C(f)-5.013 E
F1(ptr)2.513 E F0 .013(does not)2.513 F
(belong to a function symbol then)144 573.6 Q F2(NULL)2.5 E F0
(will be returned.)2.5 E F2(__mp_printinf)108 590.4 Q(o)-.25 E F0 .871
(Displays information about a speci\214c memory allocation containing)
144 602.4 R F1(ptr)3.371 E F0 .87(to the standard error \214le)3.371 F
3.013(stream. If)144 614.4 R F1(ptr)3.013 E F0 .513
(does not belong to a pre)3.013 F .514
(viously allocated memory allocation or free memory block)-.25 F(then)
144 626.4 Q F1(0)3.118 E F0 .618(will be returned, otherwise)3.118 F F1
(1)3.118 E F0 .618(will be returned.)3.118 F .617
(This function is intended to be called from)5.618 F(within a deb)144
638.4 Q(ugger)-.2 E(.)-.55 E F2(__mp_snapshot)108 655.2 Q F0 .168
(Returns the current e)144 667.2 R -.15(ve)-.25 G .168(nt number).15 F
2.668(,e)-.4 G -.25(ff)-2.668 G(ecti).25 E -.15(ve)-.25 G .169
(ly taking a snapshot of the heap.).15 F .169(This number can then)5.169
F(be used in later calls to)144 679.2 Q F2(__mp_iterate)2.5 E F0(.)A F2
(__mp_iterate)108 696 Q F0 .722(Iterates o)144 708 R -.15(ve)-.15 G
3.222(ra).15 G .722
(ll of the current allocated and freed memory allocations, calling)
-3.222 F F1(func)3.222 E F0 .722(with the start)3.222 F .931
(address of e)144 720 R -.15(ve)-.25 G .931
(ry memory allocation that has been modi\214ed since e).15 F -.15(ve)
-.25 G .932(nt number).15 F F1 -.15(ev)3.432 G(ent).15 E F0 5.932(.I)C
(f)-5.932 E F1(func)3.432 E F0(is)3.432 E(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(11)193.45 E EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(NULL)144 84 Q F0(then)
2.836 E F1(__mp_printinf)2.836 E(o)-.25 E F0 .335
(will be used as the callback function.)2.836 F(If)5.335 E F1 -2.3 -.15
(ev e)2.835 H(nt).15 E F0(is)2.835 E/F2 10/Times-Italic@0 SF(0)2.835 E
F0(then)2.835 E F2(func)2.835 E F0 .335(will be)2.835 F .824
(called with the start address of e)144 96 R -.15(ve)-.25 G .824
(ry memory allocation.).15 F(If)5.824 E F2(func)3.324 E F0 .824
(returns a ne)3.324 F -.05(ga)-.15 G(ti).05 E 1.124 -.15(ve n)-.25 H
.824(umber then).15 F 1.165
(the iteration process will be stopped immediately)144 108 R 6.164(.I)
-.65 G(f)-6.164 E F2(func)3.664 E F0 1.164(returns a positi)3.664 F
1.464 -.15(ve n)-.25 H 1.164(umber abo).15 F 1.464 -.15(ve z)-.15 H(ero)
.15 E(then)144 120 Q F1(__mp_iterate)2.79 E F0 .29
(will return the number of times)2.79 F F2(func)2.79 E F0 .29
(returned a non-zero number after the iter)2.79 F(-)-.2 E 1.076
(ation process has stopped.)144 132 R(The)6.076 E F2(data)3.576 E F0(ar)
3.575 E 1.075(gument is passed directly to)-.18 F F2(func)3.575 E F0
1.075(as its second ar)3.575 F(gument)-.18 E
(and is not read by the mpatrol library)144 144 Q(.)-.65 E F1
(__mp_iterateall)108 160.8 Q F0 2.135(Iterates o)144 172.8 R -.15(ve)
-.15 G 4.635(ra).15 G 2.135
(ll of the current allocated and freed memory allocations and an)-4.635
F 4.635(yf)-.15 G 2.135(ree memory)-4.635 F 1.325(blocks, calling)144
184.8 R F2(func)3.825 E F0 1.325(with the start address of e)3.825 F
-.15(ve)-.25 G 1.324(ry memory allocation or free block.).15 F(If)6.324
E F2(func)3.824 E F0(is)3.824 E F1(NULL)144 196.8 Q F0(then)2.534 E F1
(__mp_printinf)2.534 E(o)-.25 E F0 .034
(will be used as the callback function.)2.534 F(If)5.034 E F2(func)2.534
E F0 .034(returns a ne)2.534 F -.05(ga)-.15 G(ti).05 E .334 -.15(ve n)
-.25 H(um-).15 E .068
(ber then the iteration process will be stopped immediately)144 208.8 R
5.068(.I)-.65 G(f)-5.068 E F2(func)2.568 E F0 .068(returns a positi)
2.568 F .368 -.15(ve n)-.25 H .068(umber abo).15 F -.15(ve)-.15 G .24
(zero then)144 220.8 R F1(__mp_iterate)2.74 E F0 .24
(will return the number of times)2.74 F F2(func)2.74 E F0 .24
(returned a non-zero number after the)2.74 F .187
(iteration process has stopped.)144 232.8 R(The)5.187 E F2(data)2.687 E
F0(ar)2.687 E .187(gument is passed directly to)-.18 F F2(func)2.686 E
F0 .186(as its second ar)2.686 F(gument)-.18 E 1.674
(and is not read by the mpatrol library)144 244.8 R 6.675(.N)-.65 G
1.675(ote that unlik)-6.675 F(e)-.1 E F1(__mp_iterate)4.175 E F0 4.175
(,t)C 1.675(his function will also)-4.175 F .796(include internal memor\
y allocations made by the mpatrol library and is intended for w)144
256.8 R .796(alking the)-.1 F(entire heap.)144 268.8 Q F1
(__mp_addallocentry)108 285.6 Q F0 .21
(Adds an entry representing an allocation of size)144 297.6 R F2(size)
2.71 E F0 .21(to the leak table.)2.71 F .21
(The allocation will be asso-)5.21 F .451
(ciated with a source \214lename of)144 309.6 R F2(\214le)2.951 E F0
.451(and a line number of)2.951 F F2(line)2.951 E F0 .451
(if the former is non-)2.951 F F1(NULL)A F0 .451(and the)2.951 F .707
(latter is non-zero.)144 321.6 R(If)5.707 E F2(\214le)3.207 E F0 .707
(is non-)3.207 F F1(NULL)A F0(and)3.207 E F2(line)3.207 E F0(is)3.207 E
F2(0)3.207 E F0(then)3.207 E F2(\214le)3.207 E F0 .708
(represents the name of the function)3.207 F .08
(that made the allocation.)144 333.6 R(If)5.08 E F2(\214le)2.58 E F0(is)
2.58 E F1(NULL)2.58 E F0(and)2.579 E F2(line)2.579 E F0 .079
(is non-zero then)2.579 F F2(line)2.579 E F0 .079
(represents the code address)2.579 F .367(at which the allocation w)144
345.6 R .367(as made.)-.1 F(If)5.367 E F2(\214le)2.867 E F0(is)2.867 E
F1(NULL)2.867 E F0(and)2.867 E F2(line)2.867 E F0(is)2.867 E F2(0)2.868
E F0 .368(then the location of the allocation)2.868 F .943(is unkno)144
357.6 R 3.443(wn. Returns)-.25 F F2(1)3.443 E F0 .943(on success and)
3.443 F F2(0)3.443 E F0 .943(if there w)3.443 F .943
(as no more memory a)-.1 F -.25(va)-.2 G .943(ilable to add another).25
F(entry to the leak table.)144 369.6 Q F1(__mp_addfr)108 386.4 Q
(eeentry)-.18 E F0 .796
(Adds an entry representing a deallocation of size)144 398.4 R F2(size)
3.296 E F0 .796(to the leak table.)3.296 F .797
(The deallocation will be)5.797 F .338
(associated with a source \214lename of)144 410.4 R F2(\214le)2.837 E F0
.337(and a line number of)2.837 F F2(line)2.837 E F0 .337
(if the former is non-)2.837 F F1(NULL)A F0(and)2.837 E .539
(the latter is non-zero.)144 422.4 R(If)5.539 E F2(\214le)3.039 E F0
.539(is non-)3.039 F F1(NULL)A F0(and)3.039 E F2(line)3.039 E F0(is)
3.039 E F2(0)3.039 E F0(then)3.039 E F2(\214le)3.039 E F0 .539
(represents the name of the func-)3.039 F .373
(tion that made the deallocation.)144 434.4 R(If)5.373 E F2(\214le)2.873
E F0(is)2.873 E F1(NULL)2.873 E F0(and)2.873 E F2(line)2.873 E F0 .373
(is non-zero then)2.873 F F2(line)2.873 E F0 .373(represents the code)
2.873 F .368(address at which the deallocation w)144 446.4 R .368
(as made.)-.1 F(If)5.368 E F2(\214le)2.868 E F0(is)2.868 E F1(NULL)2.868
E F0(and)2.868 E F2(line)2.868 E F0(is)2.868 E F2(0)2.868 E F0 .368
(then the location of the)2.868 F .549(deallocation is unkno)144 458.4 R
3.048(wn. Returns)-.25 F F2(1)3.048 E F0 .548(on success and)3.048 F F2
(0)3.048 E F0 .548(if there w)3.048 F .548(as no e)-.1 F .548
(xisting allocation from the)-.15 F(same location in the leak table.)144
470.4 Q F1(__mp_clearleaktable)108 487.2 Q F0 1.593
(Deletes all of the e)144 499.2 R 1.593
(xisting entries in the leak table, making it empty)-.15 F 6.594(.T)-.65
G 1.594(his will also af)-6.594 F 1.594(fect the)-.25 F(beha)144 511.2 Q
.044(viour of the)-.2 F F1(LEAKT)2.543 E(ABLE)-.9 E F0 .043
(option since that option will then only be able to sho)2.543 F 2.543
(was)-.25 G(ummary)-2.543 E .013(of the entries in the leak table that \
were collected after the last call to this function rather than from)144
523.2 R(the start of program e)144 535.2 Q -.15(xe)-.15 G(cution.).15 E
F1(__mp_startleaktable)108 552 Q F0 .465(Starts the automatic logging o\
f all memory allocations, reallocations and deallocations to the leak)
144 564 R 2.5(table. Returns)144 576 R F2(1)2.5 E F0(if such logging w)
2.5 E(as already being performed and)-.1 E F2(0)2.5 E F0(otherwise.)2.5
E F1(__mp_stopleaktable)108 592.8 Q F0 .507(Stops the automatic logging\
 of all memory allocations, reallocations and deallocations to the leak)
144 604.8 R 2.5(table. Returns)144 616.8 R F2(1)2.5 E F0
(if such logging w)2.5 E(as already being performed and)-.1 E F2(0)2.5 E
F0(otherwise.)2.5 E F1(__mp_leaktable)108 633.6 Q F0 .949
(Displays a summary of up to)144 645.6 R F2(size)3.449 E F0 .949
(entries from the leak table, or all entries if)3.449 F F2(size)3.449 E
F0(is)3.449 E F2(0)3.449 E F0 5.949(.I)C(f)-5.949 E F2(opt)3.449 E F0
(is)3.449 E F2(MP_L)144 657.6 Q(T_ALLOCA)-.2 E(TED)-.37 E F0 .773
(then all allocated entries will be displayed, if)3.273 F F2(opt)3.274 E
F0(is)3.274 E F2(MP_L)3.274 E(T_FREED)-.2 E F0(then)3.274 E .322
(all freed entries will be displayed and if)144 669.6 R F2(opt)2.821 E
F0(is)2.821 E F2(MP_L)2.821 E(T_UNFREED)-.2 E F0 .321
(then all unfreed entries will be)2.821 F 2.59(displayed. The)144 681.6
R .09(summary is normally sorted in descending order of total bytes fro\
m each entry)2.59 F 2.59(,b)-.65 G(ut)-2.79 E .37
(this can be changed by setting)144 693.6 R F2<8d61>2.87 E(gs)-.1 E F0
.369(to an)2.869 F 2.869(yc)-.15 G .369(ombination of)-2.869 F F2(MP_L)
2.869 E(T_COUNTS)-.2 E F0 .369(\(to sort by the num-)2.869 F
(ber of occurrences in each entry\) and)144 705.6 Q F2(MP_L)2.5 E(T_BO)
-.2 E(TT)-.4 E(OM)-.18 E F0(\(to sort in ascending order\).)2.5 E
(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(12)193.45 E EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(__mp_memorymap)108 84 Q
F0(If)144 96 Q/F2 10/Times-Italic@0 SF(stats)3.068 E F0 .569(is non-zer\
o then the current statistics of the mpatrol library will be displayed.)
3.068 F .569(If the heap)5.569 F .379(contains at least one allocated, \
freed or free block then a map of the current heap will also be dis-)144
108 R(played.)144 120 Q F1(__mp_summary)108 136.8 Q F0 .786
(Displays information about the current state of the mpatrol library)144
148.8 R 3.286(,i)-.65 G .786(ncluding its settings and an)-3.286 F(y)
-.15 E(rele)144 160.8 Q -.25(va)-.25 G(nt statistics.).25 E F1
(__mp_stats)108 177.6 Q F0 .864(Obtains statistics about the current st\
ate of the heap and places them in)144 189.6 R F2(info)3.363 E F0 5.863
(.I)C 3.363(ft)-5.863 G .863(his information)-3.363 F .225
(could not be determined then)144 201.6 R F2(0)2.725 E F0 .225
(will be returned, otherwise)2.725 F F2(1)2.725 E F0 .226
(will be returned and)2.725 F F2(info)2.726 E F0 .226(will contain)2.726
F(the follo)144 213.6 Q(wing information:)-.25 E F1 23.05
(Field Description)144 237.6 R(acount)144 261.6 Q F0 -.8(To)18.33 G
(tal number of allocated blocks.).8 E F1(atotal)144 273.6 Q F0 -.8(To)
22.78 G(tal size of allocated blocks.).8 E F1(fcount)144 285.6 Q F0 -.8
(To)20 G(tal number of free blocks.).8 E F1(ftotal)144 297.6 Q F0 -.8
(To)24.45 G(tal size of free blocks.).8 E F1(gcount)144 309.6 Q F0 -.8
(To)18.33 G(tal number of freed blocks.).8 E F1(gtotal)144 321.6 Q F0
-.8(To)22.78 G(tal size of freed blocks.).8 E F1(icount)144 333.6 Q F0
-.8(To)20.55 G(tal number of internal blocks.).8 E F1(itotal)144 345.6 Q
F0 -.8(To)25 G(tal size of internal blocks.).8 E F1(mcount)144 357.6 Q
F0 -.8(To)15 G(tal number of mark).8 E(ed blocks.)-.1 E F1(mtotal)144
369.6 Q F0 -.8(To)19.45 G(tal size of mark).8 E(ed blocks.)-.1 E F1
(__mp_check)108 386.4 Q F0 -.15(Fo)144 398.4 S .27
(rces the library to perform an immediate check of the o).15 F -.15(ve)
-.15 G(r\215o).15 E 2.769(wb)-.25 G(uf)-2.969 E .269(fers of e)-.25 F
-.15(ve)-.25 G .269(ry memory alloca-).15 F .648
(tion and to ensure that nothing has o)144 410.4 R -.15(ve)-.15 G .648
(rwritten an).15 F 3.148(yf)-.15 G .648(ree blocks.)-3.148 F .648(If an)
5.648 F 3.148(ym)-.15 G .648(emory allocations made)-3.148 F 1.113
(by the)144 422.4 R F1(alloca)3.613 E F0 -.1(fa)3.613 G 1.113(mily of f\
unctions are out of scope then this function will also cause them to be)
.1 F(freed.)144 434.4 Q F1(__mp_pr)108 451.2 Q(ologue)-.18 E F0 .051
(Installs a prologue function to be called before an)144 463.2 R 2.552
(ym)-.15 G .052(emory allocation, reallocation or deallocation)-2.552 F
3.326(function. This)144 475.2 R .826
(function will return a pointer to the pre)3.326 F .825
(viously installed prologue function, or the)-.25 F .708
(null pointer if no prologue function had been pre)144 487.2 R .709
(viously installed.)-.25 F .709(The follo)5.709 F .709(wing ar)-.25 F
.709(guments will)-.18 F .078
(be used to call the prologue function \(the last four ar)144 499.2 R
.077(guments contain the function name, \214le name,)-.18 F .366(line n\
umber and the return address of the calling function, or null pointers \
and zero if the)144 511.2 R 2.866(yc)-.15 G(annot)-2.866 E
(be determined\):)144 523.2 Q F1(Ar)144 547.2 Q(gument 1)-.1 E(Ar)15 E
(gument 2)-.1 E(Ar)15 E(gument 3)-.1 E(Called by)15 E F2 52.115(-1 size)
165.475 571.2 R(align)48.5 E F1(malloc)30.36 E F0 2.5(,e)C(tc.)-2.5 E F2
50.445(ptr size)163.805 583.2 R(align)48.5 E F1 -.18(re)30.36 G(alloc)
.18 E F0 2.5(,e)C(tc.)-2.5 E F2 53.78(ptr -1)163.805 595.2 R(0)59.615 E
F1(fr)38.14 E(ee)-.18 E F0 2.5(,e)C(tc.)-2.5 E F2 53.78(ptr -2)163.805
607.2 R(1)59.615 E F1(strdup)38.14 E F0 2.5(,e)C(tc.)-2.5 E F1
(__mp_epilogue)108 624 Q F0 .308
(Installs an epilogue function to be called after an)144 636 R 2.808(ym)
-.15 G .307(emory allocation, reallocation or deallocation)-2.808 F
3.405(function. This)144 648 R .905
(function will return a pointer to the pre)3.405 F .905
(viously installed epilogue function, or the)-.25 F .794
(null pointer if no epilogue function had been pre)144 660 R .794
(viously installed.)-.25 F .794(The follo)5.794 F .793(wing ar)-.25 F
.793(guments will)-.18 F .147
(be used to call the epilogue function \(the last four ar)144 672 R .147
(guments contain the function name, \214le name,)-.18 F .366(line numbe\
r and the return address of the calling function, or null pointers and \
zero if the)144 684 R 2.865(yc)-.15 G(annot)-2.865 E(be determined\):)
144 696 Q(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(13)
193.45 E EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(Ar)144 84 Q 12.5
(gument Called)-.1 F(by)2.5 E/F2 10/Times-Italic@0 SF(ptr)160.055 108 Q
F1(malloc)31.055 E F0(,)A F1 -.18(re)2.5 G(alloc).18 E F0(,)A F1(strdup)
2.5 E F0 2.5(,e)C(tc.)-2.5 E F2(-1)161.725 120 Q F1(fr)32.725 E(ee)-.18
E F0 2.5(,e)C(tc.)-2.5 E F1(__mp_nomemory)108 136.8 Q F0 .315
(Installs a lo)144 148.8 R .315
(w-memory handler and returns a pointer to the pre)-.25 F .316
(viously installed handler)-.25 F 2.816(,o)-.4 G 2.816(rt)-2.816 G .316
(he null)-2.816 F .29(pointer if no handler had been pre)144 160.8 R .29
(viously installed.)-.25 F .29
(This will be called once by C memory alloca-)5.29 F 1.204(tion functio\
ns, and repeatedly by C++ memory allocation functions, when the)144
172.8 R 3.705(yw)-.15 G 1.205(ould normally)-3.805 F(return)144 184.8 Q
F1(NULL)4.097 E F0 6.597(.T)C 1.597(he four ar)-6.597 F 1.596
(guments contain the function name, \214le name, line number and the)
-.18 F .129(return address of the calling function, or null pointers an\
d zero if the)144 196.8 R 2.629(yc)-.15 G .129(annot be determined.)
-2.629 F(Note)5.129 E .745(that this function is equi)144 208.8 R -.25
(va)-.25 G .744(lent to).25 F F1(set_new_handler)3.244 E F0 .744
(and will replace the handler installed by that)3.244 F(function.)144
220.8 Q F1(__mp_printf)108 237.6 Q F0 .254(Writes format string)144
249.6 R F2(fmt)2.754 E F0 .254(with v)2.754 F .254(ariable ar)-.25 F
.254(guments to the log \214le, with each line pre\214x)-.18 F .254
(ed by)-.15 F F2(>)2.755 E F0 5.255(.T)C(he)-5.255 E .035(\214nal lengt\
h of the string that is written to the log \214le must not e)144 261.6 R
.035(xceed 1024 characters.)-.15 F .035(Returns the)5.035 F
(number of characters written, or a ne)144 273.6 Q -.05(ga)-.15 G(ti).05
E .3 -.15(ve n)-.25 H(umber upon error).15 E(.)-.55 E F1(__mp_vprintf)
108 290.4 Q F0 .345(Writes format string)144 302.4 R F2(fmt)2.845 E F0
.345(with v)2.845 F .345(ariable ar)-.25 F .345(gument list)-.18 F F2
(ar)2.845 E(gs)-.37 E F0 .346
(to the log \214le, with each line pre\214x)2.845 F .346(ed by)-.15 F F2
(>)144 314.4 Q F0 6.065(.T)C 1.064(he \214nal length of the string that\
 is written to the log \214le must not e)-6.065 F 1.064
(xceed 1024 characters.)-.15 F
(Returns the number of characters written, or a ne)144 326.4 Q -.05(ga)
-.15 G(ti).05 E .3 -.15(ve n)-.25 H(umber upon error).15 E(.)-.55 E F1
(__mp_locprintf)108 343.2 Q F0 .254(Writes format string)144 355.2 R F2
(fmt)2.754 E F0 .254(with v)2.754 F .254(ariable ar)-.25 F .254
(guments to the log \214le, with each line pre\214x)-.18 F .254(ed by)
-.15 F F2(>)2.755 E F0 5.255(.T)C(he)-5.255 E 1.208(\214nal length of t\
he string that is written to the log \214le must not e)144 367.2 R 1.207
(xceed 1024 characters.)-.15 F 1.207(It also)6.207 F .783(writes inform\
ation to the log \214le about where the call to this function w)144
379.2 R .784(as made, which includes)-.1 F
(the source \214le location and the call stack if the)144 391.2 Q 2.5
(ya)-.15 G(re a)-2.5 E -.25(va)-.2 G(ilable.).25 E F1(__mp_vlocprintf)
108 408 Q F0 .346(Writes format string)144 420 R F2(fmt)2.846 E F0 .346
(with v)2.846 F .345(ariable ar)-.25 F .345(gument list)-.18 F F2(ar)
2.845 E(gs)-.37 E F0 .345(to the log \214le, with each line pre\214x)
2.845 F .345(ed by)-.15 F F2(>)144 432 Q F0 5.423(.T)C .424(he \214nal \
length of the string that is written to the log \214le must not e)-5.423
F .424(xceed 1024 characters.)-.15 F(It)5.424 E 1.859(also writes infor\
mation to the log \214le about where the call to this function w)144 444
R 1.859(as made, which)-.1 F
(includes the source \214le location and the call stack if the)144 456 Q
2.5(ya)-.15 G(re a)-2.5 E -.25(va)-.2 G(ilable.).25 E F1(__mp_logmemory)
108 472.8 Q F0 .92(Displays the contents of a block of memory be)144
484.8 R .92(ginning at)-.15 F F2(ptr)3.42 E F0 3.42(,d)C(umping)-3.42 E
F2(size)3.42 E F0(consecuti)3.42 E 1.22 -.15(ve b)-.25 H .92(ytes to).15
F(the log \214le in he)144 496.8 Q(xadecimal format.)-.15 E F1
(__mp_logstack)108 513.6 Q F0 .665
(Displays the current call stack, skipping)144 525.6 R F2(fr)3.164 E
(ames)-.15 E F0 .664(stack frames from the current stack frame before)
3.164 F .289(writing the symbolic stack trace to the log \214le.)144
537.6 R(Returns)5.289 E F2(1)2.789 E F0 .289(if successful, or)2.789 F
F2(0)2.789 E F0 .289(if the call stack could)2.789 F
(not be determined or if)144 549.6 Q F2(fr)2.5 E(ames)-.15 E F0 -.1(wa)
2.5 G 2.5(st).1 G(oo lar)-2.5 E(ge for the current call stack.)-.18 E F1
(__mp_logaddr)108 566.4 Q F0 .346
(Displays information about a speci\214c memory allocation containing)
144 578.4 R F2(ptr)2.846 E F0 .346(to the log \214le.)2.846 F(If)5.346 E
F2(ptr)2.846 E F0(does)2.846 E .063(not belong to a pre)144 590.4 R .064
(viously allocated memory allocation then)-.25 F F2(0)2.564 E F0 .064
(will be returned, otherwise)2.564 F F2(1)2.564 E F0 .064(will be)2.564
F(returned.)144 602.4 Q F1(__mp_edit)108 619.2 Q F0(In)144 631.2 Q -.2
(vo)-.4 G -.1(ke).2 G 2.71(sat).1 G -.15(ex)-2.71 G 2.71(te).15 G .21
(ditor to edit)-2.71 F F2(\214le)2.71 E F0 .21(at line number)2.71 F F2
(line)2.709 E F0 .209(via the)2.709 F F1(mpedit)2.709 E F0 2.709
(command. Returns)2.709 F F2(1)2.709 E F0 .209(if the te)2.709 F(xt)-.15
E .184(editor w)144 643.2 R .184(as successfully in)-.1 F -.2(vo)-.4 G
-.1(ke).2 G(d,).1 E F2(-1)2.684 E F0 .184(if there w)2.684 F .184
(as an error)-.1 F 2.684(,o)-.4 G(r)-2.684 E F2(0)2.684 E F0 .185
(if there is no support for this feature.)2.684 F
(This function will only w)144 655.2 Q(ork on a system where the)-.1 E
F1(EDIT)2.5 E F0(option w)2.5 E(orks.)-.1 E F1(__mp_list)108 672 Q F0
.004(Displays a conte)144 684 R .004(xt listing of)-.15 F F2(\214le)
2.504 E F0 .003(at line number)2.504 F F2(line)2.503 E F0 .003(via the)
2.503 F F1(mpedit)2.503 E F0 2.503(command. Returns)2.503 F F2(1)2.503 E
F0 .003(if the list-)2.503 F .206(ing w)144 696 R .206
(as successfully performed,)-.1 F F2(-1)2.706 E F0 .206(if there w)2.706
F .206(as an error)-.1 F 2.706(,o)-.4 G(r)-2.706 E F2(0)2.706 E F0 .207
(if there is no support for this feature.)2.706 F
(This function will only w)144 708 Q(ork on a system where the)-.1 E F1
(LIST)2.5 E F0(option w)2.5 E(orks.)-.1 E(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(14)193.45 E EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(__mp_view)108 84 Q F0
.157(Either in)144 96 R -.2(vo)-.4 G -.1(ke).2 G 2.657(sat).1 G -.15(ex)
-2.657 G 2.657(te).15 G .157(ditor to edit)-2.657 F/F2 10/Times-Italic@0
SF(\214le)2.657 E F0 .157(at line number)2.657 F F2(line)2.657 E F0 .157
(or displays a conte)2.657 F .157(xt listing of)-.15 F F2(\214le)2.657 E
F0 .157(at line)2.657 F(number)144 108 Q F2(line)2.64 E F0 .14
(depending on the setting of the)2.64 F F1(EDIT)2.641 E F0(and)2.641 E
F1(LIST)2.641 E F0 2.641(options. This)2.641 F .141(is done via the)
2.641 F F1(mpedit)2.641 E F0 .306(command and will ha)144 120 R .606
-.15(ve n)-.2 H 2.806(oe).15 G -.25(ff)-2.806 G .306(ect if the).25 F F1
(EDIT)2.806 E F0(and)2.806 E F1(LIST)2.806 E F0 .306
(options are not set or if these options are)2.806 F .034
(not supported on the system.)144 132 R(Returns)5.034 E F2(1)2.535 E F0
.035(if the edit or listing w)2.535 F .035(as successfully performed,)
-.1 F F2(-1)2.535 E F0 .035(if there)2.535 F -.1(wa)144 144 S 2.5(sa).1
G 2.5(ne)-2.5 G(rror)-2.5 E 2.5(,o)-.4 G(r)-2.5 E F2(0)2.5 E F0(if neit\
her of the options were set or if there is no support for this feature.)
2.5 E F1(__mp_r)108 160.8 Q(eadcontents)-.18 E F0 .173(Reads the conten\
ts of a memory allocation contents \214le into the memory allocation co\
ntaining)144 172.8 R F2(ptr)2.672 E F0(.)A .265
(The name of the \214le is composed of the)144 184.8 R F2(\214le)2.766 E
F0 .266(string follo)2.766 F .266(wed by the allocation inde)-.25 F
2.766(xo)-.15 G 2.766(ft)-2.766 G .266(he memory)-2.766 F
(allocation separated by a dot.)144 196.8 Q(If)5 E F2(\214le)2.5 E F0
(is)2.5 E F1(NULL)2.5 E F0(then it is assumed to be)2.5 E F2(0)2.5 E F0
(otherwise.)2.5 E F1(__mp_writecontents)108 213.6 Q F0 1.305
(Writes the contents of the memory allocation containing)144 225.6 R F2
(ptr)3.804 E F0 1.304(to an allocation contents \214le.)3.804 F(The)
6.304 E .111(name of the \214le is composed of the)144 237.6 R F2
(\214le)2.611 E F0 .111(string follo)2.611 F .111
(wed by the allocation inde)-.25 F 2.611(xo)-.15 G 2.611(ft)-2.611 G
.112(he memory allo-)-2.611 F .311(cation separated by a dot.)144 249.6
R(If)5.311 E F2(\214le)2.811 E F0(is)2.811 E F1(NULL)2.811 E F0 .31
(then it is assumed to be)2.811 F F2(.mpatr)2.81 E(ol)-.45 E F0 5.31(.R)
C(eturns)-5.31 E F2(1)2.81 E F0 .31(if the con-)2.81 F
(tents were written successfully and)144 261.6 Q F2(0)2.5 E F0
(otherwise.)2.5 E F1(__mp_cmpcontents)108 278.4 Q F0 .687
(Compares the contents of the memory allocation containing)144 290.4 R
F2(ptr)3.187 E F0 .687(with the contents of a pre)3.187 F(viously)-.25 E
.223(written allocation contents \214le.)144 302.4 R .223
(The name of the \214le is composed of the)5.223 F F2(\214le)2.723 E F0
.223(string follo)2.723 F .223(wed by the)-.25 F .066(allocation inde)
144 314.4 R 2.566(xo)-.15 G 2.566(ft)-2.566 G .066
(he memory allocation separated by a dot.)-2.566 F(If)5.066 E F2(\214le)
2.566 E F0(is)2.566 E F1(NULL)2.566 E F0 .066(then it is assumed to)
2.566 F(be)144 326.4 Q F2(.mpatr)2.534 E(ol)-.45 E F0 5.034(.A)C .334
-.15(ny d)-5.034 H(if).15 E .034
(ferences are written to the mpatrol log \214le.)-.25 F .034
(Returns the number of dif)5.034 F(ferences)-.25 E(found, or)144 338.4 Q
F2(-1)2.5 E F0(if there w)2.5 E(as an error)-.1 E(.)-.55 E F1(__mp_r)108
355.2 Q(emcontents)-.18 E F0(Remo)144 367.2 Q -.15(ve)-.15 G 3.26(st).15
G .76(he memory allocation contents \214le that corresponds to the memo\
ry allocation contain-)-3.26 F(ing)144 379.2 Q F2(ptr)2.825 E F0 5.325
(.T)C .324(he name of the \214le is composed of the)-5.325 F F2(\214le)
2.824 E F0 .324(string follo)2.824 F .324(wed by the allocation inde)
-.25 F 2.824(xo)-.15 G 2.824(ft)-2.824 G(he)-2.824 E
(memory allocation separated by a dot.)144 391.2 Q(If)5 E F2(\214le)2.5
E F0(is)2.5 E F1(NULL)2.5 E F0(then it is assumed to be)2.5 E F2(0)2.5 E
F0(otherwise.)2.5 E .179(The follo)108 408 R .179(wing global v)-.25 F
.179(ariable is a)-.25 F -.25(va)-.2 G .179
(ilable for additional control in the mpatrol library).25 F 5.18(.T)-.65
G 2.68(ou)-5.98 G .18(se it you should)-2.68 F(include the)108 420 Q F2
(mpatr)2.5 E(ol.h)-.45 E F0(header \214le:)2.5 E F1(__mp_err)108 436.8 Q
(no)-.15 E F0 .715
(Contains the most recent error code encountered by the mpatrol library)
144 448.8 R 5.714(.I)-.65 G .714(ts v)-5.714 F .714
(alue can be reset to)-.25 F F2(MP_ET_NONE)144 460.8 Q F0 1.105
(before calling an mpatrol library function, and then e)3.605 F 1.106
(xamined afterw)-.15 F 1.106(ards, either)-.1 F .079
(by comparison with the kno)144 472.8 R .079(wn error codes in the)-.25
F F2(__mp_err)2.578 E(ortype)-.45 E F0 .078(enumeration, or with)2.578 F
F1(__mp_str)2.578 E(-)-.37 E(err)144 484.8 Q(or)-.18 E F0(.)A/F3 10.95
/Times-Bold@0 SF(LINKING)72 501.6 Q F0 .312
(In order to use the mpatrol library on UNIX platforms, the follo)108
513.6 R .312(wing libraries must be link)-.25 F .313(ed in before an)-.1
F(y)-.15 E(other library that de\214nes dynamic memory allocation funct\
ions with the same names:)108 525.6 Q F1 46.56(Library Reason)108 549.6
R F2(\255lmpatr)108 573.6 Q(ol)-.45 E F0 1.6 -.8(To u)42.2 H
(se this library).8 E(.)-.65 E F2(\255lmpatr)108 585.6 Q(olmt)-.45 E F0
1.6 -.8(To u)32.2 H(se the thread-safe mpatrol library).8 E(.)-.65 E F2
(\255lmpalloc)108 597.6 Q F0 1.6 -.8(To u)41.2 H(se the release library)
.8 E(.)-.65 E F2(\255lmptools)108 609.6 Q F0 1.6 -.8(To u)41.75 H
(se the mpatrol tools library).8 E(.)-.65 E F2(\255lld)108 621.6 Q F0
(If b)65.64 E(uilt with COFF or XCOFF support.)-.2 E F2(\255lelf)108
633.6 Q F0(If b)63.42 E(uilt with ELF support.)-.2 E F2(\255lbfd)108
645.6 Q F0(&)2.5 E F2(\255liberty)2.5 E F0(If b)15 E
(uilt with BFD support.)-.2 E F2(\255lcl)108 657.6 Q F0(If b)66.2 E
(uilt on HP/UX.)-.2 E F2(\255le)108 669.6 Q(xc)-.2 E F0(If b)60.3 E
(uilt on IRIX or T)-.2 E(ru64.)-.35 E F2(\255lima)108 681.6 Q -.1(ge)-.1
G(hlp).1 E F0(If b)36.4 E(uilt on W)-.2 E(indo)-.4 E(ws.)-.25 E F2
(\255lpthr)108 693.6 Q(eads)-.37 E F0(If b)38.79 E
(uilt on AIX with threads support.)-.2 E F2(\255lthr)108 705.6 Q(ead)
-.37 E F0(If b)47.68 E(uilt on DG/UX with threads support.)-.2 E F2
(\255lpthr)108 717.6 Q(ead)-.37 E F0(If b)42.68 E
(uilt on UNIX with threads support.)-.2 E(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(15)193.45 E EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E 1.342(On UNIX platforms, if there were no cal\
ls to memory allocation functions before)108 84 R/F1 10/Times-Italic@0
SF(\255lmpatr)3.842 E(ol)-.45 E F0(or)3.842 E F1(\255lmpa-)3.842 E(tr)
108 96 Q(olmt)-.45 E F0 .198
(appears on the link line then the mpatrol library will not be link)
2.698 F .199(ed in if it is an archi)-.1 F .499 -.15(ve l)-.25 H(ibrary)
.15 E 5.199(.H)-.65 G -.25(ow)-5.199 G(-).25 E -2.15 -.25(ev e)108 108 T
.8 -.4(r, t).25 H(his can be o).4 E -.15(ve)-.15 G(rridden by placing)
.15 E F1(\255umalloc)2.5 E F0(just before that point.)2.5 E -1.1(Yo)108
124.8 S 3.198(um)1.1 G .698(ay also wish to set your core \214le size l\
imit to be zero before running an)-3.198 F 3.198(yp)-.15 G .698
(rograms link)-3.198 F .698(ed with the)-.1 F .34
(mpatrol library as the e)108 136.8 R .34
(xtra memory that the library uses can mak)-.15 F 2.84(es)-.1 G .34
(uch \214les much lar)-2.84 F .34(ger than normal, and)-.18 F
(if you are planning on using a symbolic deb)108 148.8 Q
(ugger then you w)-.2 E(on')-.1 E 2.5(tn)-.18 G(eed the core \214les an)
-2.5 E(yw)-.15 E(ay)-.1 E(.)-.65 E/F2 10.95/Times-Bold@0 SF(ENVIR)72
165.6 Q(ONMENT)-.329 E F0 5.204
(The library can read certain options at run-time from an en)108 177.6 R
5.204(vironment v)-.4 F 5.203(ariable called)-.25 F/F3 10/Times-Bold@0
SF(MP)7.703 E(A-)-.74 E(TR)108 189.6 Q(OL_OPTIONS)-.3 E F0 5.209(.T)C
.209(his v)-5.209 F .209(ariable must contain one or more v)-.25 F .209
(alid option k)-.25 F -.15(ey)-.1 G -.1(wo).15 G .21
(rds from the list belo).1 F 2.71(wa)-.25 G(nd)-2.71 E .981
(must be no longer than 1024 characters in length.)108 201.6 R(If)5.981
E F3(MP)3.481 E -.95(AT)-.74 G -.3(RO).95 G(L_OPTIONS).3 E F0 .98
(is unset or empty then the)3.48 F(def)108 213.6 Q
(ault settings will be used.)-.1 E .851
(The syntax for options speci\214ed within the)108 230.4 R F3(MP)3.351 E
-.95(AT)-.74 G -.3(RO).95 G(L_OPTIONS).3 E F0(en)3.351 E .851
(vironment v)-.4 F .851(ariable is)-.25 F F3(OPTION)3.351 E F0(or)3.351
E F3(OPTION)108 242.4 Q F0(=)A F1 -.6(VA)C(LUE).6 E F0 3.689(,w)C(here)
-3.689 E F3(OPTION)3.689 E F0 1.189(is a k)3.689 F -.15(ey)-.1 G -.1(wo)
.15 G 1.189(rd from the list belo).1 F 3.689(wa)-.25 G(nd)-3.689 E F1
-.6(VA)3.689 G(LUE).6 E F0 1.188(is the setting for that)3.689 F 2.698
(option. If)108 254.4 R F1 -.6(VA)2.698 G(LUE).6 E F0 .198
(is numeric then it may be speci\214ed using binary)2.698 F 2.698(,o)
-.65 G .198(ctal, decimal or he)-2.698 F .199(xadecimal notation,)-.15 F
.313(with binary notation be)108 266.4 R .313(ginning with either)-.15 F
F1(0b)2.813 E F0(or)2.812 E F1(0B)2.812 E F0 5.312(.I)C(f)-5.312 E F1
-.6(VA)2.812 G(LUE).6 E F0 .312
(is a character string containing spaces then)2.812 F .095
(it may be quoted using double quotes.)108 278.4 R .095
(No whitespace may appear between the)5.095 F F1(=)2.596 E F0 .096
(sign, b)2.596 F .096(ut whitespace must)-.2 F .778(appear between dif)
108 290.4 R .778(ferent options.)-.25 F .778(Note that option k)5.778 F
-.15(ey)-.1 G -.1(wo).15 G .777(rds can be gi).1 F -.15(ve)-.25 G 3.277
(ni).15 G 3.277(nl)-3.277 G -.25(ow)-3.277 G .777
(ercase as well as upper).25 F(-)-.2 E(case, or a mixture of both.)108
302.4 Q F3(ALLOCBYTE)108 319.2 Q F0(=)A F1(unsigned inte)A -.1(ge)-.4 G
(r).1 E F0 .444
(Speci\214es an 8-bit byte pattern with which to pre\214ll ne)144 331.2
R .445(wly-allocated memory)-.25 F 5.445(.T)-.65 G .445
(his can be used to)-5.445 F .135(detect the use of memory which has no\
t been initialised after allocation.)144 343.2 R .134
(Note that this setting will)5.134 F 1.648(not af)144 355.2 R 1.648
(fect memory allocated with)-.25 F F3(calloc)4.148 E F0(or)4.148 E F3
-.18(re)4.148 G(calloc).18 E F0 1.649(as these functions al)4.149 F -.1
(wa)-.1 G 1.649(ys pre\214ll allocated).1 F
(memory with an 8-bit byte pattern of zero.)144 367.2 Q(Def)5 E(ault v)
-.1 E(alue:)-.25 E F3(ALLOCBYTE)2.5 E F0(=)A F1(0xFF)A F0(.)A F3
(ALLOCST)108 384 Q(OP)-.18 E F0(=)A F1(unsigned inte)A -.1(ge)-.4 G(r).1
E F0 .839(Speci\214es an allocation inde)144 396 R 3.339(xa)-.15 G 3.339
(tw)-3.339 G .839(hich to stop the program when it is being allocated.)
-3.339 F .838(When the)5.838 F .7(number of memory allocations reaches \
this number the program will be halted, and its state may)144 408 R .262
(be e)144 420 R .261(xamined at that point by using a suitable deb)-.15
F(ugger)-.2 E 5.261(.N)-.55 G .261
(ote that this setting will be ignored if its)-5.261 F -.25(va)144 432 S
(lue is zero.).25 E(Def)5 E(ault v)-.1 E(alue:)-.25 E F3(ALLOCST)2.5 E
(OP)-.18 E F0(=)A F1(0)A F0(.)A F3(ALLO)108 448.8 Q -.1(WO)-.5 G(FLO).1
E(W)-.5 E F0 .181(Speci\214es that a w)144 460.8 R .181
(arning rather than an error should be produced if an)-.1 F 2.682(ym)
-.15 G .182(emory operation function)-2.682 F -.15(ove)144 472.8 S
(r\215o).15 E .234(ws the boundaries of a memory allocation, and that t\
he operation should still be performed.)-.25 F .088(This option is pro)
144 484.8 R .089(vided for circumstances where it is desirable for the \
memory operation to be per)-.15 F(-)-.2 E(formed, re)144 496.8 Q -.05
(ga)-.15 G(rdless of whether it is erroneous or not.).05 E F3 -.5(AU)108
513.6 S -.18(TO).5 G(SA).18 E(VE)-1.45 E F0(=)A F1(unsigned inte)A -.1
(ge)-.4 G(r).1 E F0 .264(Speci\214es the frequenc)144 525.6 R 2.764(ya)
-.15 G 2.764(tw)-2.764 G .264(hich to periodically write the pro\214lin\
g data to the pro\214ling output \214le.)-2.764 F .161(When the total n\
umber of pro\214led memory allocations and deallocations is a multiple \
of this num-)144 537.6 R .789(ber then the current pro\214ling informat\
ion will be written to the pro\214ling output \214le.)144 549.6 R .789
(This option)5.789 F .157
(can be used to instruct the mpatrol library to dump out an)144 561.6 R
2.658(yp)-.15 G .158(ro\214ling information just before a f)-2.658 F
(atal)-.1 E .668(error occurs in a program, for e)144 573.6 R 3.168
(xample. Note)-.15 F .668(that this setting will be ignored if its v)
3.168 F .667(alue is zero.)-.25 F(Def)144 585.6 Q(ault v)-.1 E(alue:)
-.25 E F3 -.5(AU)2.5 G -.18(TO).5 G(SA).18 E(VE)-1.45 E F0(=)A F1(0)A F0
(.)A F3(CHECK)108 602.4 Q F0(=)A F1(unsigned r)A(ang)-.15 E(e)-.1 E F0
.111
(Speci\214es a range of allocation indices at which to check the inte)
144 614.4 R .112(grity of free memory and o)-.15 F -.15(ve)-.15 G
(r\215o).15 E(w)-.25 E -.2(bu)144 626.4 S -.25(ff).2 G 3.08(ers. The).25
F .58(range must be speci\214ed as no more than tw)3.08 F 3.08(ou)-.1 G
.58(nsigned inte)-3.08 F .58(gers separated by a dash,)-.15 F(follo)144
638.4 Q .816(wed by an optional forw)-.25 F .816
(ard slash and an unsigned inte)-.1 F .817(ger specifying an e)-.15 F
-.15(ve)-.25 G .817(nt checking fre-).15 F(quenc)144 650.4 Q 3.845 -.65
(y. I)-.15 H 2.545(fn).65 G .045(umbers on either the left side or the \
right side of the dash are omitted then the)-2.545 F 2.545(yw)-.15 G
.045(ill be)-2.545 F 1.381(assumed to be)144 662.4 R F1(0)3.881 E F0
(and)3.881 E F1(in\214nity)3.881 E F0(respecti)3.881 E -.15(ve)-.25 G
(ly).15 E 6.381(.I)-.65 G 3.881(ft)-6.381 G 1.381(he e)-3.881 F -.15(ve)
-.25 G 1.381(nt checking frequenc).15 F 3.881(yi)-.15 G 3.882(so)-3.881
G 1.382(mitted then it is)-3.882 F .396(assumed to be)144 674.4 R F1(1)
2.896 E F0 5.396(.A)C -.25(va)-2.5 G .396(lue of).25 F F1(0)2.896 E F0
.396(on its o)2.896 F .396(wn indicates that no such checking will e)
-.25 F -.15(ve)-.25 G 2.895(rb).15 G 2.895(ep)-2.895 G(erformed.)-2.895
E .347(This option can be used to speed up the e)144 686.4 R -.15(xe)
-.15 G .347(cution speed of the library at the e).15 F .348
(xpense of checking.)-.15 F(Def)144 698.4 Q(ault v)-.1 E(alue:)-.25 E F3
(CHECK)2.5 E F0(=)A F1(0)A F0(.)A(Release 1.4)72 768 Q 2.5(8J)157.35 G
(anuary 2002)-2.5 E(16)193.45 E EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(CHECKALL)108 84 Q F0
(Equi)144 96 Q -.25(va)-.25 G 2.552(lent to the).25 F F1(CHECKALLOCS)
5.052 E F0(,)A F1(CHECKREALLOCS)5.051 E F0(,)A F1(CHECKFREES)5.051 E F0
(and)5.051 E F1(CHECK-)5.051 E(MEMOR)144 108 Q(Y)-.35 E F0
(options speci\214ed together)2.5 E(.)-.55 E F1(CHECKALLOCS)108 124.8 Q
F0 1.114(Checks that no attempt is made to allocate a block of memory o\
f size zero.)144 136.8 R 3.614(Aw)6.114 G 1.114(arning will be)-3.714 F
(issued for e)144 148.8 Q -.15(ve)-.25 G(ry such case.).15 E F1
(CHECKFORK)108 165.6 Q F0 .982(Checks at e)144 177.6 R -.15(ve)-.25 G
.982(ry call to see if the process has been fork).15 F .981
(ed in case ne)-.1 F 3.481(wl)-.25 G .981(og, pro\214ling and tracing)
-3.481 F .544(output \214les need to be started.)144 189.6 R .545
(This option only has an ef)5.545 F .545(fect on UNIX platforms, b)-.25
F .545(ut should not)-.2 F
(be used in multithreaded programs if each thread has a dif)144 201.6 Q
(ferent process identi\214er)-.25 E(.)-.55 E F1(CHECKFREES)108 218.4 Q
F0 .239(Checks that no attempt is made to deallocate a)144 230.4 R F1
(NULL)2.738 E F0(pointer)2.738 E 5.238(.A)-.55 G -.1(wa)-2.5 G .238
(rning will be issued for e).1 F -.15(ve)-.25 G(ry).15 E(such case.)144
242.4 Q F1(CHECKMEMOR)108 259.2 Q(Y)-.35 E F0(Checks that no attempt is\
 made to perform a zero-length memory operation on a)144 271.2 Q F1
(NULL)2.5 E F0(pointer)2.5 E(.)-.55 E F1(CHECKREALLOCS)108 288 Q F0 .414
(Checks that no attempt is made to reallocate a)144 300 R F1(NULL)2.914
E F0 .414(pointer or resize an e)2.914 F .415(xisting block of mem-)-.15
F(ory to size zero.)144 312 Q -.8(Wa)5 G(rnings will be issued for e).8
E -.15(ve)-.25 G(ry such case.).15 E F1(DEF)108 328.8 Q(ALIGN)-.9 E F0
(=)A/F2 10/Times-Italic@0 SF(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .11
(Speci\214es the def)144 340.8 R .109(ault alignment for general-purpos\
e memory allocations, which must be a po)-.1 F .109(wer of)-.25 F(tw)144
352.8 Q 3.025(o\()-.1 G .525(and will be rounded up to the nearest po)
-3.025 F .525(wer of tw)-.25 F 3.025(oi)-.1 G 3.025(fi)-3.025 G 3.025
(ti)-3.025 G 3.025(sn)-3.025 G 3.025(ot\). The)-3.025 F(def)3.025 E .525
(ault alignment for a)-.1 F
(particular system is calculated at run-time.)144 364.8 Q F1(EDIT)108
381.6 Q F0 .924(Speci\214es that a te)11.55 F .924
(xt editor should be in)-.15 F -.2(vo)-.4 G -.1(ke).2 G 3.424(dt).1 G
3.424(oe)-3.424 G .924(dit an)-3.424 F 3.424(yr)-.15 G(ele)-3.424 E -.25
(va)-.25 G .923(nt source \214les that are associated).25 F .404
(with an)144 393.6 R 2.904(yw)-.15 G .404(arnings or errors when the)
-3.004 F 2.904(yo)-.15 G(ccur)-2.904 E 5.404(.O)-.55 G .405
(nly diagnostics which occur at source lines in the)-5.404 F 1.244
(program will be af)144 405.6 R 1.244(fected and only then if the)-.25 F
3.743(yc)-.15 G 1.243(ontain source-le)-3.743 F -.15(ve)-.25 G 3.743(li)
.15 G 3.743(nformation. This)-3.743 F 1.243(option is)3.743 F .166
(currently only a)144 417.6 R -.25(va)-.2 G .167
(ilable on UNIX platforms as it mak).25 F .167(es use of the)-.1 F F1
(mpedit)2.667 E F0 2.667(command. It)2.667 F .167(also o)2.667 F -.15
(ve)-.15 G -.2(r-).15 G(rides the beha)144 429.6 Q(viour of the)-.2 E F1
(LIST)2.5 E F0(option and af)2.5 E(fects the beha)-.25 E(viour of the)
-.2 E F1(__mp_view)2.5 E F0(function.)2.5 E F1 -.9(FA)108 446.4 S
(ILFREQ).9 E F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .47
(Speci\214es the frequenc)144 458.4 R 2.97(ya)-.15 G 2.97(tw)-2.97 G .47
(hich all memory allocations will randomly f)-2.97 F 2.97(ail. F)-.1 F
.47(or e)-.15 F .47(xample, a v)-.15 F(alue)-.25 E(of)144 470.4 Q F2(10)
2.898 E F0 .398
(will mean that roughly 1 in 10 memory allocations will f)2.898 F .398
(ail, b)-.1 F .398(ut a v)-.2 F .398(alue of)-.25 F F2(0)2.898 E F0 .398
(will disable all)2.898 F .293(random f)144 482.4 R 2.793(ailures. This)
-.1 F .292(option can be useful for stress-testing an application.)2.793
F(Def)5.292 E .292(ault v)-.1 F(alue:)-.25 E F1 -.9(FA)2.792 G(IL-).9 E
(FREQ)144 494.4 Q F0(=)A F2(0)A F0(.)A F1 -.9(FA)108 511.2 S(ILSEED).9 E
F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 1.043(Speci\214es the \
random number seed which will be used when determining which memory all\
oca-)144 523.2 R .401(tions will randomly f)144 535.2 R 2.901(ail. A)-.1
F -.25(va)2.901 G .401(lue of).25 F F2(0)2.901 E F0 .401
(will instruct the library to pick a random seed e)2.901 F -.15(ve)-.25
G .401(ry time it).15 F .88(is run.)144 547.2 R(An)5.88 E 3.38(yo)-.15 G
.88(ther v)-3.38 F .88(alue will mean that the random f)-.25 F .881
(ailures will be the same e)-.1 F -.15(ve)-.25 G .881(ry time the pro-)
.15 F(gram is run, b)144 559.2 Q
(ut only as long as the seed stays the same.)-.2 E(Def)5 E(ault v)-.1 E
(alue:)-.25 E F1 -.9(FA)2.5 G(ILSEED).9 E F0(=)A F2(0)A F0(.)A F1
(FREEBYTE)108 576 Q F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0
1.482(Speci\214es an 8-bit byte pattern with which to pre\214ll ne)144
588 R 1.482(wly-freed memory)-.25 F 6.482(.T)-.65 G 1.482
(his can be used to)-6.482 F .461
(detect the use of memory which has just been freed.)144 600 R .461
(It is also used internally to ensure that freed)5.461 F 1.38
(memory has not been o)144 612 R -.15(ve)-.15 G 3.88(rwritten. Note).15
F 1.38(that the freed memory may be reused the ne)3.88 F 1.38(xt time a)
-.15 F .589(block of memory is allocated and so once memory has been fr\
eed its contents are not guaranteed)144 624 R
(to remain the same as the speci\214ed byte pattern.)144 636 Q(Def)5 E
(ault v)-.1 E(alue:)-.25 E F1(FREEBYTE)2.5 E F0(=)A F2(0x55)A F0(.)A F1
(FREEST)108 652.8 Q(OP)-.18 E F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r)
.1 E F0 .186(Speci\214es an allocation inde)144 664.8 R 2.686(xa)-.15 G
2.686(tw)-2.686 G .185(hich to stop the program when it is being freed.)
-2.686 F .185(When the mem-)5.185 F .43
(ory allocation with the speci\214ed allocation inde)144 676.8 R 2.93
(xi)-.15 G 2.93(st)-2.93 G 2.93(ob)-2.93 G 2.93(ef)-2.93 G .43
(reed the program will be halted, and its)-2.93 F 1.892(state may be e)
144 688.8 R 1.891(xamined at that point using a suitable deb)-.15 F
(ugger)-.2 E 6.891(.N)-.55 G 1.891(ote that this setting will be)-6.891
F(ignored if its v)144 700.8 Q(alue is zero.)-.25 E(Def)5 E(ault v)-.1 E
(alue:)-.25 E F1(FREEST)2.5 E(OP)-.18 E F0(=)A F2(0)A F0(.)A F1(HELP)108
717.6 Q F0(Displays a quick-reference option summary to the)8.77 E F1
(stderr)2.5 E F0(\214le stream.)2.5 E(Release 1.4)72 768 Q 2.5(8J)157.35
G(anuary 2002)-2.5 E(17)193.45 E EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(LARGEBOUND)108 84 Q F0
(=)A/F2 10/Times-Italic@0 SF(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .988
(Speci\214es the limit in bytes up to which memory allocations should b\
e classi\214ed as lar)144 96 R .988(ge alloca-)-.18 F 2.275
(tions for pro\214ling purposes.)144 108 R 2.274
(This limit must be greater than the small and medium bounds.)7.275 F
(Def)144 120 Q(ault v)-.1 E(alue:)-.25 E F1(LARGEBOUND)2.5 E F0(=)A F2
(2048)A F0(.)A F1(LEAKT)108 136.8 Q(ABLE)-.9 E F0 .274(Speci\214es that\
 the leak table should be automatically used and a leak table summary s\
hould be dis-)144 148.8 R .414(played at the end of program e)144 160.8
R -.15(xe)-.15 G 2.914(cution. The).15 F .414(summary sho)2.914 F .413
(ws a \215at pro\214le of all unfreed memory)-.25 F 1.403
(allocations since the start of the program, or since the last call to)
144 172.8 R F1(__mp_clearleaktable)3.904 E F0 1.404(if that)3.904 F
(function w)144 184.8 Q(as called.)-.1 E F1(LIMIT)108 201.6 Q F0(=)A F2
(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .383(Speci\214es the limit in b\
ytes at which all memory allocations should f)144 213.6 R .382
(ail if the total allocated mem-)-.1 F .488(ory should increase be)144
225.6 R .488(yond this.)-.15 F .488
(This can be used to stress-test softw)5.488 F .488(are to see ho)-.1 F
2.989(wi)-.25 G 2.989(tb)-2.989 G(eha)-2.989 E -.15(ve)-.2 G 2.989(si)
.15 G(n)-2.989 E(lo)144 237.6 Q 2.581(wm)-.25 G .081(emory conditions.)
-2.581 F .081(The internal memory used by the library itself will not b\
e counted as part)5.081 F .825(of the total heap size, b)144 249.6 R
.826
(ut on some systems there may be a small amount of memory required to)
-.2 F .243(initialise the library itself.)144 261.6 R .243
(Note that this setting will be ignored if its v)5.243 F .243
(alue is zero.)-.25 F(Def)5.243 E .242(ault v)-.1 F(alue:)-.25 E F1
(LIMIT)144 273.6 Q F0(=)A F2(0)A F0(.)A F1(LIST)108 290.4 Q F0 1.196
(Speci\214es that a conte)13.21 F 1.196(xt listing should be sho)-.15 F
1.196(wn for an)-.25 F 3.696(yr)-.15 G(ele)-3.696 E -.25(va)-.25 G 1.196
(nt source \214les that are associated).25 F .405(with an)144 302.4 R
2.905(yw)-.15 G .405(arnings or errors when the)-3.005 F 2.904(yo)-.15 G
(ccur)-2.904 E 5.404(.O)-.55 G .404
(nly diagnostics which occur at source lines in the)-5.404 F 1.243
(program will be af)144 314.4 R 1.243(fected and only then if the)-.25 F
3.744(yc)-.15 G 1.244(ontain source-le)-3.744 F -.15(ve)-.25 G 3.744(li)
.15 G 3.744(nformation. This)-3.744 F 1.244(option is)3.744 F .167
(currently only a)144 326.4 R -.25(va)-.2 G .167
(ilable on UNIX platforms as it mak).25 F .167(es use of the)-.1 F F1
(mpedit)2.667 E F0 2.667(command. It)2.667 F .166(also o)2.666 F -.15
(ve)-.15 G -.2(r-).15 G(rides the beha)144 338.4 Q(viour of the)-.2 E F1
(EDIT)2.5 E F0(option and af)2.5 E(fects the beha)-.25 E(viour of the)
-.2 E F1(__mp_view)2.5 E F0(function.)2.5 E F1(LOGALL)108 355.2 Q F0
(Equi)144 367.2 Q -.25(va)-.25 G 4.504(lent to the).25 F F1(LOGALLOCS)
7.004 E F0(,)A F1(LOGREALLOCS)7.004 E F0(,)A F1(LOGFREES)7.004 E F0(and)
7.005 E F1(LOGMEMOR)7.005 E(Y)-.35 E F0(options speci\214ed together)144
379.2 Q(.)-.55 E F1(LOGALLOCS)108 396 Q F0 .19(Speci\214es that all mem\
ory allocations are to be logged and sent to the log \214le.)144 408 R
.189(Note that an)5.189 F 2.689(ym)-.15 G(em-)-2.689 E
(ory allocations made internally by the library will not be logged.)144
420 Q F1(LOGFILE)108 436.8 Q F0(=)A F2(string)A F0 1.973
(Speci\214es an alternati)144 448.8 R 2.273 -.15(ve \214)-.25 H 1.973
(le in which to place all diagnostics from the mpatrol library).15 F
6.974(.I)-.65 G 4.474(ft)-6.974 G(he)-4.474 E F1(LOGDIR)144 460.8 Q F0
(en)3.076 E .576(vironment v)-.4 F .575(ariable is set and the speci\
\214ed \214le does not contain a path component in)-.25 F .338(its \214\
lename then the log \214le will be located in the directory speci\214ed\
 in)144 472.8 R F1(LOGDIR)2.839 E F0 5.339(.A)C .339(\214lename of)-2.5
F F2(stderr)144 484.8 Q F0 .195(will send all diagnostics to the)2.695 F
F1(stderr)2.695 E F0 .194(\214le stream and a \214lename of)2.695 F F2
(stdout)2.694 E F0 .194(will do the equi)2.694 F(v-)-.25 E .135
(alent with the)144 496.8 R F1(stdout)2.635 E F0 .136(\214le stream.)
2.635 F .136
(Note that if a problem occurs while opening the log \214le or if an)
5.136 F(y)-.15 E .161(diagnostics require to be displayed before the lo\
g \214le has had a chance to be opened then the)144 508.8 R 2.66(yw)-.15
G(ill)-2.66 E 6.075(be sent to the)144 520.8 R F1(stderr)8.575 E F0
6.075(\214le stream.)8.575 F(Def)11.076 E 6.076(ault v)-.1 F(alue:)-.25
E F1(LOGFILE)8.576 E F0(=)A F2(mpatr)A(ol.lo)-.45 E(g)-.1 E F0(or)8.576
E F1(LOG-)8.576 E(FILE)144 532.8 Q F0(=)A F2(%n.%p.lo)A(g)-.1 E F0
(if the)2.5 E F1(LOGDIR)2.5 E F0(en)2.5 E(vironment v)-.4 E
(ariable is set.)-.25 E F1(LOGFREES)108 549.6 Q F0 1.165(Speci\214es th\
at all memory deallocations are to be logged and sent to the log \214le\
.)144 561.6 R 1.164(Note that an)6.164 F(y)-.15 E(memory deallocations \
made internally by the library will not be logged.)144 573.6 Q F1
(LOGMEMOR)108 590.4 Q(Y)-.35 E F0 1.037(Speci\214es that all memory ope\
rations are to be logged and sent to the log \214le.)144 602.4 R 1.038
(These operations)6.038 F .841
(will be made by calls to functions such as)144 614.4 R F1(memset)3.341
E F0(and)3.341 E F1(memcpy)3.34 E F0 5.84(.N)C .84(ote that an)-5.84 F
3.34(ym)-.15 G .84(emory opera-)-3.34 F
(tions made internally by the library will not be logged.)144 626.4 Q F1
(LOGREALLOCS)108 643.2 Q F0 1.263(Speci\214es that all memory reallocat\
ions are to be logged and sent to the log \214le.)144 655.2 R 1.263
(Note that an)6.263 F(y)-.15 E(memory reallocations made internally by \
the library will not be logged.)144 667.2 Q F1(MEDIUMBOUND)108 684 Q F0
(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .123(Speci\214es the lim\
it in bytes up to which memory allocations should be classi\214ed as me\
dium alloca-)144 696 R .065(tions for pro\214ling purposes.)144 708 R
.066(This limit must be greater than the small bound b)5.066 F .066
(ut less than the lar)-.2 F(ge)-.18 E 2.5(bound. Def)144 720 R(ault v)
-.1 E(alue:)-.25 E F1(MEDIUMBOUND)2.5 E F0(=)A F2(256)A F0(.)A
(Release 1.4)72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(18)193.45 E EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E/F1 10/Times-Bold@0 SF(NOFREE)108 84 Q F0(=)A
/F2 10/Times-Italic@0 SF(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 1.836(S\
peci\214es that a number of recently-freed memory allocations should be\
 pre)144 96 R -.15(ve)-.25 G 1.835(nted from being).15 F 1.053
(returned to the free memory pool.)144 108 R 1.054
(Such freed memory allocations will then be \215agged as freed)6.053 F
.139(and can be used by the library to pro)144 120 R .138
(vide better diagnostics.)-.15 F .138
(If the size of the freed queue is speci-)5.138 F .346(\214ed as zero t\
hen all freed memory will be immediately reused by the mpatrol library)
144 132 R 5.346(.N)-.65 G .346(ote that if)-5.346 F .155
(this option is gi)144 144 R -.15(ve)-.25 G 2.655(nan).15 G .155
(on-zero v)-2.655 F .155(alue then the mpatrol library will al)-.25 F
-.1(wa)-.1 G .155(ys force a memory realloca-).1 F .261
(tion to return a pointer to ne)144 156 R .261(wly-allocated memory)-.25
F 2.761(,b)-.65 G .261(ut the)-2.961 F F1(expand)2.761 E F0 .262
(function will ne)2.762 F -.15(ve)-.25 G 2.762(rb).15 G 2.762(ea)-2.762
G -.25(ff)-2.762 G(ected).25 E(by this option.)144 168 Q(Def)5 E(ault v)
-.1 E(alue:)-.25 E F1(NOFREE)2.5 E F0(=)A F2(0)A F0(.)A F1(NOPR)108
184.8 Q -.4(OT)-.3 G(ECT).4 E F0 1.727
(Speci\214es that the mpatrol library')144 196.8 R 4.227(si)-.55 G 1.727
(nternal data structures should not be made read-only after)-4.227 F
-2.15 -.25(ev e)144 208.8 T .563
(ry memory allocation, reallocation or deallocation.).25 F .564
(This may signi\214cantly speed up e)5.564 F -.15(xe)-.15 G(cution).15 E
-.2(bu)144 220.8 S 3.598(tt).2 G 1.098(his will be at the e)-3.598 F
1.098(xpense of less safety if the program accidentally o)-.15 F -.15
(ve)-.15 G 1.097(rwrites some of the).15 F(library')144 232.8 Q 2.615
(si)-.55 G .115(nternal data structures.)-2.615 F .115
(Note that this option has no ef)5.115 F .115
(fect on systems that do not support)-.25 F(memory protection.)144 244.8
Q F1(OFLO)108 261.6 Q(WBYTE)-.5 E F0(=)A F2(unsigned inte)A -.1(ge)-.4 G
(r).1 E F0 1.025
(Speci\214es an 8-bit byte pattern with which to \214ll the o)144 273.6
R -.15(ve)-.15 G(r\215o).15 E 3.524(wb)-.25 G(uf)-3.724 E 1.024
(fers of all memory allocations.)-.25 F .044
(This is used internally to ensure that nothing has been written be)144
285.6 R .044(yond the be)-.15 F .044(ginning or the end of a)-.15 F
1.056(block of allocated memory)144 297.6 R 6.056(.N)-.65 G 1.055
(ote that this setting will only ha)-6.056 F 1.355 -.15(ve a)-.2 H 3.555
(ne).15 G -.25(ff)-3.555 G 1.055(ect if the).25 F F1(OFLO)3.555 E(WSIZE)
-.5 E F0(option is in use.)144 309.6 Q(Def)5 E(ault v)-.1 E(alue:)-.25 E
F1(OFLO)2.5 E(WBYTE)-.5 E F0(=)A F2(0xAA)A F0(.)A F1(OFLO)108 326.4 Q
(WSIZE)-.5 E F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 .448
(Speci\214es the size in bytes to use for all o)144 338.4 R -.15(ve)-.15
G(r\215o).15 E 2.948(wb)-.25 G(uf)-3.148 E .449
(fers, which must be a po)-.25 F .449(wer of tw)-.25 F 2.949(o\()-.1 G
.449(and will)-2.949 F .348(be rounded up to the nearest po)144 350.4 R
.348(wer of tw)-.25 F 2.848(oi)-.1 G 2.848(fi)-2.848 G 2.847(ti)-2.848 G
2.847(sn)-2.847 G 2.847(ot\). This)-2.847 F .347
(is used internally to ensure that noth-)2.847 F .723
(ing has been written be)144 362.4 R .723(yond the be)-.15 F .723
(ginning or the end of a block of allocated memory)-.15 F 5.723(.N)-.65
G .723(ote that)-5.723 F .119
(this setting speci\214es the size for only one of the o)144 374.4 R
-.15(ve)-.15 G(r\215o).15 E 2.619(wb)-.25 G(uf)-2.819 E .119(fers gi)
-.25 F -.15(ve)-.25 G 2.618(nt).15 G 2.618(oe)-2.618 G .118
(ach memory allocation;)-2.618 F .577(the other o)144 386.4 R -.15(ve)
-.15 G(r\215o).15 E 3.077(wb)-.25 G(uf)-3.277 E .577(fer will ha)-.25 F
.877 -.15(ve a)-.2 H 3.077(ni).15 G .577(dentical size.)-3.077 F .577
(No o)5.577 F -.15(ve)-.15 G(r\215o).15 E 3.077(wb)-.25 G(uf)-3.277 E
.577(fers will be used if this set-)-.25 F(ting is zero.)144 398.4 Q
(Def)5 E(ault v)-.1 E(alue:)-.25 E F1(OFLO)2.5 E(WSIZE)-.5 E F0(=)A F2
(0)A F0(.)A F1(OFLO)108 415.2 Q(WW)-.5 E -.95(AT)-1.2 G(CH).95 E F0
1.274(Speci\214es that w)144 427.2 R 1.273
(atch point areas should be used for o)-.1 F -.15(ve)-.15 G(r\215o).15 E
3.773(wb)-.25 G(uf)-3.973 E 1.273(fers rather than \214lling with the)
-.25 F -.15(ove)144 439.2 S(r\215o).15 E 2.556(wb)-.25 G 2.556
(yte. This)-2.556 F .056
(can signi\214cantly reduce the speed of program e)2.556 F -.15(xe)-.15
G 2.557(cution. Note).15 F .057(that this option)2.557 F(has no ef)144
451.2 Q(fect on systems that do not support w)-.25 E(atch point areas.)
-.1 E F1 -1.57 -.74(PA G)108 468 T(EALLOC).74 E F0(=)A F2(LO)A(WER)-.5 E
F0(|)A F2(UPPER)A F0 .458(Speci\214es that each indi)144 480 R .457
(vidual memory allocation should occup)-.25 F 2.957(ya)-.1 G 2.957(tl)
-2.957 G .457(east one page of virtual mem-)-2.957 F .237
(ory and should be placed at the lo)144 492 R .238
(west or highest point within these pages.)-.25 F .238(This allo)5.238 F
.238(ws the library)-.25 F .643(to place an o)144 504 R -.15(ve)-.15 G
(r\215o).15 E 3.143(wb)-.25 G(uf)-3.343 E .643
(fer of one page on either side of e)-.25 F -.15(ve)-.25 G .642
(ry memory allocation and write-pro-).15 F .645
(tect these pages as well as all free and freed memory)144 516 R 5.645
(.N)-.65 G .645(ote that this option has no ef)-5.645 F .646
(fect on sys-)-.25 F .491
(tems that do not support memory protection, and is disabled by def)144
528 R .491(ault on other systems as it can)-.1 F(slo)144 540 Q 2.5(wd)
-.25 G -.25(ow)-2.5 G 2.5(nt).25 G(he speed of program e)-2.5 E -.15(xe)
-.15 G(cution.).15 E F1(PRESER)108 556.8 Q(VE)-.55 E F0 .461
(Speci\214es that an)144 568.8 R 2.961(yr)-.15 G .462
(eallocated or freed memory allocations should preserv)-2.961 F 2.962
(et)-.15 G .462(heir original contents.)-2.962 F
(This option must be used with the)144 580.8 Q F1(NOFREE)2.5 E F0
(option and has no ef)2.5 E(fect otherwise.)-.25 E F1(PR)108 597.6 Q(OF)
-.3 E F0 .532(Speci\214es that all memory allocations and deallocations\
 are to be pro\214led and sent to the pro\214ling)9.08 F .036
(output \214le.)144 609.6 R .037(Memory reallocations are treated as a \
memory deallocation immediately follo)5.037 F .037(wed by a)-.25 F
(memory allocation.)144 621.6 Q F1(PR)108 638.4 Q(OFFILE)-.3 E F0(=)A F2
(string)A F0 .262(Speci\214es an alternati)144 650.4 R .562 -.15
(ve \214)-.25 H .261(le in which to place all memory allocation pro\214\
ling information from the).15 F .566(mpatrol library)144 662.4 R 5.566
(.I)-.65 G 3.066(ft)-5.566 G(he)-3.066 E F1(PR)3.066 E(OFDIR)-.3 E F0
(en)3.066 E .566(vironment v)-.4 F .566
(ariable is set and the speci\214ed \214le does not con-)-.25 F .501(ta\
in a path component in its \214lename then the pro\214ling output \214l\
e will be located in the directory)144 674.4 R .662(speci\214ed in)144
686.4 R F1(PR)3.162 E(OFDIR)-.3 E F0 5.662(.A)C .662(\214lename of)-2.5
F F2(stderr)3.163 E F0 .663(will send this information to the)3.163 F F1
(stderr)3.163 E F0 .663(\214le stream)3.163 F .363(and a \214lename of)
144 698.4 R F2(stdout)2.863 E F0 .363(will do the equi)2.863 F -.25(va)
-.25 G .363(lent with the).25 F F1(stdout)2.863 E F0 .363
(\214le stream.)2.863 F .362(Note that if a problem)5.363 F 1.321(occur\
s while opening the pro\214ling output \214le then the pro\214ling info\
rmation will not be output.)144 710.4 R(Def)144 722.4 Q 7.11(ault v)-.1
F(alue:)-.25 E F1(PR)9.61 E(OFFILE)-.3 E F0(=)A F2(mpatr)A(ol.out)-.45 E
F0(or)9.61 E F1(PR)9.61 E(OFFILE)-.3 E F0(=)A F2(%n.%p.out)A F0 7.11
(if the)9.61 F F1(PR)9.61 E(OFDIR)-.3 E F0(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(19)193.45 E EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E(en)144 84 Q(vironment v)-.4 E(ariable is set.)
-.25 E/F1 10/Times-Bold@0 SF(PR)108 100.8 Q(OGFILE)-.3 E F0(=)A/F2 10
/Times-Italic@0 SF(string)A F0 .413(Speci\214es an alternati)144 112.8 R
.713 -.15(ve \214)-.25 H .413(lename with which to locate the e).15 F
-.15(xe)-.15 G .413(cutable \214le containing the program').15 F(s)-.55
E 3.222(symbols. On)144 124.8 R .721(most systems, the library will aut\
omatically be able to determine this \214lename, b)3.222 F(ut)-.2 E
(on a fe)144 136.8 Q 2.5(ws)-.25 G(ystems this option may ha)-2.5 E .3
-.15(ve t)-.2 H 2.5(ob).15 G 2.5(eu)-2.5 G(sed before an)-2.5 E 2.5(yo)
-.15 G 2.5(ra)-2.5 G(ll symbols can be read.)-2.5 E F1(REALLOCST)108
153.6 Q(OP)-.18 E F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 1.246
(Speci\214es a reallocation inde)144 165.6 R 3.746(xa)-.15 G 3.746(tw)
-3.746 G 1.247
(hich to stop the program when a memory allocation is being)-3.746 F
3.739(reallocated. If)144 177.6 R(the)3.739 E F1(ALLOCST)3.739 E(OP)-.18
E F0 1.238(option is non-zero then the program will be halted when the)
3.739 F .655(allocation matching that allocation inde)144 189.6 R 3.156
(xi)-.15 G 3.156(sr)-3.156 G .656
(eallocated the speci\214ed number of times.)-3.156 F(Otherwise)5.656 E
1.766(the program will be halted the \214rst time an)144 201.6 R 4.265
(ya)-.15 G 1.765(llocation is reallocated the speci\214ed number of)
-4.265 F 4.367(times. Note)144 213.6 R 1.867
(that this setting will be ignored if its v)4.367 F 1.868(alue is zero.)
-.25 F(Def)6.868 E 1.868(ault v)-.1 F(alue:)-.25 E F1(REALLOC-)4.368 E
(ST)144 225.6 Q(OP)-.18 E F0(=)A F2(0)A F0(.)A F1(SAFESIGN)108 242.4 Q
(ALS)-.2 E F0 .061(Instructs the library to sa)144 254.4 R .361 -.15
(ve a)-.2 H .061(nd replace certain signal handlers during the e).15 F
-.15(xe)-.15 G .06(cution of library code).15 F 1.855
(and to restore them afterw)144 266.4 R 4.355(ards. This)-.1 F -.1(wa)
4.355 G 4.355(st).1 G 1.855(he def)-4.355 F 1.855(ault beha)-.1 F 1.855
(viour in v)-.2 F 1.856(ersion 1.0 of the mpatrol)-.15 F 1.349
(library and w)144 278.4 R 1.349(as changed since some memory-intensi)
-.1 F 1.648 -.15(ve p)-.25 H 1.348(rograms became v).15 F 1.348
(ery hard to interrupt)-.15 F(using the k)144 290.4 Q -.15(ey)-.1 G
(board, thus gi).15 E
(ving the impression that the program or system had hung.)-.25 E F1(SHO)
108 307.2 Q -1.2(WA)-.5 G(LL)1.2 E F0(Equi)144 319.2 Q -.25(va)-.25 G
5.655(lent to the).25 F F1(SHO)8.156 E(WFREE)-.5 E F0(,)A F1(SHO)8.156 E
(WFREED)-.5 E F0(,)A F1(SHO)8.156 E(WUNFREED)-.5 E F0(,)A F1(SHO)8.156 E
(WMAP)-.5 E F0(and)8.156 E F1(SHO)144 331.2 Q(WSYMBOLS)-.5 E F0
(options speci\214ed together)2.5 E(.)-.55 E F1(SHO)108 348 Q(WFREE)-.5
E F0 .614(Speci\214es that a summary of all of the free memory blocks s\
hould be displayed at the end of pro-)144 360 R 1.406(gram e)144 372 R
-.15(xe)-.15 G 3.906(cution. This).15 F 1.406(step will not be performe\
d if an abnormal termination occurs or if there)3.906 F
(were no free memory blocks.)144 384 Q F1(SHO)108 400.8 Q(WFREED)-.5 E
F0 .471(Speci\214es that a summary of all of the freed memory allocatio\
ns should be displayed at the end of)144 412.8 R .847(program e)144
424.8 R -.15(xe)-.15 G 3.347(cution. This).15 F .847
(option must be used in conjunction with the)3.347 F F1(NOFREE)3.347 E
F0 .848(option and this)3.347 F .294(step will not be performed if an a\
bnormal termination occurs or if there were no freed allocations.)144
436.8 R F1(SHO)108 453.6 Q(WMAP)-.5 E F0 .489(Speci\214es that a memory\
 map of the entire heap should be displayed at the end of program e)144
465.6 R -.15(xe)-.15 G(cu-).15 E 2.5(tion. This)144 477.6 R(step will n\
ot be performed if an abnormal termination occurs or if the heap is emp\
ty)2.5 E(.)-.65 E F1(SHO)108 494.4 Q(WSYMBOLS)-.5 E F0 1.035(Speci\214e\
s that a summary of all of the function symbols read from the program')
144 506.4 R 3.534(se)-.55 G -.15(xe)-3.684 G 1.034(cutable \214le).15 F
.271(should be displayed at the end of program e)144 518.4 R -.15(xe)
-.15 G 2.772(cution. This).15 F .272
(step will not be performed if an abnor)2.772 F(-)-.2 E
(mal termination occurs or if no symbols could be read from the e)144
530.4 Q -.15(xe)-.15 G(cutable \214le.).15 E F1(SHO)108 547.2 Q
(WUNFREED)-.5 E F0 .552(Speci\214es that a summary of all of the unfree\
d memory allocations should be displayed at the end)144 559.2 R 1.294
(of program e)144 571.2 R -.15(xe)-.15 G 3.794(cution. This).15 F 1.295
(step will not be performed if an abnormal termination occurs or if)
3.794 F(there are no unfreed allocations.)144 583.2 Q(Note that an)5 E
2.5(ym)-.15 G(ark)-2.5 E(ed memory allocations will not be listed.)-.1 E
F1(SMALLBOUND)108 600 Q F0(=)A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0
.864(Speci\214es the limit in bytes up to which memory allocations shou\
ld be classi\214ed as small alloca-)144 612 R 1.118
(tions for pro\214ling purposes.)144 624 R 1.118
(This limit must be greater than zero b)6.118 F 1.118
(ut less than the medium and)-.2 F(lar)144 636 Q(ge bounds.)-.18 E(Def)5
E(ault v)-.1 E(alue:)-.25 E F1(SMALLBOUND)2.5 E F0(=)A F2(32)A F0(.)A F1
(TRA)108 652.8 Q(CE)-.55 E F0 .731(Speci\214es that all memory allocati\
ons, reallocations and deallocations are to be traced and sent to)144
664.8 R(the tracing output \214le.)144 676.8 Q F1(TRA)108 693.6 Q
(CEFILE)-.55 E F0(=)A F2(string)A F0 .738(Speci\214es an alternati)144
705.6 R 1.038 -.15(ve \214)-.25 H .739(le in which to place all memory \
allocation tracing information from the).15 F .064(mpatrol library)144
717.6 R 5.064(.I)-.65 G 2.564(ft)-5.064 G(he)-2.564 E F1(TRA)2.564 E
(CEDIR)-.55 E F0(en)2.564 E .064(vironment v)-.4 F .064
(ariable is set and the speci\214ed \214le does not con-)-.25 F .894(ta\
in a path component in its \214lename then the tracing output \214le wi\
ll be located in the directory)144 729.6 R(Release 1.4)72 768 Q 2.5(8J)
157.35 G(anuary 2002)-2.5 E(20)193.45 E EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(LIBMP)72 48 Q -1.11(AT)-.92 G -.4(RO)1.11 G
128.245(L\(3\) mpatrol).4 F 128.245(library LIBMP)2.5 F -1.11(AT)-.92 G
-.4(RO)1.11 G(L\(3\)).4 E .161(speci\214ed in)144 84 R/F1 10
/Times-Bold@0 SF(TRA)2.661 E(CEDIR)-.55 E F0 5.161(.A)C .161
(\214lename of)-2.5 F/F2 10/Times-Italic@0 SF(stderr)2.661 E F0 .161
(will send this information to the)2.661 F F1(stderr)2.66 E F0 .16
(\214le stream)2.66 F .362(and a \214lename of)144 96 R F2(stdout)2.862
E F0 .363(will do the equi)2.863 F -.25(va)-.25 G .363(lent with the).25
F F1(stdout)2.863 E F0 .363(\214le stream.)2.863 F .363
(Note that if a problem)5.363 F 2.276(occurs while opening the tracing \
output \214le then the tracing information will not be output.)144 108 R
(Def)144 120 Q 1.705(ault v)-.1 F(alue:)-.25 E F1(TRA)4.205 E(CEFILE)
-.55 E F0(=)A F2(mpatr)A(ol.tr)-.45 E(ace)-.15 E F0(or)4.206 E F1(TRA)
4.206 E(CEFILE)-.55 E F0(=)A F2(%n.%p.tr)A(ace)-.15 E F0 1.706(if the)
4.206 F F1(TRA)4.206 E(CEDIR)-.55 E F0(en)144 132 Q(vironment v)-.4 E
(ariable is set.)-.25 E F1(UNFREED)108 148.8 Q(ABOR)-.35 E(T)-.4 E F0(=)
A F2(unsigned inte)A -.1(ge)-.4 G(r).1 E F0 1.067(Speci\214es the minim\
um number of unfreed allocations at which to abort the program just bef\
ore)144 160.8 R .236(program termination.)144 172.8 R 2.736(As)5.236 G
.237(ummary of all the allocations will be displayed on the standard er\
ror \214le)-2.736 F .223(stream before aborting.)144 184.8 R .222(This \
option may be handy for use in batch tests as it can force tests to f)
5.222 F(ail)-.1 E .122(if the)144 196.8 R 2.622(yd)-.15 G 2.622(on)
-2.622 G .123
(ot free up a minimum number of memory allocations, although mark)-2.622
F .123(ed allocations will)-.1 F .371
(not be considered as unfreed allocations.)144 208.8 R .37
(Note that this setting will be ignored if its v)5.371 F .37
(alue is zero.)-.25 F(Def)144 220.8 Q(ault v)-.1 E(alue:)-.25 E F1
(UNFREED)2.5 E(ABOR)-.35 E(T)-.4 E F0(=)A F2(0)A F0(.)A F1(USEDEB)108
237.6 Q(UG)-.1 E F0 .278(Speci\214es that an)144 249.6 R 2.778(yd)-.15 G
(eb)-2.778 E .278(ugging information in the e)-.2 F -.15(xe)-.15 G .279
(cutable \214le should be used to obtain additional).15 F(source-le)144
261.6 Q -.15(ve)-.25 G 4.058(li).15 G 4.058(nformation. This)-4.058 F
1.558(option will only ha)4.058 F 1.858 -.15(ve a)-.2 H 4.058(ne).15 G
-.25(ff)-4.058 G 1.558(ect if the e).25 F -.15(xe)-.15 G 1.557
(cutable \214le contains a).15 F(compiler)144 273.6 Q .752(-generated l\
ine number table and will be ignored if the mpatrol library w)-.2 F .752
(as b)-.1 F .752(uilt to sup-)-.2 F(port an object \214le access librar\
y that cannot read line tables from object \214les.)144 285.6 Q F1
(USEMMAP)108 302.4 Q F0 .031(Speci\214es that the library should use)144
314.4 R F1(mmap)2.531 E F0 .031(instead of)2.531 F F1(sbrk)2.531 E F0
.03(to allocate user memory on UNIX plat-)2.531 F 2.808(forms. This)144
326.4 R .308(option should be used if there are problems when using the\
 mpatrol library in combi-)2.808 F 1.033
(nation with another malloc library which uses)144 338.4 R F1(sbrk)3.533
E F0 1.033(to allocate its memory)3.533 F 6.033(.M)-.65 G 1.032
(emory internal to)-6.033 F .4(the mpatrol library is allocated with)144
350.4 R F1(mmap)2.9 E F0 .4
(on systems where it is supported in order to se)2.9 F(gre)-.15 E -.05
(ga)-.15 G(te).05 E .3(it from user memory)144 362.4 R 2.8(,a)-.65 G .3
(nd this beha)-2.8 F .299(viour is re)-.2 F -.15(ve)-.25 G .299
(rsed with the).15 F F1(USEMMAP)2.799 E F0 2.799(option. It)2.799 F .299
(is ignored on)2.799 F(systems that do not support the)144 374.4 Q F1
(mmap)2.5 E F0(system call.)2.5 E/F3 10.95/Times-Bold@0 SF(SEE ALSO)72
391.2 Q F1(mpatr)108 403.2 Q(ol)-.18 E F0(\(1\),)A F1(mpr)4.172 E(of)
-.18 E F0(\(1\),)A F1(mptrace)4.172 E F0(\(1\),)A F1(mleak)4.172 E F0
(\(1\),)A F1(mpsym)4.172 E F0(\(1\),)A F1(mpedit)4.173 E F0(\(1\),)A F1
(hexw)4.173 E(ords)-.1 E F0(\(1\),)A F1(mmap)4.173 E F0(\(2\),)A F1
(sbrk)4.173 E F0(\(2\),)A F1(libmpalloc)108 415.2 Q F0(\(3\),)A F1
(malloc)2.5 E F0(\(3\),)A F1(new)2.5 E F0(\(3c++\),)A F1(alloca)2.5 E F0
(\(3\),)A F1(memory)2.5 E F0(\(3\),)A F1(string)2.5 E F0(\(3\),)A F1
(assert)2.5 E F0(\(3\),)A F1(elf)2.5 E F0(\(3e\),)A F1(bfd)2.5 E F0
(\(3\).)A(The mpatrol manual and reference card.)108 432 Q(http://www)
108 448.8 Q(.cbmamig)-.65 E(a.demon.co.uk/mpatrol/)-.05 E F3 -.548(AU)72
465.6 S(THOR).548 E F0(Graeme S. Ro)108 477.6 Q 2.5(y<)-.1 G(graeme.ro)
-2.5 E(y@analog.com>)-.1 E F3(COPYRIGHT)72 494.4 Q F0(Cop)108 506.4 Q
(yright \(C\) 1997-2002 Graeme S. Ro)-.1 E 2.5(y<)-.1 G(graeme.ro)-2.5 E
(y@analog.com>)-.1 E .78(This library is free softw)108 523.2 R .78
(are; you can redistrib)-.1 F .78
(ute it and/or modify it under the terms of the GNU Library)-.2 F .797
(General Public License as published by the Free Softw)108 535.2 R .797
(are F)-.1 F .797(oundation; either v)-.15 F .797
(ersion 2 of the License, or)-.15 F(\(at your option\) an)108 547.2 Q
2.5(yl)-.15 G(ater v)-2.5 E(ersion.)-.15 E 1.031
(This library is distrib)108 564 R 1.031
(uted in the hope that it will be useful, b)-.2 F 1.03(ut WITHOUT ANY W)
-.2 F(ARRANTY)-1.2 E 3.53(;w)-.92 G(ithout)-3.53 E -2.15 -.25(ev e)108
576 T 2.729(nt).25 G .229(he implied w)-2.729 F .229
(arranty of MERCHANT)-.1 F .229(ABILITY or FITNESS FOR A P)-.93 F(AR)
-.92 E .23(TICULAR PURPOSE.)-.6 F(See)5.23 E
(the GNU Library General Public License for more details.)108 588 Q -1.1
(Yo)108 604.8 S 2.647(us)1.1 G .147(hould ha)-2.647 F .447 -.15(ve r)-.2
H(ecei).15 E -.15(ve)-.25 G 2.647(dac).15 G(op)-2.647 E 2.647(yo)-.1 G
2.647(ft)-2.647 G .146
(he GNU Library General Public License along with this library; if not,)
-2.647 F(write to the Free Softw)108 616.8 Q(are F)-.1 E
(oundation, Inc., 59 T)-.15 E
(emple Place, Suite 330, Boston, MA 02111-1307, USA.)-.7 E(Release 1.4)
72 768 Q 2.5(8J)157.35 G(anuary 2002)-2.5 E(21)193.45 E EP
%%Trailer
end
%%EOF
