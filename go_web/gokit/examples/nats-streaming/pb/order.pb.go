// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Order struct {
	OrderId      string             `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	CustomerId   string             `protobuf:"bytes,2,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Status       string             `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	CreatedOn    int64              `protobuf:"varint,4,opt,name=created_on,json=createdOn" json:"created_on,omitempty"`
	RestaurantId string             `protobuf:"bytes,5,opt,name=restaurant_id,json=restaurantId" json:"restaurant_id,omitempty"`
	OrderItems   []*Order_OrderItem `protobuf:"bytes,6,rep,name=order_items,json=orderItems" json:"order_items,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetCreatedOn() int64 {
	if m != nil {
		return m.CreatedOn
	}
	return 0
}

func (m *Order) GetRestaurantId() string {
	if m != nil {
		return m.RestaurantId
	}
	return ""
}

func (m *Order) GetOrderItems() []*Order_OrderItem {
	if m != nil {
		return m.OrderItems
	}
	return nil
}

type Order_OrderItem struct {
	Code      string  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UnitPrice float32 `protobuf:"fixed32,3,opt,name=unit_price,json=unitPrice" json:"unit_price,omitempty"`
	Quantity  int32   `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *Order_OrderItem) Reset()                    { *m = Order_OrderItem{} }
func (m *Order_OrderItem) String() string            { return proto.CompactTextString(m) }
func (*Order_OrderItem) ProtoMessage()               {}
func (*Order_OrderItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *Order_OrderItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Order_OrderItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order_OrderItem) GetUnitPrice() float32 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *Order_OrderItem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*Order_OrderItem)(nil), "pb.Order.OrderItem")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x31, 0x6e, 0xb4, 0x30,
	0x14, 0x84, 0x05, 0x2c, 0xfc, 0xcb, 0xe3, 0x4f, 0xf3, 0x22, 0x45, 0x64, 0xa5, 0x28, 0x28, 0x69,
	0xa8, 0x28, 0x92, 0x5c, 0x82, 0x6a, 0x23, 0x2e, 0x80, 0x0c, 0x76, 0xe1, 0x02, 0x9b, 0xd8, 0xcf,
	0x45, 0x0e, 0x98, 0x7b, 0x45, 0x7e, 0xeb, 0xdd, 0x34, 0xd6, 0xcc, 0x37, 0xb2, 0x35, 0x63, 0x68,
	0xac, 0x93, 0xca, 0x0d, 0xbb, 0xb3, 0x64, 0x31, 0xdf, 0x97, 0x97, 0x9f, 0x1c, 0xca, 0x73, 0x64,
	0xf8, 0x08, 0x47, 0x0e, 0x67, 0x2d, 0xdb, 0xac, 0xcb, 0xfa, 0x7a, 0xfa, 0xc7, 0x7e, 0x94, 0xf8,
	0x0c, 0xcd, 0x1a, 0x3c, 0xd9, 0xed, 0x92, 0xe6, 0x9c, 0xc2, 0x15, 0x8d, 0x12, 0x1f, 0xa0, 0xf2,
	0x24, 0x28, 0xf8, 0xb6, 0xe0, 0x2c, 0x39, 0x7c, 0x02, 0x58, 0x9d, 0x12, 0xa4, 0xe4, 0x6c, 0x4d,
	0x7b, 0xe8, 0xb2, 0xbe, 0x98, 0xea, 0x44, 0xce, 0x06, 0x5f, 0xe1, 0xce, 0x29, 0x4f, 0x22, 0x38,
	0x61, 0x28, 0xbe, 0x5c, 0xf2, 0xed, 0xff, 0x7f, 0x70, 0x94, 0xf8, 0x91, 0x4a, 0xcf, 0x9a, 0xd4,
	0xe6, 0xdb, 0xaa, 0x2b, 0xfa, 0xe6, 0xed, 0x7e, 0xd8, 0x97, 0x81, 0x7b, 0x5f, 0xce, 0x91, 0xd4,
	0x36, 0x81, 0xbd, 0x4a, 0x7f, 0x32, 0x50, 0xdf, 0x02, 0x44, 0x38, 0xac, 0x56, 0xaa, 0x34, 0x8b,
	0x75, 0x64, 0x46, 0x6c, 0x2a, 0x8d, 0x61, 0x1d, 0xeb, 0x06, 0xa3, 0x69, 0xde, 0x9d, 0x5e, 0x15,
	0x4f, 0xc9, 0xa7, 0x3a, 0x92, 0xcf, 0x08, 0xf0, 0x04, 0xc7, 0xaf, 0x20, 0x0c, 0x69, 0xfa, 0xe6,
	0x2d, 0xe5, 0x74, 0xf3, 0x4b, 0xc5, 0x5f, 0xfa, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x3a,
	0x33, 0xed, 0x61, 0x01, 0x00, 0x00,
}
